main(){}
@If_u_can_read_this_u_r_nerd();
@If_u_can_read_this_u_r_nerd(){
    #emit    stack    0x7FFFFFFF
    #emit    inc.s    cellmax
    static const ___[] = {""};
    #emit    retn
    #emit    load.s.pri    ___
    #emit    proc
    #emit    proc
    #emit    fill    cellmax
    #emit    proc
    #emit    stack    1
    #emit    stor.alt    ___
    #emit    strb.i    2
    #emit    switch    4
    #emit    retn
	L1:
    #emit    jump    L1
    #emit    zero    cellmin
}
#if !defined IsValidVehicle
     native IsValidVehicle(vehicleid);
#endif
#include <a_samp>
#define MYSQL_R41_2 false
#if MYSQL_R41_2 == true
	#include <a_mysql_r41-2>
#else
	#include <a_mysql>
#endif

#undef MAX_PLAYERS
#define MAX_PLAYERS (500+1)

#include <sscanf2>
#include <streamer>
#include <mxdate>
#include <mxINI>
#include <foreach>
#include <zcmd>
#include <a_http>
#include <strlib>
#include <geolocation>
#include <crashdetect>
// ~~~~~~~~~~~~~~~~~~~~~~~~~~[ Настройка сервера ]~~~~~~~~~~~~~~~~~~~~~~~~~~~~//
#define SERVER_NAME 					"Flux RolePlay"
#define SERVER_VERSION 					"Flux RolePlay [v."MODE_VERS"]"
#define MODE_VERS						"0.3.6"
#define SERVER_MAP                      "Russia"
#define SERVER_WEBSITE 					"Flux-rp.ru/"
#define PAGE_WEBSITE_DONATE             "flux-rp.ru/donate"
#define SERVER_FORUM                    "forum.flux-rp.ru/"
#define SERVER_GROUP                    "vk.com/Flux_rp"
#define SERVER_FREE_GROUP               "vk.com/Flux_rp"
#define SERVER_LANGUAGE                 "Russian"

#define NAME_FULL_ACCESS_1				"Danya_Tumanov"
#define NAME_FULL_ACCESS_2				"Rembo_Developer"
#define NAME_FULL_ACCESS_3				"Skiff_Dipsize"
#define NAME_FULL_ACCESS_4				"None"

#define SQL_HOST 	"mysql.royal-host.ru"
#define SQL_USER 	"gs35358"
#define SQL_PASS 	"123123"
#define SQL_DB   	"gs35358"

#define LOCAL_SQL_HOST 	"127.0.0.1"
#define LOCAL_SQL_USER 	"gs11"
#define LOCAL_SQL_DB	"gs11"
#define LOCAL_SQL_PASS   "PTVSriY0Xs"

#define For(%0, %1)  				 	for(new %0; %0<%1; %0++)
#define FCar(%0)					 	FlipCar(%0)
#define SpeedCheck(%0,%1,%2,%3,%4)   	floatround(floatsqroot(%4?(%0*%0+%1*%1+%2*%2):(%0*%0+%1*%1) ) *%3*1.6)
#define SetPlayerData(%0,%1,%2)		 	pInfo[%0][%1] = %2

#define T_ACCOUNTS                      "accounts"
#define T_BIZ      						"biz"
#define T_HOUSE     					"house"
#define T_MAFIA     					"mafia"
#define T_GANG                         	"gang"
#define T_GANGZONE  					"gangzone"
#define T_ATM       					"atm"
#define T_ADMIN                         "admin"
#define T_HISTORYNAME                   "historyname"
#define T_UNITPAY                     	"unitpay_payments"
#define T_MEGAKASSA                     "megakassa_payments"
#define T_BANS                          "bans"
#define T_PROMOCODE                     "promocode"
#define T_PROMOCODE_USED                "promocode_used"
#define T_BANK                          "bank"
#define T_ONLINE_PLAYER                 "online_player"
#define T_PASSPORTS                     "passports"
#define T_FAMILY                        "family"

#define DIALOG_M						DIALOG_STYLE_MSGBOX
#define DIALOG_L    					DIALOG_STYLE_LIST
#define DIALOG_I          				DIALOG_STYLE_INPUT
#define SHOW_PD							ShowPlayerDialog
#define SEND_CM							SendClientMessage

#define YouAreNotLoggedInAsAdmin        "[A] Вы не авторизованы. Используйте {33CCFF}/alogin"
#define YouAlreadyLoggedInAsAdmin 		"[A] Вы уже авторизовались как администратор!"
#define YouCanNot 						"Вам недоступна данная возможность!"
#define NoMoney                         "У вас недостаточно денег! Вы можете пополнить свой баланс {FFFFFF}/donate"
#define PlayerIsNotOnline				"Игрок не в игре!"
#define PlayerIsNotAuthorized			"Игрок не авторизован!"
#define PlayerNeedToLoggedForToPlay 	"Сервер закрыл соединение! Для выхода из игры введите: {ffffff}/q(uit)"
#define LoggedTimeOver 					"Время на авторизацию истекло! Для выхода из игры введите: {ffffff}/q(uit)"
#define PlayerAccess                    "Нажмите {63BD4E}Y{FFFFFF} (чтобы согласиться) или {F04245}N{FFFFFF} (чтобы отказаться)"

#define AMOUNT_OF_SALARY_MINE_ONE  	    (3)
#define AMOUNT_OF_SALARY_MINE_TWO       (4)
#define AMOUNT_OF_SALARY_MINE_THREE     (5)
#define AMOUNT_OF_SALARY_SAWMILL        (2)
#define AMOUNT_OF_SALARY_PLANT          (100)

#define TRUCK_LEVEL_2 					(30000)
#define TRUCK_LEVEL_3 					(70000)
#define TRUCK_LOAD_1 					(5000)
#define TRUCK_LOAD_2 					(7000)
#define TRUCK_LOAD_3 					(10000)

#define PHONE_PRICE                     (50)
#define LSNEWS_NUMBER 					(555)
#define SFNEWS_NUMBER 					(666)
#define LVNEWS_NUMBER 					(777)

#define AMMO_PISTOL 					(12)
#define AMMO_SDPISTOL 					(12)
#define AMMO_DEAGLE 					(14)
#define AMMO_SHOTGUN 					(8)
#define AMMO_MICROUZI					(25)
#define AMMO_MP5 						(25)
#define AMMO_AK47 						(30)
#define AMMO_M4A1 						(30)

#define AMMO_PISTOL_VIP					(6)
#define AMMO_SDPISTOL_VIP				(6)
#define AMMO_DEAGLE_VIP 				(7)
#define AMMO_SHOTGUN_VIP				(4)
#define AMMO_MICROUZI_VIP				(13)
#define AMMO_MP5_VIP 					(13)
#define AMMO_AK47_VIP					(15)
#define AMMO_M4A1_VIP					(15)

#define COLOR_SEA 						(0x00808000)
#define COLOR_REL                       (0xff634700)
#define COLOR_GRAD1 					(0xB4B5B700)
#define COLOR_GRAD2 					(0xBFC0C200)
#define COLOR_GRAD3 					(0xCBCCCE00)
#define COLOR_GRAD4 					(0xD8D8D800)
#define COLOR_GRAD5 					(0xE3E3E300)
#define COLOR_GRAD6 					(0xF0F0F0FF)
#define COLOR_GREY 						(0xAFAFAFAA)
#define COLOR_GREEN 					(0x63BD4EFF)
#define COLOR_RED 						(0xF04245FF)
#define COLOR_LIGHTRED 					(0xFF6347AA)
#define COLOR_LIGHTBLUE 				(0x33CCFFAA)
#define COLOR_LIGHTGREEN 				(0x9ACD32AA)
#define COLOR_ORANGE                    (0xFF9900FF)
#define COLOR_DARKORANGE                (0xFF6600FF)
#define COLOR_YELLOW 					(0xead86aFF)
#define COLOR_YELLOW2 					(0xF5DEB3AA)
#define COLOR_WHITE 					(0xFFFFFFAA)
#define COLOR_FADE1 					(0xE6E6E6E6)
#define COLOR_FADE2 					(0xC8C8C8C8)
#define COLOR_TOMATO 					(0xFF6347AA)
#define COLOR_FADE3 					(0xAAAAAAAA)
#define COLOR_FADE4 					(0x8C8C8C8C)
#define COLOR_BLUE 						(0x3399FFFF)
#define COLOR_FADE5 					(0x6E6E6E6E)
#define COLOR_PURPLE 					(0xDD90FFAA)
#define COLOR_LIME						(0x66CC00AA)
#define COLOR_DBLUE 					(0x2641FEAA)
#define COLOR_ALLDEPT 					(0xFF8282AA)
#define COLOR_NEWS 						(0xFFA500AA)
#define COLOR_OOC 						(0xE0FFFFAA)
#define COLOR_ORANG 					(0xF3BB33FF)
#define TEAM_BLUE_COLOR 				(0x8D8DFF00)
#define COLOR_BLACK 					(0x000000AA)
#define COLOR_BOX   					(0x00000050)
#define COLOR_BBLUE 					(0x20A9FFAA)
#define COLOR_BORDER 					(0x00000AA)
#define COLOR_INDIGO 					(0x4B00B0AA)
#define COLOR_GRENNN  					(0x97B96CAA)
#define COLOR_SYSTEM 					(0xEFEFF7AA)
#define COLOR_GREN  					(0x97B96CAA)

#define NONE_COLOR                      (0xFFFFFF15)
#define MAYOR_COLOR                     (0xCCFF0080)
#define LSPD_COLOR                      (0x0000FF80)
#define SFPD_COLOR                      (0x0000FF80)
#define LVPD_COLOR                      (0x0000FF80)
#define ARMY_COLOR                      (0x99663380)
#define FBI_COLOR                       (0x0000FF80)
#define HOSPITAL_COLOR                  (0xFF666680)
#define LIC_COLOR                       (0xCCFFFF80)
#define LSNEWS_COLOR                    (0xFF660080)
#define SFNEWS_COLOR                    (0xFF660080)
#define LVNEWS_COLOR                    (0xFF660080)
#define YAKUZA_COLOR                    (0xBB000080)
#define RM_COLOR                        (0x00757580)
#define LCN_COLOR                       (0x99336680)
#define GROVE_COLOR 					(0x00990099)
#define VAGOS_COLOR 					(0xFFCC0099)
#define BALLAS_COLOR 					(0xCC00FF99)
#define AZTECAS_COLOR 					(0x00B4E199)
#define RIFA_COLOR 						(0x6666FF99)

#define GetName(%0)						pInfo[%0][pName]
#define GetCash(%0)            			pInfo[%0][pCash]
#define RandomEx(%1,%2) 				(random(%2-%1)+%1)
#define IsKicked(%0) 					(GetPVarInt(%0, "kicked"))
#define IsAdmin(%0) 					if(pInfo[playerid][pAdmin] < %0) return 1

#if !defined FALSE
	new stock bool:FALSE = false;
#endif

#define SendMes(%1,%2,%3,%4) do{new _s[128]; format(_s,128,%3,%4); SendClientMessage(%1,%2,_s); }while(FALSE)

#define GetLicCar(%0) 					(pInfo[%0][pLicenses] & 1 ? true : false)
#define GetLicWater(%0) 				(pInfo[%0][pLicenses] & (1<<1) ? true : false)
#define GetLicPlane(%0) 				(pInfo[%0][pLicenses] & (1<<2) ? true : false)
#define GetLicWeapon(%0) 				(pInfo[%0][pLicenses] & (1<<3) ? true : false)

#define GiveLicCar(%0)            		(pInfo[%0][pLicenses] |= 1)
#define GiveLicWater(%0)          		(pInfo[%0][pLicenses] |= (1<<1))
#define GiveLicPlane(%0)          		(pInfo[%0][pLicenses] |= (1<<2))
#define GiveLicWeapon(%0)         		(pInfo[%0][pLicenses] |= (1<<3))

#define TakeLicCar(%0)            		(pInfo[%0][pLicenses] &= ~1)
#define TakeLicWater(%0)          		(pInfo[%0][pLicenses] &= ~(1<<1))
#define TakeLicPlane(%0)          		(pInfo[%0][pLicenses] &= ~(1<<2))
#define TakeLicWeapon(%0)         		(pInfo[%0][pLicenses] &= ~(1<<3))
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~[Переменные]~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//
new Plveh[MAX_PLAYERS],
	mostik[2];
new VIPCar[MAX_PLAYERS],
    VIPCarUse[MAX_PLAYERS] = 0;
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//
#if MYSQL_R41_2 == true

new MySQL:dbHandle;
#else

new dbHandle;
#endif

new gMysqlRaceCheck[MAX_PLAYERS];
new bool:gTestServer;

enum {
	dNull, 								// 0
	dRegister, 							// 1
	dLogin, 							// 2
	dSex, 								// 3
	dCommandServer, 					// 4
	dUcpAdmin, 							// 5
	dUcpAdmin2, 						// 6
	dAddNed, 							// 7 - 10
	dInviteFrac 				= 11, 	// 11
	dJoinHouse, 						// 12
	dMakeGun, 							// 13 - 15
	dGPS 						= 16, 	// 16
	dWeather, 							// 17
	dFracMenu 					= 18, 	// 18 - 21
	dATM 						= 22, 	// 22 - 33
	dNewsMenu 					= 34, 	// 34 - 45
	dLic 						= 46, 	// 46 - 51
	dHome 						= 52, 	// 52 - 54
	dHeal 						= 55, 	// 55 - 73
	dJob 						= 74, 	// 74 - 109
	dDonate 					= 110, 	// 110 - 112
	dPhone 						= 113, 	// 113 - 119
	dCancelRent 				= 120, 	// 120
	dLeave, 							// 121
	dBuySim, 							// 122
	dBuySimDonate, 						// 123
	dVehNumber, 						// 124
	dAdminPanel, 						// 125 - 149
	dUsePromocode 				= 150, 	// 150
	dMainMenu, 							// 151
	dMainMenuAdd, 						// 152
	dHomeUluch, 						// 153 - 154
	dBizUluch 					= 155, 	// 155 - 156
	dCommandShow 				= 157, 	// 157
	dBreak, 							// 158
	dInviteSkin, 						// 159
	dLeaderSkin, 						// 160
	dTempLeader, 						// 161
	dMafia, 							// 162 - 170
	dTuning 					= 171, 	// 171 - 184
	dGang 						= 185, 	// 185 - 193
	dAdminLogin 				= 194, 	// 194
	dMail, 								// 195 - 196
	dLicWeapon 					= 197, 	// 197
	dCreatePass, 						// 198 - 199
	dAddWarehouse 				= 200, 	// 200 - 204
	dJoinCars 					= 205, 	// 205 - 210
	dSetSpawn 					= 211, 	// 211
	dBuyFishki, 						// 212 - 214
	dStavkaRace 				= 215, 	// 215
	dEditHouseInt, 						// 216
	dService, 							// 217 - 221
	dArmoury 					= 222, 	// 222 - 224
	dArmyJob 					= 225, 	// 225
	dStopLoad, 							// 226
	dMenuPolice, 						// 227 - 228
	dAutoSchool 				= 229, 	// 229 - 231
	dFilling	 				= 232, 	// 232
	dShowAll, 							// 233 - 234
	dSellHouse 					= 235,  // 235
	dSellBiz, 							// 236
	dSellCar, 							// 237
	dEvent, 							// 238 - 246
	dRegisterPass 				= 247, 	// 247
	dReferal, 							// 248 - 249
	dErrorPassword 				= 250, 	// 250 - 251
	dBusJob 					= 252, 	// 252 - 255
	dTruckJob 					= 256, 	// 256 - 258
	dMainBankAccount        	= 259,  // 259
	dCreateBankAccount,             	// 260
	dLoginBankAccount,              	// 261
	dOperBankAccount,      		        // 262 - 268
	dExitFly                	= 269,  // 269
	dHospitalLS,                        // 270 - 272
	dHospitalSF                 = 273,  // 273 - 275
	dHospitalLV                 = 276,  // 276 - 278
	dMedStopLoad                = 279,  // 279
	dAddWarehouse5, // 280
	dInfoFamily, // 281
	dCreateFamily, // 282
	dListFamily, // 283
	dPlay_Car, // 284
	dAhelp,	// 285
	dInv, // 286
	dCont_Two, // 287
}
#define MAX_FAMILY (1000)
enum e_FAMILY_INFO {
	famID,
	famName[20],
	famLeader[MAX_PLAYER_NAME]
}
new FamilyInfo[MAX_FAMILY][e_FAMILY_INFO];

new Rcanal[MAX_PLAYERS];

new pobject[MAX_PLAYERS][26];
new pobjectid[MAX_PLAYERS][26];
enum {
	MOVE_FORWARD = 1,
	MOVE_BACK,
	MOVE_LEFT,
	MOVE_RIGHT,
	MOVE_FORWARD_LEFT,
	MOVE_FORWARD_RIGHT,
	MOVE_BACK_LEFT,
	MOVE_BACK_RIGHT
}
enum e_PLAYER_FLY_INFO {
	fType,
	fObject,
	fDirection,
	fKeys[2],
	fTick,
	Float:fMovementSpeed
};
new FlyInfo[MAX_PLAYERS][e_PLAYER_FLY_INFO];
enum e_BANK_INFO {
	bID,
	bName[15],
	bOwner,
	bMoney
}
new BankInfo[MAX_PLAYERS][e_BANK_INFO];
new gBankAccount[MAX_PLAYERS][4] = {-1, ...};
new gCountArmyJob = 10;
new armyjobcheck;

new convoy[MAX_PLAYERS];
new convoyTimer[MAX_PLAYERS];

new numstring[220];

new gGosNewsCount;
new gGosNewsTime;

enum e_EVENT_INFO {
	Float:eventPos[3],
	eventVirtualWorld,
	eventInterior,
	eventPlayers,
	eventStatus
}
new gEvent[e_EVENT_INFO];
new gEventIn[MAX_PLAYERS] = {-1, ...};

new gOnlinePlayer[MAX_PLAYERS][2];
new gOnlinePlayerAFK[MAX_PLAYERS][2];

new LightsObject[MAX_VEHICLES][4];
new Signal[MAX_VEHICLES];
new Float:SignalAngle[MAX_VEHICLES];
new SignalTick[MAX_VEHICLES][2];

static const stock Float:LightsPos[212][6] = {
	{ 0.8766, 2.0272, -0.1000, 0.8766, -2.2272, -0.1000 },
	{ 0.9566, 2.4500, 0.0000, 0.9566, -2.3500, 0.0000 },
	{ 0.8033, 2.5363, 0.0000, 0.9033, -2.6363, 0.0000 },
	{ 1.1500, 4.1909, -0.2000, 0.3499, -4.1909, -0.7000 },
	{ 0.7333, 2.2409, 0.2000, 0.8333, -2.6409, 0.0000 },
	{ 0.9833, 2.2272, -0.1000, 0.8833, -2.7272, -0.1000 },
	{ 1.0566, 5.2681, 0.0000, 2.2566, -5.1681, 0.4000 },
	{ 0.8499, 4.0727, 0.1000, 1.0499, -3.4727, 0.2000 },
	{ 0.9399, 4.8590, -0.4000, 0.8399, -4.0590, -0.5000 },
	{ 0.8899, 3.6181, 0.0000, 0.8899, -3.9181, 0.0000 },
	{ 0.8533, 2.1772, 0.0000, 0.8533, -2.1772, 0.0000 },
	{ 0.9966, 2.6272, -0.2000, 0.8966, -2.4272, 0.0000 },
	{ 0.9166, 2.6227, -0.1000, 0.8166, -3.6227, -0.2000 },
	{ 0.9600, 2.6727, -0.1000, 0.9600, -2.6727, 0.0000 },
	{ 0.7399, 2.8136, -0.1000, 1.0399, -3.2136, 0.0000 },
	{ 0.8733, 2.5045, -0.3000, 0.7733, -2.5045, 0.0000 },
	{ 0.9099, 2.9409, 0.0000, 1.1100, -3.7409, -0.5000 },
	{ 1.8166, 10.5772, 0.0000, 1.8166, -10.5772, 0.0000 },
	{ 0.9566, 2.4772, -0.2000, 1.0566, -2.5772, -0.2000 },
	{ 0.8000, 2.7272, -0.4000, 0.8000, -2.9272, -0.2000 },
	{ 0.9033, 2.3863, 0.0000, 0.9033, -2.6863, 0.0000 },
	{ 0.8500, 2.6045, -0.2000, 0.8500, -2.9045, -0.2000 },
	{ 0.7566, 2.2454, -0.3000, 0.8566, -2.4454, -0.3000 },
	{ 0.7733, 2.2999, 0.0000, 0.8733, -2.2000, 0.0000 },
	{ 0.7199, 1.5545, 0.2000, 0.6199, -1.6545, 0.3000 },
	{ 1.7199, 8.4681, 0.0000, 1.7199, -8.4681, 0.0000 },
	{ 1.0033, 2.3863, 0.0000, 0.9033, -2.6863, 0.0000 },
	{ 0.8800, 3.3272, -0.1000, 0.9800, -3.7272, 0.3000 },
	{ 0.9100, 2.5545, 0.2000, 0.9100, -2.9545, 0.2000 },
	{ 0.7366, 2.2545, -0.3000, 0.8366, -2.4545, 0.0000 },
	{ 1.5900, 7.6818, 0.0000, 1.5900, -7.6818, 0.0000 },
	{ 1.0033, 5.9499, 0.4000, 1.0033, -5.8499, 0.0000 },
	{ 1.4333, 4.1681, 0.0000, 1.4333, -4.1681, 0.0000 },
	{ 1.2333, 3.7454, -0.1000, 1.3333, -4.7454, -0.1000 },
	{ 0.5633, 1.9772, -0.1000, 0.4633, -1.9772, -0.1000 },
	{ 1.0533, 6.1499, 0.0000, 1.0533, -3.9500, -1.1000 },
	{ 0.8600, 2.3045, 0.0000, 0.8600, -2.5045, 0.0000 },
	{ 1.2133, 5.5454, -0.2000, 1.1133, -5.2454, 0.4000 },
	{ 0.9033, 2.6454, 0.0000, 0.9033, -2.7454, -0.1000 },
	{ 0.8400, 2.4045, -0.5000, 0.8400, -2.7045, -0.1000 },
	{ 0.9700, 2.6272, -0.3000, 0.8700, -2.6272, 0.1000 },
	{ 0.2899, 0.6409, 0.0000, 0.2899, -0.6409, 0.0000 },
	{ 0.9699, 2.8363, -0.2000, 1.0699, -3.0363, 0.0000 },
	{ 1.0866, 5.8136, -1.0000, 1.2866, -7.1136, -0.9000 },
	{ 1.1200, 2.7363, 0.7000, 1.1200, -3.0363, 0.7000 },
	{ 0.9666, 2.3636, 0.0000, 0.9666, -2.7636, -0.2000 },
	{ 1.5900, 7.7363, 0.0000, 1.5900, -7.7363, 0.0000 },
	{ 0.8066, 6.7272, 0.0000, 0.8066, -6.7272, 0.0000 },
	{ 0.2366, 0.9954, 0.0000, 0.2366, -0.9954, 0.0000 },
	{ 1.0099, 4.1045, 0.0000, 1.0099, -4.1045, 0.0000 },
	{ 1.0233, 6.1409, 0.0000, 1.0233, -3.9409, -1.2000 },
	{ 0.7733, 2.0863, -0.2000, 0.8733, -2.4863, -0.2000 },
	{ 1.2033, 6.6227, 0.0000, 1.2033, -6.6227, 0.0000 },
	{ 1.7133, 6.2590, 0.0000, 1.7133, -6.2590, 0.0000 },
	{ 2.2066, 8.6590, 0.0000, 2.2066, -8.6590, 0.0000 },
	{ 1.2066, 3.7090, -0.1000, 1.3066, -4.7090, -0.1000 },
	{ 0.8766, 3.3272, -0.1000, 0.8766, -4.6272, -0.5000 },
	{ 0.4099, 1.1863, 0.0000, 0.5099, -1.2863, 0.0000 },
	{ 0.9033, 2.4909, -0.2000, 0.9033, -2.7909, 0.0000 },
	{ 0.9666, 2.5999, -0.1000, 0.8666, -2.5999, 0.1000 },
	{ 3.6166, 6.1590, 0.0000, 3.6166, -6.1590, 0.0000 },
	{ 0.2333, 0.8181, 0.5000, 0.2333, -1.1181, 0.3000 },
	{ 0.2366, 0.9954, 0.0000, 0.2366, -0.9954, 0.0000 },
	{ 0.2333, 1.1000, 0.0000, 0.2333, -1.1000, 0.0000 },
	{ 0.5266, 0.5045, 0.0000, 0.5266, -0.7045, 0.0000 },
	{ 0.2899, 0.6409, 0.0000, 0.2899, -0.6409, 0.0000 },
	{ 0.9433, 2.6045, 0.1000, 1.0433, -2.8045, 0.0000 },
	{ 0.6433, 2.8909, -0.1000, 0.9433, -3.0909, 0.0000 },
	{ 0.2366, 1.0136, 0.0000, 0.2366, -1.0136, 0.0000 },
	{ 0.8066, 6.7272, 0.0000, 0.8066, -6.7272, 0.0000 },
	{ 1.0866, 2.0909, 0.2000, 1.0866, -2.6909, -0.2000 },
	{ 0.4733, 0.9090, 0.0000, 0.4733, -0.9090, 0.0000 },
	{ 0.8900, 4.2454, 0.0000, 0.8900, -4.2454, 0.0000 },
	{ 0.9666, 2.4545, 0.0000, 0.9666, -2.4545, 0.0000 },
	{ 0.9100, 2.7409, 0.0000, 1.0099, -2.7409, -0.1000 },
	{ 0.9166, 2.5272, -0.3000, 0.8166, -2.8272, -0.3000 },
	{ 3.6766, 5.1318, 0.0000, 3.6766, -5.1318, 0.0000 },
	{ 0.7900, 2.6954, -0.2000, 1.0900, -2.5954, 0.1000 },
	{ 0.9166, 2.2318, 0.0000, 1.0166, -2.5318, -0.3000 },
	{ 0.9500, 2.4954, 0.0000, 0.9500, -2.7954, 0.0000 },
	{ 0.8566, 1.7909, 0.0000, 0.8566, -2.2909, -0.2000 },
	{ 0.2366, 0.8545, 0.0000, 0.2366, -0.8545, 0.0000 },
	{ 0.8799, 2.3909, -0.4000, 0.8799, -2.5909, 0.0000 },
	{ 0.7833, 2.6136, 0.0000, 0.6833, -2.8136, -0.3000 },
	{ 1.7833, 11.9090, 0.0000, 1.7833, -11.9090, 0.0000 },
	{ 0.6566, 1.7500, 0.0000, 0.6566, -1.3499, 0.0000 },
	{ 0.8466, 1.5636, 1.0000, 0.5466, -3.2636, 1.1000 },
	{ 0.7766, 6.8363, 0.0000, 0.7766, -6.8363, 0.0000 },
	{ 0.7766, 5.7318, 0.0000, 0.7766, -5.7318, 0.0000 },
	{ 1.0466, 2.5909, 0.0000, 1.1466, -2.6909, 0.2000 },
	{ 0.9733, 3.1499, 0.0000, 1.1733, -3.1499, 0.1000 },
	{ 0.8700, 2.5772, -0.1000, 0.8700, -2.8772, 0.0000 },
	{ 0.7833, 2.6090, 0.0000, 0.7833, -2.8090, 0.0000 },
	{ 1.5900, 8.1045, 0.0000, 1.5900, -8.1045, 0.0000 },
	{ 0.8500, 2.3500, -0.2000, 0.8500, -2.8499, 0.1000 },
	{ 1.1266, 2.3772, 0.0000, 1.1266, -2.0772, 0.0000 },
	{ 0.9600, 2.2590, 0.0000, 0.9600, -2.0590, 0.0000 },
	{ 0.7766, 6.8363, 0.0000, 0.7766, -6.8363, 0.0000 },
	{ 0.8666, 3.0999, 0.2000, 0.9666, -3.0999, 0.3000 },
	{ 0.7799, 2.5727, -0.2000, 1.0800, -3.4727, 0.1000 },
	{ 0.4633, 2.0772, -0.2000, 0.7633, -1.9772, 0.0000 },
	{ 0.2899, 0.6409, 0.0000, 0.2899, -0.6409, 0.0000 },
	{ 0.8833, 2.6136, -0.2000, 0.7833, -2.7136, 0.0000 },
	{ 0.8366, 2.3909, 0.0000, 0.8366, -2.8909, 0.0000 },
	{ 0.9433, 2.6454, 0.1000, 1.0433, -2.8454, 0.0000 },
	{ 1.0466, 2.5909, 0.0000, 1.1466, -2.6909, 0.1000 },
	{ 0.7500, 2.2727, -0.3000, 0.8500, -2.3727, 0.0000 },
	{ 1.0566, 2.5954, -0.1000, 1.1566, -2.8954, -0.1000 },
	{ 0.6866, 2.9590, -0.7000, 0.9866, -3.7590, 0.0000 },
	{ 0.2366, 0.8636, 0.0000, 0.2366, -0.8636, 0.0000 },
	{ 0.2400, 0.7909, 0.0000, 0.2400, -0.7909, 0.0000 },
	{ 7.0733, 9.6318, 0.0000, 7.0733, -9.6318, 0.0000 },
	{ 3.7200, 2.7999, 0.0000, 3.7200, -2.7999, 0.0000 },
	{ 2.8999, 4.0909, 0.0000, 2.8999, -4.0909, 0.0000 },
	{ 1.2633, 4.2772, 0.1000, 0.3633, -5.0772, -0.4000 },
	{ 1.2833, 4.4227, -0.5000, 0.3833, -4.6227, -1.3000 },
	{ 0.9666, 2.7363, 0.0000, 0.9666, -2.8363, 0.0000 },
	{ 0.9433, 2.7772, 0.0000, 0.9433, -2.7772, -0.1000 },
	{ 0.8100, 2.7272, 0.0000, 1.0099, -2.8272, -0.2000 },
	{ 6.7699, 8.7681, 0.0000, 6.7699, -8.7681, 0.0000 },
	{ 2.9166, 6.5090, 0.0000, 2.9166, -6.5090, 0.0000 },
	{ 0.2333, 1.1181, 0.0000, 0.2333, -1.1181, 0.0000 },
	{ 0.2333, 1.1181, 0.0000, 0.2333, -1.1181, 0.0000 },
	{ 0.2333, 1.1227, 0.0000, 0.2333, -1.1227, 0.0000 },
	{ 0.8966, 3.7181, 0.0000, 1.1966, -3.9181, -1.1000 },
	{ 0.8166, 3.0409, 0.1000, 0.9166, -3.1409, -0.1000 },
	{ 0.9333, 2.3545, -0.2000, 0.8333, -2.3545, 0.0000 },
	{ 0.9099, 2.5000, 0.0000, 0.9099, -2.3000, 0.0000 },
	{ 0.8499, 2.5227, -0.2000, 0.8499, -2.6227, -0.3000 },
	{ 0.9933, 2.5590, 0.0000, 0.9933, -2.5590, 0.1000 },
	{ 0.5266, -0.6772, 1.3000, 0.5266, -1.9227, 0.8000 },
	{ 0.2533, 1.5818, -0.2000, 0.2533, -1.1818, -0.1000 },
	{ 0.4733, 4.0772, 1.3000, 0.3733, -1.0772, 0.0000 },
	{ 0.9933, 2.4636, 0.0000, 0.8933, -2.5636, 0.0000 },
	{ 1.0266, 2.9499, -0.2000, 0.7266, -2.8499, -0.1000 },
	{ 0.8899, 2.4909, -0.1000, 0.8900, -2.5909, -0.1000 },
	{ 0.8199, 2.4181, -0.2000, 0.8199, -3.1181, -0.2000 },
	{ 0.7766, 2.3272, 0.0000, 1.1100, -7.9772, 0.0000 },
	{ 1.0900, 7.6409, 0.0000, 1.0900, -7.5409, 0.0000 },
	{ 0.8333, 2.0590, 0.0000, 0.8333, -1.7590, 0.0000 },
	{ 0.9633, 2.6590, -0.1000, 1.0633, -2.7590, -0.1000 },
	{ 0.6566, 2.2499, -0.2000, 0.7566, -2.2499, 0.1000 },
	{ 0.9266, 2.6090, -0.1000, 0.7266, -3.0090, -0.1000 },
	{ 0.7933, 2.3045, 0.1000, 0.9933, -2.7045, 0.0000 },
	{ 0.7366, 3.6454, -0.2000, 0.9366, -4.2454, -0.8000 },
	{ 0.5299, 1.7863, 0.0000, 0.8300, -2.0863, -0.4000 },
	{ 0.9566, 2.5636, 0.0000, 1.0566, -2.6636, 0.0000 },
	{ 0.9299, 2.5545, 0.0000, 0.9299, -2.6545, 0.1000 },
	{ 1.3933, 11.0999, 0.0000, 1.3933, -11.0999, 0.0000 },
	{ 0.9000, 2.5136, 0.0000, 0.9000, -2.5136, 0.0000 },
	{ 0.9466, 2.5772, -0.2000, 0.9466, -2.6772, -0.2000 },
	{ 0.9866, 2.5545, -0.1000, 0.9866, -3.0545, 0.0000 },
	{ 0.9833, 3.0545, 0.3000, 1.1833, -2.8545, 0.3000 },
	{ 9.5799, 10.6772, 0.0000, 9.5799, -10.6772, 0.0000 },
	{ 1.0933, 2.5045, 0.1000, 1.0933, -2.9045, 0.1000 },
	{ 0.7666, 2.2318, 0.0000, 0.6666, -2.4318, -0.2000 },
	{ 1.0199, 2.5954, 0.5000, 1.1200, -2.8954, 0.6000 },
	{ 1.1200, 2.4454, 0.7000, 1.1200, -2.7454, 0.7000 },
	{ 0.9433, 2.0863, 0.0000, 0.9433, -2.3863, 0.2000 },
	{ 0.7599, 2.3909, 0.0000, 0.8600, -2.2909, 0.2000 },
	{ 0.9733, 2.3545, -0.0000, 0.8733, -2.1545, 0.1000 },
	{ 0.8333, 2.6363, -0.1000, 0.9333, -2.6363, 0.0000 },
	{ 0.8533, 2.4136, 0.0000, 0.8533, -2.3136, 0.1000 },
	{ 1.1299, 8.4636, 0.0000, 1.1299, -8.4636, 0.0000 },
	{ 0.2899, 0.6409, 0.0000, 0.2899, -0.6409, 0.0000 },
	{ 0.7766, 2.0909, 0.0000, 0.8766, -1.8909, 0.0000 },
	{ 0.9366, 2.7363, 0.0000, 0.9366, -2.9363, 0.0000 },
	{ 1.0033, 2.9136, -0.2000, 1.0033, -3.0136, -0.2000 },
	{ 0.4033, 2.1954, 0.0000, 0.2033, -1.4954, 0.0000 },
	{ 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000 },
	{ 0.7766, 2.3272, 0.0000, 1.1566, -9.5772, 0.0000 },
	{ 0.5233, 1.0590, 0.0000, 0.5233, -1.0590, 0.0000 },
	{ 0.3533, 0.8681, -0.1000, 0.3533, -1.0681, -0.1000 },
	{ 0.8766, 3.1545, -0.4000, 0.8766, -3.3545, -0.4000 },
	{ 0.5400, 1.7499, -0.2000, 0.5400, -1.2499, -0.2000 },
	{ 0.9300, 2.3500, 0.1000, 0.8299, -2.7499, 0.0000 },
	{ 1.0066, 2.3909, -0.2000, 1.0066, -3.1909, 0.0000 },
	{ 20.8299, 27.9272, 0.0000, 0.0000, 0.0000, 0.0000 },
	{ 1.1500, 4.3590, -0.2000, 1.1500, -5.4590, -0.5000 },
	{ 0.9233, 2.3227, 0.0000, 1.0233, -2.8227, 0.1000 },
	{ 0.7866, 2.6227, -0.2000, 1.0866, -2.8227, 0.0000 },
	{ 0.2333, 1.1181, 0.0000, 0.2333, -1.1181, 0.0000 },
	{ 0.9133, 2.5818, -0.1000, 0.9133, -3.3818, 0.1000 },
	{ 0.6566, 1.4636, 0.3000, 0.5566, -1.6636, 0.4000 },
	{ 1.1833, 7.2318, 0.0000, 1.1833, -7.2318, 0.0000 },
	{ 1.0133, 2.8681, 0.1000, 0.9133, -3.0681, 0.2000 },
	{ 0.2333, 1.2727, 0.0000, 0.2333, -1.2727, 0.0000 },
	{ 0.9699, 2.1181, -0.3000, 1.0699, -2.5181, 0.1000 },
	{ 1.0266, 3.4181, 0.4000, 1.0266, -4.0181, -0.3000 },
	{ 0.7533, 2.4136, 0.1000, 0.8533, -2.3136, 0.4000 },
	{ 1.1466, 8.3636, 0.0000, 1.1466, -8.3636, 0.0000 },
	{ 1.0600, 6.1954, 0.0000, 1.0600, -6.1954, 0.0000 },
	{ 14.8166, 26.1681, 0.0000, 14.8166, -26.1681, 0.0000 },
	{ 4.1966, 6.1590, 0.0000, 4.1966, -6.1590, 0.0000 },
	{ 0.1666, 0.4181, 0.0000, 0.1666, -0.4181, 0.0000 },
	{ 0.9499, 6.1227, 0.0000, 0.9499, -6.1227, 0.0000 },
	{ 1.0033, 2.2863, 0.0000, 0.9033, -2.6863, 0.0000 },
	{ 1.0033, 2.2863, 0.0000, 0.9033, -2.6863, 0.0000 },
	{ 1.0033, 2.3318, 0.0000, 0.9033, -2.7318, 0.0000 },
	{ 1.0733, 2.6000, 0.0000, 1.1733, -2.6000, 0.1000 },
	{ 0.8000, 2.7545, -0.1000, 1.0000, -2.7545, 0.1000 },
	{ 0.8266, 3.1636, 0.5000, 1.0266, -3.0636, 0.9000 },
	{ 0.8733, 2.1181, 0.0000, 0.8733, -2.6181, -0.3000 },
	{ 0.8800, 2.5590, -0.2000, 0.8800, -2.6590, -0.1000 },
	{ 0.8433, 2.6045, 0.1000, 1.0433, -2.8045, 0.0000 },
	{ 0.7933, 2.3045, 0.0000, 0.9933, -2.7045, 0.0000 },
	{ 0.9766, 1.5363, 0.0000, 0.9766, -1.5363, 0.0000 },
	{ 1.0066, 1.4818, 0.0000, 1.0066, -1.4818, 0.0000 },
	{ 0.4833, 2.1136, 0.0000, 0.4833, -2.1136, 0.0000 },
	{ 0.8666, 3.0999, 0.2000, 0.9666, -3.0999, 0.3000 },
	{ 0.8266, 0.6499, 0.0000, 0.8266, -0.6499, 0.0000 },
	{ 0.7100, 1.4363, 0.0000, 0.7100, -1.4363, 0.0000 }
};

#define MAX_PICKUP_ARRAY (2048)
new Float:Pickups[MAX_PICKUP_ARRAY][3];
enum {
	TEAM_NONE = 0,
	TEAM_LSMAYOR = 1,
	TEAM_DPS = 2,
	TEAM_SFPD = 3,
	TEAM_FBI = 4,
	TEAM_LSHOSPITAL = 5,
	TEAM_AUTOSCHOOL = 6,
	TEAM_GROVE = 7,
	TEAM_BALLAS = 8,
	TEAM_RIFA = 9,
	TEAM_AZTECAS = 10,
	TEAM_VAGOS = 11,
	TEAM_NG = 12,
	TEAM_LCN = 15,
	TEAM_YAKUZA = 16,
	TEAM_RM = 17,
	TEAM_LSNEWS = 18,
	TEAM_SFNEWS = 19,
	TEAM_LVNEWS = 20,
	TEAM_LVPD = 21,
	TEAM_SFHOSPITAL = 22,
	TEAM_LVHOSPITAL = 23,
	TEAM_SFMAYOR = 24,
	TEAM_LVMAYOR = 25
};
enum {
	JOB_NONE = 0,
	JOB_BUS = 1,
	JOB_TAXI = 2,
	JOB_PRODUCT = 3,
	JOB_FUEL = 4,
	JOB_MECHANIC = 5,
	JOB_TRUCKER = 6
}
enum {
    ADM_NONE = 0,
    ADM_HELPER = 1,
    ADM_MODER = 2,
    ADM_OLDER_MODER = 3,
    ADM_ADMIN = 4,
    ADM_OLDER_ADMIN = 5,
    ADM_DEPUTY_CHIEF = 6,
    ADM_CHIEF = 7,
	ADM_FOUNDER = 8
}
enum {
	ACTION_NONE,
	ACTION_HOSPITAL,
	ACTION_SELL_DRUGS,
	ACTION_SELL_ZONE,
	ACTION_SELL_GUN,
	ACTION_SELL_CAR,
	ACTION_CHANGE_CAR,
	ACTION_SELL_HOUSE,
	ACTION_CHANGE_HOUSE,
	ACTION_SELL_BIZ,
	ACTION_CHANGE_BIZ,
	ACTION_TICKET,
	ACTION_DICE,
	ACTION_SELL_SIM,
	ACTION_SELL_LIC,
	ACTION_HI,
	ACTION_SHOW_LIC,
	ACTION_SHOW_PASS,
	ACTION_SHOW_MED,
	ACTION_SHOW_SKILL
};

new bool:WeaponInfo[MAX_PLAYERS][47];
new gGuns[MAX_PLAYERS][13];
new gAmmos[MAX_PLAYERS][13];
new Float:AmountDamageUron[MAX_PLAYERS][50];
new gKilled[MAX_PLAYERS];
new bool:AC_NoTwoKillFrag[MAX_PLAYERS] = {false,...};
new Avto[2];
new Bog[2];

#define MAX_CAM_AREA (15)
#define MAX_SPEED_RADAR (70)
static const stock Float:SpeedCamPos[MAX_CAM_AREA][6] = {
	{-1753.7778, -648.1532, 18.5612, 0.0000, 0.0000, 178.0000},
	{-1381.2643, -822.7592, 80.3115, 0.0000, 0.0000, 90.0000},
	{-1354.3423, -808.8740, 76.9315, 0.0000, 0.0000, -90.0000},
	{-356.7830, -856.6662, 45.7432, 0.0000, 0.0000, 66.0000},
	{-322.9359, -856.2917, 45.8832, 0.0000, 0.0000, -112.0000},
	{-291.2151, 33.3040, 0.2073, 0.0000, 0.0000, -17.0000},
	{-260.1395, 76.0766, 0.3873, 0.0000, 0.0000, 160.0000},
	{1652.5416, -261.4128, 37.6421, 0.0000, 0.0000, -4.0000},
	{1686.1609, -318.9695, 43.7621, 0.0000, 0.0000, 176.0000},
	{1488.6129, -1866.1495, 12.4978, 0.0000, 0.0000, -90.0000},
	{1452.7208, -1878.1750, 12.4978, 0.0000, 0.0000, 90.0000},
	{1038.1125, -2295.5747, 12.0654, 0.0000, 0.0000, 15.0000},
	{1088.9343, -2324.1606, 12.0654, 0.0000, 0.0000, 210.0000},
	{1.8263, -1512.2292, 2.1643, 0.0000, 0.0000, -100.0000},
	{-65.3751, -1518.0380, 1.2309, 0.0000, 0.0000, 60.0000}
};
new Area_SpeedingCam[MAX_CAM_AREA];

new CanUse[MAX_PLAYERS];
new BankNarko;
new PriceNarko = 30;
new Text3D:NarkoText;

new Text3D:VehicleLabel[MAX_VEHICLES] = {Text3D:INVALID_3DTEXT_ID, ...};

new ReportTime[MAX_PLAYERS];

static const gDaysOfWeek[][] = {
	!"saturday",
	!"sunday",
	!"monday",
	!"tuesday",
	!"wednesday",
	!"thursday",
	!"friday"
};

new iPlayerAmmo[MAX_PLAYERS];
new iNewPlayerAmmo[MAX_PLAYERS];
new iPlayerWeapon[MAX_PLAYERS];
new iNewPlayerWeapon[MAX_PLAYERS];
new Shot[MAX_PLAYERS][8];

new PAYDAY = 0;

new GonkaSchet[MAX_PLAYERS];
new RaceCP[MAX_PLAYERS];
new bool:StartGonka = false;
new bool:EndingKartRound = true;
new GonkaPlayers = 0;
new GonkaPriz = 0;
new GonkaStavka[MAX_PLAYERS];
new Gonshiki[5] = 1001;
new NumberMesto[MAX_PLAYERS];
new RaceTime;
new bool:RaceTimerSt;
new bool:RaceTimerStEnd;
new RaceTimerEnd;
new RaceTimer;
new OtsChet;
new RaceText[1000] = " ";
new NumberCar;
new Text3D:Race3dtext;
new winners = 0;

#define MAX_RACE_PLAYERS (10)
static const stock Float:RaceSpawns[MAX_RACE_PLAYERS][4] = {
	{0.0,0.0,0.0,0.0}, // машина 0
     {-1564.0289, 1620.7192, 35.9214, 180.8929}, // машина 1
     {-1573.6097, 1620.8442, 35.9214, 180.8929}, // машина 2
	 {-1573.7924, 1628.7429, 35.9214, 180.8929}, // машина 3
	 {-1563.9266, 1628.6910, 35.9214, 180.8929}, // машина 4
	 {-1564.0157, 1637.1835, 35.9214, 180.8929}, // машина 5
	 {-1573.5348, 1637.3348, 35.9214, 180.8929}, // машина 6
	 {-1563.9906, 1645.1719, 35.9214, 180.8929}, // машина 7
	 {-1573.8641, 1645.3568, 35.9214, 180.8929}, // машина 8
	 {-1573.6722, 1652.8240, 35.9214, 180.8929} // машина 9

};
static const stock RaceModelCar[MAX_RACE_PLAYERS] = {0,466,436,451,429,541,451,429,541,451};
static const stock Float:GonkaCPOINT[38][3] = {
	{-1568.5950,1585.6710,35.9692}, // чек 0
	{-1569.5374,1471.2354,35.9719}, // чек 1
	{-1644.7837,1451.1910,32.7125}, // чек 2
	{-1712.0726,1387.9373,35.9141}, // чек 3
	{-1859.4225,1410.1016,34.7589}, // чек 4
	{-1893.4553,1509.4725,35.1806}, // чек 5
	{-1768.7507,1541.5544,35.1036}, // чек 6
	{-1698.3641,1539.6226,35.0537}, // чек 7
	{-1729.2040,1651.6202,37.6695}, // чек 8
	{-1854.1057,1651.4359,33.9372}, // чек 9
	{-1768.4218,1760.2441,35.4010}, // чек 10
	{-1630.7617,1762.1522,35.9730}, // чек 11
	{-1572.9446,1625.8563,35.9784}, // чек 12
	{-1598.3251,1437.4819,35.0894}, // чек 13
	{-1754.8180,1389.0021,35.6113}, // чек 14
	{-1861.7922,1413.4922,34.7588}, // чек 15
	{-1839.4543,1545.0988,35.0093}, // чек 16
	{-1745.1501,1518.5952,34.8313}, // чек 17
	{-1698.8607,1527.6339,35.0102}, // чек 18
	{-1718.7372,1646.7540,37.5966}, // чек 19
	{-1853.3893,1654.7561,34.0120}, // чек 20
	{-1761.4789,1754.0938,35.3754}, // чек 21
	{-1573.0416,1739.1368,35.9730}, // чек 22
	{-1572.0291,1602.0641,35.9703}, // чек 23
	{-1590.2694,1435.8861,35.6414}, // чек 24
	{-1712.8459,1390.5566,35.8405}, // чек 25
	{-1901.6193,1474.2048,34.9676}, // чек 26
	{-1771.9965,1542.7134,35.1049}, // чек 27
	{-1698.5081,1538.3763,35.0187}, // чек 28
	{-1744.2183,1649.9485,37.3940}, // чек 29
	{-1837.1455,1685.7003,34.7297}, // чек 30
	{-1765.8265,1756.5162,35.3860}, // чек 31
	{-1654.4807,1750.3705,35.2515}, // чек 32
	{-1575.1741,1725.4427,35.9730}, // чек 33
	{-1573.3567,1606.2736,35.9727}, // чек 34сюда
	{0.0,0.0,0.0}, // чек 35
	{0.0,0.0,0.0}, // чек 36
	{0.0,0.0,0.0} // чек 37
};

enum e_AREND_INFO {
	aID,            // - Unknown -
	aPlayerID,      // - Unknown -
	aModel,			// Model
	aCost,			// Цена
	Float:aPos_X,	// Кордината X
	Float:aPos_Y,	// Кордината Y
	Float:aPos_Z,	// Кордината Z
	Float:aPos_A,	// Угол поворота
	aColor_1,		// Цвет 1
	aColor_2		// Цвет 2
};
new ArendInfo[][e_AREND_INFO] =
{//ID, Цена, Координаты X, Y, Z, Цвет 1, Цвет 2
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 521, 5400, 2327.9026, 1981.2496, 15.4881, 0.0000, -1, -1}, // Моторынок1
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 581, 4100,  2332.0581, 1982.1729, 15.4881, 0.0000, -1, -1}, // Моторынок2
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 461, 4666, 2335.9966, 1982.5942, 15.4881, 0.0000, -1, -1}, // Моторынок3
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 463, 3266, 2340.5037, 1983.3036, 15.4881, 0.0000, -1, -1}, // Моторынок4
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 410, 400,  1807.0845, 2263.2190, 14.7973, 251.2788, -1, -1}, // Авторынок Батырево эконом
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 542, 500,  1807.0625, 2259.8154, 14.7973, 251.2788, -1, -1}, // Авторынок Батырево эконом
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 545, 507,  1806.8805, 2256.1243, 14.7973, 251.2788, -1, -1}, // Авторынок Батырево эконом
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 543, 533,  1806.9872, 2252.5564, 14.7973, 251.2788, -1, -1}, // Авторынок Батырево эконом
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 474, 578, 1806.8706, 2249.3127, 14.7973, 251.2788, -1, -1}, // Авторынок Батырево эконом
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 401, 2133,  2303.2354, -1789.6147, 21.9697, 90.0000, -1, -1}, // Авторынок г.Южный
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 526, 2733,  2303.3125, -1793.6943, 21.9697, 90.0000, -1, -1}, // Авторынок г.Южный
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 436, 2800,  2303.3079, -1797.7816, 21.9697, 90.0000, -1, -1}, // Авторынок г.Южный
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 527, 2873,  2303.2661, -1802.1062, 21.9697, 90.0000, -1, -1}, // Авторынок г.Южный
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 405, 3400,  2303.2810, -1806.1964, 21.9697, 90.0000, -1, -1}, // Авторынок г.Южный
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 500, 3833,  2303.4456, -1810.4921, 21.9697, 90.0000, -1, -1}, // Авторынок г.Южный
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 602, 9333, 2521.9443, -760.2861, 11.5990, 0.0000, -1, -1}, // Авторынок Анашан
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 603, 13167, 2518.5713, -760.2944, 11.5990, 0.0000, -1, -1}, // Авторынок Анашан
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 587, 17500, 2515.2959, -760.2913, 11.5990, 0.0000, -1, -1}, // Авторынок Анашан
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 560, 19667, 2511.9668, -760.2137, 11.5990, 0.0000, -1, -1}, // Авторынок Анашан
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 565, 21400, 2508.6248, -760.1913, 11.5990, 0.0000, -1, -1}, // Авторынок Анашан
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 558, 21667, 2505.1504, -760.1190, 11.5990, 0.0000, -1, -1}, // Авторынок Анашан
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 559, 21967, 2501.6978, -760.0550, 11.5990, 0.0000, -1, -1} // Авторынок Анашан
};

new payment_system;
new doubling_status;
new doubling_exp;
new doubling_donate;
new doubling_skills;
new doubling_salary;

#define SMILE_COUNT (5)
enum e_SMILE_INFO
{
	smInput[5],
	smOutput_M[40],
	smOutput_F[40]
}

static const stock SmileInfo[SMILE_COUNT][e_SMILE_INFO] = {
	{")", "улыбается", "улыбается"},
	{"))", "смеётся", "смеётся"},
	{"(", "расстроился", "расстроилась"},
	{"((", "сильно расстроился", "сильно расстроилась"},
	{"=0", "удивился", "удивилась"}
};

new PassRegSex[MAX_PLAYERS];
enum e_PASS_INFO
{
	psSeria,
	psNumber,
	psSex,
	psDate[3],
	psDateBirth[3],
	psCity,
	mcState
}
new PassInfo[MAX_PLAYERS][e_PASS_INFO];

enum e_VEHICLEGUN_INFO
{
	vGunArea,
	vGunAmmo,
	Text3D:vGunText,
	bool:vGunLoading,
	bool:vGunUnloading,
	vGunPickup
}
new gVehicleGun[MAX_VEHICLES][e_VEHICLEGUN_INFO];
new Iterator:VehicleGun<MAX_VEHICLES>;

enum e_VEHICLEMED_INFO
{
	vMedArea,
	vMedCount,
	Text3D:vMedText,
	bool:vMedLoading,
	bool:vMedUnloading,
	vMedPickup
}
new gVehicleMed[MAX_VEHICLES][e_VEHICLEMED_INFO];
new Iterator:VehicleMed<MAX_VEHICLES>;

new Iterator:adm_vehicles<MAX_VEHICLES>;
new TotalAdminVehicles = 0;

new bool:gGunWorkTableStat[10];
static const stock Float:gGunWorkCPs[13][3] = {
	{2731.6714,-2203.4663,3044.0100},//0 Load
	{2723.1311,-2203.4683,3044.0100},//1
	{2719.9094,-2205.7778,3044.0100},//2 Work
	{2719.9492,-2211.8333,3044.0100},//3
	{2719.9509,-2217.8057,3044.0100},//4
	{2719.9495,-2223.6038,3044.0100},//5
	{2719.9507,-2229.7456,3044.0100},//6
	{2719.9666,-2236.4863,3044.0100},//7
	{2719.9324,-2241.7944,3044.0100},//8
	{2719.9324,-2241.7944,3044.0100},//9
	{2719.9324,-2241.7944,3044.0100},//10
	{2719.9324,-2241.7944,3044.0100},//11
	{2735.5796,-2249.6377,3044.0100}//12 Unload
};
static const stock Float:gGunWorkTables[10][6] = {//считать слева направо
	{2001.3540,-1051.4000,975.8150,85.5510,276.7730,173.1990},//ближе к будке
	{2001.3190,-1053.7090,975.8170,85.5510,276.7730,173.1990},
	{2001.2850,-1056.0310,975.8170,85.5510,276.7730,173.1990},
	{2001.2500,-1058.3170,975.8170,85.5510,276.7730,173.1990},
	{1990.8220,-1054.7620,975.8150,85.5530,276.7790,353.2000},//чуть дальше будки
	{1990.8960,-1052.4420,975.8150,85.5510,276.7780,353.1990},
	{1990.9010,-1050.1400,975.8150,85.5510,276.7780,353.1990},
	{1990.9150,-1047.7960,975.8150,85.5510,276.7780,353.1990},
	{1982.8621,-1045.1190,975.8300,90.0000,0.0000,0.0000},//ближе к месту где брать заготовку
	{1980.3571,-1045.0880,975.8300,90.0000,0.0000,0.0000}
};
static const stock gGunWorkWeapon[6] = {348,353,355,356,346,349};
new gGunWorkWH[4]; //Склад оружейного цеха. 0-уголь, 1-дерево, 2-оружие, 3-склад оружия
new Text3D:gGunWorkWHText[2] = {Text3D:-1, ...};
new gGunWorkTime[6];

new Lessdrov; //дрова на лесопилке
new Mineral; //угля на шахте

#define SHOP_OBJECTS (11)
#define EAT_OBJECTS (4)
#define BAR_OBJECTS (7)
#define GUN_OBJECTS (10)

static const stock gGunCosts[GUN_OBJECTS] = {50,100,70,30,60,40,40,60,70,60};
static const stock gGunNames[GUN_OBJECTS][32] = {"Кастет", "Бейсбольная бита", "Дробовик", "Пистолет 9mm", "Пустынный орёл", "Полуавтомат MP5", "Пистолет-пулемёт UZI", "Автомат AK47", "Винтовка", "Автомат M4"};

static const stock gShopCosts[SHOP_OBJECTS] = {450,300,300,550,100,150,300,70,70,150,200};
static const stock gShopProd[SHOP_OBJECTS] = {2,3,2,2,1,2,1,2,2,2,2};
static const stock gShopNames[SHOP_OBJECTS][25] = {"Мобильный телефон", "SIM-карта", "Фотоаппарат", "Аптечки для дома", "Цветы", "Часы", "Маска", "Сигарета", "Газировка", "Аптечка", "Плеер"};

static const stock gEateryCosts[EAT_OBJECTS] = {1,2,3,4};
static const stock gEateryProd[EAT_OBJECTS] = {1,1,1,1};
static const stock gEateryNames1[EAT_OBJECTS][25] = {"Маленькая пицца", "Средняя пицца", "Большая пицца", "Пицца в коробке"};
static const stock gEateryNames2[EAT_OBJECTS][25] = {"Бургер", "Большой бургер", "Гамбургер", "Гамбургер в упаковке"};
static const stock gEateryNames3[EAT_OBJECTS][25] = {"Кусочки курицы", "Кусок куринной ножки", "Куринная ножка", "Курица в коробке"};

static const stock gBarCost[BAR_OBJECTS] = {1,2,3,4,5,6,7};
static const stock gBarProd[BAR_OBJECTS] = {1,1,1,1,1,1,1};
static const stock gBarNames[BAR_OBJECTS][25] = {"Вода", "Сода", "Кока-кола", "Пиво", "Водка", "Коньяк", "Абсент"};

static const stock Job_Names[7][32] = {
	"Нет",
	"Водитель автобуса",
	"Таксист",
	"Развозчик товаров",
	"Развозчик топлива",
	"Автомеханик",
	"Дальнобойщик"
};

new GangEd[5];
new GangPatr[5];
new Text3D:Gang3d[5] = {Text3D:-1, ...};

new MafiaEd[3];
new MafiaPatr[3];
new Text3D:Mafia3d[3] = {Text3D:-1, ...};
new MafiaTotalBiz[3];

static const stock gGunAmount[9] = {60,70,170,190,200,210,280,300,360}; //Colt 45,Silenced Pistol,Deagle,UZI,MP5,Shotgun,M4,AK47,Rifle
static const stock gGunID[9] = {22,23,24,28,29,25,31,30,33}; //Colt 45,Silenced Pistol,Deagle,UZI,MP5,Shotgun,M4,AK47,Rifle

new gArmyWarehouse[2];
new Text3D:gArmyWarehouseText;
new Text3D:gLoadAmmoText;

enum (<<=1)
{
	setFractionChat=1,
	setShowNickname,
	setAdminInfo,
	setPlayerIDChat,
	setHungerInfo,
	setShowKeis
}

#define SETTINGS_COUNT (6)
static const stock SettingName[SETTINGS_COUNT][64] = {
	"Отображать чат организации\t\t",
	"Отображать ники игроков\t\t\t",
	"Отображать действия администрации\t",
	"Отображать ID игроков в чате\t\t",
	"Отображать сытость игрока\t\t\t",
	"Отображать чемодан в руке игрока\t\t"
};

static const stock TeamColors[] = {
	NONE_COLOR,
	MAYOR_COLOR,
	LSPD_COLOR,
	SFPD_COLOR,
	FBI_COLOR,
    HOSPITAL_COLOR,
    LIC_COLOR,
    GROVE_COLOR,
    BALLAS_COLOR,
    RIFA_COLOR,
    AZTECAS_COLOR,
    VAGOS_COLOR,
    ARMY_COLOR,
    NONE_COLOR,
    NONE_COLOR,
    LCN_COLOR,
    YAKUZA_COLOR,
    RM_COLOR,
    LSNEWS_COLOR,
    SFNEWS_COLOR,
    LVNEWS_COLOR,
    LVPD_COLOR,
    HOSPITAL_COLOR,
    HOSPITAL_COLOR,
    MAYOR_COLOR,
    MAYOR_COLOR
};

enum e_AREA_INFO
{
	arServerHelp[2],
	arBankMenu[5],
	arAdminsZoneHP,
	arHotdogHP[5],
	arGunWork,
	arGunWorkLoad[2],
	arGunWorkWork[10],
	arGunWorkUnload,
	arMineWork[5],
	arMineWorkUnload[3],
	arSawmillWork[2],
	arGettingPassport[3],
	arGreenZone[32],
	arBuyFishki,
	arRegRace,
	arBuyNarko[2],
	arLoadAmmo,
	arArmyAmmo,
	arLoadMed,
	arPoliceMenu[3],
	arGunSklad[8],
	arGosJob[3],
	arAutoschool[2],
	arSetWeaponFrac[9],
	arTruckLoadCoal,
	arTruckWagonCoal,
	arTruckLoadWood,
	arTruckWagonWood,
	arTruckLoadWeapon,
	arTruckWagonWeapon,
	arTruckUnload[2],
	arArmyJob[2]
}
new AreaInfo[e_AREA_INFO];

static const stock Float:MedicSpawn[4][3] = {
  	{2468.6204,-2147.3486,634.2466},
	{2468.6204,-2147.3486,634.2466},
	{367.0321,158.1389,1003.8500},
	{367.0321,158.1389,1003.8500}
};

static const stock Float:JailSpawn[4][4] = {
	{897.5146,2080.9880,2721.8101},
	{2210.1938,-505.2677,-7.4141},
	{1004.1040,576.0970,1010.5649,0.6477},
	{1001.0569,590.8435,1010.5649,179.5393}
};

new TazerTime[MAX_PLAYERS];
new HealmeObject[MAX_PLAYERS];
new kostiKos[MAX_PLAYERS];
new Predlog[MAX_PLAYERS];
new ZapretDice[MAX_PLAYERS];
new KostiName[MAX_PLAYERS];
new KostiMoney[MAX_PLAYERS];
new OldMessage[MAX_PLAYERS][150];
new TextReset[MAX_PLAYERS];
new TextResetCMD[MAX_PLAYERS];
new TransferReset[MAX_PLAYERS];
new bool:PlayerDied[MAX_PLAYERS];
new bool:CheckOutMoney[MAX_PLAYERS];
new bool:UseGPS[MAX_PLAYERS];
new UnMaskReset[MAX_PLAYERS];
new bool:FreezePlayer[MAX_PLAYERS];
new b_Capture[5];
new b_Sklad[8];
new Text3D:less3D[2] = {Text3D:-1, ...};

new bool: cMusicActive = false;
new cMusicURL[256];
new Float:cMusicPosX = 0.0;
new Float:cMusicPosY = 0.0;
new Float:cMusicPosZ = 0.0;
new Float:cMusicDistance = 0.0;
new bool:cActiveMusic[MAX_PLAYERS];

new bool:gMusicActive = false;
new gMusicURL[256];
new Float:gMusicPosX = 0.0;
new Float:gMusicPosY = 0.0;
new Float:gMusicPosZ = 0.0;
new Float:gMusicDistance = 0.0;
new bool:gActiveMusic[MAX_PLAYERS];

/* Античиты */
new bool:gCheckGodMode[MAX_PLAYERS];
new bool:gSlotUsed[MAX_PLAYERS];
new WeaponTime[MAX_PLAYERS];
new RapidFire[MAX_PLAYERS];
new playersIP[MAX_PLAYERS][16];
new bool:BanCar[MAX_VEHICLES];
new TimeUpdate[MAX_PLAYERS];
new AntiCheatMessage[MAX_PLAYERS];
new AntiFloodKick[MAX_PLAYERS];
/* Античиты Конец */
new Menu:spectate_menu;
new Menu:clothing_selection;
new Menu:buy_clothing;

/* Кровати в больнице */
enum e_HEAL_INFO
{
	Float:hBed[3],
	hWorld,
	hInt,
	hName[MAX_PLAYER_NAME],
	hID
}
new HealInfo[46][e_HEAL_INFO] =
{
    {{2463.4124,-2155.7505,634.8615}, 4, 1, "The State", 1},
	{{2460.4170,-2155.1182,634.8536}, 4, 1, "The State", 2},
	{{2457.5354,-2155.2571,634.8651}, 4, 1, "The State", 3},
	{{2458.0371,-2145.7563,634.8921}, 4, 1, "The State", 4},
	{{2460.5422,-2145.7544,634.8524}, 4, 1, "The State", 5},
	{{2463.5061,-2145.6340,634.8673}, 4, 1, "The State", 6},
	{{2473.0205,-2155.3022,634.8895}, 4, 1, "The State", 7},
	{{2475.5701,-2155.3262,634.8534}, 4, 1, "The State", 8},
	{{2478.5186,-2155.8086,634.8624}, 4, 1, "The State", 9},
	{{2481.6772,-2155.7373,634.8562}, 4, 1, "The State", 10},
	{{2481.5710,-2146.5315,634.8723}, 4, 1, "The State", 11},
	{{2478.6084,-2145.6672,634.8679}, 4, 1, "The State", 12},
	{{2475.8293,-2145.7966,634.8867}, 4, 1, "The State", 13},
	{{2472.6624,-2145.7954,634.8535}, 4, 1, "The State", 14},//До сюда это в больнице южный
	{{353.8680,148.7887,1004.3938}, 5, 1, "The State", 15},
	{{357.5480,148.5357,1004.3932}, 5, 1, "The State", 16},
	{{361.2352,148.4809,1004.3967}, 5, 1, "The State", 17},
	{{353.7047,154.4563,1004.4020}, 5, 1, "The State", 18},
	{{357.4947,154.2806,1004.3951}, 5, 1, "The State", 19},
	{{361.1541,154.6030,1004.3933}, 5, 1, "The State", 20},
	{{354.0558,139.5643,1004.3999}, 5, 1, "The State", 21},
	{{357.3865,139.2885,1004.4207}, 5, 1, "The State", 22},
	{{361.2465,139.5795,1004.3888}, 5, 1, "The State", 23},
	{{361.1348,145.5236,1004.4011}, 5, 1, "The State", 24},
	{{357.9270,145.7088,1004.4291}, 5, 1, "The State", 25},
	{{354.1212,145.4712,1004.4009}, 5, 1, "The State", 26},//До сюда готово больница батырево
 	{{491.0230,1106.3168,1021.8220}, 5, 1, "The State", 27},
	{{488.3635,1106.2557,1021.8220}, 5, 1, "The State", 28},
	{{486.8943,1106.2688,1021.8220}, 5, 1, "The State", 29},
	{{484.3112,1106.2848,1021.8220}, 5, 1, "The State", 30},
	{{481.6655,1106.2848,1021.8220}, 5, 1, "The State", 31},
	{{479.0508,1106.2598,1021.8220}, 5, 1, "The State", 32},
 	{{2463.4124,-2155.7505,634.8615}, 6, 1, "The State", 33},
	{{2460.4170,-2155.1182,634.8536}, 6, 1, "The State", 34},
	{{2457.5354,-2155.2571,634.8651}, 6, 1, "The State", 35},
	{{2458.0371,-2145.7563,634.8921}, 6, 1, "The State", 36},
	{{2460.5422,-2145.7544,634.8524}, 6, 1, "The State", 37},
	{{2463.5061,-2145.6340,634.8673}, 6, 1, "The State", 38},
	{{2473.0205,-2155.3022,634.8895}, 6, 1, "The State", 39},
	{{2475.5701,-2155.3262,634.8534}, 6, 1, "The State", 40},
	{{2478.5186,-2155.8086,634.8624}, 6, 1, "The State", 41},
	{{2481.6772,-2155.7373,634.8562}, 6, 1, "The State", 42},
	{{2481.5710,-2146.5315,634.8723}, 6, 1, "The State", 43},
	{{2478.6084,-2145.6672,634.8679}, 6, 1, "The State", 44},
	{{2475.8293,-2145.7966,634.8867}, 6, 1, "The State", 45},
	{{2472.6624,-2145.7954,634.8535}, 6, 1, "The State", 46}
};
new Text3D:HealText[46] = {Text3D:-1, ...};
new PlayerBed[MAX_PLAYERS];
new bool:PlayerLie[MAX_PLAYERS];
/* Кровати в больнице Конец */

new Ships[MAX_PLAYERS];
new Sahta[2];
new cPickup[4];
new lvpdguns;
new armypick[4],armystol,armshield;
new Pickup[19];
new armskin; // гардероб
new Text3D:tPickup[15] = {Text3D:-1, ...};

new mechanic[10];
new taxicar[11];
new aBus[13];
new aTruck[3][2];
new aArmyNG[11];
new aGrove[6];
new aBallas[5];
new aRifa[5];
new aAztecas[5];
new aVagos[6];
new aMayorLS[6];
new aMayorSF[6];
new aMayorLV[6];
new aLSPD[17];
new aSFPD[10];
new aLVPD[19];
new aHospitalLS[5];
new aHospitalSF[4];
new aHospitalLV[8];
new aNewsLS[6];
new aNewsSF[4];
new aNewsLV[5];
new aRussianMafia[7];
new aLCN[7];
new aYakuza[7];
new aAutoschool[4];//14
new aFBI[5];

new bool:opengate[MAX_PLAYERS][10];
new bool:opendoors[MAX_PLAYERS][9];
new Gate[12];
new Doors[9];
new pickupentered[MAX_PLAYERS] = 0;
new bankls[2],banksf[2],banklv[2],bankpalomino[2];
new lspdpic[4],sfpdpic[4],lvpdpic[4],fbipic[3],merpicls[3],merpicsf[3],merpiclv[3],BolnicaLS[3],BolnicaSF[2],BolnicaLV[2],ashpic[3];
new lsnpic[2],sfnpic[2],lvnpic[2];
new grovpic[2],vagospic[2],rifapic[2],azpic[2],balpic[2],narkoenter[2];
new arpic[4];
new lcnpic[2],yakpic[2],rmpic[2];
new bool:PlayerRegistered[MAX_PLAYERS];
new bool:TaxiON[MAX_PLAYERS];
new bool:MedicON[MAX_PLAYERS];
new bool:MechanicON[MAX_PLAYERS];
new bool:PoliceON[MAX_PLAYERS];

new zavod[2];
new sportzal[6];
new sportpickup;
new Medicines[MAX_PLAYERS];
new GetMedicines[3];
new UnloadMed[3];
new MedWH[3];
new Text3D:MedWHText[3] = {Text3D:-1, ...};
new unloadammomafia[3];
new armyammo;
new bool:gym_cloakroom[MAX_PLAYERS];
new set_name_ID[MAX_PLAYERS];
new player_name[MAX_PLAYERS][MAX_PLAYER_NAME];
new FrakCD;
new Text:panel_capture_TD[7];

#define MAX_GANGS (20)
enum e_GANG_INFO
{
	capture,
	score,
	gangnumber
}
new GangInfo[MAX_GANGS][e_GANG_INFO];

new PlayerUseHeal[MAX_PLAYERS];
new AdvertTime, AdvertTime_;
new CallPrice[3] = 15;
new SmsPrice[3] = 2;
new AdvertPrice[3] = 8;
new SmsNews[3];
new CallNews[3];

new TOTALBIZ,
	TOTALADVERT[3],
	TOTALHOUSE,
	TOTALFAMILY;

new mysql_query_string[2500],
	stringer[2500],
	coordh[150],
	boordh[256];

enum e_VEHICLE_INFO
{
	Float:vX,
	Float:vY,
	Float:vZ,
	Float:vA,
	vDriver,
	vEngine,
	vLights,
	vLock,
	Float:vFuel,
	Float:vMileage
}
new VehicleInfo[MAX_VEHICLES][e_VEHICLE_INFO];

enum
{
	VEHICLE_STATE_CAR,
	VEHICLE_STATE_BIKE,
	VEHICLE_STATE_VELIK,
	VEHICLE_STATE_PLANE,
	VEHICLE_STATE_BOAT,
	VEHICLE_STATE_MOPED,
	VEHICLE_STATE_TRAIN
}
new VehicleState[MAX_VEHICLES];

static const stock VehicleClass[4][12] =
{
	"Эконом",
	"Средний",
	"Спорт",
	"Мото"
};

enum e_VEHICLE_STATS
{
	vID,
	vName[32],
	vMaxSpeed,
	Float:vMaxFuel,
	vFuelDrop
}

static const stock VehStats[][e_VEHICLE_STATS] =
{
	{400,	"Landstalker",		88,		80.0,		8},
	{401,	"Bravura",			83,		40.0,		6},
	{402,	"Buffalo",			104,	50.0,		10},
	{403,	"Linerunner",		61,		140.0,		12},
	{404,	"Pereniel",			74,		40.0,		6},
	{405,	"Sentinel",			91,		50.0,		6},
	{406,	"Dumper",			61,		200.0,		12},
	{407,	"Firetruck",		82,		100.0,		11},
	{408,	"Trashmaster",		66,		80.0,		10},
	{409,	"Stretch",			88,		60.0,		10},
	{410,	"Manana",			72,		50.0,		6},
	{411,	"Infernus",			122,	80.0,		10},
	{412,	"Voodoo",			95,		60.0,		7},
	{413,	"Pony",				61,		110.0,		8},
	{414,	"Mule",				68,		110.0,		12},
	{415,	"Cheetah",			107,	70.0,		8},
	{416,	"Ambulance",		88,		80.0,		10},
	{417,	"Leviathan",		0,		190.0,		15},
	{418,	"Moonbeam",			68,		70.0,		10},
	{419,	"Esperanto",		82,		50.0,		8},
	{420,	"Taxi",				81,		60.0,		10},
	{421,	"Washington",		86,		70.0,		7},
	{422,	"Bobcat",			78,		80.0,		8},
	{423,	"Mr Whoopee",		66,		35.0,		5},
	{424,	"BF Injection",		76,		40.0,		12},
	{425,	"Hunter",			0,		0.0,		0},
	{426,	"Premier",			96,		60.0,		6},
	{427,	"Enforcer",			92,		120.0,		12},
	{428,	"Securicar",		87,		120.0,		12},
	{429,	"Banshee",			112,	50.0,		10},
	{430,	"Predator",			0,		0.0,		0},
	{431,	"Bus",				72,		100.0,		10},
	{432,	"Rhino",			81,		200.0,		25},
	{433,	"Barracks",			61,		150.0,		18},
	{434,	"Hotknife",			93,		30.0,		10},
	{435,	"Trailer",			0,		0.0,		0},
	{436,	"Previon",			83,		35.0,		11},
	{437,	"Coach",			88,		100.0,		10},
	{438,	"Cabbie",			79,		40.0,		9},
	{439,	"Stallion",			94,		45.0,		7},
	{440,	"Rumpo",			76,		100.0,		9},
	{441,	"RC Bandit",		0,		0.0,		0},
	{442,	"Romero",			77,		60.0,		12},
	{443,	"Packer",			70,		140.0,		13},
	{444,	"Monster Truck A",	98,		100.0,		20},
	{445,	"Admiral",			91,		60.0,		9},
	{446,	"Squalo",			0,		0.0,		0},
	{447,	"Seasparrow",		0,		0.0,		13},
	{448,	"Pizzaboy",			93,		0.0,		0},
	{449,	"Tram",				101,	0.0,		0},
	{450,	"Trailer",			0,		0.0,		0},
	{451,	"Turismo",			107,	80.0,		10},
	{452,	"Speeder",			0,		0.0,		0},
	{453,	"Reefer",			0,		0.0,		0},
	{454,	"Tropic",			0,		0.0,		0},
	{455,	"Flatbed",			87,		110.0,		11},
	{456,	"Yankee",			59,		110.0,		10},
	{457,	"Caddy",			62,		20.0,		3},
	{458,	"Solair",			87,		50.0,		12},
	{459,	"Berkley's RC Van",	76,		70.0,		10},
	{460,	"Skimmer",			0,		0.0,		0},
	{461,	"PCJ-600",			88,		125.0,		9},
	{462,	"Faggio",			61,		15.0,		9},
	{463,	"Freeway",			78,		135.0,		5},
	{464,	"RC Baron",			0,		0.0,		0},
	{465,	"RC Raider",		0,		0.0,		0},
	{466,	"Glendale",			82,		60.0,		8},
	{467,	"Oceanic",			78,		60.0,		8},
	{468,	"Sanchez",			78,		115.0,		6},
	{469,	"Sparrow",			0,		190.0,		13},
	{470,	"Patriot",			87,		80.0,		10},
	{471,	"Quad",				61,		130.0,		5},
	{472,	"Coastguard",		0,		0.0,		0},
	{473,	"Dinghy",			0,		0.0,		0},
	{474,	"Hermes",			82,		50.0,		8},
	{475,	"Sabre",			97,		50.0,		8},
	{476,	"Rustler",			0,		0.0,		0},
	{477,	"ZR-350",			104,	50.0,		9},
	{478,	"Walton",			66,		35.0,		9},
	{479,	"Regina",			78,		70.0,		7},
	{480,	"Comet",			102,	40.0,		8},
	{481,	"BMX",				80,		0.0,		0},
	{482,	"Burrito",			87,		70.0,		11},
	{483,	"Camper",			86,		50.0,		10},
	{484,	"Marquis",			0,		0.0,		0},
	{485,	"Baggage",			56,		0.0,		0},
	{486,	"Dozer",			39,		50.0,		19},
	{487,	"Maverick",			0,		190.0,		8},
	{488,	"News Chopper",		0,		190.0,		8},
	{489,	"Rancher",			77,		80.0,		8},
	{490,	"FBI Rancher",		82,		80.0,		8},
	{491,	"Virgo",			82,		45.0,		7},
	{492,	"Greenwood",		78,		50.0,		7},
	{493,	"Jetmax",			118,	0.0,		0},
	{494,	"Hotring",			98,		50.0,		17},
	{495,	"Sandking",			90,		100.0,		10},
	{496,	"Blista Compact",	60,		40.0,		7},
	{497,	"Police Maverick",	0,		190.0,		8},
	{498,	"Boxville",			60,		80.0,		9},
	{499,	"Benson",			68,		80.0,		9},
	{500,	"Mesa",				78,		40.0,		7},
	{501,	"RC Goblin",		0,		0.0,		0},
	{502,	"Hotring Racer",	119,	50.0,		18},
	{503,	"Hotring Racer",	119,	50.0,		17},
	{504,	"Bloodring Banger",	96,		50.0,		12},
	{505,	"Rancher",			78,		80.0,		12},
	{506,	"Super GT",			100,	50.0,		8},
	{507,	"Elegant",			92,		60.0,		7},
	{508,	"Journey",			60,		45.0,		12},
	{509,	"Bike",				90,		0.0,		0},
	{510,	"Mountain Bike",	110,	0.0,		0},
	{511,	"Beagle",			0,		0.0,		0},
	{512,	"Cropdust",			0,		0.0,		0},
	{513,	"Stunt",			0,		0.0,		0},
	{514,	"Tanker",			67,		120.0,		12},
	{515,	"Roadtrain",		79,		140.0,		14},
	{516,	"Nebula",			87,		50.0,		9},
	{517,	"Majestic",			88,		50.0,		7},
	{518,	"Buccaneer",		91,		50.0,		7},
	{519,	"Shamal",			0,		120.0,		15},
	{520,	"Hydra",			0,		0.0,		0},
	{521,	"FCR-900",			109,	130.0,		6},
	{522,	"NRG-500",			98,		145.0,		6},
	{523,	"HPV1000",			104,	125.0,		6},
	{524,	"Cement Truck",		72,		80.0,		10},
	{525,	"Tow Truck",		89,		50.0,		9},
	{526,	"Fortune",			88,		50.0,		7},
	{527,	"Cadrona",			83,		40.0,		6},
	{528,	"FBI Truck",		98,		60.0,		12},
	{529,	"Willard",			83,		60.0,		10},
	{530,	"Forklift",			33,		15.0,		3},
	{531,	"Tractor",			39,		20.0,		4},
	{532,	"Combine",			61,		30.0,		7},
	{533,	"Feltzer",			93,		40.0,		6},
	{534,	"Remington",		94,		60.0,		6},
	{535,	"Slamvan",			88,		60.0,		6},
	{536,	"Blade",			96,		60.0,		12},
	{537,	"Freight",			0,		0.0,		0},
	{538,	"Streak",			0,		0.0,		0},
	{539,	"Vortex",			55,		10.0,		2},
	{540,	"Vincent",			83,		50.0,		10},
	{541,	"Bullet",			113,	50.0,		6},
	{542,	"Clover",			91,		50.0,		6},
	{543,	"Sadler",			84,		50.0,		6},
	{544,	"Firetruck",		82,		90.0,		12},
	{545,	"Hustler",			82,		35.0,		6},
	{546,	"Intruder",			83,		50.0,		8},
	{547,	"Primo",			79,		50.0,		8},
	{548,	"Cargobob",			0,		0.0,		0},
	{549,	"Tampa",			0,		50.0,		6},
	{550,	"Sunrise",			80,		50.0,		6},
	{551,	"Merit",			87,		50.0,		6},
	{552,	"Utility",			67,		50.0,		5},
	{553,	"Nevada",			0,		0.0,		0},
	{554,	"Yosemite",			80,		50.0,		6},
	{555,	"Windsor",			88,		50.0,		5},
	{556,	"Monster Truck B",	62,		100.0,		10},
	{557,	"Monster Truck C",	62,		100.0,		10},
	{558,	"Uranus",			87,		50.0,		6},
	{559,	"Jester",			99,		50.0,		6},
	{560,	"Sultan",			94,		50.0,		6},
	{561,	"Stratum",			85,		50.0,		6},
	{562,	"Elegy",			99,		50.0,		6},
	{563,	"Raindance",		0,		0.0,		0},
	{564,	"RC Tiger",			0,		0.0,		0},
	{565,	"Flash",			92,		50.0,		6},
	{566,	"Tahoma",			89,		50.0,		6},
	{567,	"Savanna",			96,		50.0,		6},
	{568,	"Bandito",			81,		15.0,		4},
	{569,	"Freight",			0,		10.0,		3},
	{570,	"Trailer",			0,		0.0,		0},
	{571,	"Kart",				52,		10.0,		3},
	{572,	"Mower",			33,		10.0,		3},
	{573,	"Duneride",			61,		35.0,		5},
	{574,	"Sweeper",			33,		10.0,		3},
	{575,	"Broadway",			88,		50.0,		6},
	{576,	"Tornado",			88,		50.0,		6},
	{577,	"AT-400",			0,		0.0,		0},
	{578,	"DFT-30",			72,		70.0,		12},
	{579,	"Huntley",			88,		70.0,		6},
	{580,	"Stafford",			85,		50.0,		6},
	{581,	"BF-400",			110,	25.0,		12},
	{582,	"Newsvan",			76,		80.0,		6},
	{583,	"Tug",				47,		10.0, 		3},
	{584,	"Trailer",			0,		0.0, 		0},
	{585,	"Emperor",			85,		50.0,		6},
	{586,	"Wayfarer",			107,	125.0,		5},
	{587,	"Euros",			92,		70.0,		6},
	{588,	"Hotdog",			60,		30.0,		6},
	{589,	"Club",				90,		50.0,		6},
	{590,	"Trailer",			0,		0.0,		0},
	{591,	"Trailer",			0,		0.0,		0},
	{592,	"Andromada",		0,		0.0,		0},
	{593,	"Dodo",				0,		190.0,		7},
	{594,	"RC Cam",			0,		0.0,		0},
	{595,	"Launch",			0,		0.0,		0},
	{596,	"Police Car (LSPD)",98,		50.0,		5},
	{597,	"Police Car (SFPD)",98,		50.0,		5},
	{598,	"Police Car (LVPD)",98,		50.0,		5},
	{599,	"Police Ranger",	88,		80.0,		6},
	{600,	"Picador",			84,		40.0,		6},
	{601,	"S.W.A.T. Van",		61,		30.0,		5},
	{602,	"Alpha",			94,		50.0,		6},
	{603,	"Phoenix",			95,		50.0,		6},
	{604,	"Glendale",			82,		50.0,		6},
	{605,	"Sadler",			84,		50.0,		6},
	{606,	"Luggage Trailer",	0,		0.0,		0},
	{607,	"Luggage Trailer",	0,		0.0,		0},
	{608,	"Stair Trailer",	0,		0.0,		0},
	{609,	"Boxville",			60,		50.0,		6},
	{610,	"Farm Plow",		0,		0.0,		0},
	{611,	"Utility Trailer",	0,		0.0,		0}
};

static const stock legalmods[48][22] = {
	{400, 1024,1021,1020,1019,1018,1013,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{401, 1145,1144,1143,1142,1020,1019,1017,1013,1007,1006,1005,1004,1003,1001,0000,0000,0000,0000},
	{404, 1021,1020,1019,1017,1016,1013,1007,1002,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{405, 1023,1021,1020,1019,1018,1014,1001,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{410, 1024,1023,1021,1020,1019,1017,1013,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{415, 1023,1019,1018,1017,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{418, 1021,1020,1016,1006,1002,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{420, 1021,1019,1005,1004,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{421, 1023,1021,1020,1019,1018,1016,1014,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{422, 1021,1020,1019,1017,1013,1007,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{426, 1021,1019,1006,1005,1004,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{436, 1022,1021,1020,1019,1017,1013,1007,1006,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{439, 1145,1144,1143,1142,1023,1017,1013,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{477, 1021,1020,1019,1018,1017,1007,1006,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{478, 1024,1022,1021,1020,1013,1012,1005,1004,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{489, 1024,1020,1019,1018,1016,1013,1006,1005,1004,1002,1000,0000,0000,0000,0000,0000,0000,0000},
	{491, 1145,1144,1143,1142,1023,1021,1020,1019,1018,1017,1014,1007,1003,0000,0000,0000,0000,0000},
	{492, 1016,1006,1005,1004,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{496, 1143,1142,1023,1020,1019,1017,1011,1007,1006,1003,1002,1001,0000,0000,0000,0000,0000,0000},
	{500, 1024,1021,1020,1019,1013,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{516, 1021,1020,1019,1018,1017,1016,1015,1007,1004,1002,1000,0000,0000,0000,0000,0000,0000,0000},
	{517, 1145,1144,1143,1142,1023,1020,1019,1018,1017,1016,1007,1003,1002,0000,0000,0000,0000,0000},
	{518, 1145,1144,1143,1142,1023,1020,1018,1017,1013,1007,1006,1005,1003,1001,0000,0000,0000,0000},
	{527, 1021,1020,1018,1017,1015,1014,1007,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{529, 1023,1020,1019,1018,1017,1012,1011,1007,1006,1003,1001,0000,0000,0000,0000,0000,0000,0000},
	{534, 1185,1180,1179,1178,1127,1126,1125,1124,1123,1122,1106,1101,1100,0000,0000,0000,0000,0000},
	{535, 1121,1120,1119,1118,1117,1116,1115,1114,1113,1110,1109,0000,0000,0000,0000,0000,0000,0000},
	{536, 1184,1183,1182,1181,1128,1108,1107,1105,1104,1103,0000,0000,0000,0000,0000,0000,0000,0000},
	{540, 1145,1144,1143,1142,1024,1023,1020,1019,1018,1017,1007,1006,1004,1001,0000,0000,0000,0000},
	{542, 1145,1144,1021,1020,1019,1018,1015,1014,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{546, 1145,1144,1143,1142,1024,1023,1019,1018,1017,1007,1006,1004,1002,1001,0000,0000,0000,0000},
	{547, 1143,1142,1021,1020,1019,1018,1016,1003,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{549, 1145,1144,1143,1142,1023,1020,1019,1018,1017,1012,1011,1007,1003,1001,0000,0000,0000,0000},
	{550, 1145,1144,1143,1142,1023,1020,1019,1018,1006,1005,1004,1003,1001,0000,0000,0000,0000,0000},
	{551, 1023,1021,1020,1019,1018,1016,1006,1005,1003,1002,0000,0000,0000,0000,0000,0000,0000,0000},
	{558, 1168,1167,1166,1165,1164,1163,1095,1094,1093,1092,1091,1090,1089,1088,0000,0000,0000,0000},
	{559, 1173,1162,1161,1160,1159,1158,1072,1071,1070,1069,1068,1067,1066,1065,0000,0000,0000,0000},
	{560, 1170,1169,1141,1140,1139,1138,1033,1032,1031,1030,1029,1028,1027,1026,0000,0000,0000,0000},
	{561, 1157,1156,1155,1154,1064,1063,1062,1061,1060,1059,1058,1057,1056,1055,1031,1030,1027,1026},
	{562, 1172,1171,1149,1148,1147,1146,1041,1040,1039,1038,1037,1036,1035,1034,0000,0000,0000,0000},
	{565, 1153,1152,1151,1150,1054,1053,1052,1051,1050,1049,1048,1047,1046,1045,0000,0000,0000,0000},
	{567, 1189,1188,1187,1186,1133,1132,1131,1130,1129,1102,0000,0000,0000,0000,0000,0000,0000,0000},
	{575, 1177,1176,1175,1174,1099,1044,1043,1042,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{576, 1193,1192,1191,1190,1137,1136,1135,1134,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{580, 1023,1020,1018,1017,1007,1006,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{589, 1145,1144,1024,1020,1018,1017,1016,1013,1007,1006,1005,1004,1000,0000,0000,0000,0000,0000},
	{600, 1022,1020,1018,1017,1013,1007,1006,1005,1004,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{603, 1145,1144,1143,1142,1024,1023,1020,1019,1018,1017,1007,1006,1001,0000,0000,0000,0000,0000}
};

enum e_CUFF_INFO
{
	pCuffer,
	pCuffee
}
new pCuff[MAX_PLAYERS][e_CUFF_INFO];

new bool:EtherCalled[MAX_PLAYERS];
new bool:Ether[MAX_PLAYERS];
new bool:EtherLive[MAX_PLAYERS];
new bool:EtherCall[3];
new bool:EtherSms[3];
new bool:Phone[MAX_PLAYERS];
new CellTime[MAX_PLAYERS];
new Mobile[MAX_PLAYERS];
new bool:TPC[MAX_PLAYERS];
new bool:times[MAX_PLAYERS];
new InShop[MAX_PLAYERS];
new InShopSkin[MAX_PLAYERS];
new bool:gPlayerLogged[MAX_PLAYERS];
new bool:gPlayerSpawned[MAX_PLAYERS];
new bool:gAdminLogged[MAX_PLAYERS];
new ReFuelTimer[MAX_PLAYERS] = {-1, ...};

new DrivingTestTime[MAX_PLAYERS];
new FlyTestTime[MAX_PLAYERS];
new WaterTestTime[MAX_PLAYERS];

enum e_AC_STRUCT_INFO
{
Float:acLastOnFootPos[3],
	acCheckMapTP,
	acMapTPLastClick,
Float:acMapTP[3]
}
new ACInfo[MAX_PLAYERS][e_AC_STRUCT_INFO];

new bool:PlayerUseMask[MAX_PLAYERS];
new MaskTimer[MAX_PLAYERS] = {-1, ...};
new ChosenSkin[MAX_PLAYERS];
new gPlayerLogTries[MAX_PLAYERS];
new player_stats[MAX_PLAYERS];
new edit_stats_ID[MAX_PLAYERS];
new ClothesRound[MAX_PLAYERS];
new SelectCharPlace[MAX_PLAYERS];
new Float:PlayerArmour[MAX_PLAYERS];
new pPressed[MAX_PLAYERS];
new selectcost[MAX_PLAYERS];
new selectmodel[MAX_PLAYERS];
new colors[MAX_PLAYERS][2];
new PlayerLastTick[MAX_PLAYERS];
new Text3D:TaxiText3D[MAX_PLAYERS] = {Text3D:-1, ...};
new Ujahhs[MAX_PLAYERS];
new mass_pass[MAX_PLAYERS][10];

new PlayerText:security_code_TD[MAX_PLAYERS][10] = {PlayerText:-1, ...};
new PlayerText:status_work_TD[MAX_PLAYERS][4] = {PlayerText:-1, ...};

new PlayerText:zz_PTD[MAX_PLAYERS][1] = {PlayerText:-1, ...};
//new PlayerText:enable_greenzone_TD[MAX_PLAYERS][3] = {PlayerText:-1, ...};

//new Text:logo_TD[1];
// new Text:logotype_TD[2];
new Text:enable_animation_TD[2];
new Text:enable_gps_TD[2];
// контейнер обычный
new Text:cont_TD[5];
new PlayerText:cont_PTD[MAX_PLAYERS][2];

new Text:car_showroom_info_TD[5];
new PlayerText:car_showroom_TD[MAX_PLAYERS][2] = {PlayerText:-1, ...};

// hud
new Text:fhud_TD[1];
new PlayerText:fhud_PTD[MAX_PLAYERS][1];

new Text:hunger_background_TD[2];
new PlayerText:hunger_progress_TD[MAX_PLAYERS] = {PlayerText:-1, ...};

// Коробка передач
new Text: mkpp_TD[1];
new PlayerText: mkpp_PTD[MAX_PLAYERS][7];
new PlayerGear[MAX_PLAYERS], PlayerCGear[MAX_PLAYERS] = 0;
// спидометр
new Text:speed_TD[19];
new PlayerText:speed_PTD[MAX_PLAYERS][8];

new objectplayerid;

enum e_ADMIN_INFO
{
	admID,
    admGoto,
	admGethere,
	admSpectate,
	admPlayTime,
	admKicked,
	admSKicked,
	admKickedReason[32],
	admWarned,
	admWarnedReason[32],
	admOffWarned,
	admOffWarnedReason[32],
	admBaned,
	admBanedReason[32],
	admOffBaned,
	admOffBanedReason[32],
	admMuted,
	admMutedReason[32],
	admAnsed,
	admInfoNewPlayer,
	admSmsEars
}
new AdminInfo[MAX_PLAYERS][e_ADMIN_INFO];

enum e_TEMP_INFO
{
    pSpeedhack[2],
	pWorld,
	pInterior,
	pAbletoGun,
	pRaceID,
	hParkID,
	pCarShowroomID,
	pTaxiID,
	pMechID,
	pCarPlayerID,
	bool:pAnimLoad,
	PlayerText:SpecTxt,
	Float:pPos[3],
	pBusID,
	pBusRoute,
	pBusPos,
	pBusPrice,
	Text3D:pBusText,
	pBusSpawnTimer,
	Float:pBusDamage,
	pWork, // 1 - шахта, 2 - лесопилка, 3 - оружейный завод
	pWorkSalary,
	pCarInfoTimer,
	pTruckSpawnTimer,
	pTruckID,
	pTruckWagonID,
	Text3D:pTruckWagonText,
	pTruckWagonTime,
	pTruckWeight,
	pTruckLoadID,
	pSelectPlayer,
	pTargetPlayer,
	pTargetAction,
	pActionPrice,
	pSellDrugsGramm,
	pSellZoneID,
	pSellGunWeapon,
	pSellGunAmmo,
	pSellBizID,
	pChangeBizID,
	pChangeBizID2,
	pSellLicType,
	pMineAntiflood,
	pLessAntiflood,
	pDeathCar,
	pMinerProgress,
	pMinerAmount[3],
	pMinerSalary[3],
	pMinerStatus,
	pLessProgress,
	pLessStatus,
	pArmyJob,
	pLiveTime
}
new pTemp[MAX_PLAYERS][e_TEMP_INFO];

enum e_PLAYER_INFO
{
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
	pID,
	pName[MAX_PLAYER_NAME],
	pPassword[32],
	pSecurityCode,
	pCheckCode,
	pInputCode,
	pMail[64],
	pMailConfirmed,
	pIP[16],
	pLastIP[16],
	pRegIP[16],
	pRegData[20],
	pVhData[20],
	pLevel,
	pCash,
	pBank,
	pAdmin,
	pModel,
	pMemberSkin,
	pMemberWarn,
	pSex,
	pAge,
	pExp,
	pMuted,
	pMutedReason[32],
	pWarn,
	pLicenses,
	pGunSkill[8],
	pLeader,
	pTempLeader,
	pRank,
	pVoennik,
	pMember,
	pTimeHour,
	pNews,
	pPhoneBalance,
	pPhoneNumber,
	pText[5],
	pJail,
	pJailTime,
	pJailReason[32],
	pWanted,
	pWantedWho[MAX_PLAYER_NAME],
	pWantedReason[32],
	Float:pHeal,
	pDrugs,
	pPatron,
	pGunAmount,
	pCrimes,
	pJob,
	pColor,
	pMarried,
	pWhoMarried[MAX_PLAYER_NAME],
	pReferal[MAX_PLAYER_NAME],
	pPayCheck,
	pCharity,
	pVip,
	pVipTime,
	pTime,
	pFightStyle,
	pCredits,
	pTotalCredits,
	pSkin[3],
	pSpawnChange,
	pHunger,
	pSportExp,
	pZakon,
	pCity,
	pRepcar[2],
	pImprove[4],
	pWatch,
	pCiggare,
	pSprunk,
	pAptechka,
	pMusic,
	pMask,
	pTruckSkill,
 	// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
 	cModel,
	cClass,
	Float:cFuel,
	Float:cMileage,
	cColor[2],
	cCost,
	cVehcom[64],
	cVehcoms[14],
	cPaintjob,
	pVehicleKey,
 // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
 	pFurgon, // фургон
 	pFurgRent, // аренда фургона
	pSettings,
	pNumberVehicle[64],
	pRegVehicle,
	pFishki,
	Spectating[2],
	pTimeToLastWarn,
	pFine,
	pFineAmount,
	pFineTime,
	pFineUpgrade,
	pHouse,
	pBiz,
	pSearchServ[32],
	pRobHouse,
	pSetMark,
	pPhoneNumbers[8],
	pFamilyMember,
};
new pInfo[MAX_PLAYERS][e_PLAYER_INFO];
#define MAX_HOUSES (1000)
enum e_HOUSE_INFO
{
	hID,
	Float:hEntr[3],
	Float:hCar[4],
	hOwner[MAX_PLAYER_NAME],
	hClass,
	hPrice,
	hBuyPrice,
	hInt,
	hLock,
	hMIcon,
	hObjectEnter,
	hAreaEnter,
	Text3D:hTextEnter,
	Text3D:hTextExit,
	hDays,
	hHeal,
	bool:hRob,
	hGarage,
	hAutoDoors,
	hSubsidia
};
new HouseInfo[MAX_HOUSES][e_HOUSE_INFO];

#define MAX_CLASS_HOUSES (4)
#define MAX_INT_HOUSES (1)
enum e_HCLASS_INFO
{
	hcName[12],
	hcCountInts
};
new HclassInfo[MAX_CLASS_HOUSES][e_HCLASS_INFO] =
{
	{"Эконом", 1},
	{"Средний", 1},
	{"Высокий", 1},
	{"Элитный", 1}
};

enum e_HINTS_INFO
{
	hiName[24],
	hiInt,
	Float:hiExitX,
	Float:hiExitY,
	Float:hiExitZ,
	Float:hiExitFA
};
new HintsInfo[MAX_CLASS_HOUSES][MAX_INT_HOUSES][e_HINTS_INFO] =
{
	{
		{"Эконом 1", 1, 435.4661,1315.6958,1615.5300}// Инт домов
	},
	{
		{"Средний 1", 2, -376.1473,1026.8245,1712.9200}
	},
	{
		{"Высокий 1", 3, 2162.9363,2821.6768,1716.2400}
	},
	{
	    {"Элитный 1", 4, 426.6328,7.2617,999.7800}// все готово
	}
};
new lastveh;

#define MAX_ATM (50)
enum e_ATM_INFO
{
	aID,
	Float:aX,
	Float:aY,
	Float:aZ,
	Float:arX,
	Float:arY,
	Float:arZ,
};
new ATMInfo[MAX_ATM][e_ATM_INFO], TOTALATM;
new ATM[MAX_ATM];
new Text3D:LABELATM[MAX_ATM] = {Text3D:-1, ...};
#define MAX_FURGON 20
#define MAX_BIZ (200)
enum e_BIZ_INFO
{
	bID,
	Float:bEntr[3],
	Float:bExit[3],
	Float:bMenu[3],
	bOwner[MAX_PLAYER_NAME],
	bPrice,
	bBuyPrice,
	bMoney,
	bDays,
	bType,
	bLic,
	bInt,
	bVirtual,
	bLock,
	bEnter,
	bMIcon,
	bIcon,
	bPickup,
	bAreaEnter,
	bAreaExit,
	Text3D:bTextExit,
	bName[32],
	bProduct,
	bTill,
	bAreaMenu,
	Text3D:bTextMenu,
	bLockTime,
	bMafia,
	bZahvat,
	bHeal,
	bSound,
	bVisitors
};
new BizInfo[MAX_BIZ][e_BIZ_INFO];

#define MAX_ZONE_NAPAD (1)
new OnmZONE[MAX_ZONE_NAPAD][20];
new ZoneOnBattlem[MAX_ZONE_NAPAD];
new ZoneTimerm[MAX_ZONE_NAPAD];
new allowedmfactions[] = {TEAM_YAKUZA,TEAM_LCN,TEAM_RM};
new zons;

enum e_MZ_INFO
{
	mFrakVlad,
	mNapad,
}
new MZInfo[MAX_ZONE_NAPAD][e_MZ_INFO];

new bool:startwar;
new	fuelcheck;

new Text3D:LABELBIZ[MAX_BIZ] = {Text3D:-1, ...};
new BizPay[MAX_BIZ];
new BizPayLastHour[MAX_BIZ];
new BizPayForDay[MAX_BIZ];

#define MAX_ADVERTS (31)
enum e_ADVERT_INFO
{
	aText[128],
	aName[MAX_PLAYER_NAME],
	aPhone,
};
new AdvertInfo[MAX_ADVERTS][3][e_ADVERT_INFO];

#define MAX_FRACTIONS (26)
#define MAX_RANGS (17)
new FracBank[12];
new DrugsBank[MAX_FRACTIONS];

static const stock Fraction_Name[MAX_FRACTIONS][32] = {
	"Нет",
	"Администрация г.Южный",
	"Полиция г.Южного",
	"Полиция пгт.Батырево",
	"ФСБ",
	"Больница г.Южного",
	"Автошкола",
	"Закрыто",//Банды
	"Закрыто",//Банды
	"Закрыто",//Банды
	"Закрыто",//Банды
	"Закрыто",//Банды
	"Армия",
	"Закрыто",
	"Закрыто",
	"Итальянская Мафия",//Итальянская Мафия
	"Yakuza",//Yakuza
	"Русская мафия",//Русская мафия
	"СМИ г.Южный",
	"СМИ пгт.Батырево",
	"Закрыто",
	"Полиция г.Арзамас",// LVPD
	"Больница пгт.Батырево",
	"Больница г.Арзамас",// Больница ЛВ
	"Администрация Облости",
	"Администрация г.Арзамас"// Мэрия лв
};

static const stock Fraction_Rang[MAX_FRACTIONS][MAX_RANGS][32] = {
	{"Нет","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-"},
	{"-","Водитель","Охранник","Начальник охраны","Пресс-секретарь","Секретарь","Адвокат","Юрист","Прокурор","Депутат","Мэр","-","-","-","-","-","-"},
	{"-","Курсант","Офицер","Детектив-специалист","Детектив следователь","Сержант","Лейтенант","Капитан","Заместитель инспектора","Инспектор","Заместитель комиссара","Комиссар полиции","Шериф","-","-","-","-"},
	{"-","Курсант","Офицер","Детектив-специалист","Детектив следователь","Сержант","Лейтенант","Капитан","Заместитель инспектора","Инспектор","Заместитель комиссара","Комиссар полиции","Шериф","-","-","-","-"},
	{"-","Стажёр","Младший агент","Агент ФСБ","Старший агент","Специальный агент","Секретный агент","Агент безопасности","Управляющий агентурой","Глава Академии ФСБ","Заместитель главы отдела DEP","Глава DEP","Заместитель главы CID","Глава CID","Начальник NS","Инспектор","Директор"},
	{"-","Интерн","Фельдшер","Участковый врач","Терапевт","Проктолог","Окулист","Хирург","Заведующий отделением","Заместитель главного врача","Главный врач","-","-","-","-","-","-"},
	{"-","Стажёр","Консультант","Экзаменатор","Младший инструктор","Инструктор","Менеджер","Заместитель директора","Директор","-","-","-","-","-","-","-","-"},
	{"-","Newman","Hustla","Huckster","True","Warrior","Gangsta","O.G","Big Bro","Legend","Daddy","-","-","-","-","-","-"},
	{"-","Baby","Tested","Cracker","Nigga","Big Nigga","Gangster","Defender","Shooter","Star","Big Daddy","-","-","-","-","-","-"},
	{"-","Amigo","Macho","Junior","Ermanno","Bandido","Autoridad","Adjunto","Veterano","Vato Loco","Padre","-","-","-","-","-","-"},
	{"-","Mamarracho","Compinche","Bandito","Vato Loco","Chaval","Forajido","Veterano","Elite","El Orgullo","Padre","-","-","-","-","-","-"},
	{"-","Novato","Amigo","Asistente","Asesino","Latinos","Mejor","Empresa","Aproximado","Diputado","Padre","-","-","-","-","-","-"},
	{"-","Рядовой","Младший сержант","Сержант","Прапорщик","Младший лейтенант","Лейтенант","Старший лейтенант","Капитан","Майор","Подполковник","Полковник","Генерал","-","-","-","-"},
	{"-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-"},
	{"-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-"},
	{"-","Novizio","Associato","Controllato","Razionate","Combatento","Soldato","Capo","Strada Boss","Consigliere","Don","-","-","-","-","-","-"},
	{"-","Вакасю","Томодати","Кедай","Сямэйгасира","Вакагасира","Cо-хонбуте","Камбу","Оядзи","Сайко-Комон","Кумитэ","-","-","-","-","-","-"},
	{"-","Шнырь","Босяк","Браток","Бык","Авторитет","Зам.Бригадира","Бригадир","Смотрящий","Блатной","Вор в законе","-","-","-","-","-","-"},
	{"-","Начинающий работник","Помощник редакции","Светотехник","Репортёр","Оператор","Ведущий","Режиссёр","Редактор","Главный редактор","Директор","-","-","-","-","-","-"},
	{"-","Начинающий работник","Помощник редакции","Светотехник","Репортёр","Оператор","Ведущий","Режиссёр","Редактор","Главный редактор","Директор","-","-","-","-","-","-"},
	{"-","Начинающий работник","Помощник редакции","Светотехник","Репортёр","Оператор","Ведущий","Режиссёр","Редактор","Главный редактор","Директор","-","-","-","-","-","-"},
	{"-","Курсант","Офицер","Детектив-специалист","Детектив следователь","Сержант","Лейтенант","Капитан","Заместитель инспектора","Инспектор","Заместитель комиссара","Комиссар полиции","Шериф","-","-","-","-"},
	{"-","Интерн","Фельдшер","Участковый врач","Терапевт","Проктолог","Окулист","Хирург","Заведующий отделением","Заместитель главного врача","Главный врач","-","-","-","-","-","-"},
	{"-","Интерн","Фельдшер","Участковый врач","Терапевт","Проктолог","Окулист","Хирург","Заведующий отделением","Заместитель главного врача","Главный врач","-","-","-","-","-","-"},
	{"-","Водитель","Охранник","Начальник охраны","Пресс-секретарь","Секретарь","Адвокат","Юрист","Прокурор","Депутат","Мэр","-","-","-","-","-","-"},
	{"-","Водитель","Охранник","Начальник охраны","Пресс-секретарь","Секретарь","Адвокат","Юрист","Прокурор","Депутат","Мэр","-","-","-","-","-","-"}
};

static const stock Number_Fraction_Rang[MAX_FRACTIONS] = {
	0, // None
	10, // Администрация г.Южный - 1
	12, // ППС г.Южного - 2
	12, // ППС пгт.Батырево - 3
	16, // ФСБ - 4
	10, // Больница г.Южного - 5
	8, // Автошкола - 6
	10, // ОПГ Южная - 7
	10, // ОПГ Тамбовская - 8
	10, // Южная братва - 9
	10, // ОПГ Солнцевская - 10
	10, // ОПГ Ореховская - 11
	12, // Армия - 12
	0, // Закрыто - 13
	0, // Закрыто - 14
	10, // Итальянская Мафия - 15
	10, // Yakuza - 16
	10, // Русская мафия - 17
	10, // СМИ г.Южный - 18
	10, // СМИ пгт.Батырево - 19
	10, // Закрыто - 20
	12, // LVPD - 21
	10, // Больница пгт.Батырево - 22
	10, // Больница LV - 23
	10, // Администрация Облости - 24
	10 // Закрыто - 25
};

static const stock Fraction_Pay[MAX_FRACTIONS][17] = {
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{1340,2000,2100,2700,3100,3500,3800,4400,4800,7000,0,0,0,0,0,0}, // Администрация г.Южный
	{980,1100,1690,2200,2370,2700,3000,3330,3700,4000,4250,4500,0,0,0,0}, // ППС г.Южного
	{980,1100,1690,2200,2370,2700,3000,3330,3700,4000,4250,4500,0,0,0,0}, // ППС пгт.Батырево
	{850,1100,1400,1800,2250,2700,3100,3450,3800,4150,4500,4850,5200,5600,6000,6500}, // ФСБ
	{1100,1600,1880,2200,2780,3100,3740,4130,4500,4950,0,0,0,0,0,0}, // Больница г.Южного
	{1100,1600,2200,2780,3100,3740,4500,5000,0,0,0,0,0,0,0,0}, // Автошкола
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, // ОПГ Южная
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, // ОПГ Тамбовская
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, // Южная братва
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, // ОПГ Солнцевская
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, // ОПГ Ореховская
	{1000,1300,1600,1930,2200,2600,2940,3380,3800,4300,4800,5300,0,0,0,0}, // Армия
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, // Свободный слот для организации
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, // Свободный слот для организации
	{1100,1500,1880,2200,2780,3100,3740,4130,4500,4950,0,0,0,0,0,0}, // Итальянская Мафия
	{1100,1500,1880,2200,2780,3100,3740,4130,4500,4950,0,0,0,0,0,0}, // Yakuza
	{1100,1500,1880,2200,2780,3100,3740,4130,4500,4950,0,0,0,0,0,0}, // RM
	{1100,1500,1880,2200,2780,3100,3740,4130,4500,4950,0,0,0,0,0,0}, // СМИ г.Южный
	{1100,1500,1880,2200,2780,3100,3740,4130,4500,4950,0,0,0,0,0,0}, // СМИ пгт.Батырево
	{1100,1500,1880,2200,2780,3100,3740,4130,4500,4950,0,0,0,0,0,0}, // Закрыто
	{980,1100,1690,2200,2370,2700,3000,3330,3700,4000,4250,4500,0,0,0,0}, // LVPD
	{1100,1600,1880,2200,2780,3100,3740,4130,4500,4950,0,0,0,0,0,0}, // Больница пгт.Батырево
	{1100,1600,1880,2200,2780,3100,3740,4130,4500,4950,0,0,0,0,0,0}, // Больница LV
	{1340,2000,2100,2700,3100,3500,3800,4400,4800,7000,0,0,0,0,0,0}, // Администрация Облости
	{1340,2000,2100,2700,3100,3500,3800,4400,4800,7000,0,0,0,0,0,0} // Закрыто
};

static const stock Fraction_Skin[MAX_FRACTIONS][9] = {
	{0,0,0,0,0,0,0,0,0}, // Гражданский
	{17,147,59,187,164,165,141,240,150}, // Администрация г.Южный
    {280,284,282,283,266,285,265,211,0}, // ППС г.Южного
    {280,284,282,283,266,285,265,211,0}, // ППС пгт.Батырево
    {163,164,165,166,211,295,285,286,0}, // ФСБ
    {274,275,276,70,148,150,71,295,0}, // Больница г.Южного
	{11,189,171,172,0,0,0,0,0}, // Автошкола
	{105,106,107,195,269,270,271,0,0}, // ОПГ Южная
	{102,103,104,195,0,0,0,0,0}, // ОПГ Тамбовская
	{173,174,175,226,273,0,0,0,0}, // Южная братва
	{193,114,115,116,292,0,0,0,0}, // ОПГ Солнцевская
	{108,109,110,56,0,0,0,0,0}, // ОПГ Ореховская
	{287,191,61,255,295,0,0,0,0}, // Армия
	{0,0,0,0,0,0,0,0,0}, // Свободный слот для организации
	{0,0,0,0,0,0,0,0,0}, // Свободный слот для организации
	{223,124,127,290,113,117,98,93,0}, // Итальянская Мафия
	{117,118,120,122,123,294,169,263,0}, // Yakuza
	{46,111,112,126,125,272,233,43,0}, // RM
	{187,186,170,188,20,141,150,219,0}, // СМИ г.Южный
	{187,186,170,188,20,141,150,219,0}, // СМИ пгт.Батырево
	{187,186,170,188,20,141,150,219,0}, // Закрыто
	{280,284,282,283,266,285,265,211,0}, // LVPD
	{274,275,276,70,148,150,71,295,0}, // Больница пгт.Батырево
	{274,275,276,70,148,150,71,295,0}, // Больница LV
	{17,59,187,164,165,141,240,150,0}, // Администрация Облости
	{17,59,187,164,165,141,240,150,0} // Закрыто
};

new MZSafeTime[3] = 0;
new FrakCDm;

new CaptureTime;
new CaptureStatus;
new CaptureZone;
new GangTotalGz[5];//rifa,aztec,ballas,grove,vagos

#define MAX_GANGZONES (104)
enum e_GZ_INFO
{
	gID,
Float:gCoords[4],
	gFrak,
	gNapad
}
new GZInfo[MAX_GANGZONES][e_GZ_INFO];
new GangZone[MAX_GANGZONES];

static const stock Float:DerevoPos[][3] = {
	{1796.4838,1423.9191,9.7621},
	{1794.4967,1434.7919,9.7621},
	{1792.4431,1447.4674,9.7621},
	{1783.7811,1457.5940,9.7621},
	{1776.1473,1450.5872,9.7621},
	{1785.4178,1425.5436,9.7621},
	{1779.4392,1435.5266,9.7621},
	{1774.9137,1424.5520,9.7621},
	{1763.2419,1434.6892,9.7621},
	{1774.4490,1407.9274,9.7621}
};

static const stock Float:DrivingTest[][6] = {
	{2176.3599,-2218.8804,21.6139,2192.6235,-2258.1016,20.9569},
	{2192.6235,-2258.1016,20.9569,2242.2134,-2182.5698,21.3435},
	{2242.2134,-2182.5698,21.3435,2250.0210,-2061.3557,21.3893},
	{2250.0210,-2061.3557,21.3893,2292.4944,-1961.9474,21.4030},
	{2292.4944,-1961.9474,21.4030,2293.0625,-1780.3464,21.3883},
	{2293.0625,-1780.3464,21.3883,2350.9097,-1536.5956,23.1332},
	{2350.9097,-1536.5956,23.1332,2542.2366,-1528.6049,23.2573},
	{2542.2366,-1528.6049,23.2573,2735.4250,-1481.8685,23.2116},
	{2735.4250,-1481.8685,23.2116,2785.1252,-1369.1149,11.8010},
	{2785.1252,-1369.1149,11.8010,2730.3914,-1352.3660,9.8216},
	{2730.3914,-1352.3660,9.8216,2718.3059,-1455.7803,22.6559},
	{2718.3059,-1455.7803,22.6559,2641.5073,-1516.0001,23.3408},
	{2641.5073,-1516.0001,23.3408,2601.7258,-1598.6788,23.2212},
	{2601.7258,-1598.6788,23.2212,2587.0559,-1767.0311,21.3903},
	{2587.0559,-1767.0311,21.3903,2587.0220,-2109.0854,21.3878},
	{2587.0220,-2109.0854,21.3878,2517.7959,-2147.8145,21.3903},
	{2517.7959,-2147.8145,21.3903,2349.1765,-2147.6895,21.3882},
	{2349.1765,-2147.6895,21.3882,2257.1309,-2147.6428,21.3892},
	{2257.1309,-2147.6428,21.3892,2226.7712,-2199.5159,21.3410},
	{2226.7712,-2199.5159,21.3410,2187.5393,-2253.7573,20.7879},
	{2187.5393,-2253.7573,20.7879,2178.3909,-2217.9849,21.6173},
	{2178.3909,-2217.9849,21.6173,2186.1130,-2193.7278,21.6199},
	{2186.1130,-2193.7278,21.6199,0.0,0.0,0.0}
};

static const stock Float:FlyTest[][6] = {
	{-2010.7413,-39.4386,95.4837,-2006.9191,180.9614,95.4578},
	{-2006.9191,180.9614,95.4578,-2004.4702,472.4755,95.4234},
	{-2004.4702,472.4755,95.4234,-2117.8350,503.7773,95.4222},
	{-2117.8350,503.7773,95.4222,-2281.6128,509.3513,95.4102},
	{-2281.6128,509.3513,95.4102,-2458.8994,467.2858,95.3948},
	{-2458.8994,467.2858,95.3948,-2539.0950,334.9100,52.3313},
	{-2539.0950,334.9100,52.3313,-2462.2209,203.1778,97.3129},
	{-2462.2209,203.1778,97.3129,-2216.7964,208.8197,61.5710},
	{-2216.7964,208.8197,61.5710,-2154.8650,131.3025,69.0865},
	{-2154.8650,131.3025,69.0865,-2164.0918,-6.3266,69.0949},
	{-2164.0918,-6.3266,69.0949,-2136.0110,-166.9167,69.1069},
	{-2136.0110,-166.9167,69.1069,-2038.3370,-216.1395,35.7256},
	{-2038.3370,-216.1395,35.7256,0.0,0.0,0.0}
};

static const stock Float:WaterTest[][6] = {
	{-2969.5051,570.6226,-1.1616,-2982.6321,664.5944,-1.1298},
	{-2982.6321,664.5944,-1.1298,-2985.9182,841.5399,-0.7251},
	{-2985.9182,841.5399,-0.7251,-2997.0684,1099.2870,-0.4735},
	{-2997.0684,1099.2870,-0.4735,-2944.2852,1245.3586,-0.6197},
	{-2944.2852,1245.3586,-0.6197,-2849.8442,1325.6006,-0.6607},
	{-2849.8442,1325.6006,-0.6607,-2766.9316,1347.0320,-0.9388},
	{-2766.9316,1347.0320,-0.9388,-2752.9666,1445.9756,-1.0134},
	{-2752.9666,1445.9756,-1.0134,-2869.2339,1386.4480,-0.7352},
	{-2869.2339,1386.4480,-0.7352,-2999.1572,1246.1807,-1.2257},
	{-2999.1572,1246.1807,-1.2257,-3029.1658,1103.0569,-0.7395},
	{-3029.1658,1103.0569,-0.7395,-3021.3987,896.7744,-1.1502},
	{-3021.3987,896.7744,-1.1502,-3019.3062,676.8632,-0.8812},
	{-3019.3062,676.8632,-0.8812,-2963.1921,501.1066,-0.7070},
	{-2963.1921,501.1066,-0.7070,0.0,0.0,0.0}
};

#define BUS_ROUTE_COUNT 7 //К-во маршрутов
static const stock Float:gBusCPs[BUS_ROUTE_COUNT][100][3] =
{
	{ //г.Южный - Лесопилка
		{2197.3381,-1906.7941,18.3291}, // г.Южный - Лесопилка 1 (оставновка)
		{2197.3381,-1906.7941,18.3291}, // г.Южный - Лесопилка 1 (оставновка)
		{2112.3726,-1803.0983,18.3327}, // г.Южный - Лесопилка 2
		{2265.4634,-1761.9365,21.3367}, // г.Южный - Лесопилка 3
		{2277.4351,-1911.3596,21.3469}, // г.Южный - Лесопилка 4
		{2226.5208,-2137.2903,21.3235}, // г.Южный - Лесопилка 6
		{2299.2888,-2163.5173,21.3432}, // г.Южный - Лесопилка 7
		{2485.1252,-2162.5024,21.5696}, // г.Южный - Лесопилка 8
		{2598.5596,-2163.5005,21.3242}, // г.Южный - Лесопилка 9
		{2613.2356,-1984.3536,21.3417}, // г.Южный - Лесопилка 10
		{2607.9329,-1542.4602,23.1075}, // г.Южный - Лесопилка 11 (остановка)
		{2607.9329,-1542.4602,23.1075}, // г.Южный - Лесопилка 11 (остановка)
		{2756.8838,-1336.3745,23.0732}, // г.Южный - Лесопилка 12
		{2755.6045,-896.4924,23.3020}, // г.Южный - Лесопилка 13
		{2826.0649,-379.6317,26.0384}, // г.Южный - Лесопилка 14
		{2912.6646,128.8753,15.8017}, // г.Южный - Лесопилка 15
		{2753.1343,942.9813,26.4257}, // г.Южный - Лесопилка 16
		{2637.8569,1238.6411,21.5683}, // г.Южный - Лесопилка 17
		{2663.7720,1588.4529,16.2583}, // г.Южный - Лесопилка 18
		{2753.8459,1878.3530,15.5929}, // г.Южный - Лесопилка 19
		{2640.7334,1897.9160,15.7014}, // г.Южный - Лесопилка 20
		{2285.8640,1909.9263,15.4151}, // г.Южный - Лесопилка 21
		{1985.3439,1907.7974,15.0389}, // г.Южный - Лесопилка 22
		{1961.4940,1752.0153,15.0302}, // г.Южный - Лесопилка 23
		{1965.6384,1514.2568,14.5960}, // г.Южный - Лесопилка 24
		{1829.7891,1456.4063,9.4849}, // г.Южный - Лесопилка 25
		{1849.5305,1470.4204,9.5453}, // г.Южный - Лесопилка 26
		{1875.0730,1336.1169,9.5405}, // г.Южный - Лесопилка 27 (остановка)
		{2185.8267,1350.0978,11.3136}, // г.Южный - Лесопилка 27 (остановка)
		{2537.9436,1383.3763,12.5104}, // г.Южный - Лесопилка 28
		{2668.3457,1158.5463,20.7437}, // г.Южный - Лесопилка 29
		{2822.3440,784.3653,30.5996}, // г.Южный - Лесопилка 30
		{2897.8840,312.1989,15.7341}, // г.Южный - Лесопилка 31 (остановка)
		{2897.8840,312.1989,15.7341}, // г.Южный - Лесопилка 31 (остановка)
		{2809.3445,-373.8814,25.8758}, // г.Южный - Лесопилка 32
		{2738.1294,-921.8657,23.2667}, // г.Южный - Лесопилка 33
		{2739.6548,-1266.1304,23.0732}, // г.Южный - Лесопилка 34
		{2587.2300,-1511.8889,23.0601}, // г.Южный - Лесопилка 35
		{2372.8398,-1514.0057,23.1399}, // г.Южный - Лесопилка 36
		{2276.8186,-1730.0709,21.3267}, // г.Южный - Лесопилка 37
		{2100.7451,-1758.9346,18.4188}, // г.Южный - Лесопилка 38
		{2143.4382,-1905.4564,18.3306}, // г.Южный - Лесопилка 39
		{2220.3179,-1962.4276,18.3251}, // г.Южный - Лесопилка 40 до сюда
		{0.0,0.0,0.0}, // г.Южный - Лесопилка 41
		{0.0,0.0,0.0}, // г.Южный - Лесопилка 42
		{0.0,0.0,0.0}, // г.Южный - Лесопилка 43
		{0.0,0.0,0.0}, // г.Южный - Лесопилка 43
		{0.0,0.0,0.0}, // г.Южный - Лесопилка 44
		{0.0,0.0,0.0}, // г.Южный - Лесопилка 45
		{0.0,0.0,0.0}, // г.Южный - Лесопилка 46
		{0.0,0.0,0.0}, // г.Южный - Лесопилка 47 (Остановка)
		{0.0,0.0,0.0}, // г.Южный - Лесопилка 47 (Остановка)
		{0.0,0.0,0.0}, // г.Южный - Лесопилка 48
		{0.0,0.0,0.0}, // г.Южный - Лесопилка 49
		{0.0,0.0,0.0}, // г.Южный - Лесопилка 50
		{0.0,0.0,0.0}, // г.Южный - Лесопилка 51
		{0.0,0.0,0.0}, // г.Южный - Лесопилка 52
		{0.0,0.0,0.0}, // г.Южный - Лесопилка 53
		{0.0,0.0,0.0}, // г.Южный - Лесопилка 54
		{0.0,0.0,0.0}, // г.Южный - Лесопилка 55
		{0.0,0.0,0.0}, // г.Южный - Лесопилка 56
 		{0.0,0.0,0.0},// 1
		{0.0,0.0,0.0}, // 1
		{0.0,0.0,0.0},// 1
		{0.0,0.0,0.0}, // 1
		{0.0,0.0,0.0}, // 1
		{0.0,0.0,0.0}, // 1
		{0.0,0.0,0.0},// 1
		{0.0,0.0,0.0}, // 1
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0}
	},
	{//Батырево - Шахта
		{1795.4182,2521.0132,15.1805}, // Батырево - Шахта1 (Остановка)
		{1795.4182,2521.0132,15.1805}, // Батырево - Шахта1 (Остановка)
		{1767.8127,2485.1812,15.4797},// Батырево - Шахта2
		{1886.1034,2264.8062,15.4570}, // Батырево - Шахта3
		{1881.3210,2096.5303,15.3632},// Батырево - Шахта4
		{1959.8228,1923.0808,14.9018}, // Батырево - Шахта5
		{1966.1327,1699.9377,15.5039}, // Батырево - Шахта6
		{1998.3917,1583.3235,15.4958}, // Батырево - Шахта7
		{1915.6650,1514.5618,11.0229}, // Батырево - Шахта8
		{1873.3008,1456.5363,9.3429}, // Батырево - Шахта9
		{1924.2078,1321.8160,16.0062}, // Батырево - Шахта10
		{2160.5898,1349.4025,14.1116}, // Батырево - Шахта11
		{2487.2000,1366.1855,11.9926}, // Батырево - Шахта12
		{2625.0710,1225.4913,21.6091}, // Батырево - Шахта13
		{2814.2188,793.7633,30.4059}, // Батырево - Шахта14
		{2896.7153,354.4292,17.6043}, // Батырево - Шахта15
		{2899.9851,-66.4474,24.6750}, // Батырево - Шахта16
		{2742.3589,-601.0855,23.4137}, // Батырево - Шахта17 (Остановка)
		{2742.3589,-601.0855,23.4137}, // Батырево - Шахта17 (Остановка)
		{2738.1899,-1096.5029,23.0664}, // Батырево - Шахта18
		{2681.4231,-1508.6097,23.2867}, // Батырево - Шахта19
		{2498.5266,-1513.4823,23.7563}, // Батырево - Шахта20
		{2276.9688,-1674.3152,21.4635}, // Батырево - Шахта21
		{2277.4727,-1845.3516,21.3386}, // Батырево - Шахта22
		{2227.0156,-2134.3291,21.3222}, // Батырево - Шахта23
		{2292.0261,-2162.6865,21.3315}, // Батырево - Шахта24
		{2508.4565,-2162.6968,21.3504}, // Батырево - Шахта25
		{2612.7859,-2114.8545,21.3340}, // Батырево - Шахта26
		{2612.0349,-1795.9469,21.3331}, // Батырево - Шахта27
		{2607.8936,-1543.2617,23.1054}, // Батырево - Шахта28
		{2757.3306,-1304.2991,23.0732}, // Батырево - Шахта29
		{2753.5393,-732.1943,23.3779}, // Батырево - Шахта30
		{2912.7864,-100.4993,25.1094}, // Батырево - Шахта31
		{2850.6536,765.1359,30.9700}, // Батырево - Шахта32
		{2638.7520,1237.8593,21.5788}, // Батырево - Шахта33
		{2752.8271,1862.2959,15.4810}, // Батырево - Шахта34
		{2740.9390,2442.9751,15.0656}, // Батырево - Шахта35
		{2165.3965,2965.5222,10.6599}, // Батырево - Шахта36
		{1983.3960,2768.3196,14.8057}, // Батырево - Шахта37
		{1749.8967,2522.3433,15.4735}, // Батырево - Шахта38 (Остановка)
		{1749.8967,2522.3433,15.4735}, // Батырево - Шахта38 (Остановка)
		{1803.0669,2510.7615,15.1808}, // Батырево - Шахта39
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0}
	},
	{ //ЖДЛС - Лесопилка
		{1776.7813,-1917.8759,13.5202}, // ЖДЛС - Лесопилка (Остановка) 1
		{1776.7813,-1917.8759,13.5202}, // ЖДЛС - Лесопилка (Остановка) 1
		{1823.0911,-1880.1038,13.4752}, // ЖДЛС - Лесопилка 2
		{1805.8795,-1829.4982,13.5217}, // ЖДЛС - Лесопилка 3
		{1687.7087,-1826.7865,13.5160}, // ЖДЛС - Лесопилка 4
		{1448.8138,-1870.1035,13.5249}, // ЖДЛС - Лесопилка 5
		{1209.2349,-1849.9219,13.5169}, // ЖДЛС - Лесопилка 6
		{1182.0173,-1829.0950,13.5366}, // ЖДЛС - Лесопилка 7
		{1182.1969,-1756.4905,13.5317}, // ЖДЛС - Лесопилка 8 (Остановка)
		{1182.1969,-1756.4905,13.5317}, // ЖДЛС - Лесопилка 8 (Остановка)
		{1167.3923,-1710.1477,13.8179}, // ЖДЛС - Лесопилка 9
		{1035.4100,-1733.3694,13.5162}, // ЖДЛС - Лесопилка 10
		{1002.1927,-1788.2731,14.1639}, // ЖДЛС - Лесопилка 11
		{775.4187,-1765.3109,13.0644}, // ЖДЛС - Лесопилка 12
		{417.4114,-1700.1331,9.5609}, // ЖДЛС - Лесопилка 13
		{188.6583,-1597.4343,14.2254}, // ЖДЛС - Лесопилка 14
		{-27.6635,-1531.8313,2.0823}, // ЖДЛС - Лесопилка 15
		{-245.9230,-1684.8065,2.6154}, // ЖДЛС - Лесопилка 16
		{-273.9576,-1960.5033,28.9560}, // ЖДЛС - Лесопилка 17
		{-349.3678,-2145.1057,42.7902}, // ЖДЛС - Лесопилка 18
		{-503.2957,-2165.4150,55.5248}, // ЖДЛС - Лесопилка 19
		{-713.4629,-2329.6694,34.9578}, // ЖДЛС - Лесопилка 20
		{-817.3828,-2496.1284,83.1130}, // ЖДЛС - Лесопилка 21
		{-1000.5441,-2610.3345,85.0196}, // ЖДЛС - Лесопилка 22
		{-1180.4590,-2484.7080,60.5843}, // ЖДЛС - Лесопилка 23
		{-1120.8417,-2216.5830,32.8700}, // ЖДЛС - Лесопилка 24
		{-975.7934,-1933.2808,80.1345}, // ЖДЛС - Лесопилка 25
		{-1127.3330,-1897.9673,76.0827}, // ЖДЛС - Лесопилка 26
		{-1291.3945,-1703.3804,45.9142}, // ЖДЛС - Лесопилка 27
		{-1579.3430,-1602.7770,37.0467}, // ЖДЛС - Лесопилка 28
		{-1873.0609,-1752.3905,29.3429}, // ЖДЛС - Лесопилка 29
		{-2083.2468,-1999.6305,60.7351}, // ЖДЛС - Лесопилка 30
		{-2237.1257,-2190.5562,37.4333}, // ЖДЛС - Лесопилка 31
		{-2212.9019,-2270.9080,30.6074}, // ЖДЛС - Лесопилка 32
		{-2164.8230,-2326.4441,30.6100}, // ЖДЛС - Лесопилка 33
		{-2184.5427,-2383.6096,30.5998}, // ЖДЛС - Лесопилка 34
		{-2060.1904,-2482.3984,30.6021}, // ЖДЛС - Лесопилка 35 (Остановка)
		{-2060.1904,-2482.3984,30.6021}, // ЖДЛС - Лесопилка 35 (Остановка)
		{-1939.8118,-2587.0947,40.5807}, // ЖДЛС - Лесопилка 36
		{-1874.1445,-2695.7192,54.2257}, // ЖДЛС - Лесопилка 37
		{-1633.4165,-2750.3975,47.0548}, // ЖДЛС - Лесопилка 38
		{-1373.8138,-2934.2446,47.3761}, // ЖДЛС - Лесопилка 39
		{-1063.5720,-2866.1494,67.8522}, // ЖДЛС - Лесопилка 40
		{-791.7946,-2817.0481,54.2318}, // ЖДЛС - Лесопилка 41
		{-468.5135,-2812.1226,47.5949}, // ЖДЛС - Лесопилка 42
		{-95.4316,-2873.7170,39.3302}, // ЖДЛС - Лесопилка 43
		{-2.9827,-2590.0027,39.5176}, // ЖДЛС - Лесопилка 44
		{-305.3248,-2147.0181,28.3992}, // ЖДЛС - Лесопилка 45
		{-269.3496,-1680.4243,14.7729}, // ЖДЛС - Лесопилка 46
		{-5.8584,-1367.0236,10.8918}, // ЖДЛС - Лесопилка 47
		{244.2386,-1197.0698,22.7293}, // ЖДЛС - Лесопилка 48
		{609.9802,-1204.2588,18.3004}, // ЖДЛС - Лесопилка 49
		{624.8306,-1442.9417,14.2323}, // ЖДЛС - Лесопилка 50
		{623.6884,-1703.0912,14.9461}, // ЖДЛС - Лесопилка 51
		{723.5704,-1775.0381,13.9226}, // ЖДЛС - Лесопилка 52
		{1002.7454,-1808.8154,14.1783}, // ЖДЛС - Лесопилка 53
		{1039.8735,-1760.1241,13.5165}, // ЖДЛС - Лесопилка 54
		{1116.0488,-1714.7914,13.5161}, // ЖДЛС - Лесопилка 55
		{1172.8357,-1765.1261,13.5317}, // ЖДЛС - Лесопилка 56 (Остановка)
		{1172.8357,-1765.1261,13.5317}, // ЖДЛС - Лесопилка 56 (Остановка)
		{1183.4707,-1854.9725,13.5327}, // ЖДЛС - Лесопилка 57
		{1359.4237,-1869.6119,13.5184}, // ЖДЛС - Лесопилка 58
		{1605.6855,-1874.5132,13.5161}, // ЖДЛС - Лесопилка 59
		{1692.2557,-1827.9552,13.5161}, // ЖДЛС - Лесопилка 60
		{1777.3918,-1830.6494,13.5160}, // ЖДЛС - Лесопилка 61
		{1819.4630,-1863.6003,13.5460}, // ЖДЛС - Лесопилка 62
		{1802.8612,-1911.9451,13.5298}, // ЖДЛС - Лесопилка 63
		{1791.7020,-1933.2450,13.5645}, // ЖДЛС - Лесопилка 64
		{1777.3794,-1918.5649,13.5206}, // ЖДЛС - Лесопилка 65 ((Остановка))
		{1777.3794,-1918.5649,13.5206}, // ЖДЛС - Лесопилка 65 ((Остановка))
		{1820.2122,-1883.8807,13.5117}, //  68
		{1788.5062,-1828.6121,13.5160}, //  69
		{1687.1033,-1835.3336,13.5162}, //  70
		{1406.2678,-1869.9238,13.5161}, // 71
		{1211.3807,-1849.7664,13.5160}, // 72
		{1181.6051,-1821.0708,13.5343}, //  73
		{1182.0906,-1756.1798,13.5318}, // 74 (Остановка)
		{1182.0906,-1756.1798,13.5318}, // 74
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0}
	},
	{//ЖДСФ - лесопилка
		{-1989.6230,137.1610,27.6366},//0
		{-1989.6230,137.1610,27.6366},//1
		{-2009.9926,187.6313,27.6342},//2
		{-2007.5802,-111.9567,35.8114},//3
		{-2015.9529,-298.0643,35.4896},//4
		{-2023.1084,-362.8741,35.6197},//5
		{-1911.5419,-783.6618,45.0431},//6
		{-1907.5365,-1211.4436,39.5783},//7
		{-1907.5209,-1327.9988,40.1342},//8
		{-1778.8406,-1451.8453,34.9717},//9
		{-1550.9321,-1550.5547,37.8368},//10
		{-1605.1594,-1608.6241,36.3583},//11
		{-1837.3101,-1730.6292,29.2293},//12
		{-2097.9180,-2048.6101,63.7850},//13
		{-2241.5408,-2192.8418,36.5491},//14
		{-2221.4500,-2264.5781,30.5027},//15
		{-2125.5522,-2339.4314,30.5689},//16
		{-2132.1433,-2391.1804,30.5696},//17
		{-2022.5765,-2510.4851,32.5918},//18
		{-2022.5765,-2510.4851,32.5918},//19
		{-2004.6493,-2522.9033,34.1808},//20
		{-2046.8263,-2593.7461,47.8022},//21
		{-2265.4058,-2614.6121,48.1603},//22
		{-2439.5439,-2443.4480,34.1275},//23
		{-2444.7463,-2324.8196,16.7497},//24
		{-2337.2253,-2249.5137,18.6827},//25
		{-2121.8979,-2107.7878,59.8603},//26
		{-2038.2544,-1931.0610,51.7368},//27
		{-1795.5007,-1709.9515,29.7844},//28
		{-1577.4417,-1608.3892,37.0843},//29
		{-1548.0114,-1541.4515,37.8377},//30
		{-1741.0958,-1467.5747,34.5185},//31
		{-1892.7581,-1381.3588,39.9056},//32
		{-1900.4196,-1245.0802,39.5860},//33
		{-1899.1152,-783.3326,45.0417},//34
		{-1887.3467,-526.8510,38.3436},//35
		{-2006.0809,-335.9948,35.5614},//36
		{-2006.8722,-289.3529,35.4237},//37
		{-2003.7047,-45.9768,35.2667},//38
		{-2004.3872,78.1140,27.8968},//39
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0}
	},
	{ //ЖДЛС - Шахта
		{1776.8448,-1919.4426,13.0924}, // ЖДЛС - Шахта1 (Остановка)
		{1776.8448,-1919.4426,13.0924}, // ЖДЛС - Шахта1 (Остановка)
		{1822.3625,-1882.3372,13.0547}, // ЖДЛС - Шахта2
		{1817.1570,-1831.2854,13.1188}, // ЖДЛС - Шахта3
		{1689.9125,-1813.8254,13.0939}, // ЖДЛС - Шахта4
		{1585.5975,-1869.8280,13.0894},// ЖДЛС - Шахта5
		{1376.2078,-1868.9852,13.0878}, // ЖДЛС - Шахта6
		{1184.2206,-1847.8173,13.1116}, // ЖДЛС - Шахта7
		{1182.9491,-1756.3943,13.1035}, // ЖДЛС - Шахта8 (Остановка)
		{1182.9491,-1756.3943,13.1035}, // ЖДЛС - Шахта8 (Остановка)
		{1180.3346,-1712.2457,13.2239}, // ЖДЛС - Шахта9
		{1041.9512,-1708.8708,13.0888}, // ЖДЛС - Шахта10
		{1040.9218,-1552.1365,13.0682}, // ЖДЛС - Шахта11
		{1067.0756,-1408.3281,13.1752}, // ЖДЛС - Шахта12
		{1229.2983,-1408.0990,12.7947}, // ЖДЛС - Шахта13
		{1356.3301,-1400.0593,12.9992}, // ЖДЛС - Шахта14
		{1361.1425,-1262.0195,13.0875}, // ЖДЛС - Шахта15 (Остановка)
		{1361.1425,-1262.0195,13.0875}, // ЖДЛС - Шахта15 (Остановка)
		{1359.8831,-1163.8940,23.4369}, // ЖДЛС - Шахта16
		{1370.6354,-1020.2991,26.2593}, // ЖДЛС - Шахта17
		{1382.3007,-946.6683,33.8925}, // ЖДЛС - Шахта18
		{1455.9047,-964.3948,35.7404}, // ЖДЛС - Шахта19
		{1586.9070,-995.1455,46.9097},// ЖДЛС - Шахта20
		{1719.2100,-868.1733,57.8219}, // ЖДЛС - Шахта21
		{1715.7162,-684.5285,44.7365}, // ЖДЛС - Шахта22
		{1681.9766,-323.9186,44.7411}, // ЖДЛС - Шахта23
		{1619.1564,67.6192,37.0795},// ЖДЛС - Шахта24
		{1721.3551,437.5861,30.6802}, // ЖДЛС - Шахта25
		{1803.3838,730.9601,13.2475}, // ЖДЛС - Шахта26
		{1803.9700,845.4780,10.3572}, // ЖДЛС - Шахта27
		{1699.1459,855.2028,7.8148}, // ЖДЛС - Шахта28
		{1425.0702,865.7005,6.5579}, // ЖДЛС - Шахта29
		{1258.5527,937.7692,13.6339}, // ЖДЛС - Шахта30
		{788.2142,691.0214,11.0959}, // ЖДЛС - Шахта31
		{435.5985,759.8918,5.1454}, // ЖДЛС - Шахта32
		{337.9464,797.5888,8.8280}, // ЖДЛС - Шахта33
		{263.9206,890.9470,22.0550}, // ЖДЛС - Шахта34
		{231.9352,968.7303,27.9000}, // ЖДЛС - Шахта35
		{345.2722,1004.9437,28.1458}, // ЖДЛС - Шахта36
		{689.3033,1094.2236,28.1428}, // ЖДЛС - Шахта37
		{817.2103,1135.0930,28.4005}, // ЖДЛС - Шахта38
		{908.0801,968.0917,10.5257}, // ЖДЛС - Шахта39
		{842.9802,862.7509,12.9423}, // ЖДЛС - Шахта40 (Остановка)
		{842.9802,862.7509,12.9423}, // ЖДЛС - Шахта40 (Остановка)
		{867.1734,864.0007,13.0570}, // ЖДЛС - Шахта41
		{860.9979,1083.0198,25.7705}, // ЖДЛС - Шахта42
		{810.4980,1144.2218,28.0393}, // ЖДЛС - Шахта43
		{283.7534,996.1162,27.9879}, // ЖДЛС - Шахта44
		{200.6313,960.1008,27.6270}, // ЖДЛС - Шахта45
		{104.6613,890.4814,22.0192}, // ЖДЛС - Шахта46
		{-120.4601,824.7437,20.1425}, // ЖДЛС - Шахта47
		{-154.6627,747.1151,22.7573}, // ЖДЛС - Шахта48
		{-296.3378,681.0424,17.8607}, // ЖДЛС - Шахта49
		{-172.4766,648.8998,4.1905}, // ЖДЛС - Шахта50
		{-125.4305,539.6299,6.8769}, // ЖДЛС - Шахта51
		{-66.6404,550.1045,7.4596}, // ЖДЛС - Шахта52
		{43.0555,634.5112,6.7234}, // ЖДЛС - Шахта53
		{264.4996,741.8772,5.8347}, // ЖДЛС - Шахта54
		{604.0840,658.4468,4.5900}, // ЖДЛС - Шахта55
		{997.2169,743.7783,10.4468}, // ЖДЛС - Шахта56
		{1126.1536,811.3823,10.4013}, // ЖДЛС - Шахта57
		{1447.8966,831.2157,6.5256},// ЖДЛС - Шахта58
		{1685.1454,831.3545,7.3576}, // ЖДЛС - Шахта59
		{1782.9213,832.1152,10.3773}, // ЖДЛС - Шахта60
		{1781.0343,742.0358,12.8752}, // ЖДЛС - Шахта61
		{1603.2762,113.2047,37.0338}, // ЖДЛС - Шахта62
		{1654.0430,-91.9589,35.2357}, // ЖДЛС - Шахта63
		{1663.3171,-353.6613,39.8044}, // ЖДЛС - Шахта64
		{1693.3899,-696.7163,46.2074}, // ЖДЛС - Шахта65
		{1650.1263,-821.1495,57.6836}, // ЖДЛС - Шахта66
		{1477.4739,-938.4590,36.0890}, // ЖДЛС - Шахта67
		{1366.6691,-942.8714,33.8929}, // ЖДЛС - Шахта68
		{1344.5718,-1092.5275,23.7357}, // ЖДЛС - Шахта69
		{1339.5663,-1260.9437,13.0871}, // ЖДЛС - Шахта70 (Остановка)
		{1339.5663,-1260.9437,13.0871}, // ЖДЛС - Шахта70 (Остановка)
		{1297.3905,-1546.1930,13.0883}, // ЖДЛС - Шахта71
		{1294.8929,-1618.5354,13.0875}, // ЖДЛС - Шахта72
		{1292.1754,-1709.0282,13.0661}, // ЖДЛС - Шахта73
		{1239.4276,-1709.6578,13.0878}, // ЖДЛС - Шахта74
		{1173.6331,-1716.4595,13.3466}, // ЖДЛС - Шахта75
		{1171.7115,-1764.4214,13.1038}, // ЖДЛС - Шахта76 (Остановка)
		{1171.7115,-1764.4214,13.1038}, // ЖДЛС - Шахта76 (Остановка)
		{1176.6992,-1854.0348,13.1035}, // ЖДЛС - Шахта77
		{1325.9594,-1855.5271,13.0890}, // ЖДЛС - Шахта78
		{1483.8872,-1875.4386,13.0876}, // ЖДЛС - Шахта79
		{1674.1108,-1870.3036,13.0961}, // ЖДЛС - Шахта80
		{1694.8885,-1816.2404,13.0914}, // ЖДЛС - Шахта81
		{1753.9475,-1824.5150,13.0910}, // ЖДЛС - Шахта82
		{1818.6947,-1840.3278,13.1192}, // ЖДЛС - Шахта83
		{1815.1848,-1887.8051,13.1196}, // ЖДЛС - Шахта84
		{1794.8992,-1931.7684,13.0933}, // ЖДЛС - Шахта85
		{1777.5271,-1920.1860,13.5207}, // 1 (остановка)
		{1823.7089,-1878.7721,13.4638}, // 2
		{1807.2979,-1830.6299,13.5189}, // 3
		{1688.3051,-1825.3468,13.5162}, // 4
		{1534.8115,-1869.5276,13.5165}, // 5
		{1343.0153,-1855.7930,13.5146}, // 6
		{1182.9496,-1840.5389,13.5231}, // 7
		{1182.6826,-1756.8252,13.5071}, // 8 (остановка)
		{0.0,0.0,0.0}
	},
	{ //Лос-Сантос - Лас-Вентурас
		{1776.5038,-1919.2225,13.0927}, // Лос-Сантос - Лас-Вентурас 1 (остановка)
		{1776.5038,-1919.2225,13.0927}, // Лос-Сантос - Лас-Вентурас 1 (остановка)
		{1822.7043,-1884.4172,13.0510}, // Лос-Сантос - Лас-Вентурас 2
		{1820.0088,-1832.3939,13.1188}, // Лос-Сантос - Лас-Вентурас 3
		{1688.9160,-1813.1953,13.0896}, // Лос-Сантос - Лас-Вентурас 4
		{1674.3223,-1864.7100,13.0953}, // Лос-Сантос - Лас-Вентурас 5
		{1527.9193,-1870.0388,13.0878}, // Лос-Сантос - Лас-Вентурас 6
		{1365.6949,-1866.5797,13.0876}, // Лос-Сантос - Лас-Вентурас 7
		{1284.6542,-1849.9012,13.0958}, // Лос-Сантос - Лас-Вентурас 8
		{1183.4178,-1846.4871,13.1115}, // Лос-Сантос - Лас-Вентурас 9
		{1183.0885,-1756.5593,13.1040}, // Лос-Сантос - Лас-Вентурас 10 (остановка)
		{1183.0885,-1756.5593,13.1040}, // Лос-Сантос - Лас-Вентурас 10 (остановка)
		{1180.1239,-1712.0103,13.2261}, // Лос-Сантос - Лас-Вентурас 11
		{1153.2351,-1705.0240,13.4861}, // Лос-Сантос - Лас-Вентурас 12
		{1152.1962,-1643.3513,13.4859}, // Лос-Сантос - Лас-Вентурас 13
		{1156.2993,-1575.7365,12.9783}, // Лос-Сантос - Лас-Вентурас 14
		{1196.4204,-1570.4012,13.0875}, // Лос-Сантос - Лас-Вентурас 15
		{1198.3958,-1486.5956,13.0881}, // Лос-Сантос - Лас-Вентурас 16
		{1203.8943,-1408.6526,12.9531}, // Лос-Сантос - Лас-Вентурас 17
		{1268.5753,-1407.7561,12.7189}, // Лос-Сантос - Лас-Вентурас 18
		{1358.5348,-1399.0939,13.0362}, // Лос-Сантос - Лас-Вентурас 19
		{1360.7897,-1262.3496,13.0882}, // Лос-Сантос - Лас-Вентурас 20 (остановка)
		{1360.7897,-1262.3496,13.0882}, // Лос-Сантос - Лас-Вентурас 20 (остановка)
		{1359.9778,-1166.7682,23.4442}, // Лос-Сантос - Лас-Вентурас 21
		{1372.3932,-1001.7177,27.6249}, // Лос-Сантос - Лас-Вентурас 22
		{1386.5630,-949.4502,33.8924}, // Лос-Сантос - Лас-Вентурас 23
		{1460.8571,-966.8511,35.8364}, // Лос-Сантос - Лас-Вентурас 24
		{1568.9692,-995.4601,45.5527}, // Лос-Сантос - Лас-Вентурас 25
		{1698.6699,-915.0711,52.6213}, // Лос-Сантос - Лас-Вентурас 26
		{1708.9983,-803.2190,55.6152}, // Лос-Сантос - Лас-Вентурас 27
		{1719.6057,-634.9354,40.5107}, // Лос-Сантос - Лас-Вентурас 28
		{1701.1398,-432.4627,33.6921}, // Лос-Сантос - Лас-Вентурас 29
		{1677.2057,-140.1816,36.3306}, // Лос-Сантос - Лас-Вентурас 30
		{1635.2816,13.2063,36.3783}, // Лос-Сантос - Лас-Вентурас 31
		{1639.1541,188.1474,32.5107}, // Лос-Сантос - Лас-Вентурас 32
		{1685.0723,338.6041,29.7908}, // Лос-Сантос - Лас-Вентурас 33
		{1771.8380,586.1789,23.0214}, // Лос-Сантос - Лас-Вентурас 34
		{1816.0463,830.4918,10.3732}, // Лос-Сантос - Лас-Вентурас 35
		{2088.2163,831.5184,6.4395}, // Лос-Сантос - Лас-Вентурас 36
		{2371.6389,830.9821,6.4397}, // Лос-Сантос - Лас-Вентурас 37
		{2590.6836,874.8504,6.4399}, // Лос-Сантос - Лас-Вентурас 38
		{2726.8628,1083.5540,6.4445}, // Лос-Сантос - Лас-Вентурас 39
		{2729.4709,1270.4526,6.4398}, // Лос-Сантос - Лас-Вентурас 40
		{2746.6248,1364.1935,6.4200}, // Лос-Сантос - Лас-Вентурас 41
		{2773.3933,1401.9464,8.8599}, // Лос-Сантос - Лас-Вентурас 42
		{2808.9727,1471.9821,10.3801}, // Лос-Сантос - Лас-Вентурас 43
		{2824.9480,1420.9463,10.4164}, // Лос-Сантос - Лас-Вентурас 44
		{2812.5996,1291.6854,10.4722}, // Лос-Сантос - Лас-Вентурас 45 (остановка)
		{2812.5996,1291.6854,10.4722}, // Лос-Сантос - Лас-Вентурас 45 (остановка)
		{2820.8840,1261.1539,10.4635}, // Лос-Сантос - Лас-Вентурас 46
		{2822.2075,1232.3073,10.4945}, // Лос-Сантос - Лас-Вентурас 47
		{2789.9478,1231.6112,10.4687}, // Лос-Сантос - Лас-Вентурас 48
		{2765.4275,1238.8358,10.4549}, // Лос-Сантос - Лас-Вентурас 49
		{2768.7878,1261.9165,10.4547}, // Лос-Сантос - Лас-Вентурас 50
		{2805.4504,1266.3796,10.4548}, // Лос-Сантос - Лас-Вентурас 51
		{2828.9553,1274.3986,10.4757}, // Лос-Сантос - Лас-Вентурас 52
		{2829.7080,1421.3271,10.4154}, // Лос-Сантос - Лас-Вентурас 53
		{2819.7136,1474.9445,10.4156}, // Лос-Сантос - Лас-Вентурас 54
		{2636.1995,1466.6326,10.5235}, // Лос-Сантос - Лас-Вентурас 55
		{2672.8418,1386.9028,7.7646}, // Лос-Сантос - Лас-Вентурас 56
		{2704.9285,1305.7797,6.4388}, // Лос-Сантос - Лас-Вентурас 57
		{2699.6877,1066.7622,6.4393}, // Лос-Сантос - Лас-Вентурас 58
		{2586.0962,900.3224,6.4393}, // Лос-Сантос - Лас-Вентурас 59
		{2276.3093,854.7172,6.4393}, // Лос-Сантос - Лас-Вентурас 60
		{1950.9896,854.9004,6.4391}, // Лос-Сантос - Лас-Вентурас 61
		{1792.7601,844.6833,10.3482}, // Лос-Сантос - Лас-Вентурас 62
		{1772.0967,684.7231,16.1512}, // Лос-Сантос - Лас-Вентурас 63
		{1686.4191,409.6044,30.2729}, // Лос-Сантос - Лас-Вентурас 64
		{1619.6001,183.1976,33.3489}, // Лос-Сантос - Лас-Вентурас 65
		{1634.7943,-29.1850,36.3356}, // Лос-Сантос - Лас-Вентурас 66
		{1656.5427,-250.3943,37.9877}, // Лос-Сантос - Лас-Вентурас 67
		{1699.3239,-535.4088,34.6713}, // Лос-Сантос - Лас-Вентурас 68
		{1658.9634,-807.0378,56.6011}, // Лос-Сантос - Лас-Вентурас 69
		{1524.5527,-926.6038,40.9882}, // Лос-Сантос - Лас-Вентурас 70
		{1364.0179,-948.0099,33.8941}, // Лос-Сантос - Лас-Вентурас 71
		{1351.2870,-1059.6997,26.2398}, // Лос-Сантос - Лас-Вентурас 72
		{1340.4836,-1166.6433,23.4525}, // Лос-Сантос - Лас-Вентурас 73
		{1339.4739,-1260.7753,13.0883}, // Лос-Сантос - Лас-Вентурас 74 (остановка)
		{1339.4739,-1260.7753,13.0883}, // Лос-Сантос - Лас-Вентурас 74 (остановка)
		{1340.3270,-1371.3583,13.1508}, // Лос-Сантос - Лас-Вентурас 75
		{1316.1006,-1502.0886,13.0902}, // Лос-Сантос - Лас-Вентурас 76
		{1295.2646,-1634.1277,13.0889}, // Лос-Сантос - Лас-Вентурас 77
		{1290.9387,-1709.4109,13.0881}, // Лос-Сантос - Лас-Вентурас 78
		{1225.0970,-1709.9557,13.0869}, // Лос-Сантос - Лас-Вентурас 79
		{1173.5781,-1715.2609,13.3388}, // Лос-Сантос - Лас-Вентурас 80
		{1171.7461,-1764.4777,13.1030}, // Лос-Сантос - Лас-Вентурас 81 (остановка)
		{1171.7461,-1764.4777,13.1030}, // Лос-Сантос - Лас-Вентурас 81 (остановка)
		{1175.6263,-1853.4520,13.1034}, // Лос-Сантос - Лас-Вентурас 82
		{1274.6285,-1854.9457,13.0884}, // Лос-Сантос - Лас-Вентурас 83
		{1357.4700,-1868.9951,13.0877}, // Лос-Сантос - Лас-Вентурас 84
		{1492.4701,-1874.6212,13.0877}, // Лос-Сантос - Лас-Вентурас 85
		{1676.9534,-1869.0511,13.0956}, // Лос-Сантос - Лас-Вентурас 86
		{1696.5582,-1815.2705,13.0791}, // Лос-Сантос - Лас-Вентурас 87
		{1766.2700,-1827.9420,13.0878}, // Лос-Сантос - Лас-Вентурас 88
		{1818.0560,-1839.2174,13.1197}, // Лос-Сантос - Лас-Вентурас 89
		{1815.7329,-1887.4873,13.1184}, // Лос-Сантос - Лас-Вентурас 90
		{1801.8699,-1928.3427,13.0946}, // Лос-Сантос - Лас-Вентурас 91
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0}
	},
	{ //Лас-Вентурас - Сан-Фиерро
  		{2812.7317,1290.3420,10.4556}, // Лас-Вентурас - Сан-Фиерро 1 (остановка)
  		{2812.7317,1290.3420,10.4556}, // Лас-Вентурас - Сан-Фиерро 1 (остановка)
		{2817.4294,1264.5730,10.4587}, // Лас-Вентурас - Сан-Фиерро 2
		{2821.8135,1233.8650,10.4892}, // Лас-Вентурас - Сан-Фиерро 3
		{2765.5059,1236.6038,10.4539}, // Лас-Вентурас - Сан-Фиерро 4
		{2768.8745,1263.1997,10.4552}, // Лас-Вентурас - Сан-Фиерро 5
		{2828.6636,1271.3475,10.4751}, // Лас-Вентурас - Сан-Фиерро 6
		{2829.8699,1391.8571,10.4532}, // Лас-Вентурас - Сан-Фиерро 7
		{2823.2783,1473.7526,10.4157}, // Лас-Вентурас - Сан-Фиерро 8
		{2694.9683,1475.3755,12.9783}, // Лас-Вентурас - Сан-Фиерро 9
		{2635.3806,1469.4004,10.6391}, // Лас-Вентурас - Сан-Фиерро 10
		{2693.7988,1353.4515,6.4043}, // Лас-Вентурас - Сан-Фиерро 11
		{2688.7842,1027.3798,6.4393}, // Лас-Вентурас - Сан-Фиерро 12
		{2454.4441,855.2928,6.4393}, // Лас-Вентурас - Сан-Фиерро 13
		{2096.4954,854.5741,6.4398}, // Лас-Вентурас - Сан-Фиерро 14
		{1757.3904,855.3539,9.7218}, // Лас-Вентурас - Сан-Фиерро 15
		{1421.7186,867.2498,6.5353}, // Лас-Вентурас - Сан-Фиерро 16
		{1224.5837,923.2635,12.8432}, // Лас-Вентурас - Сан-Фиерро 17
		{1001.0116,771.6628,10.4164}, // Лас-Вентурас - Сан-Фиерро 18
		{541.3409,704.8391,2.9228}, // Лас-Вентурас - Сан-Фиерро 19
		{-61.7662,613.6731,12.6445}, // Лас-Вентурас - Сан-Фиерро 20
		{-580.6382,640.9887,16.4289}, // Лас-Вентурас - Сан-Фиерро 21
		{-835.8328,871.9933,22.7793}, // Лас-Вентурас - Сан-Фиерро 22
		{-875.3596,1132.7866,26.9799}, // Лас-Вентурас - Сан-Фиерро 23
		{-908.1291,1312.9530,36.8645}, // Лас-Вентурас - Сан-Фиерро 24
		{-1090.0986,1189.9083,38.5068}, // Лас-Вентурас - Сан-Фиерро 25
		{-1284.3383,963.5771,44.8928}, // Лас-Вентурас - Сан-Фиерро 26
		{-1711.7250,520.4026,38.0307}, // Лас-Вентурас - Сан-Фиерро 27
		{-1837.6465,404.0361,16.7177}, // Лас-Вентурас - Сан-Фиерро 28
		{-1865.6388,415.5676,16.7130}, // Лас-Вентурас - Сан-Фиерро 29
		{-1905.6976,345.2606,28.6196}, // Лас-Вентурас - Сан-Фиерро 30
		{-2007.5696,339.8310,34.7137}, // Лас-Вентурас - Сан-Фиерро 31
		{-2005.5663,188.9827,27.2440}, // Лас-Вентурас - Сан-Фиерро 32
		{-1993.9064,145.4836,27.2438}, // Лас-Вентурас - Сан-Фиерро 33 (остановка)
		{-1993.9064,145.4836,27.2438}, // Лас-Вентурас - Сан-Фиерро 33 (остановка)
		{-2004.5931,119.1012,27.2441}, // Лас-Вентурас - Сан-Фиерро 34
		{-2003.6384,212.5868,27.2440}, // Лас-Вентурас - Сан-Фиерро 35
		{-1995.4796,341.0876,34.7198}, // Лас-Вентурас - Сан-Фиерро 36
		{-1929.0382,340.2989,31.4403}, // Лас-Вентурас - Сан-Фиерро 37
		{-1856.1478,408.9593,16.7127}, // Лас-Вентурас - Сан-Фиерро 38
		{-1803.7743,369.4596,16.7404}, // Лас-Вентурас - Сан-Фиерро 39
		{-1712.3391,471.2867,37.9514}, // Лас-Вентурас - Сан-Фиерро 40
		{-1567.7360,634.1462,42.6658}, // Лас-Вентурас - Сан-Фиерро 41
		{-1068.7438,1164.9001,38.1948}, // Лас-Вентурас - Сан-Фиерро 42
		{-933.9167,1025.3954,22.3261}, // Лас-Вентурас - Сан-Фиерро 43
		{-821.1859,731.7181,18.3946}, // Лас-Вентурас - Сан-Фиерро 44
		{-501.3637,582.6606,16.4628}, // Лас-Вентурас - Сан-Фиерро 45
		{301.4298,750.5359,5.8341}, // Лас-Вентурас - Сан-Фиерро 46
		{923.8293,716.3475,10.4152}, // Лас-Вентурас - Сан-Фиерро 47
		{1118.3512,808.9678,10.3970}, // Лас-Вентурас - Сан-Фиерро 48
		{1441.7465,831.4680,6.5246}, // Лас-Вентурас - Сан-Фиерро 49
		{1856.8552,831.2884,9.0865}, // Лас-Вентурас - Сан-Фиерро 50
		{2459.4290,831.3911,6.4388}, // Лас-Вентурас - Сан-Фиерро 51
		{2729.2969,1145.3718,6.4391}, // Лас-Вентурас - Сан-Фиерро 52
		{2740.8633,1358.7421,6.3863}, // Лас-Вентурас - Сан-Фиерро 53
		{2805.8755,1471.1604,10.4554}, // Лас-Вентурас - Сан-Фиерро 54
		{2824.7107,1398.8701,10.4433}, // Лас-Вентурас - Сан-Фиерро 55
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0},
		{0.0,0.0,0.0}
	}
};
new gBusCount = 0;

new gTruckLoadTurn[4][10];
new gTruckLoadPrice[4] = {2,2,0,2};
new gTruckUnloadPrice[4] = {250,250,0,250}; //За 1 центнер (100 кг)
new Text3D:gTruckLoadTurnText[4] = {Text3D:-1, ...};

static const stock MaxPassengers[27] =
{
	0x10331113, 0x11311131, 0x11331313, 0x80133301,
	0x1381F110, 0x10311103, 0x10001F10, 0x11113311,
	0x13113311, 0x31101100, 0x30001301, 0x11031311,
	0x11111331, 0x10013111, 0x01131100, 0x11111110,
	0x11100031, 0x11130221, 0x33113311, 0x11111101,
	0x33101133, 0x101001F0, 0x03133111, 0xFF11113F,
	0x13330111, 0xFF131111, 0x0000FF3F
};

new TotalObject = 0;
stock CreateObjectEx(modelid, Float:X, Float:Y, Float:Z, Float:rX, Float:rY, Float:rZ, Float:DrawDistance = 0.0)
{
    TotalObject ++;
    Streamer_SetVisibleItems(STREAMER_TYPE_OBJECT,MAX_OBJECTS-TotalObject);
	return CreateObject(modelid, X,  Y,  Z,  rX, rY,  rZ, DrawDistance);
}
stock DestroyObjectEx(objectid)
{
	TotalObject --;
    Streamer_SetVisibleItems(STREAMER_TYPE_OBJECT,MAX_OBJECTS-TotalObject);
	return DestroyObject(objectid);
}
stock DestroyDynamicObjectEx(objectid)
{
	return DestroyDynamicObject(objectid);
}
#define CreateObject CreateObjectEx
#define DestroyObject DestroyObjectEx
#define DestroyDynamicObject DestroyDynamicObjectEx

static const stock WeaponNames[][32] = {
	{"Unarmed (Fist)"}, // 0
	{"Brass Knuckles"}, // 1
	{"Golf Club"}, // 2
	{"Night Stick"}, // 3
	{"Knife"}, // 4
	{"Baseball Bat"}, // 5
	{"Shovel"}, // 6
	{"Pool Cue"}, // 7
	{"Katana"}, // 8
	{"Chainsaw"}, // 9
	{"Purple Dildo"}, // 10
	{"Big White Vibrator"}, // 11
	{"Medium White Vibrator"}, // 12
	{"Small White Vibrator"}, // 13
	{"Flowers"}, // 14
	{"Cane"}, // 15
	{"Grenade"}, // 16
	{"Teargas"}, // 17
	{"Molotov"}, // 18
	{" "}, // 19
	{" "}, // 20
	{" "}, // 21
	{"Colt 45"}, // 22
	{"Silenced Pistol"}, // 23
	{"Desert Eagle"}, // 24
	{"Normal Shotgun"}, // 25
	{"Sawnoff Shotgun"}, // 26
	{"Combat Shotgun"}, // 27
	{"UZI"}, // 28
	{"MP5"}, // 29
	{"AK47"}, // 30
	{"M4"}, // 31
	{"Tec9"}, // 32
	{"Country Rifle"}, // 33
	{"Sniper Rifle"}, // 34
	{"Rocket Launcher"}, // 35
	{"Heat-Seeking Rocket Launcher"}, // 36
	{"Flamethrower"}, // 37
	{"Minigun"}, // 38
	{"Satchel Charge"}, // 39
	{"Detonator"}, // 40
	{"Spray Can"}, // 41
	{"Fire Extinguisher"}, // 42
	{"Camera"}, // 43
	{"Night Vision Goggles"}, // 44
	{"Infrared Vision Goggles"}, // 45
	{"Parachute"}, // 46
	{"Fake Pistol"} // 47
};

new bool:PlayerTied[MAX_PLAYERS];

static const stock carsBike[8][2] = {
	{468, 56000},
	{586, 72000},
	{471, 94000},
	{463, 98000},
	{581, 123000},
	{461, 140000},
	{521, 162000},
	{522, 1800000}
};

static const stock carsA[16][2] = {
    {602, 280000},
    {603, 395000},
    {587, 525000},
    {560, 590000},
    {565, 642000},
    {558, 650000},
    {559, 659000},
    {429, 730000},
    {506, 760000},
	{480, 795000},
    {477, 810000},
    {402, 850000},
    {541, 1250000},
	{415, 1800000},
	{451, 2100000},
	{411, 3000000}
};

static const stock carsB[31][2] = {
    {401, 64000},
    {526, 82000},
    {475, 82000},
    {436, 84000},
    {527, 86200},
    {405, 102000},
    {500, 115000},
    {585, 116000},
    {546, 121000},
	{421, 124000},
	{547, 125000},
	{550, 126000},
	{426, 130000},
	{555, 130000},
	{540, 134000},
	{445, 140000},
	{536, 152000},
	{458, 158000},
	{400, 165000},
	{566, 167000},
	{489, 176000},
	{567, 190000},
	{579, 214000},
	{496, 220000},
	{576, 230000},
	{533, 240000},
	{412, 240000},
	{580, 250000},
	{534, 280000},
	{562, 305000},
	{589, 350000}
};

static const stock carsC[19][2] = {
    {410, 12000},
    {542, 15000},
    {545, 15200},
	{543, 16000},
	{474, 17300},
	{600, 19200},
	{404, 19500},
	{549, 20100},
	{517, 23000},
	{422, 23700},
	{466, 24000},
	{535, 24100},
	{439, 26000},
	{467, 31500},
	{492, 35000},
	{529, 37600},
	{575, 41000},
	{516, 43000},
	{479, 47500}
};

static const stock JoinRegF[8] = {
	12, 13, 40, 41, 64, 90, 131, 298
};

static const stock JoinRegM[8] = {
    3, 2, 79, 134, 50, 78, 14, 230
};

static const stock JoinShopF[][2] = {
	{31, 2000},
	{13, 2000},
	{198, 2000},
	{38, 2500},
	{201, 2500},
	{39, 6000},
	{207, 10000},
	{131, 15000},
	{195, 15000},
	{9, 20000},
	{10, 20000},
	{238, 20000},
	{151, 50000},
	{152, 90000},
	{69, 90000},
	{192, 100000},
	{237, 140000},
	{193, 150000},
	{190, 160000},
	{226, 180000},
	{169, 250000},
	{90, 280000},
	{214, 300000},
	{55, 300000},
	{56, 300000},
	{141, 300000},
	{211, 300000},
	{11, 300000},
	{150, 350000},
	{263, 350000},
	{12, 350000},
	{172, 400000},
	{194, 400000},
	{91,  450000},
	{216, 450000},
    {219, 450000},
    {296, 450000},
    {93, 500000},
    {233, 550000}
};

static const stock JoinShopM[][2] = {
    {3, 2000},
    {1, 2500},
    {8, 8000},
    {15, 10000},
    {32, 15000},
	{72, 20000},
	{96, 20000},
	{161, 20000},
	{21, 20000},
	{6, 25000},
	{24, 30000},
	{66, 30000},
	{176, 30000},
	{222, 30000},
	{67, 35000},
	{2, 40000},
	{202, 40000},
	{206, 40000},
	{7, 40000},
	{180, 40000},
	{94, 50000},
	{128, 50000},
	{133, 50000},
	{34, 50000},
	{14, 50000},
	{241, 50000},
	{112, 50000},
	{242, 55000},
	{4, 80000},
	{5, 80000},
	{35, 80000},
	{36, 80000},
	{183, 90000},
	{33, 100000},
	{48, 100000},
	{73, 100000},
	{247, 100000},
	{254, 100000},
	{297, 100000},
	{100, 150000},
	{181, 150000},
	{208, 150000},
	{28, 180000},
	{23, 200000},
	{156, 200000},
	{22, 200000},
	{57, 200000},
	{170, 200000},
	{59, 250000},
	{185, 250000},
	{117, 250000},
	{228, 250000},
    {17, 250000},
	{269, 300000},
	{290, 300000},
	{250, 300000},
	{111, 300000},
	{187, 300000},
	{98, 350000},
	{188, 350000},
	{249, 350000},
	{20, 350000},
	{171, 350000},
	{126, 400000},
	{240, 400000},
	{19, 400000},
	{189, 400000},
	{223, 400000},
	{296, 450000},
	{293, 500000},
	{46, 500000},
	{186, 500000},
	{294, 500000}
};

Float:GetPlayerDistanceFromPointEx(playerid, Float:x, Float:y, Float:z)
{
	new NaN_String[5];
	new Float:Distance = GetPlayerDistanceFromPoint(playerid, x, y, z);
	format(NaN_String, 5, "%f", Distance);
	if(!strcmp(NaN_String, "NaN")) return 3000.0;
	return Distance;
}
#define GetPlayerDistanceFromPoint GetPlayerDistanceFromPointEx

Float:GetVehicleDistanceFromPointEx(vehicleid, Float:x, Float:y, Float:z)
{
	new NaN_String[5];
	new Float:Distance = GetVehicleDistanceFromPoint(vehicleid, x, y, z);
	format(NaN_String, 5, "%f", Distance);
	if(!strcmp(NaN_String, "NaN")) return 3000.0;
	return Distance;
}
#define GetVehicleDistanceFromPoint GetVehicleDistanceFromPointEx

stock SetPlayerSkinEx(playerid, skinid)
{
	ClearAnimations(playerid, 1);
	if(skinid > 311) skinid = 311;
	else if(skinid < 0) skinid = 0;
	SetPlayerSkin(playerid, skinid);
}
#define	SetPlayerSkin SetPlayerSkinEx

stock SetPlayerPosEx(playerid, Float:x, Float:y, Float:z, time = 0)
{
    SetPlayerPos(playerid, x, y, z);
	if(time == 1)
	{
	    TogglePlayerControllable(playerid, false);
		SetTimerEx("@PlayerToggle", (GetPlayerPing(playerid)>100?(3500):(2000)), false, "d", playerid);
	}
	else if(time > 1)
	{
	    TogglePlayerControllable(playerid, false);
		SetTimerEx("@PlayerToggle", time, false, "d", playerid);
	}
	return 1;
}
#define	SetPlayerPos SetPlayerPosEx

stock SetPlayerInteriorEx(playerid, interior)
{
	SetPlayerInterior(playerid, interior);
	pTemp[playerid][pInterior] = interior;
	return 1;
}
#define	SetPlayerInterior SetPlayerInteriorEx

stock SetPlayerVirtualWorldEx(playerid, world)
{
	SetPlayerVirtualWorld(playerid, world);
	pTemp[playerid][pWorld] = world;
	return 1;
}
#define SetPlayerVirtualWorld SetPlayerVirtualWorldEx

stock SpawnPlayerEx(playerid)
{
    if(IsPlayerInAnyVehicle(playerid))
	{
	    new Float:X,Float:Y,Float:Z;
	    GetPlayerPos(playerid,X,Y,Z);
		SetPlayerPos(playerid,X,Y,Z);
	    SetTimerEx("PlayerSpawn", 50, false, "i", playerid);
	    return 1;
	}
 	SpawnPlayer(playerid);
	return 1;
}

stock PutPlayerInVehicleEx(playerid, vehicleid, seatid)
{
    SetPVarInt(playerid,"VehicleEnters",vehicleid);
    PutPlayerInVehicle(playerid, vehicleid, seatid);
    return 1;
}
#define PutPlayerInVehicle PutPlayerInVehicleEx

stock SetVehiclePosEx(vehicleid, Float:x, Float:y, Float:z)
{
    if(vehicleid < 1 || vehicleid > MAX_VEHICLES) return 0;
    SetVehiclePos(vehicleid, x, y, z);
	VehicleInfo[vehicleid][vX] = x;
	VehicleInfo[vehicleid][vY] = y;
	VehicleInfo[vehicleid][vZ] = z;
	return 1;
}
#define	SetVehiclePos SetVehiclePosEx

stock SetVehicleZAngleEx(vehicleid, Float:angle)
{
	SetVehicleZAngle(vehicleid, angle);
	VehicleInfo[vehicleid][vA] = angle;
	return 1;
}
#define SetVehicleZAngle SetVehicleZAngleEx
stock VehCreate(playerid, modelid, Float:X, Float:Y,Float:Z,Float:A,Color1, Color2, SpawnDelay){
	new vehid = VehCreate(playerid, modelid, X, Y, Z, A, Color1, Color2, SpawnDelay);
	if(vehid == 65535) return false;

	VehicleInfo[vehid][vX] = X;
	VehicleInfo[vehid][vY] = Z;
	VehicleInfo[vehid][vZ] = Y;
	VehicleInfo[vehid][vZ] = A;
	switch(modelid){
	    case 430, 446, 452, 453, 454, 472, 473, 484, 493: return false;
	    case 581, 522, 461, 521, 523, 463, 468, 471, 586: VehicleState[vehid] = VEHICLE_STATE_BIKE;
	    case 462, 448: VehicleState[vehid] = VEHICLE_STATE_MOPED;
	    default: VehicleState[vehid] = VEHICLE_STATE_CAR;
	}
	return vehid;
}
stock CreateVehicleEx(modelid, Float: X, Float: Y, Float: Z, Float: A, Color1, Color2, SpawnDelay) {
	new vehicleid = CreateVehicle(modelid, X, Y, Z, A, Color1, Color2, SpawnDelay);
	if(vehicleid == 65535) return 0;
	VehicleInfo[vehicleid][vX] = X;
	VehicleInfo[vehicleid][vY] = Z;
	VehicleInfo[vehicleid][vZ] = Y;
	VehicleInfo[vehicleid][vZ] = A;
	switch(modelid)
	{
		case 430, 446, 452, 453, 454, 472, 473, 484, 493: VehicleState[vehicleid] = VEHICLE_STATE_BOAT;
		case 417, 425, 447, 460, 469, 476, 487, 488, 497, 511, 512, 513, 519, 520, 548, 553,
		563, 577, 592, 593:  VehicleState[vehicleid] = VEHICLE_STATE_PLANE;
		case 581, 522, 461, 521, 523, 463, 468, 471, 586: VehicleState[vehicleid] = VEHICLE_STATE_BIKE;
		case 509, 481, 510: VehicleState[vehicleid] = VEHICLE_STATE_VELIK;
		case 462, 448: VehicleState[vehicleid] = VEHICLE_STATE_MOPED;
		case 538, 537: VehicleState[vehicleid] = VEHICLE_STATE_TRAIN;
		default: VehicleState[vehicleid] = VEHICLE_STATE_CAR;
	}
	return vehicleid;
}
#define	CreateVehicle CreateVehicleEx

stock AddStaticVehicleExEx(modelid, Float: X, Float: Y, Float: Z, Float: A, Color1, Color2, SpawnDelay)
{
	new vehicleid = AddStaticVehicleEx(modelid, X, Y, Z, A, Color1, Color2, SpawnDelay);
	if(vehicleid == 65535) return 0;
	VehicleInfo[vehicleid][vX] = X;
	VehicleInfo[vehicleid][vY] = Z;
	VehicleInfo[vehicleid][vZ] = Y;
	VehicleInfo[vehicleid][vZ] = A;
	switch(modelid)
	{
		case 430, 446, 452, 453, 454, 472, 473, 484, 493: VehicleState[vehicleid] = VEHICLE_STATE_BOAT;
		case 417, 425, 447, 460, 469, 476, 487, 488, 497, 511, 512, 513, 519, 520, 548, 553,
		563, 577, 592, 593:  VehicleState[vehicleid] = VEHICLE_STATE_PLANE;
		case 581, 522, 461, 521, 523, 463, 468, 471, 586: VehicleState[vehicleid] = VEHICLE_STATE_BIKE;
		case 509, 481, 510: VehicleState[vehicleid] = VEHICLE_STATE_VELIK;
		case 462, 448: VehicleState[vehicleid] = VEHICLE_STATE_MOPED;
		case 538, 537: VehicleState[vehicleid] = VEHICLE_STATE_TRAIN;
		default: VehicleState[vehicleid] = VEHICLE_STATE_CAR;
	}
	return vehicleid;
}
#define	AddStaticVehicleEx AddStaticVehicleExEx

stock AddStaticVehicleExx(modelid, Float: X, Float: Y, Float: Z, Float: A, Color1, Color2)
{
	new vehicleid = AddStaticVehicle(modelid, X, Y, Z, A, Color1, Color2);
	if(vehicleid == 65535) return 0;
	VehicleInfo[vehicleid][vX] = X;
	VehicleInfo[vehicleid][vY] = Z;
	VehicleInfo[vehicleid][vZ] = Y;
	VehicleInfo[vehicleid][vZ] = A;
	switch(modelid)
	{
		case 430, 446, 452, 453, 454, 472, 473, 484, 493: VehicleState[vehicleid] = VEHICLE_STATE_BOAT;
		case 417, 425, 447, 460, 469, 476, 487, 488, 497, 511, 512, 513, 519, 520, 548, 553,
		563, 577, 592, 593:  VehicleState[vehicleid] = VEHICLE_STATE_PLANE;
		case 581, 522, 461, 521, 523, 463, 468, 471, 586: VehicleState[vehicleid] = VEHICLE_STATE_BIKE;
		case 509, 481, 510: VehicleState[vehicleid] = VEHICLE_STATE_VELIK;
		case 462, 448: VehicleState[vehicleid] = VEHICLE_STATE_MOPED;
		case 538, 537: VehicleState[vehicleid] = VEHICLE_STATE_TRAIN;
		default: VehicleState[vehicleid] = VEHICLE_STATE_CAR;
	}
	return vehicleid;
}
#define	AddStaticVehicle AddStaticVehicleExx

stock DestroyVehicleEx(vehicleid)
{
	if(!IsValidVehicle(vehicleid)) return 0;
	DestroyVehicle(vehicleid);
	if(LightsObject[vehicleid][0]!=-1 || LightsObject[vehicleid][1]!=-1
	|| (LightsObject[vehicleid][2]!=-1 && LightsObject[vehicleid][3]!=-1))
  	{
		if(LightsObject[vehicleid][0]!=-1) DestroyDynamicObject(LightsObject[vehicleid][0]), LightsObject[vehicleid][0]=-1;
        if(LightsObject[vehicleid][1]!=-1) DestroyDynamicObject(LightsObject[vehicleid][1]), LightsObject[vehicleid][1]=-1;
        if(LightsObject[vehicleid][2]!=-1) DestroyDynamicObject(LightsObject[vehicleid][2]), LightsObject[vehicleid][2]=-1;
        if(LightsObject[vehicleid][3]!=-1) DestroyDynamicObject(LightsObject[vehicleid][3]), LightsObject[vehicleid][3]=-1;
		SignalTick[vehicleid][0] = 0;
		SignalTick[vehicleid][1] = -1;
		Signal[vehicleid] = 0;
	}
	return 1;
}
#define	DestroyVehicle DestroyVehicleEx

stock SetVehicleParamsExEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective)
{
    if(vehicleid < 1 || vehicleid > MAX_VEHICLES) return 0;
	VehicleInfo[vehicleid][vEngine] = (engine) ? (true) : (false);
	VehicleInfo[vehicleid][vLights] = (lights) ? (true) : (false);
	SetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	return 1;
}
#define	SetVehicleParamsEx SetVehicleParamsExEx

stock ShowPlayerDialogEx(playerid, dialogid, style, caption[], info[], button1[], button2[])
{
	ShowPlayerDialog(playerid, dialogid, style, caption, info, button1, button2);
	SetPVarInt(playerid, "USEDIALOGID", dialogid);
	return 1;
}
#define	ShowPlayerDialog ShowPlayerDialogEx

stock CreateDynamicPickupExEx(model,type,Float:X,Float:Y,Float:Z,Virtualworld=-1,Interior=-1)
{
    new pickupid = CreateDynamicPickup(model,type,X,Y,Z,Virtualworld,Interior);
    Pickups[pickupid][0] = X;
    Pickups[pickupid][1] = Y;
    Pickups[pickupid][2] = Z;
    return pickupid;
}
#define	CreateDynamicPickup CreateDynamicPickupExEx

stock Float:GetDistanceBetweenPoints(Float:X, Float:Y, Float:Z, Float:PointX, Float:PointY, Float:PointZ)
{
	new Float:Distance;
	Distance = floatabs(floatsub(X, PointX)) + floatabs(floatsub(Y, PointY)) + floatabs(floatsub(Z, PointZ));
	return Distance;
}

stock Float:fmax(Float:v1, Float:v2)
{
	return v1 > v2?v1:v2;
}

stock Float:fmin(Float:v1, Float:v2)
{
	return v1 < v2?v1:v2;
}

stock Float:jfloatsub(Float:value1, Float:value2)
{
	new Float:num1 = fmax(value1, value2);
	new Float:num2 = fmin(value1, value2);
	new Float:diff = (num1 - num2);
	if(diff > 300.0) diff = ( 360.0 - num1 ) + num2;
	return diff;
}

stock Float:PointToPoint2D(Float:x1,Float:y1,Float:x2,Float:y2)
{
	return floatsqroot(floatadd(floatpower(x2-x1,2),floatpower(y2-y1,2)));
}

stock Float:PointToPoint3D(Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2)
{
	return floatsqroot(floatadd(floatadd(floatpower(x2-x1,2),floatpower(y2-y1,2)),floatpower(z2-z1,2)));
}

stock Float:GetPlayerDistanceToPlayer(playerid, targetid)
{
    new Float:x, Float:y, Float:z, Float:x2, Float:y2, Float:z2;
    GetPlayerPos(playerid, x, y, z);
    GetPlayerPos(targetid, x2, y2, z2);
    return PointToPoint2D(x, y, x2, y2);
}

@DisconnectPlayer(playerid);
@DisconnectPlayer(playerid)
{
    if(IsPlayerConnected(playerid))
	{
	    ResetPlayerWeaponsEx(playerid);
	    DeletePVar(playerid, "kicked");
		Kick(playerid);
	}
}

stock KickEx(playerid)
{
    SetPVarInt(playerid, "kicked", 1);
    new fix_ping = GetPlayerPing(playerid) + 25;
    return SetTimerEx("@DisconnectPlayer", fix_ping>1000?1000:fix_ping, 0, "d", playerid);
}
#define	Kick KickEx

stock GetTeamID(playerid)
{
	if(pInfo[playerid][pMember] > 0) return pInfo[playerid][pMember];
	if(pInfo[playerid][pLeader] > 0) return pInfo[playerid][pLeader];
	if(pInfo[playerid][pTempLeader] > 0) return pInfo[playerid][pTempLeader];
	return 0;
}

stock SetPlayerColorEx(playerid, color)
{
	if(!pInfo[playerid][pTempLeader])
	{
    	pInfo[playerid][pColor] = color;
    	SetPlayerColor(playerid, color);
	}
	else
	{
	    pInfo[playerid][pColor] = NONE_COLOR;
    	SetPlayerColor(playerid, NONE_COLOR);
	}
    return 1;
}

stock SetPlayerNameEx(playerid, const name[])
{
    if(pInfo[playerid][pHouse] != 0)
	{
	    new i = pInfo[playerid][pHouse];
		if(GetString(HouseInfo[i][hOwner], GetName(playerid)))
		{
		    strmid(HouseInfo[i][hOwner], name, 0, strlen(name));
			MysqlUpdateHouseStr(i, "hOwner", HouseInfo[i][hOwner]);
		}
	}
	if(pInfo[playerid][pBiz] != 0)
	{
	    new i = pInfo[playerid][pBiz];
		if(GetString(BizInfo[i][bOwner], GetName(playerid)))
		{
		    strmid(BizInfo[i][bOwner], name, 0, strlen(name));
			MysqlUpdateBizStr(i, "owner", BizInfo[i][bOwner]);
			UpdateBizStats(i);
		}
	}
	mysql_query_string[0] = EOS;
	format(mysql_query_string, 200, "UPDATE "T_ACCOUNTS" SET name = '%s' WHERE name = '%s'", name, GetName(playerid));
	mysql_tquery(dbHandle, mysql_query_string, "", "");
	if(pInfo[playerid][pAdmin])
	{
	    mysql_query_string[0] = EOS;
		format(mysql_query_string, 200, "UPDATE "T_ADMIN" SET name = '%s' WHERE name = '%s'", name, GetName(playerid));
		mysql_tquery(dbHandle, mysql_query_string, "", "");
	}
	mysql_query_string[0] = EOS;
	format(mysql_query_string, 200, "INSERT INTO "T_HISTORYNAME" (idacca,Name) VALUE (%d, '%s')", pInfo[playerid][pID], GetName(playerid));
	mysql_tquery(dbHandle, mysql_query_string, "", "");

	#if MYSQL_R41_2 == true

	if(strlen(IsValidPassport(playerid)))

	#else

	if(IsValidPassport(playerid))

	#endif
	{
	    mysql_query_string[0] = EOS;
    	format(mysql_query_string, sizeof(mysql_query_string), "UPDATE "T_PASSPORTS" SET Name = '%s' WHERE Name = '%s'", name, GetName(playerid));
    	mysql_tquery(dbHandle, mysql_query_string, "", "");
	}

    SetPlayerName(playerid, name);
	return strmid(GetName(playerid), name, 0, strlen(name));
}

stock SaveAcc()
{
 	foreach(new i : Player)
	{
		if(!gPlayerLogged[i]) continue;
		SaveAccount(i);
	}
	return 1;
}
stock Float:GetDistancePlayer(player1, player2)
{
    new Float:coord[3][2];
    GetPlayerPos(player1,coord[0][0],coord[1][0],coord[2][0]);
    GetPlayerPos(player2,coord[0][1],coord[1][1],coord[2][1]);
    return floatsqroot(floatpower(floatabs(floatsub(coord[0][1],coord[0][0])),2)
    +floatpower(floatabs(floatsub(coord[1][1],coord[1][0])),2)
    +floatpower(floatabs(floatsub(coord[2][1],coord[2][0])),2));
}
stock ATMList(playerid)
	return ShowPlayerDialog(playerid, dATM+8, 2, "{FFCC00}Банкомат", "\
		1. Баланс счета\n\
		2. Пополнить счёт\n\
		3. Снять со счета\n\
		4. Пополнить мобильный счет\n\
		5. Благотворительность", "Далее", "Выход");

stock BankList(playerid)
	return ShowPlayerDialog(playerid, dATM+3, 2, "{FFCC00}Банк", "\
		1. Банковские счета\n\
		2. Открыть доп. банковский счёт\n\
		3. Недвижимость", "Далее", "Выход");

@CheckRentCar(playerid);
@CheckRentCar(playerid)
{
	if(GetPlayerState(playerid) != 2) return 1;
	new vehicleid = GetPVarInt(playerid,"VehicleEnters");
	if(pTemp[playerid][pTaxiID] == vehicleid || pTemp[playerid][pMechID] == vehicleid) return 1;
	else RemovePlayerFromVehicle(playerid);
	return 1;
}

@DrugEffectGone(playerid);
@DrugEffectGone(playerid)
{
	new hour, minute;
	gettime(hour, minute);
	SetPlayerTime(playerid, hour, minute);
	SetPlayerWeather(playerid, 2);
	SetPlayerDrunkLevel(playerid, 0);
	return 1;
}

public OnPlayerTakeDamage(playerid, issuerid, Float: amount, weaponid)
{
    if(!IsPlayerConnected(playerid)) return 0;
	if(!IsPlayerConnected(issuerid)) return 0;
	if(issuerid != INVALID_PLAYER_ID)
	{
	    if(IsACop(issuerid))
		{
		    new string[128];
		    switch(weaponid)
		    {
		        case 3:
		        {
		            if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(issuerid, COLOR_GREY, "Человек в машине!");
					if(GetPVarInt(playerid, "Tazer") > 0 || pCuff[playerid][pCuffee] == playerid) return SendClientMessage(issuerid, COLOR_GREY, "Игрок уже оглушен / в наручниках");
					format(string, sizeof(string), "%s оглушил Вас на 15 секунд", GetName(issuerid));
					SendClientMessage(playerid, COLOR_BLUE, string);
					format(string, sizeof(string), "Вы оглушили %s на 15 секунд", GetName(playerid));
					SendClientMessage(issuerid, COLOR_BLUE, string);
					format(string, sizeof(string), "оглушил%s дубинкой %s", (pInfo[issuerid][pSex]==1)?(""):("а"), GetName(playerid));
					MeAction(issuerid, string);
					TazerTime[playerid] = 15;
					ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 0, 1, 1, 1, 0, 1);
					TogglePlayerControllable(playerid, 0);
					SetPVarInt(playerid, "Tazer", 1);
		        }
		        case 23:
		        {
		            if(GetPVarInt(issuerid, "TazerGun") != 1) return 1;
					if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(issuerid, COLOR_GREY, "Человек в машине!");
					if(GetPVarInt(playerid, "Tazer") > 0 || pCuff[playerid][pCuffee] == playerid) return SendClientMessage(issuerid, COLOR_GREY, "Игрок уже оглушен / в наручниках");
					format(string, sizeof(string), "%s обездвижил Вас электрошокером на 15 секунд", GetName(issuerid));
					SendClientMessage(playerid, COLOR_BLUE, string);
					format(string, sizeof(string), "Вы обездвижили электрошокером %s на 15 секунд", GetName(playerid));
					SendClientMessage(issuerid, COLOR_BLUE, string);
					format(string, sizeof(string), "обездвижил%s %s электрошокером", (pInfo[issuerid][pSex]==1)?(""):("а"), GetName(playerid));
					MeAction(issuerid, string);
					TazerTime[playerid] = 15;
					ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 0, 1, 1, 1, 0, 1);
					TogglePlayerControllable(playerid, 0);
					SetPVarInt(playerid, "Tazer", 1);
		        }
		    }
		}
	}
    return 1;
}

public OnPlayerGiveDamage(playerid, damagedid, Float:amount, weaponid)
{
    if(playerid != INVALID_PLAYER_ID && (weaponid >= 0 && weaponid <= 49)) AmountDamageUron[playerid][weaponid] = amount;
	return 1;
}

public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ)
{
    if(!IsPlayerConnected(playerid)) return 0;
    if(GetPVarInt(playerid, "AFK_Time") > 1) return 0;
    if(weaponid == 38) return 0;
	if(hittype < 0 || hittype > 4) return 0;
    // Для античита на крашер пулями
    if(hittype == BULLET_HIT_TYPE_PLAYER && (BadFloat(fX) || BadFloat(fY) || BadFloat(fZ)))
	{
		ToCheat(playerid, 9154);
		return 0;
	}
	// Крашер 2
	if(weaponid > 47 && hittype == 0 && fX == 0.0000 && hitid == 0 && fY == 0.0000 && fZ == 0.0000)
	{
		ToCheat(playerid, 9155);
		return 0;
	}
	if((hittype == BULLET_HIT_TYPE_NONE) && GetPlayerDistanceFromPoint(playerid, fX, fY, fZ) > 300.0 && (fX != 0.0 && fY != 0.0 && fZ != 0.0)) return 0;
	if((hittype == BULLET_HIT_TYPE_PLAYER && ! IsPlayerConnected(hitid)) || (hittype == BULLET_HIT_TYPE_VEHICLE && !IsValidVehicle(hitid)) || (hittype == BULLET_HIT_TYPE_OBJECT && !IsValidObject(hitid)) || (hittype == BULLET_HIT_TYPE_PLAYER_OBJECT && !IsValidPlayerObject(playerid, hitid))) return 0;
	if(!IsACop(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER || !IsACop(playerid) && GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) return 0;
	if(weaponid == 38) return 0;
    // Для античита на рапид
	if(weaponid != 31 && weaponid != 30 && weaponid != 29 && weaponid != 20 && weaponid != 32 && weaponid != 28)
	{
		if((gettime() - WeaponTime[playerid]) < 1) RapidFire[playerid]++;
		else RapidFire[playerid] = 0;
		if(RapidFire[playerid] > 10)
		{
			return ToCheat(playerid, 4123);
		}
	}
	WeaponTime[playerid] = gettime();
	// Прокачка навыков стрельбы
	new slot = GetWeaponSlot(weaponid);
	new weapon, ammo;
	GetPlayerWeaponData(playerid, slot, weapon, ammo);
	iNewPlayerAmmo[playerid] = ammo;
	iNewPlayerWeapon[playerid] = weapon;
	// Если патронов меньше, а оружие тоже, переходим к выдачи очков для навыка
	if(iNewPlayerAmmo[playerid] < iPlayerAmmo[playerid] && iNewPlayerWeapon[playerid] == iPlayerWeapon[playerid])
	{
		OnPlayerGiveWeaponSkill(playerid, weapon);
	}
	iPlayerAmmo[playerid] = iNewPlayerAmmo[playerid];
	iPlayerWeapon[playerid] = iNewPlayerWeapon[playerid];
	// Крашер 3
	new Float:kLibPos[3];
	GetPlayerPos(playerid,kLibPos[0],kLibPos[1],kLibPos[2]);
	if(kLibPos[2]>50000 || kLibPos[2]<-50000)
	{
		ToCheat(playerid, 18);
		return 0;
	}
	// Остальное
	if(hittype != BULLET_HIT_TYPE_PLAYER) return 1;
	if(GetPVarInt(hitid, "AFK_Time") > 1) return 0;
	if(IsPlayerStreamedIn(hitid, playerid) && IsPlayerStreamedIn(playerid, hitid))
	{
  		if(!IsACop(playerid) && !IsAArmy(playerid) && !IsAMayor(playerid) && !gAdminLogged[playerid])
		{
			for(new i; i < sizeof(AreaInfo[arGreenZone]); i++)
			{
				if(IsPlayerInDynamicArea(hitid, AreaInfo[arGreenZone][i]))
		        {
				 	SetPlayerArmedWeapon(playerid, 0);
				 	return 0;
			    }
			}
		}
		GetPlayerArmour(hitid, PlayerArmour[hitid]);
		GetPlayerHealth(hitid, pInfo[hitid][pHeal]);
		if(PlayerArmour[hitid] - AmountDamageUron[playerid][weaponid] < 1.0)
		{
			if(pInfo[hitid][pHeal] - AmountDamageUron[playerid][weaponid] < 1.0)
			{
				AttackHit(hitid, playerid, weaponid);
				return 0;
			}
		}
	}
    return 1;
}
stock ArmourSet(playerid, percent) return SetArmour(playerid, percent);
stock AttackHit(playerid, attackerid, weaponid)
{
	gKilled[playerid] = 1;
	SetHealth(playerid,0.0);
	@OnPlayerSyncDeath(playerid, attackerid, weaponid);
    return 1;
}

stock GetWeaponSlot(weaponid)
{
     new slot;
     switch(weaponid)
     {
     	case 0, 1: slot = 0;
      	case 2..9: slot = 1;
       	case 22..24: slot = 2;
        case 25..27: slot = 3;
        case 28, 29, 32: slot = 4;
        case 30, 31: slot = 5;
        case 33, 34: slot = 6;
        case 35..38: slot = 7;
        case 16..18, 39: slot = 8;
        case 41..43: slot = 9;
        case 10..15: slot = 10;
        case 44..46: slot = 11;
        case 40: slot = 12;
        default: slot = -1;
     }
     return slot;
}

public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
    if(source) return SKick(playerid, 7645);
	return 1;
}

@PlayerToggle(playerid);
@PlayerToggle(playerid)
{
	TogglePlayerControllable(playerid, true);
	ClearAnimations(playerid);
	return 1;
}

@CloseGate(gateid, playerid);
@CloseGate(gateid, playerid)
{
	switch(gateid)
	{
	    case 0:
	    {
	        opengate[playerid][0] = false;
	        MoveDynamicObject(Gate[4],285.6441,1817.2820,18.3479,3.0,0.0000,0.0000,270.0000);
			MoveDynamicObject(Gate[5],285.6448,1825.2371,18.3538,3.0,0.0000,0.0000,270.1800);
	    }
	    case 1:
	    {
	        opengate[playerid][1] = false;
            MoveDynamicObject(Gate[6],131.0000000,1940.5000000,18.7000000,3.0,0.0000,0.0000,0.0000);
			MoveDynamicObject(Gate[7],138.8999900,1940.5000000,18.7000000,3.0,0.0000,0.0000,0.0000);
	    }
	    case 2:
		{
		    opengate[playerid][2] = false;
			MoveDynamicObject(Gate[0],-1701.43395996,687.69000244,24.65999794-0.004,0.004,0.00000000,90.00000000,270.00000000);
		}
	    case 3:
		{
		    opengate[playerid][3] = false;
			MoveDynamicObject(Gate[1],-1572.18994141,658.70001221,6.89099789-0.004,0.004,0.00000000,90.00000000,90.00000000);
		}
	    case 4:
		{
		    opengate[playerid][4] = false;
			MoveDynamicObject(Gate[2],1544.69006348,-1630.90002441,13.13999939-0.004,0.004,0.00000000,90.00000000,90.00000000);
		}
	    case 5:
		{
		    opengate[playerid][5] = false;
			MoveDynamicObject(Gate[3],2238.19995117,2450.29980469,10.65000057-0.004,0.004,0.00000000,90.00000000,90.00000000);
		}
	    case 6:
		{
		    opengate[playerid][6] = false;
			MoveDynamicObject(Gate[8],-1526.37366,481.38431,6.90630-0.004,0.004,0.00000,-90.00000,0.00000);
		}
	    case 7:
		{
		    opengate[playerid][7] = false;
			MoveDynamicObject(Gate[9],1558.0261,-1572.6226,13.7400,3.0,0.00000000,0.00000000,178.4990);
		}
		case 8:
		{
		    opengate[playerid][8] = false;
		    MoveDynamicObject(Gate[10],-2436.8125,495.46875,29.6797-0.004,0.004,0.00,90.00,24.999);
		}
		case 9:
		{
		    opengate[playerid][9] = false;
		    MoveDynamicObject(Gate[11],-1037.111,-587.939,31.663-0.004,0.004,0.00,-89.50,0.00);
		}
	}
}

@MaskOff(playerid);
@MaskOff(playerid)
{
    if(PlayerUseMask[playerid])
	{
		SetPlayerColorEx(playerid,TeamColors[GetTeamID(playerid)]);
		PlayerUseMask[playerid] = false;
		pInfo[playerid][pMask]--;
		MysqlUpdatePlayerInt(playerid, "mask", pInfo[playerid][pMask]);
		SetPlayerChatBubble(playerid, "снимает маску", COLOR_PURPLE, 13.0, 10000);
		GameTextForPlayer(playerid, "~y~INVISABLE OFF", 800, 4);
		PlayerPlaySound(playerid, 21001, 0.0, 0.0, 0.0);
	}
	return 1;
}

@RaceGonka();
@RaceGonka()
{
	new string[200];
	RaceTime --;
	if(EndingKartRound == false)
	{
		format(string, sizeof(string), "Начало гонок через:\n{EAD86A}%s\n{FFFFFF}Участников:\n{3399FF}%i\n{FFFFFF}Призовой фонд:\n{63BD4E}%i$", Converts(RaceTime), GonkaPlayers, GonkaPriz);
		UpdateDynamic3DTextLabelText(Race3dtext, 0xFFFFFFFF, string);
	}
	if(RaceTimerStEnd == true) RaceTimerEnd --;
	if(RaceTimerEnd <= 0)
	{
		if(RaceTimerStEnd == true)
		{
			EndingKartRound = true;
			GonkaPlayers = 0;
			StartGonka = RaceTimerStEnd = false;
			UpdateDynamic3DTextLabelText(Race3dtext, 0xFFFFFFFF, "Список победителей:\n{FFCC00}/winlist");
			winners = NumberCar = 0;
			SendClientMessageToAll(COLOR_GREN, "Гонки завершены. Посмотреть список победителей можно на месте регистрации.");
   			foreach(new i : Player)
			{
				RaceCP[i] = 0;
				DisablePlayerCheckpoint(i);
				if(GetPVarInt(i, "PlayerGonka"))
				{
				    if(IsPlayerInVehicle(i, pTemp[i][pRaceID]))
				    {
				    	if(pTemp[i][pRaceID] != INVALID_VEHICLE_ID)
						{
							DestroyVehicle(pTemp[i][pRaceID]);
				    		pTemp[i][pRaceID] = INVALID_VEHICLE_ID;
	    				}
			    	}
					DeletePVar(i, "PlayerGonka");
					DisablePlayerRaceCheckpoint(i);
					SetPlayerInterior(i, 0);
					SetPlayerPos(i, 1795.5133,2040.0596,15.8694, 1);
					SetPlayerFacingAngle(i, 4.1259);
					SetPlayerVirtualWorld(i, 0);
				}
			}
			KillTimer(RaceTimer);
		}
	}
	if(RaceTimerSt == true)
	{
		RaceTimerEnd --;
		OtsChet --;
  		foreach(new i : Player)
		{
		    if(GetPVarInt(i, "PlayerGonka"))
			{
				format(string,sizeof(string), "%i", OtsChet);
				GameTextForPlayer(i, string, 1000, 3);
				PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0);
			}
		}
		if(OtsChet <= 0)
		{
			for(new h = 0; h < sizeof(Gonshiki); h++) Gonshiki[h] = 1001;
   			foreach(new i : Player)
			{
				if(GetPVarInt(i, "PlayerGonka"))
				{
					RaceCP[i] = 10;
					GameTextForPlayer(i, "~r~GO! GO! GO!", 5000, 4);
					PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
					GonkaSchet[i] ++;
					SetPlayerRaceCheckpoint(i, 0, GonkaCPOINT[0][0], GonkaCPOINT[0][1], GonkaCPOINT[0][2], GonkaCPOINT[1][0], GonkaCPOINT[1][1], GonkaCPOINT[1][2], 6.0);
					TogglePlayerControllable(i, 1);
					SetPVarInt(i, "PlayerGonka", 1);
					new engine, lights, alarm, doors, bonnet, boot, objective;
					GetVehicleParamsEx(GetPVarInt(i,"VehicleEnters"), engine, lights, alarm, doors, bonnet, boot, objective);
					SetVehicleParamsEx(GetPVarInt(i,"VehicleEnters"), true, lights, alarm, doors, bonnet, boot, objective);
				}
			}
			format(string, sizeof(string), "Гонки стартовали. Призовой фонд: {FFFFFF}%i$", GonkaPriz);
			SendClientMessageToAll(COLOR_GREN, string);
			EndingKartRound = RaceTimerStEnd = true;
			RaceText = " ";
			RaceTimerSt = false;
			UpdateDynamic3DTextLabelText(Race3dtext, 0xFFFFFFFF, "Список победителей:\n{FFCC00}/winlist");
		}
	}
	if(RaceTime == 300)
	{
	    SendClientMessageToAll(COLOR_YELLOW, "Уважаемые игроки, через 5 минут начнутся гонки.");
		SendClientMessageToAll(COLOR_YELLOW, "Место регистрации: {FFFFFF}/gps - Развлечения{EAD86A}. Максимальное количество участников: {FFFFFF}9");
		EndingKartRound = false;
		RaceText = " ";
  		foreach(new i : Player)
		{
		    if(pTemp[i][pRaceID] != INVALID_VEHICLE_ID) pTemp[i][pRaceID] = INVALID_VEHICLE_ID;
			if(GetPVarInt(i,"PlayerGonka"))
			{
			    format(string, sizeof(string), "Ваш регистрационный гоночный номер: %i", NumberMesto[i]);
				SendClientMessage(i, COLOR_BLUE, string);
			}
		}
	}
	if(RaceTime == 0)
	{
		EndingKartRound = false;
		if(GonkaPlayers < 0)
		{
			SendClientMessageToAll(COLOR_GREN, "Гонки отменены из-за недобора участников!");
			EndingKartRound = true;
			StartGonka = false;
			RaceText = " ";
   			UpdateDynamic3DTextLabelText(Race3dtext, 0xFFFFFFFF, "Список победителей:\n{FFCC00}/winlist");
			GonkaPlayers = NumberCar = 0;
   			foreach(new i : Player)
			{
				if(GetPVarInt(i, "PlayerGonka"))
				{
				    format(string, sizeof(string), "Вам вернули внесённые вами деньги в размере %i$", GonkaStavka[i]);
				    SendClientMessage(i, COLOR_GREEN, string);
				    GonkaPriz -= GonkaStavka[i];
					TransferMoney(-1, i, GonkaStavka[i], "Возврат за не участие в гонках", 1);
					GonkaStavka[i] = RaceCP[i] = GonkaSchet[i] = 0;
					DeletePVar(i, "PlayerGonka");
				}
			}
			for(new h = 0; h < sizeof(Gonshiki); h++) Gonshiki[h] = 1001;
			KillTimer(RaceTimer);
			return 1;
		}
  		foreach(new i : Player)
		{
			if(GetPVarInt(i, "PlayerGonka"))
			{
			    NumberCar++;
				pTemp[i][pRaceID] = CreateVehicle(RaceModelCar[NumberCar], RaceSpawns[NumberCar][0], RaceSpawns[NumberCar][1], RaceSpawns[NumberCar][2], RaceSpawns[NumberCar][3], -1, -1, -1);
				SetPlayerVirtualWorld(i, 1);
				SetVehicleVirtualWorld(pTemp[i][pRaceID], 1);
				ToggleLock(pTemp[i][pRaceID], 1);
				PutPlayerInVehicle(i, pTemp[i][pRaceID], 0);
				VehicleInfo[pTemp[i][pRaceID]][vFuel] = 100.0;
				TogglePlayerControllable(i, 0);
				GonkaPlayers = 0;
				RaceTimerSt = true;
				GameTextForPlayer(i, "3", 1000, 3);
				TogglePlayerControllable(i, 0);
				SetPlayerInterior(i, 0);
				EndingKartRound = true;
				RaceTimerEnd = 600;
				OtsChet = 3;
				RaceText = " ";
				UpdateDynamic3DTextLabelText(Race3dtext, 0xFFFFFFFF, "Список победителей:\n{FFCC00}/winlist");
			}
		}
	}
	return 1;
}

@GrandTimer();
@GrandTimer()
{
	for(new i; i < 6; i++) if(gGunWorkTime[i]) gGunWorkTime[i]--;

	WHDataUpdate();

	GangZoneCheck();

	BizWarCheck();

	if(CaptureTime > 0)
	{
	    new stringText[30];
		CaptureTime--;
		Convert(CaptureTime, stringText);
		TextDrawSetString(panel_capture_TD[2], stringText);
		GangZoneFlashForAll(GangZone[CaptureZone],TeamColors[GZInfo[CaptureZone][gNapad]]);
	}

	PlayerTimer();

	if(FrakCD > 0 && CaptureStatus == 0) FrakCD--;
	if(FrakCDm > 0 && startwar == false) FrakCDm--;

	new string[128];
	for(new f = 0; f < 3; f++)
	{
		if(MZSafeTime[f]>0)
		{
			MZSafeTime[f] --;
			if(MZSafeTime[f] == 200 || MZSafeTime[f] == 400 || MZSafeTime[f] == 600 || MZSafeTime[f] == 800)
			{
				format(string,sizeof(string),"У вас осталось %d секунд. Место встречи: Заброшенный аэропорт",MZSafeTime[f]);
				SendFMes(MZInfo[f][mNapad],COLOR_RED,string);
				for(new h = 0; h < MAX_BIZ; h++)
				{
					if(BizInfo[h][bZahvat] == 1) SendFMes(BizInfo[h][bMafia],COLOR_RED,string);
				}
			}
		}
	}

	fuelcheck++;
	if(fuelcheck == 30)
	{
		fuelcheck = 0;
        for(new i = 1, j = MAX_VEHICLES; i <= j; i++)
		{
			if(GetVehicleModel(i) == 0 || i == INVALID_VEHICLE_ID || IsAPlane(i) || IsABoat(i) || IsAVel(i)) continue;
			if(GetEngineStat(i) == 1 && VehicleInfo[i][vFuel] > 0.0)
			{
				VehicleInfo[i][vFuel] -= 1.0;
				if(VehicleInfo[i][vFuel] <= 0.0)
				{
				    VehicleInfo[i][vFuel] = 0.0;
					new engine, lights, alarm, doors, bonnet, boot, objective;
					GetVehicleParamsEx(i, engine, lights, alarm, doors, bonnet, boot, objective);
					SetVehicleParamsEx(i, false, lights, alarm, doors, bonnet, boot, objective);
				}
			}
		}
	}

	gGosNewsTime++;
	if(gGosNewsTime == 300)
	{
	    gGosNewsTime = 0;
	    gGosNewsCount = 0;
	}

	new h,m,s;
	gettime(h,m,s);
    if((h == 0 || h == 3 || h == 6 || h == 9 || h == 12 || h == 15 || h == 18 || h == 21) && m == 10)
	{
		if(StartGonka == false)
		{
			SendClientMessageToAll(COLOR_YELLOW, "Уважаемые игроки, через 10 минут начнутся гонки.");
			SendClientMessageToAll(COLOR_YELLOW, "Место регистрации: {FFFFFF}/gps - Развлечения{EAD86A}. Максимальное количество участников: {FFFFFF}9");
			RaceText = " ";
			EndingKartRound = false;
			KillTimer(RaceTimer);
			RaceTime = 600;
			RaceTimer = SetTimer("@RaceGonka", 1000, true);
			RaceTimerStEnd = false;
			GonkaPriz = 0;
			StartGonka = true;
		}
	}

	if((m == 20 || m == 40) && s == 00)
	{
		switch(random(3))
		{
	    	case 0: SendClientMessageToAll(COLOR_GREN, "Ваш верный путеводитель по серверу: {FF9900}/menu");
			case 1: SendClientMessageToAll(COLOR_GREN, "Сайт нашего сервера: {FF9900}"SERVER_WEBSITE" {97B96C}/ Донат: {FF9900}"PAGE_WEBSITE_DONATE"");
			case 2: SendClientMessageToAll(COLOR_GREN, "Подробнее об обновлениях и новостях сервера: {FF9900}"SERVER_GROUP"");
			case 3: SendClientMessageToAll(COLOR_GREN, "Заметили игрока использующего читы? Сообщите администрации {FF9900}/menu");
		}
	}

	if(h == 00 && m == 00 && s == 00)
	{
	    if(getDayEx()==2)
		{
		    for(new i;i<MAX_PLAYERS;i++)
			{
			    if(gPlayerLogged[i] || !pInfo[i][pAdmin]) continue;
			    AdminInfo[i][admPlayTime] = 0;
			}
			mysql_tquery(dbHandle, "UPDATE "T_ADMIN" SET online_monday = 0, online_tuesday = 0, online_wednesday = 0, online_thursday = 0, online_friday = 0, online_saturday = 0, online_sunday = 0", "", "");
		}
	    for(new houseid = 1; houseid <= TOTALHOUSE; houseid++)
		{
			if(HouseInfo[houseid][hDays] > 1 && !GetString(HouseInfo[houseid][hOwner], "None"))
			{
				HouseInfo[houseid][hDays]--;
				MysqlUpdateHouseInt(houseid, "hDays", HouseInfo[houseid][hDays]);
			}
			else
			{
			    ClearPlayerHouse(houseid, 1);
			}
		}
		for(new bizid = 1; bizid <= TOTALBIZ; bizid++)
		{
            if(BizInfo[bizid][bDays] > 1 && !GetString(BizInfo[bizid][bOwner], "None"))
			{
				BizInfo[bizid][bDays]--;
				MysqlUpdateBizInt(bizid, "bDays", BizInfo[bizid][bDays]);
			}
			else
			{
			    ClearPlayerBiz(bizid, 1);
			}
		}
	}

	for(new i2;i2<4;i2++)
	{
		new text[256];
		strcat(text,"{FF9900}  Очередь на загрузку:{FFFFFF}");
		for(new i;i<10;i++)
		{
			if(gTruckLoadTurn[i2][i] != INVALID_PLAYER_ID && !IsPlayerConnected(gTruckLoadTurn[i2][i])) gTruckLoadTurn[i2][i] = INVALID_PLAYER_ID;
			if(i != 9 && gTruckLoadTurn[i2][i] == INVALID_PLAYER_ID && gTruckLoadTurn[i2][i+1] != INVALID_PLAYER_ID) {gTruckLoadTurn[i2][i] = gTruckLoadTurn[i2][i+1]; gTruckLoadTurn[i2][i+1] = INVALID_PLAYER_ID;}
			if(gTruckLoadTurn[i2][i] != INVALID_PLAYER_ID) format(text,sizeof(text),"%s\n%d. %s",text,i+1,GetName(gTruckLoadTurn[i2][i]));
			else format(text,sizeof(text),"%s\n%d. Свободно",text,i+1);
		}
		UpdateDynamic3DTextLabelText(gTruckLoadTurnText[i2], 0xFFFFFFFF, text);
		if(gTruckLoadTurn[i2][0] != INVALID_PLAYER_ID)
		{
			new playerid = gTruckLoadTurn[i2][0];
			new amount = GetPVarInt(playerid,"truckamount");
			if(IsPlayerConnected(playerid))
			{
				if(pTemp[playerid][pTruckWagonID] != INVALID_VEHICLE_ID)
				{
					if(amount - pTemp[playerid][pTruckWeight] == 100)
					{
						pTemp[playerid][pTruckWeight] += 100;
						if(i2 == 0) Mineral -= 100;
						else if(i2 == 1) Lessdrov -= 100;
						else if(i2 == 3) gGunWorkWH[2] -= 100;
						pTemp[playerid][pTruckWagonTime] = 60;
						SendClientMessage(playerid,COLOR_GREEN,"Ваша фура загружена. У Вас есть 1 минута чтобы прицепить её");
						SendClientMessage(playerid,COLOR_GREEN,"Если не успеете заказ будет аннулирован. Деньги не возвращаются");
					}
					else if(pTemp[playerid][pTruckWeight] < amount)
					{
						pTemp[playerid][pTruckWeight] += 100;
						if(i2 == 0) Mineral -= 100;
						else if(i2 == 1) Lessdrov -= 100;
						else if(i2 == 3) gGunWorkWH[2] -= 100;
					}
					else if(pTemp[playerid][pTruckWagonTime] && GetPVarInt(playerid,"waitgruz") == 2) pTemp[playerid][pTruckWagonTime]--;
                    if(pTemp[playerid][pTruckWagonTime] < 1 && GetPVarInt(playerid,"waitgruz") == 2)
					{
						if(IsValidDynamic3DTextLabel(pTemp[playerid][pTruckWagonText]))
						{
							DestroyDynamic3DTextLabel(pTemp[playerid][pTruckWagonText]);
							pTemp[playerid][pTruckWagonText] = Text3D:INVALID_3DTEXT_ID;
						}
						DestroyVehicle(pTemp[playerid][pTruckWagonID]);
						pTemp[playerid][pTruckWagonID] = INVALID_VEHICLE_ID;
						pTemp[playerid][pTruckWeight] = 0;
						pTemp[playerid][pTruckWagonTime] = 0;
						gTruckLoadTurn[i2][0] = INVALID_PLAYER_ID;
						SendClientMessage(playerid,COLOR_RED,"Вы не успели. Заказ аннулирован");
					}
					if(pTemp[playerid][pTruckWagonText] != Text3D:INVALID_3DTEXT_ID)
					{
						new mes[128];
						if(i2 == 0) format(mes,sizeof(mes),"%s\n{FFCC00}Угля в фуре: {FFFFFF}%d/%d",GetName(gTruckLoadTurn[i2][0]),pTemp[playerid][pTruckWeight],amount);
						else if(i2 == 1) format(mes,sizeof(mes),"%s\n{FFCC00}Древесины в фуре: {FFFFFF}%d/%d",GetName(gTruckLoadTurn[i2][0]),pTemp[playerid][pTruckWeight],amount);
						else if(i2 == 3) format(mes,sizeof(mes),"%s\n{FFCC00}Оружия в фуре: {FFFFFF}%d/%d",GetName(gTruckLoadTurn[i2][0]),pTemp[playerid][pTruckWeight],amount);
						UpdateDynamic3DTextLabelText(pTemp[playerid][pTruckWagonText],0xFFFFFFFF,mes);
					}
				}
				else
				{
					SendClientMessage(playerid,COLOR_WHITE,"Подошла очередь загрузки вашей фуры");
					SendClientMessage(playerid,COLOR_WHITE,"После загрузки у Вас будет всего минута, чтобы прицепить её.");
					SetPVarInt(playerid,"waitgruz",2);
					pTemp[playerid][pTruckWagonTime] = 60;
					if(i2 == 0) pTemp[playerid][pTruckWagonID] = CreateVehicle(450, 2649.2039, -1406.5227, 24.4566, 180.0000,1,1,-1); // Шахта
					else if(i2 == 1) pTemp[playerid][pTruckWagonID] = CreateVehicle(450, 1806.3335, 1467.6937, 10.1463, -90.0000,1,1,-1);
					else if(i2 == 3) pTemp[playerid][pTruckWagonID] = CreateVehicle(450,2692.2395, -2176.7808, 18.0607, 180.7111,1,1,-1);//Завод
					if(pTemp[playerid][pTruckWagonText] != Text3D:INVALID_3DTEXT_ID)
					{
						DestroyDynamic3DTextLabel(pTemp[playerid][pTruckWagonText]);
						pTemp[playerid][pTruckWagonText] = Text3D:INVALID_3DTEXT_ID;
					}
					pTemp[playerid][pTruckWagonText] = CreateDynamic3DTextLabel("_",0xFFFFFFFF,0.0,0.0,2.0,20.0,INVALID_PLAYER_ID,pTemp[playerid][pTruckWagonID]);
				}
				if(!IsPlayerInDynamicArea(playerid,AreaInfo[arTruckWagonCoal]) && !IsPlayerInDynamicArea(playerid,AreaInfo[arTruckWagonWood]) && !IsPlayerInDynamicArea(playerid,AreaInfo[arTruckWagonWeapon]) && (gTruckLoadTurn[0][0] == playerid || gTruckLoadTurn[1][0] == playerid || gTruckLoadTurn[3][0] == playerid))
				{
					new vehicleid = GetPVarInt(playerid,"VehicleEnters");
					if(IsTrailerAttachedToVehicle(vehicleid))
					{
						new trailerid = GetVehicleTrailer(vehicleid);
						if(pTemp[playerid][pTruckWagonID] == trailerid)
						{
							new loadid = GetPVarInt(playerid,"loadid");
							pTemp[playerid][pTruckLoadID] = loadid;
							DeletePVar(playerid,"loadid");
							SetPVarInt(playerid,"truckonroad",1);
							gTruckLoadTurn[loadid][0] = INVALID_PLAYER_ID;
							if(loadid != 3) SendClientMessage(playerid,COLOR_WHITE,"Теперь можете ехать к оружейному заводу (/gps - Работы - Дальнобойщики)");
							else SendClientMessage(playerid,COLOR_WHITE,"Теперь можете ехать к складу оружия (/gps - Работы - Дальнобойщики)");
						}
						else
						{
							SendClientMessage(playerid,COLOR_GREY,"Данную фуру уже арендуют");
							RemovePlayerFromVehicle(playerid);
						}
					}
				}
			}
		}
	}

	if(m == 0 && s >= 11 && s <= 16) PAYDAY = 0;
   	if(m == 0 && s >= 0 && s <= 10 && PAYDAY == 0)
   	{
   	    PAYDAY = 1;
   	    SetWorldTime(h);
   	    PayDay();
   	}
	return 1;
}

@UpdateCarInfo(playerid, vehicleid, speedonly);
@UpdateCarInfo(playerid, vehicleid, speedonly)
{
    if(!IsPlayerConnected(playerid) || IsKicked(playerid) || !IsValidVehicle(vehicleid))
	{
		if(pTemp[playerid][pCarInfoTimer] != 0)
		{
			HideSpeedometer(playerid);
			KillTimer(pTemp[playerid][pCarInfoTimer]);
			pTemp[playerid][pCarInfoTimer] = 0;
		}
		return 1;
	}

	new Float:X, Float:Y, Float:Z, Float:X2, Float:Y2, Float:Z2, Float:vhealth;
	new lights, engine;
	engine = GetEngineStatL(vehicleid, lights);
	GetVehicleHealth(vehicleid, vhealth);
	new model = GetVehicleModel(vehicleid);
	new Float: tank = VehStats[model-400][vMaxFuel];

	if(!speedonly) {
	    X2 = VehicleInfo[vehicleid][vX];
		Y2 = VehicleInfo[vehicleid][vY];
		Z2 = VehicleInfo[vehicleid][vZ];
		GetVehiclePos(vehicleid, X, Y, Z);

		if(X > 10000.0 || Y > 10000.0 || Z > 10000.0 || X < -10000.0 || Y < -10000.0 || Z < -10000.0) {
			SendClientMessage(playerid, COLOR_GREY, "Ошибка 2");
			ToCheat(playerid, 9982);
			SetVehicleToRespawn(vehicleid);
			return 0;
		}
		new Float:veloc = PointToPoint3D(X2,Y2,Z2,X,Y,Z)/1000;
		VehicleInfo[vehicleid][vMileage] += veloc;
		if(engine == 1) {
		    VehicleInfo[vehicleid][vFuel] -= (veloc/100)*tank;
			if(VehicleInfo[vehicleid][vFuel] <= 0.0) {
				VehicleInfo[vehicleid][vFuel] = 0.0;
				new alarm, doors, bonnet, boot, objective;
				GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(vehicleid, false, lights, alarm, doors, bonnet, boot, objective);
			}
			if(vhealth <= 300.0) {
				SetVehicleHealth(vehicleid, 300.0);
				new alarm, doors, bonnet, boot, objective;
				GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(vehicleid, false, false, alarm, doors, bonnet, boot, objective);
			}
		}
		VehicleInfo[vehicleid][vX] = X;
		VehicleInfo[vehicleid][vY] = Y;
		VehicleInfo[vehicleid][vZ] = Z;
	}
	new info[128];
	format(info, sizeof(info),"%d", GetVehicleSpeed(playerid));
	PlayerTextDrawSetString(playerid, speed_PTD[playerid][0], info);
	format(info, sizeof(info),"%.0f", VehicleInfo[vehicleid][vFuel]);
	PlayerTextDrawSetString(playerid, speed_PTD[playerid][6], info);
	format(info, sizeof(info),"%.0f", vhealth);
	PlayerTextDrawSetString(playerid, speed_PTD[playerid][7], info);
	format(info, sizeof(info),"%.1f", VehicleInfo[vehicleid][vMileage]);
	PlayerTextDrawSetString(playerid, speed_PTD[playerid][5], info);
	
	new lock = VehicleInfo[vehicleid][vLock];
	PlayerTextDrawColor(playerid, speed_PTD[playerid][1], lights? (0xFFD700FF):(0x00b8ff));
    PlayerTextDrawColor(playerid, speed_PTD[playerid][2], engine? (0xEA2B2BAA):(0x00ff00AA));
    PlayerTextDrawColor(playerid, speed_PTD[playerid][3], lock? (0xEA2B2BAA):(0x00ff00AA));
/*	format(info, sizeof(info),"%s",(GetPVarInt(playerid, "BeltStatus"))?("~g~~h~B"):("~r~B"));
	PlayerTextDrawSetString(playerid, speed_PTD[playerid][6], info);*/
	for(new i = 0; i < 19; i++) TextDrawShowForPlayer(playerid, speed_TD[i]);
    for(new i = 0; i < 8; i++)PlayerTextDrawShow(playerid, speed_PTD[playerid][i]);
	for(new i = 0; i < 1; i++) TextDrawShowForPlayer(playerid, mkpp_TD[i]);
    for(new i = 0; i < 7; i++)PlayerTextDrawShow(playerid, mkpp_PTD[playerid][i]);

    if(GetVehicleSpeed(playerid) >= 10 && GetPVarInt(playerid,"USEDIALOGID") && !IsKicked(playerid))
	{
		if(pTemp[playerid][pBusID] != vehicleid && vehicleid >= aBus[0] && vehicleid <= aBus[12]
		|| pTemp[playerid][pTruckID] != vehicleid && vehicleid >= aTruck[0][0] && vehicleid <= aTruck[2][1]
		|| pTemp[playerid][pTaxiID] != vehicleid && vehicleid >= taxicar[0] && vehicleid <= taxicar[10]
		|| pTemp[playerid][pMechID] != vehicleid && vehicleid >= mechanic[0] && vehicleid <= mechanic[9])
			ToCheat(playerid, 3278);
	}
	return 1;
}

stock ShowPlayerStatsDialog(playerid, targetid)
{
	new status_text[32],
		married_text[MAX_PLAYER_NAME] = "Нет",
		wanted_text[32] = "Нет",
		phone_text[20] = "Не имеется";

	if(pInfo[targetid][pMarried])
		format(married_text, sizeof(married_text), "%s", pInfo[targetid][pWhoMarried]);

	if(pInfo[targetid][pWanted])
		format(wanted_text, sizeof(wanted_text), "%s", pInfo[targetid][pWantedReason]);

	if(pInfo[targetid][pPhoneNumber] > 1)
		format(phone_text, sizeof(phone_text), "%i", pInfo[targetid][pPhoneNumber]);

	if(pInfo[targetid][pAdmin])
		format(status_text, sizeof(status_text), "Администратор (%i)", pInfo[targetid][pAdmin]);
	else if(pInfo[targetid][pVip])
		status_text = "VIP";
	else
	{
	    switch(pInfo[targetid][pLevel])
	    {
	        case 1..2: status_text = "Без статуса";
		    case 3..5: status_text = "Новичок";
		    case 6..9: status_text = "Развивающийся";
		    case 10..15: status_text = "Активный игрок";
		    default: status_text = "Опытный игрок";
	    }
	}

	stringer[0] = EOS;
	new str[150];

	format(str,sizeof(str),"{ffffff}Имя:\t\t\t\t\t{3399FF}%s{FFFFFF}\n",GetName(targetid));
	strcat(stringer,str);
	format(str,sizeof(str),"Уровень:\t\t\t\t%d\n",pInfo[targetid][pLevel]);
	strcat(stringer,str);
	format(str,sizeof(str),"Опыт:\t\t\t\t\t%d / %d\n",pInfo[targetid][pExp], (pInfo[targetid][pLevel]+1)*4);
	strcat(stringer,str);
	format(str,sizeof(str),"Возраст:\t\t\t\t%d\n",pInfo[targetid][pAge]);
	strcat(stringer,str);

	if(pInfo[targetid][pWarn]>0)
	{
	    format(str,sizeof(str),"Предупреждения:\t\t\t%d / 3\n",pInfo[targetid][pWarn]);
		strcat(stringer,str);
		format(str,sizeof(str),"{AFAFAF}До снятия предупреждения:\t\t%d ч. (%d д.)\n\n{FFFFFF}",floatround((pInfo[targetid][pTimeToLastWarn]+(3600*24*10)-gettime())/3600,floatround_ceil),floatround((pInfo[targetid][pTimeToLastWarn]+(3600*24*10)-gettime())/86400,floatround_ceil));
		strcat(stringer,str);
	}
	else
	{
	    format(str,sizeof(str),"Предупреждения:\t\t\t%d / 3\n\n",pInfo[targetid][pWarn]);
		strcat(stringer,str);
	}

	format(str,sizeof(str),"Служил%s:\t\t\t\t%s\n",(pInfo[targetid][pSex]==1)?(""):("а"),(pInfo[targetid][pVoennik])?("Да"):("Нет"));
	strcat(stringer,str);
	format(str,sizeof(str),"Законопослушность:\t\t\t%d\n",pInfo[targetid][pZakon]);
	strcat(stringer,str);

	format(str,sizeof(str),"Наличные:\t\t\t\t%i$\n",GetCash(targetid));
	strcat(stringer,str);
	format(str,sizeof(str),"Розыск:\t\t\t\t%i\n",pInfo[targetid][pWanted]);
	strcat(stringer,str);
	format(str,sizeof(str),"Преступление:\t\t\t%s\n",wanted_text);
	strcat(stringer,str);
	format(str,sizeof(str),"Номер телефона:\t\t\t%s\n",phone_text);
	strcat(stringer,str);
	format(str,sizeof(str),"%s:\t\t\t\t%s\n",(pInfo[targetid][pSex]==1)?("Женат на"):("Замужем за"),married_text);
	strcat(stringer,str);
	format(str,sizeof(str),"Пол:\t\t\t\t\t%s\n\n",(pInfo[targetid][pSex]==1)?("Мужчина"):("Женщина"));
	strcat(stringer,str);
	format(str,sizeof(str),"Работа:\t\t\t\t%s\n",Job_Names[pInfo[targetid][pJob]]);
	strcat(stringer,str);

	if(!pInfo[targetid][pMember])
		strcat(stringer,"Организация:\t\t\t\tНет\n");
	else
	{
		format(str,sizeof(str),"Организация:\t\t\t\t{63BD4E}%s{FFFFFF}\n",Fraction_Name[pInfo[targetid][pMember]]);
		strcat(stringer,str);
	}

	if(!pInfo[targetid][pRank])
		strcat(stringer,"Должность:\t\t\t\tНет\n");
	else
	{
		format(str,sizeof(str),"Должность:\t\t\t\t{63BD4E}%s (%i){FFFFFF}\n",Fraction_Rang[pInfo[targetid][pMember]][pInfo[targetid][pRank]],pInfo[targetid][pRank]);
		strcat(stringer,str);
	}

	format(str,sizeof(str),"Выговоры:\t\t\t\t%d / 3\n\n",pInfo[targetid][pMemberWarn]);
	strcat(stringer,str);

	if(!pInfo[targetid][pBiz])
		strcat(stringer,"Бизнес:\t\t\t\tНет\n");
	else
	{
	    format(str,sizeof(str),"Бизнеc:\t\t\t\t%s (%i)\n",BizInfo[pInfo[targetid][pBiz]][bName],pInfo[targetid][pBiz]);
		strcat(stringer,str);
	}

	if(!pInfo[targetid][pHouse])
		strcat(stringer,"Дом:\t\t\t\t\tНет\n");
	else
	{
		format(str,sizeof(str),"Дом:\t\t\t\t\t№%i\n",pInfo[targetid][pHouse]);
		strcat(stringer,str);
	}

	if(pTemp[targetid][pCarPlayerID] == INVALID_VEHICLE_ID)
		strcat(stringer,"Транспорт:\t\t\t\tНет\n\n");
	else
	{
	    new model = GetVehicleModel(pTemp[targetid][pCarPlayerID]);
	    format(str,sizeof(str),"Транспорт:\t\t\t\t%s (%i)\n\n",VehStats[model-400][vName],model);
		strcat(stringer,str);
	}

	format(str,sizeof(str),"Кредитов:\t\t\t\t{EAD86A}%d{FFFFFF}\n",pInfo[targetid][pCredits]);
	strcat(stringer,str);
	format(str,sizeof(str),"Номер аккаунта:\t\t\t{EAD86A}%d{FFFFFF}\n",pInfo[targetid][pID]);
	strcat(stringer,str);

	if(payment_system == 2)
	{
		format(str,sizeof(str),"E-mail:\t\t\t\t\t{EAD86A}%s{FFFFFF}\n",pInfo[targetid][pMail]);
		strcat(stringer,str);
	}

	format(str,sizeof(str),"Статус:\t\t\t\t\t%s\n",status_text);
	strcat(stringer,str);

	ShowPlayerDialog(playerid, 15143, DIALOG_STYLE_MSGBOX, "{FFCC00}Статистика персонажа", stringer, "Предметы", "Закрыть");
	return 1;
}

stock ShowPlayerItemsDialog(playerid, targetid)
{
    stringer[0] = EOS;
    if(!pInfo[targetid][pImprove][2])
    {
		if(pInfo[targetid][pCiggare])
			format(stringer, 1000, "{FFFFFF}Сигареты\t\t\t{EAD86A}[%d / 2 шт]\n", pInfo[targetid][pCiggare]);
		else
			format(stringer, 1000, "{FFFFFF}Сигареты\t\t\t{bbbbbb}[пусто]\n");
		if(pInfo[targetid][pSprunk])

			format(stringer, 1000, "%s{FFFFFF}Газировка\t\t\t{EAD86A}[%d / 2 шт]\n", stringer, pInfo[targetid][pSprunk]);
		else
			format(stringer, 1000, "%s{FFFFFF}Газировка\t\t\t{bbbbbb}[пусто]\n", stringer);
		if(pInfo[targetid][pAptechka])

			format(stringer, 1000, "%s{FFFFFF}Аптечка\t\t\t{EAD86A}[%d / 2 шт]\n", stringer, pInfo[targetid][pAptechka]);
		else
			format(stringer, 1000, "%s{FFFFFF}Аптечка\t\t\t{bbbbbb}[пусто]\n", stringer);
		if(pInfo[targetid][pMask])

			format(stringer, 1000, "%s{FFFFFF}Маска\t\t\t\t{EAD86A}[%i / 2 шт]\n", stringer, pInfo[targetid][pMask]);
		else
			format(stringer, 1000, "%s{FFFFFF}Маска\t\t\t\t{bbbbbb}[пусто]\n", stringer);
		if(pInfo[targetid][pPatron])

			format(stringer, 1000, "%s{FFFFFF}Патроны\t\t\t{EAD86A}[%d / 500 шт]\n", stringer, pInfo[targetid][pPatron]);
		else
			format(stringer, 1000, "%s{FFFFFF}Патроны\t\t\t{bbbbbb}[пусто]\n", stringer);
		if(pInfo[targetid][pGunAmount])

			format(stringer, 1000, "%s{FFFFFF}Ед. оружия\t\t\t{EAD86A}[%d / 500 шт]\n", stringer, pInfo[targetid][pGunAmount]);
		else
			format(stringer, 1000, "%s{FFFFFF}Ед. оружия\t\t\t{bbbbbb}[пусто]\n", stringer);
		if(pInfo[targetid][pDrugs])

			format(stringer, 1000, "%s{FFFFFF}Наркотики\t\t\t{EAD86A}[%d / 100 шт]\n", stringer, pInfo[targetid][pDrugs]);
		else
			format(stringer, 1000, "%s{FFFFFF}Наркотики\t\t\t{bbbbbb}[пусто]\n", stringer);
		if(pInfo[targetid][pRepcar][0])

			format(stringer, 1000, "%s{FFFFFF}Канистра\t\t\t{EAD86A}[%d / 1 шт]\n", stringer, pInfo[targetid][pRepcar][0]);
		else
			format(stringer, 1000, "%s{FFFFFF}Канистра\t\t\t{bbbbbb}[пусто]\n", stringer);
		if(pInfo[targetid][pRepcar][1])

			format(stringer, 1000, "%s{FFFFFF}Инструменты\t\t\t{EAD86A}[%d / 1 шт]\n", stringer, pInfo[targetid][pRepcar][1]);
		else
			format(stringer, 1000, "%s{FFFFFF}Инструменты\t\t\t{bbbbbb}[пусто]\n", stringer);
		if(pInfo[targetid][pFishki])
			format(stringer, 1000, "%s{FFFFFF}Фишки\t\t\t\t{EAD86A}[%i шт]", stringer, pInfo[targetid][pFishki]);
		else
			format(stringer, 1000, "%s{FFFFFF}Фишки\t\t\t\t{bbbbbb}[пусто]", stringer);
	}
	else if(pInfo[targetid][pImprove][2])
	{
	    if(pInfo[targetid][pCiggare])
	    	format(stringer, 1000, "{FFFFFF}Сигареты\t\t\t{EAD86A}[%d / 4 шт]\n", pInfo[targetid][pCiggare]);
		else
			format(stringer, 1000, "{FFFFFF}Сигареты\t\t\t{bbbbbb}[пусто]\n");
		if(pInfo[targetid][pSprunk])
			format(stringer, 1000, "%s{FFFFFF}Газировка\t\t\t{EAD86A}[%d / 4 шт]\n", stringer, pInfo[targetid][pSprunk]);
		else
			format(stringer, 1000, "%s{FFFFFF}Газировка\t\t\t{bbbbbb}[пусто]\n", stringer);
		if(pInfo[targetid][pAptechka])
			format(stringer, 1000, "%s{FFFFFF}Аптечка\t\t\t{EAD86A}[%d / 4 шт]\n", stringer, pInfo[targetid][pAptechka]);
		else
			format(stringer, 1000, "%s{FFFFFF}Аптечка\t\t\t{bbbbbb}[пусто]\n", stringer);
		if(pInfo[targetid][pMask])
			format(stringer, 1000, "%s{FFFFFF}Маска\t\t\t\t{EAD86A}[%i / 4 шт]\n", stringer, pInfo[targetid][pMask]);
		else
			format(stringer, 1000, "%s{FFFFFF}Маска\t\t\t\t{bbbbbb}[пусто]\n", stringer);
		if(pInfo[targetid][pPatron])
			format(stringer, 1000, "%s{FFFFFF}Патроны\t\t\t{EAD86A}[%d / 1000 шт]\n", stringer, pInfo[targetid][pPatron]);
		else
			format(stringer, 1000, "%s{FFFFFF}Патроны\t\t\t{bbbbbb}[пусто]\n", stringer);
		if(pInfo[targetid][pGunAmount])
			format(stringer, 1000, "%s{FFFFFF}Ед. оружия\t\t\t{EAD86A}[%d / 1000 шт]\n", stringer, pInfo[targetid][pGunAmount]);
		else
			format(stringer, 1000, "%s{FFFFFF}Ед. оружия\t\t\t{bbbbbb}[пусто]\n", stringer);
		if(pInfo[targetid][pDrugs])
			format(stringer, 1000, "%s{FFFFFF}Наркотики\t\t\t{EAD86A}[%d / 200 шт]\n", stringer, pInfo[targetid][pDrugs]);
		else
			format(stringer, 1000, "%s{FFFFFF}Наркотики\t\t\t{bbbbbb}[пусто]\n", stringer);
		if(pInfo[targetid][pRepcar][0])
			format(stringer, 1000, "%s{FFFFFF}Канистра\t\t\t{EAD86A}[%d / 2 шт]\n", stringer, pInfo[targetid][pRepcar][0]);
		else
			format(stringer, 1000, "%s{FFFFFF}Канистра\t\t\t{bbbbbb}[пусто]\n", stringer);
		if(pInfo[targetid][pRepcar][1])
			format(stringer, 1000, "%s{FFFFFF}Инструменты\t\t\t{EAD86A}[%d / 2 шт]\n", stringer, pInfo[targetid][pRepcar][1]);
		else
			format(stringer, 1000, "%s{FFFFFF}Инструменты\t\t\t{bbbbbb}[пусто]\n", stringer);
		if(pInfo[targetid][pFishki])
			format(stringer, 1000, "%s{FFFFFF}Фишки\t\t\t\t{EAD86A}[%i шт]", stringer, pInfo[targetid][pFishki]);
		else
			format(stringer, 1000, "%s{FFFFFF}Фишки\t\t\t\t{bbbbbb}[пусто]", stringer);
	}
	ShowPlayerDialog(playerid, 15144, DIALOG_STYLE_MSGBOX, "{FFCC00}Предметы", stringer, "Назад", "Закрыть");
	return 1;
}
@AntiBH(playerid);
@AntiBH(playerid){
	if(pInfo[playerid][pAdmin] == 0) {
		if(!times[playerid]) ApplyAnimation(playerid,"PED","getup_front",4.0,0,0,0,0,0);
		times[playerid] = true;
	}
	return 1;
}
public OnGameModeInit(){
	CreatePickup(1254, 23, 1731.8839,-1032.4688,12.2917, 0);
	CreatePickup(1254, 23, 1733.6411,-1039.6805,12.8198, 0);
	
	mostik[0] = CreateDynamicObject(2168,2747.3437500,-1142.8994141,21.6000004,0.0000000,0.0000000,179.9945068);
	mostik[1] = CreateDynamicObject(2168,2747.2998047,-1262.0000000,21.6000004,0.0000000,0.0000000,0.0000000);
	
	SetTimer("StrobTimer", 500, true);
	SetTimer("OpenMost", 1000*60*25, true);
	SetGameModeText("LOADING...");
	SendRconCommand("hostname "SERVER_VERSION"");
 	Create3DTextLabel("Клуб ''У Ашота''", 0xFFFFFFFF, 2387.1106,-2212.1899,21.9710, 50.0, 0, 1 );
	
    #if MYSQL_R41_2 == true
	dbHandle = mysql_connect(SQL_HOST, SQL_USER, SQL_PASS, SQL_DB);
	mysql_log(ERROR | WARNING);

	#else
	dbHandle = mysql_connect(LOCAL_SQL_HOST, LOCAL_SQL_USER, LOCAL_SQL_DB, LOCAL_SQL_PASS);
	mysql_log(LOG_WARNING | LOG_ERROR);

	#endif
    if(mysql_errno() == -1) print("  MySQL connection: FALSE\n");
    else {
        print("  MySQL connection: TRUE\n");

		mysql_tquery(dbHandle, "SET CHARACTER SET 'utf8'", "", "");
	    mysql_tquery(dbHandle, "SET NAMES 'utf8'", "", "");
	    mysql_tquery(dbHandle, "SET character_set_client = 'cp1251'", "", "");
	    mysql_tquery(dbHandle, "SET character_set_connection = 'cp1251'", "", "");
	    mysql_tquery(dbHandle, "SET character_set_results = 'cp1251'", "", "");
	    mysql_tquery(dbHandle, "SET SESSION collation_connection = 'utf8_general_ci'", "", "");

		mysql_tquery(dbHandle, "SELECT * FROM "T_BIZ" ORDER BY "T_BIZ".id ASC ", "@LoadBiz", "");
		mysql_tquery(dbHandle, "SELECT * FROM "T_HOUSE" ORDER BY "T_HOUSE".id ASC ", "@LoadHouse", "");
		mysql_tquery(dbHandle, "SELECT * FROM "T_MAFIA"", "@LoadMafia", "");
		mysql_tquery(dbHandle, "SELECT * FROM "T_GANG"", "@LoadGang", "");
		mysql_tquery(dbHandle, "SELECT * FROM "T_GANGZONE"", "@LoadGZ", "");
		mysql_tquery(dbHandle, "SELECT * FROM "T_ATM"", "@LoadATM", "");
		mysql_tquery(dbHandle, "SELECT * FROM "T_FAMILY" ORDER BY "T_FAMILY".id ASC ", "@LoadFamily", "");
		mysql_tquery(dbHandle, "SELECT * FROM `accounts`", "@LoadFurgon", "");
    }
	SendRconCommand("mapname "SERVER_MAP"");
	SendRconCommand("weburl "SERVER_WEBSITE"");
	SendRconCommand("language "SERVER_LANGUAGE"");
	
	SetWeather(2);
	new h;
	gettime(h,_,_);
	SetWorldTime(h);
	
	SetGravity(0.012);
	ManualVehicleEngineAndLights();
	EnableStuntBonusForAll(0);
	SetNameTagDrawDistance(24.0);
 	ShowPlayerMarkers(2);
	DisableInteriorEnterExits();

	AddPlayerClass(36,0.0,0.0,5.0,0.0,0,0,0,0,0,0);

	LoadTextDraws();
	LoadServer();
	LoadMenu();
	LoadObjects();

	SetTimer("@GrandTimer", 1000, true);
	SetTimer("@OnVehicleArendUpdate", 10000, true);

	for(new i;i < 20;i++)
	{
		if(i < 10)
		{
			gTruckLoadTurn[0][i] = INVALID_PLAYER_ID;
			gTruckLoadTurn[1][i] = INVALID_PLAYER_ID;
			gTruckLoadTurn[2][i] = INVALID_PLAYER_ID;
			gTruckLoadTurn[3][i] = INVALID_PLAYER_ID;
		}
	}
	printf ("-> Динамических объектов: %d", CountDynamicObjects());
	printf ("-> Статических объектов: %d", TotalObject);
	new vehicle;
 	for(vehicle = 1; vehicle <= aFBI[4]; vehicle++) {
	    if(!IsValidVehicle(vehicle)) continue;
	    SetVehicleParamsEx(vehicle, false, false, false, false, false, false, false);
	    
		VehicleInfo[vehicle][vFuel] = VehStats[GetVehicleModel(vehicle)-400][vMaxFuel];
		VehicleInfo[vehicle][vDriver] = INVALID_PLAYER_ID;
		SetVehicleNumberPlate(vehicle, "None");
		SignalTick[vehicle][1] = -1;
		
		LightsObject[vehicle][0] = -1;
	    LightsObject[vehicle][1] = -1;
	    LightsObject[vehicle][2] = -1;
	    LightsObject[vehicle][3] = -1;
	}
	printf("-> Количество транспорта: %d", vehicle);
	lastveh = CreateVehicle(542,0,0,0,0,0,0,0);
	DestroyVehicle(lastveh);
	
  	Streamer_SetTickRate(55);
 	Streamer_SetVisibleItems(STREAMER_TYPE_OBJECT, MAX_OBJECTS-TotalObject);
	printf ("-> Видимых объектов (стример): %d", Streamer_GetVisibleItems(STREAMER_TYPE_OBJECT));
	SetGameModeText(SERVER_VERSION);
	return 1;
}
public OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:fRotX, Float:fRotY, Float:fRotZ, Float:fScaleX, Float:fScaleY, Float:fScaleZ)
{
	stringer[0] = EOS;
	format(stringer, 500, "SetPlayerAttachedObject(playerid, %d, %d, %d, %.4f, %.4f, %.4f, %.2f, %.2f, %.2f, %.2f, %.2f, %.2f)", index, modelid, boneid, fOffsetX, fOffsetY, fOffsetZ, fRotX, fRotY, fRotZ, fScaleX, fScaleY, fScaleZ);
	printf(stringer);
	if(!IsPlayerInAnyVehicle(playerid)) SetPlayerAttachedObject(playerid, index, modelid, boneid, fOffsetX, fOffsetY, fOffsetZ, fRotX, fRotY, fRotZ, fScaleX, fScaleY, fScaleZ);
	else AttachObjectToVehicle(GetPVarInt(playerid, "VehicleObj"), GetPVarInt(playerid,"VehicleEnters"), fOffsetX, fOffsetY, fOffsetZ, fRotX, fRotY, fRotZ);
}

public OnPlayerEditObject(playerid, playerobject, objectid, response, Float:fX, Float:fY, Float:fZ, Float:fRotX, Float:fRotY, Float:fRotZ)
{
	if(GetPVarInt(playerid, "LoadATM") > 0)
	{
		if(!playerobject)
		{
			if(!IsValidObject(objectid)) return 1;
			MoveObject(objectid, fX, fY, fZ, 10.0, fRotX, fRotY, fRotZ);
		}
		if(response == EDIT_RESPONSE_FINAL)
		{
			TOTALATM++;
			ATMInfo[TOTALATM][aX] = fX;
			ATMInfo[TOTALATM][aY] = fY;
			ATMInfo[TOTALATM][aZ] = fZ;
			ATMInfo[TOTALATM][arX] = fRotX;
			ATMInfo[TOTALATM][arY] = fRotY;
			ATMInfo[TOTALATM][arZ] = fRotZ;
			SendClientMessage(playerid, COLOR_GREEN, "Вы установили банкомат");
			DestroyObject(GetPVarInt(playerid, "LoadATM")-1);
			ATM[TOTALATM] = CreateObject(2942, fX, fY, fZ, fRotX, fRotY, fRotZ);
			LABELATM[TOTALATM] = CreateDynamic3DTextLabel("Банкомат\n{FFFFFF}Нажмите: ALT", 0xBBBBBBFF, ATMInfo[TOTALATM][aX],ATMInfo[TOTALATM][aY],ATMInfo[TOTALATM][aZ]+1.1,10.0);
			DeletePVar(playerid, "LoadATM");
			CancelEdit(playerid);
			stringer[0] = EOS;
			format(stringer,512,"INSERT INTO "T_ATM" (ID,aX,aY,aZ,arX,arY,arZ) VALUES (%i,'%f','%f','%f','%f','%f','%f')",
			TOTALATM,ATMInfo[TOTALATM][aX],ATMInfo[TOTALATM][aY],ATMInfo[TOTALATM][aZ], ATMInfo[TOTALATM][arX], ATMInfo[TOTALATM][arY], ATMInfo[TOTALATM][arZ]);
			mysql_tquery(dbHandle, stringer, "", "");
		}
		if(response == EDIT_RESPONSE_CANCEL)
		{
			SendClientMessage(playerid, COLOR_RED, "Установка банкомата отменена");
			DestroyObject(GetPVarInt(playerid, "LoadATM")-1);
			DeletePVar(playerid, "LoadATM");
			CancelEdit(playerid);
		}
		return 1;
	}
	if(response == EDIT_RESPONSE_CANCEL)
	{
		DestroyObject(objectid);
		CancelEdit(playerid);
	}
	if(response == EDIT_RESPONSE_FINAL)
	{
		CancelEdit(playerid);
	}
	return 1;
}

public OnPlayerEditDynamicObject(playerid, objectid, response, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz)
{
	return 1;
}

public OnGameModeExit()
{
    DestroyAllDynamicObjects();
	DestroyAllDynamicPickups();
	DestroyAllDynamicCPs();
	DestroyAllDynamicRaceCPs();
	DestroyAllDynamicMapIcons();
	DestroyAllDynamic3DTextLabels();
	DestroyAllDynamicAreas();
	mysql_close(dbHandle);
	return 1;
}

public OnPlayerRequestClass(playerid, classid)
{
    gPlayerSpawned[playerid] = false;
    if(gPlayerLogged[playerid]){
		SpawnPlayerEx(playerid);
	}
	else{
	    gMysqlRaceCheck[playerid] ++;
		mysql_query_string[0] = EOS;
		format(mysql_query_string, sizeof(mysql_query_string), "SELECT * FROM "T_ACCOUNTS" WHERE name = '%s' LIMIT 1", GetName(playerid));
	   	mysql_tquery(dbHandle, mysql_query_string, "@FindPlayerInTable", "ii", playerid, gMysqlRaceCheck[playerid]);
	}
	return 1;
}

@FindPlayerInTable(playerid, race_check);
@FindPlayerInTable(playerid, race_check)
{
    if(!IsPlayerConnected(playerid)) return 1;
    if(race_check != gMysqlRaceCheck[playerid]) return Kick(playerid);

    #if MYSQL_R41_2 == true

 	new rows;
 	cache_get_row_count(rows);

 	#else

 	new rows, fields;
 	cache_get_data(rows, fields);

 	#endif

	if(rows) SetTimerEx ("@LoginDialog", 150, 0, "i", playerid);
	else SetTimerEx ("@RegisterDialog", 150, 0, "i", playerid);

	SetPVarInt(playerid, "Logged", true);
	SetPVarInt(playerid, "player_logged", 1);

	SetPlayerVirtualWorld(playerid, playerid + 1);
	TogglePlayerControllable(playerid, 0);

	switch(random(3))
	{
	    case 0:
	    {
	        SetPlayerPos(playerid, -2655.0710,2666.2854,81.9173);
			SetPlayerCameraPos(playerid, -2617.6172, 2679.9429, 130.1591);
			SetPlayerCameraLookAt(playerid, -2616.6501, 2679.6707, 129.8841);
	    }
	    case 1:
	    {
	        SetPlayerPos(playerid, -2681.0645,1948.3331,63.7277);
	        SetPlayerCameraPos(playerid, -2681.4592, 1911.9149, 67.1930);
			SetPlayerCameraLookAt(playerid, -2681.4502, 1910.9100, 67.3229);
	    }
	    case 2:
	    {
	        SetPlayerPos(playerid, 1015.5651,-1751.9382,24.2031);
	        SetPlayerCameraPos(playerid, 1015.7347, -1774.2500, 61.0736);
			SetPlayerCameraLookAt(playerid, 1015.0783, -1775.0101, 60.8533);
	    }
	}

	for(new i = 0; i < sizeof(GZInfo); i++) GangZoneShowForPlayer(playerid, GangZone[i], TeamColors[GZInfo[i][gFrak]]);
	for(new i =0; i <1; i++) TextDrawShowForPlayer(playerid, fhud_TD[i]);
    for(new i =0; i <1; i++)PlayerTextDrawShow(playerid, fhud_PTD[playerid][i]);
	return 1;
}

@LoginDialog(playerid);
@LoginDialog(playerid){
    SetPVarInt(playerid, "login_timer", 30);
    stringer[0] = EOS;
	format(stringer, 512, "\
    	{FFFFFF}Добро пожаловать на {daa44a}"SERVER_NAME"\n\
    	{FFFFFF}Введите свой пароль\
    	{FFFFFF}Попыток для ввода пароля:{0f4900} %d", 3 - gPlayerLogTries[playerid]);
	ShowPlayerDialog(playerid, dLogin, 3, "{bcbcbc}Авторизация", stringer, "Войти", "Отмена");
	return 1;
}

@RegisterDialog(playerid);
@RegisterDialog(playerid){
    stringer[0] = EOS;
	format(stringer, 512, "\
		{FFFFFF}Добро пожаловать, {285183}%s\n\
		{FFFFFF}Этот аккаунт{ff6347} не зарегистрирован{ffffff} на нашем сервере.\
		{FFFFFF}Для регистрации введите пароль.\
		{FFFFFF}Он будет использоваться для авторизации на нашем сервере.\n\
		{ad4546}\tПримечания:\
		{ad4546}\t- Длина пароля от 6 до 30 символов\
		{ad4546}\t- Пароль должен состоять из букв и цифр\
		{ad4546}\t- Пароль написан на латинице",GetName(playerid));
	ShowPlayerDialog(playerid, dRegister, DIALOG_STYLE_MSGBOX, "{bcbcbc}Регистрация", stringer, "Далее", "Отмена");
	return 1;
}

public OnPlayerCommandPerformed(playerid, cmdtext[], success){
    if(!IsPlayerConnected(playerid)) Kick(playerid);
	if(TextResetCMD[playerid] < gettime()) TextResetCMD[playerid] = gettime()+2;
	return 1;
}
public OnPlayerConnect(playerid) {
	SetTimerEx("hud_update", 1000, 1, "d", playerid);
    CreateTextDraws(playerid);
    
    if(playerid == INVALID_PLAYER_ID) return Kick(playerid);
    SetPlayerDataToDefault(playerid);
    GetPlayerIp(playerid, pInfo[playerid][pIP], 16);
    GetPlayerName(playerid, pInfo[playerid][pName], MAX_PLAYER_NAME);
    DelObjects(playerid);

    Plveh[playerid] 	= 						-1;
    VIPCarUse[playerid] =                       0;
    if(gSlotUsed[playerid] && GetString(playersIP[playerid], pInfo[playerid][pIP])) return Ban(playerid);
    GetPlayerIp(playerid, playersIP[playerid], 16);
    gSlotUsed[playerid] = true;
 	if(IsLoginInvalid(GetName(playerid))) {
	 	SendClientMessage(playerid, COLOR_RED, "Ваше имя содержит запрещенные символы или цифры, используйте имя формата [ Nick_Name ] на английской раскладке.");
		Kick(playerid);
 	}
	convoy[playerid] = -1;
	ResetPlayerWeaponsEx(playerid);
	CreateTextDraws(playerid);
	SetPVarInt(playerid, "PickupID", -1);
	SetPlayerColor(playerid, COLOR_GREY);
 	Rcanal[playerid] = 0;
  	PlayerTextDrawHide(playerid, hunger_progress_TD[playerid]);
	TextDrawHideForPlayer(playerid, hunger_background_TD[0]);
	TextDrawHideForPlayer(playerid, hunger_background_TD[1]);
	return 1;
}
public OnPlayerDisconnect(playerid, reason) {
    HideGear(playerid);
    gMysqlRaceCheck[playerid]++;
    gSlotUsed[playerid] = false;
    VIPCarUse[playerid] =                   0;
    if(pTemp[playerid][pCarInfoTimer] != 0)
	{
		KillTimer(pTemp[playerid][pCarInfoTimer]);
		pTemp[playerid][pCarInfoTimer] = 0;
	}
	if(ReFuelTimer[playerid] != -1)
	{
		KillTimer(ReFuelTimer[playerid]);
		ReFuelTimer[playerid] = -1;
	}
 	if(Plveh[playerid] != -1)
  	{
	  	DestroyVehicle(Plveh[playerid]);
	  	Plveh[playerid] = -1;
  	}
    for(new i; i < 6; i++) if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
    if(gOnlinePlayer[playerid][0] > 1)
	{
		#if MYSQL_R41_2 == true

	    mysql_query_string[0] = EOS;
		format(mysql_query_string,256,"SELECT * FROM "T_ONLINE_PLAYER" WHERE date >= CURDATE() AND accountid = %d",pInfo[playerid][pID]);
		new Cache:result = mysql_query(dbHandle, mysql_query_string);
		new rows = cache_num_rows();
		if(!rows)
		{
	  		mysql_query_string[0] = EOS;
			format(mysql_query_string,512,"INSERT INTO "T_ONLINE_PLAYER" (accountid,date,online_sec,afk_sec) VALUES (%d, CURDATE(), %d, %d)", pInfo[playerid][pID], gOnlinePlayer[playerid][0], gOnlinePlayerAFK[playerid][0]);
			mysql_tquery(dbHandle,mysql_query_string);
		}
		else
		{
  	  		mysql_query_string[0] = EOS;
			format(mysql_query_string,512,"UPDATE "T_ONLINE_PLAYER" SET online_sec = %d, afk_sec = %d WHERE accountid = %d AND date >= CURDATE()", gOnlinePlayer[playerid][0], gOnlinePlayerAFK[playerid][0], pInfo[playerid][pID]);
			mysql_tquery(dbHandle,mysql_query_string);
		}
		cache_delete(result);

		#else

		mysql_query_string[0] = EOS;
		format(mysql_query_string,256,"SELECT * FROM "T_ONLINE_PLAYER" WHERE date >= CURDATE() AND accountid = %d",pInfo[playerid][pID]);
		new Cache:result = mysql_query(dbHandle, mysql_query_string);
		new rows = cache_get_row_count(dbHandle);
		if(!rows)
		{
	  		mysql_query_string[0] = EOS;
			format(mysql_query_string,512,"INSERT INTO "T_ONLINE_PLAYER" (accountid,date,online_sec,afk_sec) VALUES (%d, CURDATE(), %d, %d)", pInfo[playerid][pID], gOnlinePlayer[playerid][0], gOnlinePlayerAFK[playerid][0]);
			mysql_tquery(dbHandle,mysql_query_string);
		}
		else
		{
  	  		mysql_query_string[0] = EOS;
			format(mysql_query_string,512,"UPDATE "T_ONLINE_PLAYER" SET online_sec = %d, afk_sec = %d WHERE accountid = %d AND date >= CURDATE()", gOnlinePlayer[playerid][0], gOnlinePlayerAFK[playerid][0], pInfo[playerid][pID]);
			mysql_tquery(dbHandle,mysql_query_string);
		}
        cache_delete(result, dbHandle);

	    #endif
	}

	if(AdminInfo[playerid][admPlayTime] > 1)
	{
	    mysql_query_string[0] = EOS;
		format(mysql_query_string, 150, "UPDATE "T_ADMIN" SET online_%s = %i WHERE admid = %i LIMIT 1", getDay(), AdminInfo[playerid][admPlayTime], AdminInfo[playerid][admID]);
		mysql_tquery(dbHandle, mysql_query_string, "", "");
	}

 	mysql_query_string[0] = EOS;
	format(mysql_query_string, 350, "UPDATE "T_ACCOUNTS" SET datavhod = CURDATE(), online = 1001, mute = %i, jail = %i, jailtime = %i WHERE id = %i LIMIT 1", pInfo[playerid][pMuted], pInfo[playerid][pJail], pInfo[playerid][pJailTime], pInfo[playerid][pID]);
	mysql_tquery(dbHandle, mysql_query_string, "", "");

	if(GetPVarInt(playerid,"PlayerGonka"))
	{
	    if(pTemp[playerid][pRaceID] != INVALID_VEHICLE_ID)
		{
			DestroyVehicle(pTemp[playerid][pRaceID]);
	    	pTemp[playerid][pRaceID] = INVALID_VEHICLE_ID;
  		}
		GonkaPlayers --;
		GonkaPriz -= GonkaStavka[playerid];
		TransferMoney(-1, playerid, GonkaStavka[playerid], "Возврат за не участие в гонках", 1);
		GonkaStavka[playerid] = 0;
	}
	if(GetPVarInt(playerid,"pgunobject"))
	{
		if(IsValidDynamicObject(GetPVarInt(playerid,"pgunobject")))
		DestroyDynamicObject(GetPVarInt(playerid,"pgunobject"));
	}
	if(GetPVarInt(playerid,"pgunlocat"))
	{
		gGunWorkTableStat[GetPVarInt(playerid,"pgunlocat")-1] = false;
	}
	if(pTemp[playerid][pArmyJob])
 	{
        pTemp[playerid][pArmyJob] = 0;
        gCountArmyJob ++;
	}
	if(pTemp[playerid][pCarPlayerID] != INVALID_VEHICLE_ID)
	{
		pInfo[playerid][cFuel] = VehicleInfo[pTemp[playerid][pCarPlayerID]][vFuel];
		pInfo[playerid][cMileage] = VehicleInfo[pTemp[playerid][pCarPlayerID]][vMileage];
		DestroyDynamic3DTextLabel(VehicleLabel[pTemp[playerid][pCarPlayerID]]);
		VehicleLabel[pTemp[playerid][pCarPlayerID]] = Text3D:INVALID_3DTEXT_ID;
		DestroyVehicle(pTemp[playerid][pCarPlayerID]);
		pTemp[playerid][pCarPlayerID] = INVALID_VEHICLE_ID;
	}
	if(KostiName[playerid] != INVALID_PLAYER_ID)
	{
		SendClientMessage(KostiName[playerid],COLOR_GREY,"Ваш оппонент вышел из игры");
		Predlog[KostiName[playerid]] = 0;
		KostiMoney[KostiName[playerid]] = 0;
		ZapretDice[KostiName[playerid]] = 0;
  		KostiName[KostiName[playerid]] = INVALID_PLAYER_ID;
		KostiName[playerid] = INVALID_PLAYER_ID;
	}
	if(pCuff[playerid][pCuffee] != INVALID_PLAYER_ID && reason == 1)
	{
	    new cops;
		for(new i; i < MAX_PLAYERS; i++)
		{
			if((IsPlayerStream(15.0, playerid, i) && IsACop(i) && IsPlayerConnected(i) && gPlayerLogged[i])) cops++;
		}
	    new id = pCuff[playerid][pCuffee];
	    if(cops > 0 && id == playerid)
		{
		    new cuffer = pCuff[playerid][pCuffer];
		    new string[128];
			format(string, sizeof(string), "Игрок %s вышел при аресте и был отправлен в тюрьму", GetName(playerid));
			SendClientMessageToAll(COLOR_RED, string);
			pInfo[playerid][pJail] = 4;
			pInfo[playerid][pJailTime] = ((pInfo[playerid][pWanted]*10)*60)+(60*30);
			pInfo[playerid][pWanted] = 0;
			if(pInfo[playerid][pZakon] > 1) pInfo[playerid][pZakon] --;
   			mysql_query_string[0] = EOS;
			format(mysql_query_string, 200, "UPDATE "T_ACCOUNTS" SET jail = %i, jailtime = %i, wanted = 0, zakon = %i WHERE id = %i", pInfo[playerid][pJail], pInfo[playerid][pJailTime], pInfo[playerid][pZakon], pInfo[playerid][pID]);
			mysql_tquery(dbHandle, mysql_query_string, "", "");
			pCuff[cuffer][pCuffer] = pCuff[cuffer][pCuffee] = pCuff[playerid][pCuffee] = pCuff[playerid][pCuffer] = INVALID_PLAYER_ID;
		}
		else if(!IsPlayerConnected(id))
		{
		    SetPlayerSpecialAction(id, SPECIAL_ACTION_NONE);
			RemovePlayerAttachedObject(id, 0);
   			pCuff[id][pCuffer] = pCuff[id][pCuffee] = pCuff[playerid][pCuffee] = pCuff[playerid][pCuffer] = INVALID_PLAYER_ID;
			SendClientMessage(playerid, COLOR_LIME, "Офицер, надевший на Вас наручники, вышел из игры. Наручники сняты.");
		}
	}
 	if(GetPVarInt(playerid, "arendkey") != -1)
	{
		new v = GetPVarInt(playerid, "arendkey");
		if(ArendInfo[v][aPlayerID] == playerid)
		{
			ArendInfo[v][aPlayerID] = INVALID_PLAYER_ID;
            SetVehicleToRespawn(ArendInfo[v][aID]);
			ToggleLock(ArendInfo[v][aID], 0);
		}
    }
	if(GetPVarInt(playerid,"objectcop"))
	{
		DestroyDynamicObject(GetPVarInt(playerid,"objectcop"));
		DestroyDynamicArea(Ships[playerid]);
	}
	BedDefault(playerid);
	SetPlayerSkills(playerid);
 	if(PlayerUseMask[playerid])
	{
        PlayerUseMask[playerid] = false;
        if(MaskTimer[playerid] != -1)
        {
			KillTimer(MaskTimer[playerid]);
			MaskTimer[playerid] = -1;
		}
	}
	if(UseGPS[playerid])
	{
    	DisablePlayerRaceCheckpoint(playerid);
    	UseGPS[playerid] = false;
    	for(new i; i < 2; i++) TextDrawHideForPlayer(playerid, enable_gps_TD[i]);
	}
	if(pInfo[playerid][pJob] == JOB_BUS && pTemp[playerid][pBusID] != INVALID_VEHICLE_ID)
	{
		SetVehicleToRespawn(pTemp[playerid][pBusID]);
	}
	if(pInfo[playerid][pJob] == JOB_TRUCKER && pTemp[playerid][pTruckID] != INVALID_VEHICLE_ID)
	{
		SetVehicleToRespawn(pTemp[playerid][pTruckID]);
		if(IsValidDynamic3DTextLabel(pTemp[playerid][pTruckWagonText])) DestroyDynamic3DTextLabel(pTemp[playerid][pTruckWagonText]);
		pTemp[playerid][pTruckID] = INVALID_VEHICLE_ID;
		if(pTemp[playerid][pTruckWagonID] != INVALID_VEHICLE_ID)
		{
			DestroyVehicle(pTemp[playerid][pTruckWagonID]);
			pTemp[playerid][pTruckWagonID] = INVALID_VEHICLE_ID;
		}
		for(new i2;i2<4;i2++)
		{
			for(new i;i<10;i++)
			{
				if(gTruckLoadTurn[i2][i] == playerid || gTruckLoadTurn[i2][i] == playerid) gTruckLoadTurn[i2][i] = INVALID_PLAYER_ID;
			}
		}
	}
	if(GetPVarInt(playerid, "PriceTaxi") > 0)
	{
		pInfo[playerid][pPayCheck] += GetPVarInt(playerid, "TaxiMoney");
		if(IsValidDynamic3DTextLabel(TaxiText3D[playerid]))
		{
			DestroyDynamic3DTextLabel(TaxiText3D[playerid]);
            TaxiText3D[playerid] = Text3D:INVALID_3DTEXT_ID;
   		}
		SetVehicleToRespawn(pTemp[playerid][pTaxiID]);
	}
	if(pTemp[playerid][pMechID] != INVALID_VEHICLE_ID) SetVehicleToRespawn(pTemp[playerid][pMechID]);
	if(pTemp[playerid][pWork] == 1) pTemp[playerid][pWork] = 0;
	if(pTemp[playerid][pWork] == 2)
	{
		pTemp[playerid][pWork] = 0;
		if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
	}
	foreach(new i : Player)
	{
        if(GetPlayerState(i) == PLAYER_STATE_SPECTATING && pInfo[i][Spectating][0] == playerid)
        {
            GameTextForPlayer(i, "~r~PLAYER DISCONNECTED", 3000, 3);
            cmd_specoff(i);
	    }
	}
	for(new i =0; i <1; i++) TextDrawHideForPlayer(playerid, fhud_TD[i]);
    for(new i =0; i <1; i++) DestroyPlayerTD(playerid, fhud_PTD[playerid][i]);

    for(new i = 0; i < 7; i++) TextDrawHideForPlayer(playerid, panel_capture_TD[i]);
    DestroyPlayerTD(playerid, hunger_progress_TD[playerid]);

	for(new i = 0; i < 8; i++) DestroyPlayerTD(playerid, speed_PTD[playerid][i]);
    for(new i = 0; i < 10; i++) DestroyPlayerTD(playerid, security_code_TD[playerid][i]);
	for(new i = 0; i < 4; i++) DestroyPlayerTD(playerid, status_work_TD[playerid][i]);
	for(new i = 0; i < 1; i++) DestroyPlayerTD(playerid, zz_PTD[playerid][i]);
	DestroyPlayerTD(playerid, car_showroom_TD[playerid][0]);
	DestroyPlayerTD(playerid, car_showroom_TD[playerid][1]);
	CancelSelectTextDraw(playerid);
	SaveAccount(playerid);
	SetPlayerDataToDefault(playerid);
	if(GetPlayerConvoy(playerid))
	{
	    SendClientMessage(GetArrestID(playerid), -1, "Ваш конвой покинул сервер, вы свободны!");
	    TogglePlayerControllable(GetArrestID(playerid), 1);
	    ClearAnimations(GetArrestID(playerid));
	    ClearValue(playerid);
	}
	return 1;
}

stock DestroyPlayerTD(playerid, &PlayerText:td)
{
	if(td != PlayerText:INVALID_TEXT_DRAW)
	{
	    PlayerTextDrawDestroy(playerid, td);
	    td = PlayerText:INVALID_TEXT_DRAW;
	}
	return 1;
}

stock PreloadAnimLibAll(playerid){
	PreloadAnimLib(playerid,"CARRY");
	PreloadAnimLib(playerid,"SHOP");
	PreloadAnimLib(playerid,"SMOKING");
	PreloadAnimLib(playerid,"FOOD");
	PreloadAnimLib(playerid,"DEALER");
	PreloadAnimLib(playerid,"CRACK");
	PreloadAnimLib(playerid,"CARRY");
	PreloadAnimLib(playerid,"COP_AMBIENT");
	PreloadAnimLib(playerid,"PED");
	PreloadAnimLib(playerid,"CAR_CHAT");
	PreloadAnimLib(playerid,"CHAINSAW");
	PreloadAnimLib(playerid,"FAT");
	PreloadAnimLib(playerid,"GOGGLES");
	PreloadAnimLib(playerid,"GANGS");
	PreloadAnimLib(playerid,"RIOT");
	PreloadAnimLib(playerid,"CARRY");
	PreloadAnimLib(playerid,"BASEBALL");
	PreloadAnimLib(playerid,"INT_SHOP");
	PreloadAnimLib(playerid,"BD_FIRE");
}

stock PreloadAnimLibCmd(playerid)
{
	PreloadAnimLib(playerid,"CARRY");
    PreloadAnimLib(playerid,"BOMBER");
    PreloadAnimLib(playerid,"DANCING");
    PreloadAnimLib(playerid,"ON_LOOKERS");
    PreloadAnimLib(playerid,"BEACH");
    PreloadAnimLib(playerid,"BENCHPRESS");
    PreloadAnimLib(playerid,"SWEET");
    PreloadAnimLib(playerid,"LOWRIDER");
    PreloadAnimLib(playerid,"PARK");
    PreloadAnimLib(playerid,"BAR");
	PreloadAnimLib(playerid,"BSKTBALL");
    PreloadAnimLib(playerid,"MISC");
    PreloadAnimLib(playerid,"CAMERA");
    PreloadAnimLib(playerid,"INT_HOUSE");
    PreloadAnimLib(playerid,"INT_OFFICE");
    PreloadAnimLib(playerid,"JST_BUISNESS");
    PreloadAnimLib(playerid,"KISSING");
    PreloadAnimLib(playerid,"MEDIC");
    PreloadAnimLib(playerid,"PAULNMAC");
    PreloadAnimLib(playerid,"GHANDS");
    PreloadAnimLib(playerid,"POLICE");
    PreloadAnimLib(playerid,"SWAT");
}

public OnPlayerSpawn(playerid)
{
	if(!gPlayerLogged[playerid])
	{
	    SendClientMessage(playerid, COLOR_RED, PlayerNeedToLoggedForToPlay);
		return SKick(playerid, 2);
	}
	AC_NoTwoKillFrag[playerid] = false;
	if(gKilled[playerid] == 1) gKilled[playerid] = 0;
	if(pInfo[playerid][pCash])
	{
		ResetPlayerMoney(playerid);
		GivePlayerMoney(playerid, pInfo[playerid][pCash]);
	}
	if(pTemp[playerid][pWork])
	{
		pTemp[playerid][pWork] = 0;
		for(new i; i < 4; i++) PlayerTextDrawHide(playerid, status_work_TD[playerid][i]);
	}
	if(pTemp[playerid][pArmyJob])
 	{
        pTemp[playerid][pArmyJob] = 0;
        gCountArmyJob ++;
        SendClientMessage(playerid, COLOR_RED, "Вы покинули склад оружия и больше не являетесь охранником");
	}
	if(GetPVarInt(playerid, "TaxiPrice") > 0)
	{
		DeletePVar(playerid, "TimeTaxi");
		DeletePVar(playerid, "TaxiPrice");
		DeletePVar(playerid, "PlayerTaxi");
	}
	if(FlyInfo[playerid][fType] == 1) SetPlayerCamera(playerid, 0);
    TogglePlayerControllable(playerid, true);
    SetArmour(playerid, 0);
    if(pInfo[playerid][pHeal] < 42) PlayerDied[playerid] = true;
    else SetHealth(playerid, pInfo[playerid][pHeal]);
    SetHunger(playerid, pInfo[playerid][pHunger]);
 	DisablePlayerCheckpoint(playerid);
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerScore(playerid, pInfo[playerid][pLevel]);
	if(pInfo[playerid][pMember]) SetPlayerSkin(playerid, pInfo[playerid][pMemberSkin]);
	else SetPlayerSkin(playerid, pInfo[playerid][pModel]);
	SetPlayerColorEx(playerid, TeamColors[GetTeamID(playerid)]);
	if(pInfo[playerid][pFightStyle]) SetPlayerFightingStyle(playerid, pInfo[playerid][pFightStyle]);
	else SetPlayerFightingStyle(playerid, 0);
	if(pInfo[playerid][pWanted]) SetPlayerWantedLevel(playerid, pInfo[playerid][pWanted]);
	PlayerPlaySound(playerid, 1184, 0.0, 0.0, 0.0);
	SetPVarInt(playerid, "K_Times", 0);
    if(CanUse[playerid]>0) CanUse[playerid]=0;
    if(gym_cloakroom[playerid]) gym_cloakroom[playerid] = false;
    SetPlayerSkills(playerid);
    pTemp[playerid][pAbletoGun] = 2;
    new weapid, ammo;
	for (new i;i<13;i++)
	{
		GetPlayerWeaponData(playerid,i,weapid,ammo);
		if(weapid && ammo && gGuns[playerid][i] == weapid && gAmmos[playerid][i] <= ammo)
		{
		    GivePlayerWeaponEx(playerid,gGuns[playerid][i],gAmmos[playerid][i]);
		}
	}
	if(GetPVarInt(playerid, "first_spawn"))
	{
	    new gun[128];
		GetPVarString(playerid,"mysqlgun",gun,128);
		DeletePVar(playerid,"mysqlgun");
		if(strlen(gun))
		{
			new guns[6],ammos[6],datas[2][56];
			explode(datas,gun,";");
			sscanf(datas[0],"p<|>a<i>[6]",guns);
			sscanf(datas[1],"p<|>a<i>[6]",ammos);
			for(new i;i<6;i++) GivePlayerWeaponEx(playerid,guns[i],ammos[i]);
		}
		PreloadAnimLibAll(playerid);
		DeletePVar(playerid, "first_spawn");
	}
	new string[128];
	if(pInfo[playerid][Spectating][0] != INVALID_PLAYER_ID)
	{
	    SetPlayerPos(playerid, GetPVarFloat(playerid, "SpecX"), GetPVarFloat(playerid, "SpecY"), GetPVarFloat(playerid, "SpecZ"));
	    SetPlayerFacingAngle(playerid, GetPVarFloat(playerid, "SpecA"));
	    SetCameraBehindPlayer(playerid);
		SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "SpecVw"));
		SetPlayerInterior(playerid, GetPVarInt(playerid, "SpecInt"));
		DeletePVar(playerid, "SpecInt");
		DeletePVar(playerid, "SpecVw");
		DeletePVar(playerid, "SpecX");
		DeletePVar(playerid, "SpecY");
		DeletePVar(playerid, "SpecZ");
		DeletePVar(playerid, "SpecA");
		pInfo[playerid][Spectating][0] = pInfo[playerid][Spectating][1] = INVALID_PLAYER_ID;
		SetPlayerColorEx(playerid, TeamColors[GetTeamID(playerid)]);
		SetPlayerScore(playerid, pInfo[playerid][pLevel]);
		if(pInfo[playerid][pWanted]) SetPlayerWantedLevel(playerid, pInfo[playerid][pWanted]);
		if(pInfo[playerid][pMember]) SetPlayerSkin(playerid, pInfo[playerid][pMemberSkin]);
		else SetPlayerSkin(playerid, pInfo[playerid][pModel]);
		return 1;
	}
	if(GetPVarInt(playerid, "Fly_CurrentPlace"))
	{
	    SetPlayerPos(playerid, GetPVarFloat(playerid, "CurrentFlyX"), GetPVarFloat(playerid, "CurrentFlyY"), GetPVarFloat(playerid, "CurrentFlyZ"));
	    SetCameraBehindPlayer(playerid);
		SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "CurrentFlyVw"));
		SetPlayerInterior(playerid, GetPVarInt(playerid, "CurrentFlyInt"));
		DeletePVar(playerid, "Fly_CurrentPlace");
		DeletePVar(playerid, "CurrentFlyInt");
		DeletePVar(playerid, "CurrentFlyVw");
		DeletePVar(playerid, "CurrentFlyX");
		DeletePVar(playerid, "CurrentFlyY");
		DeletePVar(playerid, "CurrentFlyZ");
		pInfo[playerid][Spectating][0] = pInfo[playerid][Spectating][1] = INVALID_PLAYER_ID;
		SetPlayerColorEx(playerid, TeamColors[GetTeamID(playerid)]);
		SetPlayerScore(playerid, pInfo[playerid][pLevel]);
		if(pInfo[playerid][pWanted]) SetPlayerWantedLevel(playerid, pInfo[playerid][pWanted]);
		if(pInfo[playerid][pMember]) SetPlayerSkin(playerid, pInfo[playerid][pMemberSkin]);
		else SetPlayerSkin(playerid, pInfo[playerid][pModel]);
		return 1;
	}
	if(GetPVarInt(playerid, "Fly_PlaceLaunch"))
	{
	    SetPlayerPos(playerid, GetPVarFloat(playerid, "FlyX"), GetPVarFloat(playerid, "FlyY"), GetPVarFloat(playerid, "FlyZ"));
	    SetPlayerFacingAngle(playerid, GetPVarFloat(playerid, "FlyA"));
	    SetCameraBehindPlayer(playerid);
		SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "FlyVw"));
		SetPlayerInterior(playerid, GetPVarInt(playerid, "FlyInt"));
		DeletePVar(playerid, "Fly_PlaceLaunch");
		DeletePVar(playerid, "FlyInt");
		DeletePVar(playerid, "FlyVw");
		DeletePVar(playerid, "FlyX");
		DeletePVar(playerid, "FlyY");
		DeletePVar(playerid, "FlyZ");
		DeletePVar(playerid, "FlyA");
		SetPlayerColorEx(playerid, TeamColors[GetTeamID(playerid)]);
		SetPlayerScore(playerid, pInfo[playerid][pLevel]);
		if(pInfo[playerid][pWanted]) SetPlayerWantedLevel(playerid, pInfo[playerid][pWanted]);
		if(pInfo[playerid][pMember]) SetPlayerSkin(playerid, pInfo[playerid][pMemberSkin]);
		else SetPlayerSkin(playerid, pInfo[playerid][pModel]);
		return 1;
	}
	else if(ClothesRound[playerid] == 1) // выбор скина при регистрации
	{
	    SetPlayerPos(playerid,-668.6816, -1581.2933, 1001.0993);
		SetPlayerFacingAngle(playerid,182.00000);
		SetPlayerCameraPos(playerid, -668.6038, -1585.5938, 1001.2456);

		SetPlayerCameraLookAt(playerid,-668.6747, -1584.5967, 1001.1459);
		SetPlayerInterior(playerid, 1);
		SetPlayerVirtualWorld(playerid,playerid);
		SendClientMessage(playerid, 0x3399FFFF, "Выберите себе подходящую одежду, после выбора нажмите {63BD4E}SAVE");
		SendClientMessage(playerid, 0xFFCC00FF, "Чтобы просмотреть одежду, используйте {FF6600}NEXT >> {FFCC00}и {FF6600}<< BACK");
		TogglePlayerControllable(playerid, 0);
		ShowMenuForPlayer(clothing_selection, playerid);
		SetHealth(playerid, 100.0);
		if(pInfo[playerid][pSex] == 1) SetPlayerSkin(playerid, JoinRegM[SelectCharPlace[playerid]]), ChosenSkin[playerid] = JoinRegM[0];
		else SetPlayerSkin(playerid, JoinRegF[SelectCharPlace[playerid]]), ChosenSkin[playerid] = JoinRegF[0];
	}
	else if(ClothesRound[playerid] == 2)
	{
	    SendClientMessage(playerid, 0x3399FFFF, "Выберите себе подходящую одежду,  после выбора нажмите {63BD4E}BUY{3399FF}, для отмены нажмите {F04245}EXIT");
		SendClientMessage(playerid, 0xFFCC00FF, "Чтобы просмотреть одежду, используйте {FF6600}NEXT >> {FFCC00}и {FF6600}<< BACK");
		SetPlayerPos(playerid,-1773.3794, 1767.9017, 2377.4482);
	    SetPlayerFacingAngle(playerid,42.2389);
	    SetPlayerCameraPos(playerid, -1775.5872, 1769.9413, 2377.9160);
		//SetPlayerCameraPos(playerid,2180.4900-3.5*floatsin(267.7833,degrees),1622.0040+3.5*floatcos(267.7833,degrees),1043.5634);
		SetPlayerCameraLookAt(playerid,-1774.8374, 1769.2820, 2377.7180);
		SetPlayerVirtualWorld(playerid, playerid);
	    SetPlayerInterior(playerid, 1);
	    TogglePlayerControllable(playerid, 0);
		ShowMenuForPlayer(buy_clothing, playerid);
		if(pInfo[playerid][pSex] == 1)
		{
			SelectCharPlace[playerid] = 0;
			SetPlayerSkin(playerid, JoinShopM[SelectCharPlace[playerid]][0]);
			format(string, sizeof(string), "~w~~n~~n~~n~~n~~n~~n~COST: ~g~%i$", JoinShopM[SelectCharPlace[playerid]][1]);
		}
		else
		{
			SelectCharPlace[playerid] = 0;
			SetPlayerSkin(playerid, JoinShopF[SelectCharPlace[playerid]][0]);
			format(string, sizeof(string), "~w~~n~~n~~n~~n~~n~~n~COST: ~g~%i$", JoinShopF[SelectCharPlace[playerid]][1]);
		}
		GameTextForPlayer(playerid, string, 3000, 3);
	}
	else if(pInfo[playerid][pJail] == 1)
	{
		new rand_coord = random(sizeof(JailSpawn));
	    SetPlayerPos(playerid, JailSpawn[rand_coord][0], JailSpawn[rand_coord][1], JailSpawn[rand_coord][2], 1);
	    SetPlayerFacingAngle(playerid, JailSpawn[rand_coord][3]);
		SetPlayerInterior(playerid, 1);
		SetPlayerVirtualWorld(playerid, 1);
		SetCameraBehindPlayer(playerid);
		format(string, sizeof(string), "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~JAILED: ~w~%d", pInfo[playerid][pJailTime]);
		GameTextForPlayer(playerid, string, 3000, 3);
		SendClientMessage(playerid, COLOR_RED, "Вы еще не отсидели свой тюремный срок (/jailtime)");
	}
	else if(pInfo[playerid][pJail] == 2)
	{
		new rand_coord = random(sizeof(JailSpawn));
	    SetPlayerPos(playerid, JailSpawn[rand_coord][0], JailSpawn[rand_coord][1], JailSpawn[rand_coord][2], 1);
	    SetPlayerFacingAngle(playerid, JailSpawn[rand_coord][3]);
		SetPlayerInterior(playerid, 1);
		SetPlayerVirtualWorld(playerid, 2);
		SetCameraBehindPlayer(playerid);
		format(string, sizeof(string), "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~JAILED: ~w~%d", pInfo[playerid][pJailTime]);
		GameTextForPlayer(playerid, string, 3000, 3);
		SendClientMessage(playerid, COLOR_RED, "Вы еще не отсидели свой тюремный срок (/jailtime)");
	}
	else if(pInfo[playerid][pJail] == 3)
	{
	    new rand_coord = random(sizeof(JailSpawn));
	    SetPlayerPos(playerid, JailSpawn[rand_coord][0], JailSpawn[rand_coord][1], JailSpawn[rand_coord][2], 1);
	    SetPlayerFacingAngle(playerid, JailSpawn[rand_coord][3]);
		SetPlayerInterior(playerid, 1);
		SetPlayerVirtualWorld(playerid, 3);
		SetCameraBehindPlayer(playerid);
		format(string, sizeof(string), "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~JAILED: ~w~%d", pInfo[playerid][pJailTime]);
		GameTextForPlayer(playerid, string, 3000, 3);
		SendClientMessage(playerid, COLOR_RED, "Вы еще не отсидели свой тюремный срок (/jailtime)");
	}
	else if(pInfo[playerid][pJail] == 4)
	{
		SetPlayerPos(playerid,5494.0488,1245.3721,23.1886);
		SetPlayerFacingAngle(playerid, 270.0000);
		SetPlayerInterior(playerid, 1);
		SetPlayerVirtualWorld(playerid, 1);
		SetCameraBehindPlayer(playerid);
		format(string, sizeof(string), "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~JAILED: ~w~%d", pInfo[playerid][pJailTime]);
		GameTextForPlayer(playerid, string, 3000, 3);
		if(pInfo[playerid][pText][3] == 0)
		{
			SendClientMessage(playerid, COLOR_RED, "Вы еще не отсидели свой тюремный срок (/jailtime)");
		}
		else
		{
		    if(!GetString(pInfo[playerid][pJailReason], "None"))
		    {
		        format(string, sizeof(string), "[Информация] {FFFFFF}Вы были посажены в деморган в оффлайне. Причина: %s (/jailtime)", pInfo[playerid][pJailReason]);
				SendClientMessage(playerid, COLOR_YELLOW, string);
				strmid(pInfo[playerid][pJailReason], "None", 0, strlen("None"), 32);
				MysqlUpdatePlayerStr(playerid, "jailreason", pInfo[playerid][pJailReason]);
			}
		    mysql_query_string[0] = EOS;
			format(mysql_query_string, 256, "UPDATE "T_ACCOUNTS" SET text = '%i, %i, %i, 0, %i' WHERE name = '%s'", pInfo[playerid][pText][0], pInfo[playerid][pText][1], pInfo[playerid][pText][2], pInfo[playerid][pText][4], GetName(playerid));
			mysql_tquery(dbHandle, mysql_query_string, "", "");
		}
	}
	else if(PlayerDied[playerid])
	{
	    switch(random(3))
	    {
	        case 0:
			{
			    SetPlayerPos(playerid,2468.6204,-2147.3486,634.2466,1);
			    SetPlayerFacingAngle(playerid, 90.0000);
			    SetPlayerVirtualWorld(playerid,4);
			    SetPlayerInterior(playerid,1);
			}
	        case 1:
	        {
	            SetPlayerPos(playerid,367.0321,158.1389,1003.8500,1);
	            SetPlayerFacingAngle(playerid, 90.0000);
	            SetPlayerVirtualWorld(playerid,5);
	            SetPlayerInterior(playerid,1);
	        }
	        case 2:
			{
			    SetPlayerPos(playerid,2468.6204,-2147.3486,634.2466,1);
			    SetPlayerFacingAngle(playerid, 90.0000);
			    SetPlayerVirtualWorld(playerid,6);
			    SetPlayerInterior(playerid,1);
			}
	    }
	    SetHealth(playerid, 10+random(40));
        SendClientMessage(playerid,COLOR_WHITE,"Вам придется пройти курс лечения или вылечиться у медика. Войдите в палату и делайте процедуру.");
	}
    else if(pInfo[playerid][pHouse] != 0 && pInfo[playerid][pSpawnChange] == 1)
	{
	    new i = pInfo[playerid][pHouse], _c = HouseInfo[i][hClass], _i = HouseInfo[i][hInt];
		SetPlayerPos(playerid, HintsInfo[_c][_i][hiExitX], HintsInfo[_c][_i][hiExitY], HintsInfo[_c][_i][hiExitZ], 1);
		SetPlayerFacingAngle(playerid, HintsInfo[_c][_i][hiExitFA]);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, HintsInfo[_c][_i][hiInt]);
		SetPlayerVirtualWorld(playerid, HouseInfo[i][hID]);
		SetPVarInt(playerid, "UseHouse", i);
	}
	else if(pInfo[playerid][pMember] == TEAM_LSMAYOR && pInfo[playerid][pSpawnChange] == 2)
	{
		SetPlayerPos(playerid, -937.2898,873.0830,2512.9500, 1);// Спавн администрации южный
		SetPlayerFacingAngle(playerid, 270.1464);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, 3);
		SetPlayerVirtualWorld(playerid, 1);
	}
	else if(pInfo[playerid][pMember] == TEAM_SFMAYOR && pInfo[playerid][pSpawnChange] == 2)
	{
		SetPlayerPos(playerid, 170.9268,1161.7322,542.4528, 1);
		SetPlayerFacingAngle(playerid, 90.9611);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, 3);
		SetPlayerVirtualWorld(playerid, 2);
	}
	else if(pInfo[playerid][pMember] == TEAM_LVMAYOR && pInfo[playerid][pSpawnChange] == 2)
	{
		SetPlayerPos(playerid, -937.2898,873.0830,2512.9500, 1);
		SetPlayerFacingAngle(playerid, 270.1464);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, 3);
		SetPlayerVirtualWorld(playerid, 3);
	}
	else if(pInfo[playerid][pMember] == TEAM_DPS && pInfo[playerid][pSpawnChange] == 2)
	{
	    SetPlayerPos(playerid, 877.2130,2097.5388,2721.8101);
	    SetPlayerFacingAngle(playerid, 269.9558);
	    SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, 1);
	    SetPlayerVirtualWorld(playerid, 1);
	}
	else if(pInfo[playerid][pMember] == TEAM_SFPD && pInfo[playerid][pSpawnChange] == 2)
	{
		SetPlayerPos(playerid, 2210.4004,-523.8504,-2.6141, 1);
	    SetPlayerFacingAngle(playerid, 269.9558);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, 1);
		SetPlayerVirtualWorld(playerid, 2);
	}
	else if(pInfo[playerid][pMember] == TEAM_FBI && pInfo[playerid][pSpawnChange] == 2)
	{
		SetPlayerPos(playerid, 227.8871,-465.6732,1006.4200, 1);
		SetPlayerFacingAngle(playerid, 93.4680);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, 2);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(pInfo[playerid][pMember] == TEAM_LSHOSPITAL && pInfo[playerid][pSpawnChange] == 2)
	{
		SetPlayerPos(playerid, 2480.3799,-2140.8325,634.2466, 1);//Спавн больницы южный
		SetPlayerFacingAngle(playerid, 359.5859);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, 1);
		SetPlayerVirtualWorld(playerid, 4);
	}
	else if(pInfo[playerid][pMember] == TEAM_SFHOSPITAL && pInfo[playerid][pSpawnChange] == 2)
	{
		SetPlayerPos(playerid, 375.3733,146.7827,1003.8500, 1);//Спавн больницы батырево
		SetPlayerFacingAngle(playerid, 79.2507);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, 1);
		SetPlayerVirtualWorld(playerid, 5);
	}
	else if(pInfo[playerid][pMember] == TEAM_LVHOSPITAL && pInfo[playerid][pSpawnChange] == 2)
	{
		SetPlayerPos(playerid, 2480.3799,-2140.8325,634.2466, 1);
		SetPlayerFacingAngle(playerid, 359.5859);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, 1);
		SetPlayerVirtualWorld(playerid, 6);
	}
	else if(pInfo[playerid][pMember] == TEAM_AUTOSCHOOL && pInfo[playerid][pSpawnChange] == 2)
	{
		SetPlayerPos(playerid, 2311.7302,-1941.5127,2022.9600, 1);//Спавн автошкола
		SetPlayerFacingAngle(playerid, 7.8568);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, 1);
		SetPlayerVirtualWorld(playerid, 1);
	}
	else if(pInfo[playerid][pMember] == TEAM_GROVE && pInfo[playerid][pSpawnChange] == 2)
	{
		SetPlayerPos(playerid, 420.3829,1658.2628,-31.3641, 1);// Спавн опг Южная
		SetPlayerFacingAngle(playerid, 0.8654);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, 1);
	    SetPlayerVirtualWorld(playerid, 1);
	}
	else if(pInfo[playerid][pMember] == TEAM_BALLAS && pInfo[playerid][pSpawnChange] == 2)
	{
		SetPlayerPos(playerid, 420.3829,1658.2628,-31.3641, 1);
		SetPlayerFacingAngle(playerid, 0.8654);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, 1);
	    SetPlayerVirtualWorld(playerid, 5);
	}
	else if(pInfo[playerid][pMember] == TEAM_RIFA && pInfo[playerid][pSpawnChange] == 2)
	{
		SetPlayerPos(playerid, 420.3829,1658.2628,-31.3641, 1);
		SetPlayerFacingAngle(playerid, 0.8654);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, 1);
	    SetPlayerVirtualWorld(playerid, 3);
	}
	else if(pInfo[playerid][pMember] == TEAM_AZTECAS && pInfo[playerid][pSpawnChange] == 2)
	{
		SetPlayerPos(playerid, 420.3829,1658.2628,-31.3641, 1);
		SetPlayerFacingAngle(playerid, 0.8654);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, 1);
	    SetPlayerVirtualWorld(playerid, 4);
	}
	else if(pInfo[playerid][pMember] == TEAM_VAGOS && pInfo[playerid][pSpawnChange] == 2)
	{
		SetPlayerPos(playerid, 420.3829,1658.2628,-31.3641, 1);
		SetPlayerFacingAngle(playerid, 0.8654);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, 1);
	    SetPlayerVirtualWorld(playerid, 2);
	}
	else if(pInfo[playerid][pMember] == TEAM_NG && pInfo[playerid][pSpawnChange] == 2)
	{
	    SetPlayerPos(playerid, -303.7119,322.7673,2213.0000, 1);// Спавн армии
		SetPlayerFacingAngle(playerid, 182.3619);
		SetCameraBehindPlayer(playerid);
	    SetPlayerInterior(playerid, 1);
	    SetPlayerVirtualWorld(playerid, 1);
	}
	else if(pInfo[playerid][pMember] == TEAM_LCN && pInfo[playerid][pSpawnChange] == 2)
	{
		SetPlayerPos(playerid, 260.6152,1772.5627,575.3359, 1);// Спавн италия мафия
		SetPlayerFacingAngle(playerid, 179.7802);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, 5);
		SetPlayerVirtualWorld(playerid, 1);
	}
	else if(pInfo[playerid][pMember] == TEAM_YAKUZA && pInfo[playerid][pSpawnChange] == 2)
	{
		SetPlayerPos(playerid, 2559.3193,-1845.4357,2522.8401, 1);// Спавн Якудзы
		SetPlayerFacingAngle(playerid, 179.7802);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, 5);
		SetPlayerVirtualWorld(playerid, 2);
	}
	else if(pInfo[playerid][pMember] == TEAM_RM && pInfo[playerid][pSpawnChange] == 2)
	{
		SetPlayerPos(playerid, -2631.7493,2917.9336,2738.6201, 1);//Спавн Русская Мафия
		SetPlayerFacingAngle(playerid, 179.7802);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, 5);
		SetPlayerVirtualWorld(playerid, 3);
	}
	else if(pInfo[playerid][pMember] == TEAM_LSNEWS && pInfo[playerid][pSpawnChange] == 2)
	{
		SetPlayerPos(playerid, -108.1242,461.7322,3013.1499, 1);
		SetPlayerFacingAngle(playerid, 359.0987);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, 1);
		SetPlayerVirtualWorld(playerid, 1);
	}
	else if(pInfo[playerid][pMember] == TEAM_SFNEWS && pInfo[playerid][pSpawnChange] == 2)
	{
		SetPlayerPos(playerid, -1071.3462,2210.8601,1002.0000, 1);
		SetPlayerFacingAngle(playerid, 359.0987);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, 1);
		SetPlayerVirtualWorld(playerid, 2);
	}
	else if(pInfo[playerid][pMember] == TEAM_LVNEWS && pInfo[playerid][pSpawnChange] == 2)
	{
		SetPlayerPos(playerid, -1742.6841,2593.1270,62.6659, 1);
		SetPlayerFacingAngle(playerid, 359.0987);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, 1);
		SetPlayerVirtualWorld(playerid, 3);
	}
	else if(pInfo[playerid][pMember] == TEAM_LVPD && pInfo[playerid][pSpawnChange] == 2)
	{
		SetPlayerPos(playerid, 877.2130,2097.5388,2721.8101, 1);
	    SetPlayerFacingAngle(playerid, 269.9558);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, 1);
		SetPlayerVirtualWorld(playerid, 3);
	}
	else if(pInfo[playerid][pMember] >= 1 && pInfo[playerid][pSpawnChange] == 0 || pInfo[playerid][pMember] == 0)
	{
		if(pInfo[playerid][pLevel] >= 1 && pInfo[playerid][pLevel] <= 3)
		{
		    switch(random(3))
		    {
				//ЖД-Вокзал
		        case 0:
				{
					SetPlayerPos(playerid, 2515.5547,-2119.0225,24.1524);
					SetPlayerFacingAngle(playerid, 270.0000);
				}
		        case 1:
				{
					SetPlayerPos(playerid, 2267.5657,-2189.0391,22.0084);
					SetPlayerFacingAngle(playerid, 270.0000);
				}
				//Автовокзал
				case 2:
				{
				    SetPlayerPos(playerid,2267.5657,-2189.0391,22.0084);
					SetPlayerFacingAngle(playerid,358.9097);
				}
		    }
			SetCameraBehindPlayer(playerid);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
		if(pInfo[playerid][pLevel] >= 4 && pInfo[playerid][pLevel] <= 7)
	    {
			SetPlayerPos(playerid, 1924.9647,2076.8179,15.7370);
			SetPlayerFacingAngle(playerid, 180.0000);
			SetCameraBehindPlayer(playerid);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
		if(pInfo[playerid][pLevel] >= 8)
	    {
			SetPlayerPos(playerid, 1820.8707,2524.4622,15.8179);
			SetPlayerFacingAngle(playerid, 123.9908);
			SetCameraBehindPlayer(playerid);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	gPlayerSpawned[playerid] = true;
	return 1;
}

public OnPlayerDeath(playerid, killerid, reason)
{
	HideGear(playerid);
    if(playerid == killerid) return ToCheat(playerid, 2746);
	if(!IsPlayerConnected(killerid) && killerid != INVALID_PLAYER_ID) return ToCheat(playerid, 2747);
	if(GetPlayerState(playerid) != 7) return ToCheat(playerid, 2748);
	if(killerid != INVALID_PLAYER_ID && !gPlayerSpawned[playerid]) return ToCheat(playerid, 2749);
	new string[128];
	gKilled[playerid] = 1;
	pTemp[playerid][pAbletoGun] = 3;
	ResetPlayerWeaponsEx(playerid);
	if(GetPVarInt(playerid, "enable_animation"))
	{
	    DeletePVar(playerid, "enable_animation");
	    TextDrawHideForPlayer(playerid, enable_animation_TD[0]);
	    TextDrawHideForPlayer(playerid, enable_animation_TD[1]);
	}
	if(FlyInfo[playerid][fType] == 1) SetPlayerCamera(playerid, 0);
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
	gPlayerSpawned[playerid] = false;
	if(CanUse[playerid]>0) CanUse[playerid]=0;
	if(gym_cloakroom[playerid]) gym_cloakroom[playerid] = false;
	if(IsPlayerAttachedObjectSlotUsed(playerid, 7)) RemovePlayerAttachedObject(playerid, 7);
	SetPVarInt(playerid,"K_Times",GetPVarInt(playerid,"K_Times") + 1);
	if(GetPVarInt(playerid,"K_Times") > 1) return ToCheat(playerid, 5244);
	if(pTemp[playerid][pDeathCar] != INVALID_VEHICLE_ID && GetPlayerState(playerid) != PLAYER_STATE_SPECTATING)
	{
 		pTemp[playerid][pDeathCar] = INVALID_VEHICLE_ID;
		ExitCar(playerid);
		new Float:X,Float:Y,Float:Z;
	    GetPlayerPos(playerid,X,Y,Z);
		SetPlayerPos(playerid,X,Y,Z);
	    SetTimerEx("PlayerSpawn", 5000, false, "i", playerid);
	}
	if(pTemp[playerid][pArmyJob])
 	{
        pTemp[playerid][pArmyJob] = 0;
        gCountArmyJob ++;
        SendClientMessage(playerid, COLOR_RED, "Вы покинули склад оружия и больше не являетесь охранником");
	}
	if(GetPVarInt(playerid, "TaxiPrice") > 0)
	{
		DeletePVar(playerid, "TimeTaxi");
		DeletePVar(playerid, "TaxiPrice");
		DeletePVar(playerid, "PlayerTaxi");
	}
	if(UseGPS[playerid])
	{
    	DisablePlayerRaceCheckpoint(playerid);
    	UseGPS[playerid] = false;
     	for(new i; i < 2; i++) TextDrawHideForPlayer(playerid, enable_gps_TD[i]);
	}
	if(GetPVarInt(playerid, "PlayerGonka"))
	{
		if(pTemp[playerid][pRaceID] != INVALID_VEHICLE_ID)
		{
			DestroyVehicle(pTemp[playerid][pRaceID]);
	    	pTemp[playerid][pRaceID] = INVALID_VEHICLE_ID;
  		}
		GonkaPlayers --;
		GonkaPriz -= GonkaStavka[playerid];
		TransferMoney(-1, playerid, GonkaStavka[playerid], "Возврат за не участие в гонках", 1);
		GonkaStavka[playerid] = 0;
		DisablePlayerRaceCheckpoint(playerid);
		DeletePVar(playerid, "PlayerGonka");
		TogglePlayerControllable(playerid, 1);
		SendClientMessage(playerid, COLOR_RED, "Вы были дисквалифицированы");
	}
	if(pCuff[playerid][pCuffee] == playerid)
	{
		new id = playerid;
		new cuffer = pCuff[id][pCuffer];
		SetPlayerSpecialAction(id, SPECIAL_ACTION_NONE);
		RemovePlayerAttachedObject(id, 0);
		pCuff[id][pCuffer] = pCuff[id][pCuffee] = pCuff[cuffer][pCuffee] = pCuff[cuffer][pCuffer] = INVALID_PLAYER_ID;
		SendClientMessage(cuffer, COLOR_BLUE, "Арестованный умер");
	}
 	if(PlayerUseMask[playerid])
	{
        PlayerUseMask[playerid] = false;
  		if(MaskTimer[playerid] != -1)
        {
			KillTimer(MaskTimer[playerid]);
			MaskTimer[playerid] = -1;
		}
	}
	if(!pInfo[playerid][pAdmin])
	{
		if(!pInfo[playerid][pJailTime])
		{
		    if(IsPlayerToSquare(playerid,-891.3302,-2950.0190,2915.9917,560.3257)) pInfo[playerid][pCity] = 1; // LS
			else if(IsPlayerToSquare(playerid,-2929.6589,-2889.1660,-1326.9077,1493.1770)) pInfo[playerid][pCity] = 2; // SF
			else pInfo[playerid][pCity] = 3; // LV
			PlayerDied[playerid] = true;
		}
	}
	SetHunger(playerid, 40);
	DisablePlayerCheckpoint(playerid);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid,3);
	if(pTemp[playerid][pWork] == 1)
	{
	    pTemp[playerid][pWork] = 0;
		pTemp[playerid][pMinerProgress] = 0;
		pTemp[playerid][pMinerAmount][0] = pTemp[playerid][pMinerAmount][1] = pTemp[playerid][pMinerAmount][2] = 0;
		pTemp[playerid][pMinerSalary][0] = pTemp[playerid][pMinerSalary][1] = pTemp[playerid][pMinerSalary][2] = 0;
		pTemp[playerid][pMinerStatus] = 0;
		RemovePlayerMapIcon(playerid, 88);
	}
	if(pTemp[playerid][pWork] == 2)
	{
	    pTemp[playerid][pWork] = 0;
		DeletePVar(playerid, "Derevo");
		pTemp[playerid][pLessProgress] = 0;
		pTemp[playerid][pLessStatus] = 0;
		if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
	}
	for(new i; i < 4; i++) PlayerTextDrawHide(playerid, status_work_TD[playerid][i]);
	new callerid = Mobile[playerid];
	if(callerid != -1)
	{
		SendClientMessage(callerid,  COLOR_GRAD2, "Связь оборвалась");
		CellTime[callerid] 		=
		Mobile[callerid] 		=
		Mobile[playerid] 		=
		CellTime[playerid] 		= -1;
		DeletePVar(playerid, "CallTime");
		DeletePVar(callerid, "CallTime");
	}
	if(InShop[playerid] > 0)
	{
	    if(pTemp[playerid][pCarShowroomID] != INVALID_VEHICLE_ID)
		{
			DestroyVehicle(pTemp[playerid][pCarShowroomID]);
			pTemp[playerid][pCarShowroomID] = INVALID_VEHICLE_ID;
		}
		InShop[playerid] = 0;
		PlayerTextDrawShow(playerid,car_showroom_TD[playerid][0]);
		PlayerTextDrawShow(playerid,car_showroom_TD[playerid][1]);
		for(new i; i < 5; i++) TextDrawHideForPlayer(playerid, car_showroom_info_TD[i]);
	}
	if(GetPVarInt(playerid, "DrivingTest"))
	{
		DeletePVar(playerid, "DrivingTest");
		DeletePVar(playerid, "DrivingTestHealth");
		DeletePVar(playerid, "DrivingTestError");
		SendClientMessage(playerid, COLOR_RED, "Вы провалили экзамен на управление наземным транспортом");
	}
	if(GetPVarInt(playerid, "FlyTest"))
	{
		DeletePVar(playerid, "FlyTest");
		DeletePVar(playerid, "FlyTestHealth");
		DeletePVar(playerid, "FlyTestError");
		SendClientMessage(playerid, COLOR_RED, "Вы провалили экзамен на управление воздушным транспортом");
	}
	if(GetPVarInt(playerid, "WaterTest"))
	{
		DeletePVar(playerid, "WaterTest");
		DeletePVar(playerid, "WaterTestTimeOn");
		DeletePVar(playerid, "WaterTestHealth");
		DeletePVar(playerid, "WaterTestError");
		SendClientMessage(playerid, COLOR_RED, "Вы провалили экзамен на управление водным транспортом");
	}
	if(Ether[playerid])
	{
		new CB[16];
		Ether[playerid] = false;
		Convert(pTemp[playerid][pLiveTime],CB);
		if(EtherSms[pInfo[playerid][pNews]-1])
		{
			format(string, sizeof(string), "[R] %s выключил%s прием СМС", GetName(playerid), (pInfo[playerid][pSex]==1)?(""):("а"));
			SendFMes(pInfo[playerid][pMember], COLOR_BLUE, string);
		}
		if(EtherCall[pInfo[playerid][pNews]-1])
		{
			format(string, sizeof(string), "[R] %s выключил%s прием звонков", GetName(playerid), (pInfo[playerid][pSex]==1)?(""):("а"));
			SendFMes(pInfo[playerid][pMember], COLOR_BLUE, string);
		}
		format(string, sizeof(string), "[R] %s выш%s из прямого эфира [Время в эфире: %s, звонков: %i, СМС: %i]", GetName(playerid), (pInfo[playerid][pSex]==1)?("ел"):("ла"), CB, CallNews[pInfo[playerid][pNews]-1],SmsNews[pInfo[playerid][pNews]-1]);
		SendFMes(pInfo[playerid][pMember], COLOR_BLUE, string);
		EtherSms[pInfo[playerid][pNews]-1] = EtherCall[pInfo[playerid][pNews]-1] = false;
		SmsNews[pInfo[playerid][pNews]-1] = CallNews[pInfo[playerid][pNews]-1] = pTemp[playerid][pLiveTime] = 0;
		if(Mobile[playerid] != -1) MobileCrash(playerid);
	}
	if(EtherLive[playerid])
	{
		EtherLive[playerid] = false;
		DeletePVar(playerid, "Etherfrac");
		SendClientMessage(playerid, COLOR_BLUE, "Вы вышли из прямого эфира");
	}
	return 1;
}

@OnPlayerSyncDeath(playerid, killerid, reason);
@OnPlayerSyncDeath(playerid, killerid, reason)
{
	if(AC_NoTwoKillFrag[playerid]) return 1;
    AC_NoTwoKillFrag[playerid] = true;
    if(killerid != INVALID_PLAYER_ID)
	{
	    new string[128];
        if(reason >= 1 && reason <= 46 && GetPlayerWeapon(killerid) != reason && pInfo[playerid][pLevel] <= 3) return ToCheat(playerid, 5255);
		if(reason == 38 && GetPlayerState(killerid) == PLAYER_STATE_PASSENGER) return ToCheat(playerid, 8881);
		if(IsAGang(killerid) && IsAGang(playerid))
		{
		    new bandatac = pInfo[killerid][pMember];
		    new banddef = pInfo[playerid][pMember];
		    if(bandatac != banddef)
			{
				if(GangInfo[bandatac][capture] && GangInfo[banddef][capture])
				{
					if(GetPlayerGangZone(killerid) != -1 && GetPlayerGangZone(playerid) != -1)
					{
						GangInfo[bandatac][score] = GangInfo[bandatac][score]+1;
						CaptureUpdate(bandatac);
						foreach(new i : Player)
						{
						    if(!gPlayerLogged[i] || !IsAGang(i) || (pInfo[i][pMember] != bandatac && pInfo[i][pMember] != banddef)) continue;
						}
					}
					else SendClientMessage(playerid, COLOR_DARKORANGE, "Убийство не засчитано. Вы оба должны находиться в опасном районе");
				}
			}
		}
		if(pInfo[playerid][pWanted] > 0)
		{
			if(!IsACop(killerid)) return 1;
			pInfo[playerid][pJailTime] = ((pInfo[playerid][pWanted]*10)*60);
			pInfo[playerid][pWanted] = 0;
			if(pInfo[playerid][pZakon] > 1) pInfo[playerid][pZakon] --;
			SetPlayerWantedLevel(playerid, pInfo[playerid][pWanted]);
			TogglePlayerControllable(playerid, 1);
			foreach(new i : Player)
			{
				if(!gPlayerLogged[i]) continue;
				if(IsACop(i))
				{
				    format(string, sizeof(string), "[Внимание] %s %s нейтрализовал преступника '%s'", Fraction_Rang[pInfo[killerid][pMember]][pInfo[killerid][pRank]], GetName(killerid), GetName(playerid));
					SendClientMessage(i, COLOR_RED, string);
				}
			}
			if(pInfo[killerid][pMember] == TEAM_DPS || pInfo[killerid][pMember] == TEAM_FBI)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Вы были посажены в камеру Полиции г.Южного (/jailtime)");
                new rand_coord = random(sizeof(JailSpawn));
			    SetPlayerPos(playerid, JailSpawn[rand_coord][0], JailSpawn[rand_coord][1], JailSpawn[rand_coord][2], 1);
			    SetPlayerFacingAngle(playerid, JailSpawn[rand_coord][3]);
				SetPlayerInterior(playerid, 1);
				pInfo[playerid][pJail] = 1;
			}
			if(pInfo[killerid][pMember] == TEAM_SFPD)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Вы были посажены в камеру Полиции пгт.Батырево (/jailtime)");
				new rand_coord = random(sizeof(JailSpawn));
			    SetPlayerPos(playerid, JailSpawn[rand_coord][0], JailSpawn[rand_coord][1], JailSpawn[rand_coord][2], 1);
			    SetPlayerFacingAngle(playerid, JailSpawn[rand_coord][3]);
				SetPlayerInterior(playerid, 1);
				pInfo[playerid][pJail] = 2;
			}
			if(pInfo[killerid][pMember] == TEAM_LVPD)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "Вы были посажены в камеру г.Арзамас (/jailtime)");
				new rand_coord = random(sizeof(JailSpawn));
			    SetPlayerPos(playerid, JailSpawn[rand_coord][0], JailSpawn[rand_coord][1], JailSpawn[rand_coord][2], 1);
			    SetPlayerFacingAngle(playerid, JailSpawn[rand_coord][3]);
				SetPlayerInterior(playerid, 1);
				pInfo[playerid][pJail] = 3;
			}
   			mysql_query_string[0] = EOS;
			format(mysql_query_string, 200, "UPDATE "T_ACCOUNTS" SET jail = %i, jailtime = %i, wanted = 0, zakon = %i WHERE id = %i", pInfo[playerid][pJail], pInfo[playerid][pJailTime], pInfo[playerid][pZakon], pInfo[playerid][pID]);
			mysql_tquery(dbHandle, mysql_query_string, "", "");
			SetPlayerVirtualWorld(playerid, pInfo[playerid][pJail]);
			format(string, 80, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~JAILED: ~w~%d", pInfo[playerid][pJailTime]);
			GameTextForPlayer(playerid, string, 3000, 3);
		}
		if(!pInfo[playerid][pJail])
		{
		    if(!pInfo[killerid][pAdmin])
		    {
				if(IsACop(killerid) || IsAArmy(killerid) || IsAGang(killerid) || IsAMafia(killerid)) { }
				else
				{
					pInfo[killerid][pWanted] += 2;
					if(pInfo[killerid][pWanted] >= 6) pInfo[killerid][pWanted] = 6;
					SetPlayerWantedLevel(killerid, pInfo[killerid][pWanted]);
					format(string, sizeof(string), "[A] %s[%d] был убит игроком %s[%d]", GetName(playerid),playerid,GetName(killerid),killerid);
					SendAdminMessage(COLOR_BLUE,string);
					SetPlayerCriminal(killerid, "Неизвестный", "Убийство", 2);
				}
			}
		}
	}
	return 1;
}

public OnVehicleSpawn(vehicleid)
{
    @UpdateVehiclePos(-1, vehicleid, 0);
	if(vehicleid < lastveh) VehicleInfo[vehicleid][vFuel] = 50.0;
   	SetVehicleParamsEx(vehicleid, false, false, false, false, false, false, false);
	SetVehicleNumberPlate(vehicleid,"None");
	new model = GetVehicleModel(vehicleid);
	if(vehicleid >= aHospitalLS[0] && vehicleid <= aHospitalLS[4])
	{
		VehicleInfo[vehicleid][vFuel] = VehStats[model-400][vMaxFuel];
	}
	if(vehicleid >= aHospitalSF[0] && vehicleid <= aHospitalSF[3])
	{
		VehicleInfo[vehicleid][vFuel] = VehStats[model-400][vMaxFuel];
	}
	if(vehicleid >= aHospitalLV[0] && vehicleid <= aHospitalLV[7])
	{
		VehicleInfo[vehicleid][vFuel] = VehStats[model-400][vMaxFuel];
	}
	if(vehicleid >= aAutoschool[0] && vehicleid <= aAutoschool[3])
	{
		VehicleInfo[vehicleid][vFuel] = VehStats[model-400][vMaxFuel];
	}
	if(vehicleid >= taxicar[0] && vehicleid <= taxicar[10])
	{
	    VehicleInfo[vehicleid][vFuel] = 50.0;
		ToggleLock(vehicleid, 0);
	}
	if(vehicleid >= aBus[0] && vehicleid <= aBus[12])
	{
		VehicleInfo[vehicleid][vFuel] = VehStats[model-400][vMaxFuel];
		ToggleLock(vehicleid, 0);
		for(new i; i < MAX_PLAYERS; i++)
		{
			if(pTemp[i][pBusID] == vehicleid)
			{
				pTemp[i][pBusID] = INVALID_VEHICLE_ID;
				pTemp[i][pBusRoute] = 0;
				pTemp[i][pBusPos] = 0;
				pTemp[i][pBusPrice] = 0;
				if(IsValidDynamic3DTextLabel(pTemp[i][pBusText]))
				{
					DestroyDynamic3DTextLabel(pTemp[i][pBusText]);
					pTemp[i][pBusText] = Text3D:INVALID_3DTEXT_ID;
				}
				break;
			}
		}
	}
	if(vehicleid >= taxicar[0] && vehicleid <= taxicar[10])
	{
	    VehicleInfo[vehicleid][vFuel] = 50.0;
		ToggleLock(vehicleid, 0);
	}
	if(vehicleid >= mechanic[0] && vehicleid <= mechanic[9])
	{
	    VehicleInfo[vehicleid][vFuel] = 50.0;
		ToggleLock(vehicleid, 0);
	}
	if(vehicleid >= aTruck[0][0] && vehicleid <= aTruck[2][1])
	{
	    VehicleInfo[vehicleid][vFuel] = 50.0;
		ToggleLock(vehicleid, 0);
		for(new i;i<MAX_PLAYERS;i++)
		{
			if(pTemp[i][pTruckID] == vehicleid)
			{
				pTemp[i][pTruckID] = INVALID_VEHICLE_ID;
				if(IsValidDynamic3DTextLabel(pTemp[i][pTruckWagonText]))
				{
					DestroyDynamic3DTextLabel(pTemp[i][pTruckWagonText]);
					pTemp[i][pTruckWagonText] = Text3D:INVALID_3DTEXT_ID;
				}
				if(pTemp[i][pTruckWagonID] != INVALID_VEHICLE_ID)
				{
					DestroyVehicle(pTemp[i][pTruckWagonID]);
					pTemp[i][pTruckWagonID] = INVALID_VEHICLE_ID;
				}
				for(new j;j<10;j++)
				{
					if(gTruckLoadTurn[0][j] == i) gTruckLoadTurn[0][j] = INVALID_PLAYER_ID;
					if(gTruckLoadTurn[1][j] == i) gTruckLoadTurn[1][j] = INVALID_PLAYER_ID;
					if(gTruckLoadTurn[2][j] == i) gTruckLoadTurn[3][j] = INVALID_PLAYER_ID;
					if(gTruckLoadTurn[3][j] == i) gTruckLoadTurn[3][j] = INVALID_PLAYER_ID;
				}
			}
		}
	}
	foreach(new i : Player)
	{
		if(pTemp[i][pCarPlayerID] == vehicleid)
		{
			if(pInfo[i][cVehcoms][0] != 0) AddVehicleComponent(vehicleid, pInfo[i][cVehcoms][0]);
			if(pInfo[i][cVehcoms][1] != 0) AddVehicleComponent(vehicleid, pInfo[i][cVehcoms][1]);
			if(pInfo[i][cVehcoms][2] != 0) AddVehicleComponent(vehicleid, pInfo[i][cVehcoms][2]);
			if(pInfo[i][cVehcoms][3] != 0) AddVehicleComponent(vehicleid, pInfo[i][cVehcoms][3]);
			if(pInfo[i][cVehcoms][4] != 0) AddVehicleComponent(vehicleid, pInfo[i][cVehcoms][4]);
			if(pInfo[i][cVehcoms][5] != 0) AddVehicleComponent(vehicleid, pInfo[i][cVehcoms][5]);
			if(pInfo[i][cVehcoms][6] != 0) AddVehicleComponent(vehicleid, pInfo[i][cVehcoms][6]);
			if(pInfo[i][cVehcoms][7] != 0) AddVehicleComponent(vehicleid, pInfo[i][cVehcoms][7]);
			if(pInfo[i][cVehcoms][8] != 0) AddVehicleComponent(vehicleid, pInfo[i][cVehcoms][8]);
			if(pInfo[i][cVehcoms][9] != 0) AddVehicleComponent(vehicleid, pInfo[i][cVehcoms][9]);
			if(pInfo[i][cVehcoms][10] != 0) AddVehicleComponent(vehicleid, pInfo[i][cVehcoms][10]);
			if(pInfo[i][cVehcoms][11] != 0) AddVehicleComponent(vehicleid, pInfo[i][cVehcoms][11]);
			if(pInfo[i][cVehcoms][12] != 0) AddVehicleComponent(vehicleid, pInfo[i][cVehcoms][12]);
			if(pInfo[i][cVehcoms][13] != 0) AddVehicleComponent(vehicleid,pInfo[i][cVehcoms][13]);
			if(pInfo[i][cPaintjob] != 3) ChangeVehiclePaintjob(vehicleid, pInfo[i][cPaintjob]);
			SetVehicleNumberPlate(vehicleid, pInfo[i][pNumberVehicle]);
		}
	}
	if(gVehicleGun[vehicleid][vGunLoading] || gVehicleGun[vehicleid][vGunUnloading])
	{
		gVehicleGun[vehicleid][vGunAmmo] = 0;
		gVehicleGun[vehicleid][vGunLoading] = false;
		gVehicleGun[vehicleid][vGunUnloading] = false;
		if(IsValidDynamic3DTextLabel(gVehicleGun[vehicleid][vGunText]))
		{
			DestroyDynamic3DTextLabel(gVehicleGun[vehicleid][vGunText]);
			gVehicleGun[vehicleid][vGunText] = Text3D:INVALID_3DTEXT_ID;
		}
		DestroyDynamicArea(gVehicleGun[vehicleid][vGunArea]);
		DestroyDynamicPickup(gVehicleGun[vehicleid][vGunPickup]);
		gVehicleGun[vehicleid][vGunArea] = 0;
		gVehicleGun[vehicleid][vGunPickup] = 0;
  		Iter_Remove(VehicleGun, vehicleid);
	}
	if(gVehicleMed[vehicleid][vMedLoading] || gVehicleMed[vehicleid][vMedUnloading])
	{
		gVehicleMed[vehicleid][vMedCount] = 0;
		gVehicleMed[vehicleid][vMedLoading] = false;
		gVehicleMed[vehicleid][vMedUnloading] = false;
		if(IsValidDynamic3DTextLabel(gVehicleMed[vehicleid][vMedText]))
		{
			DestroyDynamic3DTextLabel(gVehicleMed[vehicleid][vMedText]);
			gVehicleMed[vehicleid][vMedText] = Text3D:INVALID_3DTEXT_ID;
		}
		DestroyDynamicArea(gVehicleMed[vehicleid][vMedArea]);
		DestroyDynamicPickup(gVehicleMed[vehicleid][vMedPickup]);
		gVehicleMed[vehicleid][vMedArea] = 0;
		gVehicleMed[vehicleid][vMedPickup] = 0;
  		Iter_Remove(VehicleMed, vehicleid);
	}
	if(LightsObject[vehicleid][0]!=-1 || LightsObject[vehicleid][1]!=-1
	|| (LightsObject[vehicleid][2]!=-1 && LightsObject[vehicleid][3]!=-1))
  	{
  	    if(LightsObject[vehicleid][0]!=-1) DestroyDynamicObject(LightsObject[vehicleid][0]), LightsObject[vehicleid][0]=-1;
        if(LightsObject[vehicleid][1]!=-1) DestroyDynamicObject(LightsObject[vehicleid][1]), LightsObject[vehicleid][1]=-1;
        if(LightsObject[vehicleid][2]!=-1) DestroyDynamicObject(LightsObject[vehicleid][2]), LightsObject[vehicleid][2]=-1;
        if(LightsObject[vehicleid][3]!=-1) DestroyDynamicObject(LightsObject[vehicleid][3]), LightsObject[vehicleid][3]=-1;
		SignalTick[vehicleid][0] = 0;
		SignalTick[vehicleid][1] = -1;
		Signal[vehicleid] = 0;
	}
	return 1;
}

public OnRconLoginAttempt(ip[], password[], success)
{
	foreach(new i : Player)
 	{
       	if(GetString(ip, pInfo[i][pIP]) && pInfo[i][pAdmin] == ADM_FOUNDER)
    	{
        	if(!success) SendClientMessage(i, COLOR_RED, "[RCON] Неверный пароль!");
        	else SendClientMessage(i, COLOR_GREEN, "[RCON] Вы успешно авторизовались!");
         	return 1;
		}
	}
	new string[23];
	format(string, sizeof(string), "banip %s", ip);
	SendRconCommand(string);
	return 1;
}


public OnVehicleDeath(vehicleid, killerid)
{
    if(killerid != INVALID_PLAYER_ID && !IsPlayerConnected(killerid)) return 0;
    new Float: pos[3];
	GetVehicleRotation(vehicleid, pos[0], pos[1], pos[2]);
	if((pos[1] < 90 && pos[1] > -90) && VehicleInfo[vehicleid][vDriver] == INVALID_PLAYER_ID && GetPVarInt(killerid, "lastveh") != vehicleid && killerid != INVALID_PLAYER_ID)
	{
		if(AntiCheatMessage[killerid] == 0)
		{
			new string[128];
			format(string, sizeof(string), "[A] %s[%d] возможно использует CarFair", GetName(killerid), killerid);
			SendAdminMessage(COLOR_ORANGE, string);
			WriteLog("CheatLog", string);
		}
		AntiCheatMessage[killerid] = 10;
		return 0;
	}
	DeletePVar(killerid, "lastveh");
	if(vehicleid >= aTruck[0][0] && vehicleid <= aTruck[2][1])
	{
		new playerid = VehicleInfo[vehicleid][vDriver];
		if(playerid != INVALID_PLAYER_ID)
		{
			SendClientMessage(playerid,COLOR_RED,"Трак уничтожен.Вам было возвращено 80% от стоимости груза.");
			new back = pTemp[playerid][pTruckWeight]/100*80*2;
			TransferMoney(-1,playerid,back,"Возврат за уничтоженый трак", 1);
			if(pTemp[playerid][pTruckWagonID] != INVALID_VEHICLE_ID)
			{
				if(IsValidDynamic3DTextLabel(pTemp[playerid][pTruckWagonText]))
				{
					DestroyDynamic3DTextLabel(pTemp[playerid][pTruckWagonText]);
					pTemp[playerid][pTruckWagonText] = Text3D:INVALID_3DTEXT_ID;
				}
				DestroyVehicle(pTemp[playerid][pTruckWagonID]);
				pTemp[playerid][pTruckWagonID] = INVALID_VEHICLE_ID;
				pTemp[playerid][pTruckWagonTime] = 0;
				pTemp[playerid][pTruckWeight] = 0;
				pTemp[playerid][pTruckLoadID] = 0;
				SetPVarInt(playerid,"informed",0);
				SetPVarInt(playerid,"truckonroad",0);
			}
			pTemp[playerid][pTruckID] = INVALID_VEHICLE_ID;
		}
	}
    new get_rent = GetArendCarID(vehicleid);
	if(get_rent != INVALID_VEHICLE_ID)
	{
	    new playerid = ArendInfo[get_rent][aPlayerID];
	    ArendInfo[get_rent][aPlayerID] = INVALID_PLAYER_ID;
	    if(IsPlayerConnected(playerid) && GetPVarInt(playerid, "arendkey") == get_rent)
	    {
	        SendClientMessage(playerid, COLOR_WHITE, "Транспорт, который вы арендовали, был уничтожен. Аренда закончилась");
	        SetPVarInt(playerid, "arendkey", -1);
	    }
	}
    return 1;
}

public OnPlayerText(playerid, text[])
{
    if(!gPlayerLogged[playerid]) return 0;
	if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid],text))
	{
	    SendClientMessage(playerid, COLOR_GREY, "Не флуди");
		return 0;
	}
	SetString(OldMessage[playerid],text);
	TextReset[playerid] = gettime()+3;
	if(emptyMessage(text)) return 0;
	if(pInfo[playerid][pMuted])
	{
	    SetPlayerChatBubble(playerid, "пытается что-то сказать", COLOR_RED, 13.0, 10000);
	    SendMuteMessage(playerid, 0);
		return 0;
	}
	if(IsAIP(text))
	{
	    new string[144];
		format(string, sizeof(string), "[Подозрение на рекламу] %s[%i]: %s", GetName(playerid), playerid, text);
		SendAdminMessage(COLOR_ORANGE, string);
		format(string, sizeof(string), "[Подозрение на рекламу] %s [%s]: %s", GetName(playerid), pInfo[playerid][pIP], text);
		WriteLog("PlayerAdvertise",string);
		ReplaceText(text);
		return 0;
	}
	if(CheckString(text, 2))
	{
	    PlayerGetsChatBan(playerid, text);
		return 0;
	}
    new mes[144], mesid[144];
	if(EtherCalled[playerid] && IsANews(Mobile[playerid]))
	{
	    new callerid = Mobile[playerid];
        if(Mobile[callerid] == playerid)
        {
			format(mes, sizeof(mes), "[%s] [Тел.] %s: %s", (pInfo[playerid][pNews] == 1)?("СМИ г.Южный"):(pInfo[playerid][pNews] == 2)?("СМИ пгт.Батырево"):("LV News"), GetName(playerid), text);
			if(pInfo[playerid][pNews] == 1) SendNMes(1, TEAM_BLUE_COLOR, mes);
			else if(pInfo[playerid][pNews] == 2) SendNMes(2, TEAM_BLUE_COLOR, mes);
			else if(pInfo[playerid][pNews] == 3) SendNMes(3, TEAM_BLUE_COLOR, mes);
        }
  		format(mes, sizeof(mes), "[Телефон] %s: %s", GetName(playerid), text);
  		new rdist, c = 0xFFFFFFFF, world = GetPlayerVirtualWorld(playerid);
		for(new i;i<MAX_PLAYERS;i++)
		{
		    if(!IsPlayerConnected(i) || !gPlayerLogged[i]) continue;
			if(world != GetPlayerVirtualWorld(i)) continue;
			rdist = floatround(GetPlayerDistanceToPlayer(playerid, i));
			if(rdist > 14.0) continue;
			if(rdist > 8.0) c = 0xAAAAAAFF;
			else if(rdist > 4.0) c = 0xCCCCCCFF;
			SendClientMessage(i, c, mes);
		}
		SetPlayerChatBubble(playerid, text, COLOR_GREEN, 13.0, 10000);
		return 0;
	}
	if(Mobile[playerid] != -1 && !Ether[playerid])
	{
	    new callerid = Mobile[playerid];
		format(mes, sizeof(mes), "[Телефон] %s: %s", GetName(playerid), text);
		SendClientMessage(callerid, COLOR_YELLOW, mes);
		new rdist, c = 0xFFFFFFFF, world = GetPlayerVirtualWorld(playerid);
		for(new i;i<MAX_PLAYERS;i++)
		{
		    if(!IsPlayerConnected(i) || !gPlayerLogged[i]) continue;
			if(world != GetPlayerVirtualWorld(i)) continue;
			rdist = floatround(GetPlayerDistanceToPlayer(playerid, i));
			if(rdist > 14.0) continue;
			if(rdist > 8.0) c = 0xAAAAAAFF;
			else if(rdist > 4.0) c = 0xCCCCCCFF;
			SendClientMessage(i, c, mes);
		}
		SetPlayerChatBubble(playerid, text, COLOR_GREEN, 13.0, 10000);
		return 0;
	}
	if(IsANews(playerid) && Ether[playerid])
	{
		format(mes, sizeof(mes), "[%s] %s: %s", Fraction_Name[pInfo[playerid][pMember]], GetName(playerid), text);
		if(pInfo[playerid][pNews] == 1) SendNMes(1, TEAM_BLUE_COLOR, mes);
		else if(pInfo[playerid][pNews] == 2) SendNMes(2, TEAM_BLUE_COLOR, mes);
		else if(pInfo[playerid][pNews] == 3) SendNMes(3, TEAM_BLUE_COLOR, mes);
		return 0;
	}
	if(EtherLive[playerid])
	{
	    new fracid = GetPVarInt(playerid, "Etherfrac");
		format(mes, sizeof(mes), "[LIVE][%s] %s: %s", Fraction_Name[fracid], GetName(playerid), text);
		if(fracid == TEAM_LSNEWS) SendNMes(1, TEAM_BLUE_COLOR, mes);
		else if(fracid == TEAM_SFNEWS) SendNMes(2, TEAM_BLUE_COLOR, mes);
		else if(fracid == TEAM_LVNEWS) SendNMes(3, TEAM_BLUE_COLOR, mes);
		return 0;
	}
	for(new i; i < SMILE_COUNT; i++)
	{
		if(GetString(text, SmileInfo[i][smInput]))
		{
		    if(pInfo[playerid][pSex] == 1)
			{
				MeAction(playerid, SmileInfo[i][smOutput_M]);
				SetPlayerChatBubble(playerid, SmileInfo[i][smOutput_M], COLOR_PURPLE, 13.0, 10000);
			}
			else
			{
				MeAction(playerid, SmileInfo[i][smOutput_F]);
				SetPlayerChatBubble(playerid, SmileInfo[i][smOutput_F], COLOR_PURPLE, 13.0, 10000);
			}
			return 0;
		}
	}
    format(mes, sizeof(mes), "%s говорит: {%06x}%s", GetName(playerid), pInfo[playerid][pColor] >>> 8, text);
	format(mesid, sizeof(mesid), "%s[%d] говорит: {%06x}%s", GetName(playerid), playerid, pInfo[playerid][pColor] >>> 8, text);
	new rdist, c = 0xFFFFFFFF, world = GetPlayerVirtualWorld(playerid);
	for(new i; i < MAX_PLAYERS; i++)
	{
	    if(!IsPlayerConnected(i) || !gPlayerLogged[i]) continue;
		if(world != GetPlayerVirtualWorld(i)) continue;
		rdist = floatround(GetPlayerDistanceToPlayer(playerid, i));
		if(rdist > 14.0) continue;
		if(rdist > 8.0) c = 0xAAAAAAFF;
		else if(rdist > 4.0) c = 0xCCCCCCFF;
		if(pInfo[i][pSettings] & setPlayerIDChat) SendClientMessage(i, c, mesid);
		else SendClientMessage(i, c, mes);
	}
	SetPlayerChatBubble(playerid, text, COLOR_GREEN, 13.0, 10000);
	if(!IsPlayerInAnyVehicle(playerid)){
		if(!GetPVarInt(playerid, "enable_animation"))
		{
		    ApplyAnimation(playerid, "PED", "IDLE_CHAT", 8.1, 0, 1, 1, 1, 1);
			SetTimerEx("@ClearAnimText", 2000, false, "d", playerid);
		}
	}
	return 0;
}

public OnPlayerCommandText(playerid, cmdtext[])
{
    return SendClientMessage(playerid, -1,"Команда не найдена");
}

stock IsVehicleOccupied(vehicleid)
{
    foreach(new i : Player) if(IsPlayerInVehicle(i, vehicleid)) return 1;
    return 0;
}

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
    SetPVarInt(playerid,"VehicleEnters",vehicleid);
    if(pTemp[playerid][pWork] == 1 || pTemp[playerid][pWork] == 2 || pTemp[playerid][pWork] == 3)
	{
		SendClientMessage(playerid, COLOR_GREY, "Вы не можете сесть в т/с, работая");
		RemovePlayerFromVehicle(playerid);
		return ClearAnimations(playerid);
	}
	if(pCuff[playerid][pCuffee] == playerid)
	{
		SendClientMessage(playerid, COLOR_GREY, "Вы не можете сесть в т/с в наручниках");
		RemovePlayerFromVehicle(playerid);
		return ClearAnimations(playerid);
	}
	pTemp[playerid][pAbletoGun] = 2;
	if(VehicleInfo[vehicleid][vLock])
	{
		RemovePlayerFromVehicle(playerid);
		return ClearAnimations(playerid);
	}
	SetVehicleParamsForPlayer(vehicleid,playerid,0,VehicleInfo[vehicleid][vLock]);
	if(vehicleid >= aBus[0] && vehicleid <= aBus[12])
	{
		new driver = VehicleInfo[vehicleid][vDriver];
		if(IsPlayerConnected(driver))
		{
			if(pTemp[driver][pBusID] == vehicleid)
			{
				if(ispassenger) SetVehicleParamsForPlayer(vehicleid,playerid,0,0);
				else if(playerid != driver) SetVehicleParamsForPlayer(vehicleid,playerid,0,1);
				else if(playerid == driver) SetVehicleParamsForPlayer(vehicleid,playerid,0,0);
			}
		}
	}
	return 1;
}

public OnPlayerExitVehicle(playerid, vehicleid)
{
	PlayerCTGear(playerid);
	SetPVarInt(playerid, "AFK_Time", 0);
	pTemp[playerid][pAbletoGun] = 2;
	if(GetVehicleModel(vehicleid)>=400) @UpdateVehiclePos(playerid, vehicleid, 0);
	new string[128];
	if(GetPVarInt(playerid, "PlayerGonka") && pTemp[playerid][pRaceID] != INVALID_VEHICLE_ID)
	{
		DestroyVehicle(pTemp[playerid][pRaceID]);
    	pTemp[playerid][pRaceID] = INVALID_VEHICLE_ID;
		GonkaPlayers --;
		GonkaPriz -= GonkaStavka[playerid];
		TransferMoney(-1, playerid, GonkaStavka[playerid], "Возврат за не участие в гонках", 1);
		GonkaStavka[playerid] = 0;
		RaceCP[playerid] = 0;
		GonkaSchet[playerid] = 0;
		DisablePlayerRaceCheckpoint(playerid);
		DeletePVar(playerid, "PlayerGonka");
		TogglePlayerControllable(playerid, 1);
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 1795.5133,2040.0596,15.8694, 1);
		SetPlayerFacingAngle(playerid, 4.1259);
		SetPlayerVirtualWorld(playerid, 0);
		SendClientMessage(playerid, COLOR_RED, "Вы были дисквалифицированы");
	}
	if(Ether[playerid])
	{
		new CB[16];
		Ether[playerid] = false;
		Convert(pTemp[playerid][pLiveTime],CB);
		if(EtherSms[pInfo[playerid][pNews]-1])
		{
			format(string, 90, "[R] %s выключил%s прием СМС",GetName(playerid),(pInfo[playerid][pSex]==1)?(""):("а"));
			SendFMes(pInfo[playerid][pMember], COLOR_BLUE, string);
		}
		if(EtherCall[pInfo[playerid][pNews]-1])
		{
			format(string, 90, "[R] %s выключил%s прием звонков",GetName(playerid),(pInfo[playerid][pSex]==1)?(""):("а"));
			SendFMes(pInfo[playerid][pMember], COLOR_BLUE, string);
		}
		format(string, 90, "[R] %s выш%s из прямого эфира [Время в эфире: %s, звонков: %i, СМС: %i]",GetName(playerid), (pInfo[playerid][pSex]==1)?("ел"):("ла"), CB, CallNews[pInfo[playerid][pNews]-1],SmsNews[pInfo[playerid][pNews]-1]);
		SendFMes(pInfo[playerid][pMember], COLOR_BLUE, string);
		EtherSms[pInfo[playerid][pNews]-1] = EtherCall[pInfo[playerid][pNews]-1] = false;
		SmsNews[pInfo[playerid][pNews]-1] = CallNews[pInfo[playerid][pNews]-1] = pTemp[playerid][pLiveTime] = 0;
		if(Mobile[playerid] != -1) MobileCrash(playerid);
	}
	if(GetPVarInt(playerid, "PriceTaxi") > 0)
	{
	    format(string, sizeof(string), "Вы закончили рабочий день. Всего заработано: {63BD4E}%i$", GetPVarInt(playerid, "TaxiMoney"));
		SendClientMessage(playerid, COLOR_BLUE, string);
		SendClientMessage(playerid, COLOR_WHITE, "Деньги будут перечислены на Ваш счет в банке во время зарплаты");
		DeletePVar(playerid, "PriceTaxi");
		DeletePVar(playerid, "TaxiMoney");
		if(IsValidDynamic3DTextLabel(TaxiText3D[playerid]))
		{
			DestroyDynamic3DTextLabel(TaxiText3D[playerid]);
			TaxiText3D[playerid] = Text3D:INVALID_3DTEXT_ID;
		}
		foreach(new i : Player)
		{
			if(!gPlayerLogged[i]) continue;
			if(IsPlayerInVehicle(i, vehicleid) && GetPlayerState(i) != 2)
			{
				DeletePVar(i, "TimeTaxi");
				DeletePVar(i, "TaxiPrice");
				DeletePVar(i, "PlayerTaxi");
			}
		}
	}
	if(GetPVarInt(playerid, "TaxiPrice") > 0)
	{
		DeletePVar(playerid, "TimeTaxi");
		DeletePVar(playerid, "TaxiPrice");
		DeletePVar(playerid, "PlayerTaxi");
	}
	if(EtherLive[playerid])
	{
		EtherLive[playerid] = false;
		DeletePVar(playerid, "Etherfrac");
		SendClientMessage(playerid, COLOR_BLUE, "Вы вышли из прямого эфира!");
	}
	if(GetPVarInt(playerid, "BeltStatus") == 1)
	{
		SetPVarInt(playerid, "BeltStatus", 0);
		if(IsABike(vehicleid) || IsAMoped(vehicleid))
		{
			RemovePlayerAttachedObject(playerid, 3);
			if(pInfo[playerid][pSex]==1) SetPlayerChatBubble(playerid, "снял шлем", COLOR_PURPLE, 13.0, 10000);
			else SetPlayerChatBubble(playerid, "сняла шлем", COLOR_PURPLE, 13.0, 10000);
		}
		else
		{
			if(pInfo[playerid][pSex]==1) SetPlayerChatBubble(playerid, "расстегнул ремень безопасности", COLOR_PURPLE, 13.0, 10000);
			else SetPlayerChatBubble(playerid, "расстегнула ремень безопасности", COLOR_PURPLE, 13.0, 10000);
		}
	}
	return 1;
}
stock IsVehiclePlane(vehicleid)
{
	switch(GetVehicleModel(vehicleid))
	{
	    case 592, 577,
			 511, 512,
			 593, 520,
			 553, 476,
			 519, 460,
			 513, 548,
			 425, 417,
			 487, 488,
			 497, 563,
			 447, 469: return true;
	}
	new model = GetVehicleModel(vehicleid);
 	if(model == 509 || model == 481 || model == 579 || model == 489 || model == 510 || model == 451 ||
	  model == 515 ||
	  model == 415 ||
	  model == 539 ||
	  model == 595 ||
	  model == 400 ||
	  model == 426 ||
	  model == 421 ||
	  model == 475 ||
	  model == 592 ||
	  model == 577 ||
	  model == 511 ||
	  model == 512 ||
	  model == 593 ||
	  model == 520 ||
	  model == 553 ||
	  model == 476 ||
	  model == 519 ||
	  model == 460 ||
	  model == 513 ||
	  model == 548 ||
	  model == 425 ||
	  model == 417 ||
	  model == 488 ||
	  model == 497 || model == 563 ||
	  model == 447 || model == 469 ||
	  model == 487 || model == 430 ||
	  model == 446 || model == 452 ||
	  model == 453 || model == 454 ||
	  model == 472 || model == 473 ||
	  model == 484 || model == 493) return true;
	return 0;
}
stock HideTD(playerid, TYPE_HIDETD){
	if(TYPE_HIDETD < 0 && type > 1) return false;
	if(TYPE_HIDETD == 0) HideSpeedometer(playerid);
	else if(TYPE_HIDETD == 1) HideGear(playerid);
}
stock ModifyVehicleSpeed(vehicleid,mph){
        new Float:Vx,Float:Vy,Float:Vz,Float:DV,Float:multiple;
        GetVehicleVelocity(vehicleid,Vx,Vy,Vz);
        DV = floatsqroot(Vx*Vx + Vy*Vy + Vz*Vz);
        if(DV>0) {
	        multiple = ((mph + DV * 100) / (DV * 100));
	        return SetVehicleVelocity(vehicleid,Vx*multiple,Vy*multiple,Vz*multiple);
        }
        return 0;
}
forward CloseGate(gate);
public CloseGate(gate) {
	if(gate == mostik[0]) return MoveObject(mostik[0], 2747.3437500,-1142.8994141,21.6000003,0.015,0.0000000,0.0000000,179.994506);
	if(gate == mostik[1]) return MoveObject(mostik[1], 2747.2998047,-1262.0000000,21.6000003,0.015,0.0000000,0.0000000,0.0000000);
	return 1;
}
stock IsVehicleDrivingBackwards(vehicleid){
        static
                Float:Float[3]
        ;
        if(GetVehicleVelocity(vehicleid, Float[1], Float[2], Float[0]))
        {
                GetVehicleZAngle(vehicleid, Float[0]);
                if(Float[0] < 90)
                {
                        if(Float[1] > 0 && Float[2] < 0) return true;
                }
                else if(Float[0] < 180)
                {
                        if(Float[1] > 0 && Float[2] > 0) return true;
                }
                else if(Float[0] < 270)
                {
                        if(Float[1] < 0 && Float[2] > 0) return true;
                }
                else if(Float[1] < 0 && Float[2] < 0) return true;
        }
        return false;
}
forward OpenMost();
public OpenMost()
{
	MoveObject(mostik[0], 2747.3999023, -1142.8000488, 22.1000004, 0.015, 45.7489014, 0.0000000, 179.9945068);
	MoveObject(mostik[1], 2747.3999023, -1262.0000000, 22.1000004, 0.015, 45.7441406, 0.0000000, 0.0000000);
	
	SetTimerEx("CloseGate", 80*1000,   0, "i", mostik[0]);
	SetTimerEx("CloseGate", 80 * 1000, 0, "i", mostik[1]);
	return 1;
}
forward hud_update(playerid);
public hud_update(playerid)
{
	new td_dollar[128];
	format(td_dollar, sizeof(td_dollar), "%d", pInfo[playerid][pCash]); // деньги
	PlayerTextDrawSetString(playerid, fhud_PTD[playerid][0], td_dollar);
	PlayerTextDrawShow(playerid, fhud_PTD[playerid][0]);
	return 1;
}
forward PlayerCTGear(playerid);
public PlayerCTGear(playerid)
{
	new info[15];
	format(info, sizeof(info), "~w~N");
	PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][6], info);
	format(info, sizeof(info), "~w~1");
	PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][0], info);
	format(info, sizeof(info), "~w~2");
	PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][1], info);
	format(info, sizeof(info), "~w~3");
	PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][2], info);
	format(info, sizeof(info), "~w~4");
	PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][3], info);
	format(info, sizeof(info), "~w~5");
    PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][4], info);
 	format(info, sizeof(info), "~w~R");
	PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][5], info);
}
forward PlayerCTGearz(playerid);
public PlayerCTGearz(playerid)
{
	new info[15];
	format(info, sizeof(info), "~w~N");
	PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][6], info);
	format(info, sizeof(info), "~w~1");
	PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][0], info);
	format(info, sizeof(info), "~w~2");
	PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][1], info);
	format(info, sizeof(info), "~w~3");
	PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][2], info);
	format(info, sizeof(info), "~w~4");
	PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][3], info);
	format(info, sizeof(info), "~w~5");
    PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][4], info);
  	format(info, sizeof(info), "~w~R");
	PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][5], info);
}

forward CloseBarrier(function, Float:x, Float:y,Float:z, speed, Float:rX,Float:rY,Float:rZ);
public CloseBarrier(function, Float:x, Float:y,Float:z, speed, Float:rX,Float:rY,Float:rZ)
{
    MoveDynamicObject(function, x, y, z, speed, rX, rY, rZ);
	return true;
}
forward OnPlayerEnterDynamicArea(playerid, areaid);
public OnPlayerEnterDynamicArea(playerid, areaid)
{
	new player_state = GetPlayerState(playerid);
	if(areaid >= Area_SpeedingCam[0] && areaid <= Area_SpeedingCam[MAX_CAM_AREA-1] && player_state == PLAYER_STATE_DRIVER && !pInfo[playerid][pFineUpgrade])
	{
	    if(!IsACop(playerid) && pInfo[playerid][pMember] != TEAM_NG)
	    {
		    new vehicleid = GetPVarInt(playerid,"VehicleEnters");
		    if(IsAPlane(vehicleid) || IsABoat(vehicleid) || IsAVel(vehicleid)) return 1;
			if(GetTickCount()-GetPVarInt(playerid, "TickArea") < 3000) return 1;
			SetPVarInt(playerid, "TickArea", GetTickCount());
			new speed = GetVehicleSpeed(playerid);
			if(speed < MAX_SPEED_RADAR || speed-MAX_SPEED_RADAR < 5) return 1;
			if(pInfo[playerid][pFine] < 10)
			{
				pInfo[playerid][pFine]++;
				MysqlUpdatePlayerInt(playerid, "fine", pInfo[playerid][pFine]);
			}
			new RADAR_COST_BIG_SPEED = (speed * 2);
			new string[144];
			format(string, sizeof(string), "SMS: Вам пришла квитанция №%i за превышение скорости на сумму %i$. Ваша скорость %d, ограничение %d (км/ч)", RandomEx(1000, 9999), RADAR_COST_BIG_SPEED, speed, MAX_SPEED_RADAR);
			SendClientMessage(playerid, COLOR_YELLOW, string);
			SendClientMessage(playerid, COLOR_YELLOW, "Оплатить можно в любом полицейском участке. Отправитель: Police Departament Тел.: Неизвестно");
			format(string, sizeof(string), "[Внимание] {FFFFFF}После 10 предупреждений Вы будете лишены водительских прав (%i/10)", pInfo[playerid][pFine]);
			SendClientMessage(playerid, COLOR_RED, string);
			pInfo[playerid][pFineAmount] += RADAR_COST_BIG_SPEED;
			MysqlUpdatePlayerInt(playerid, "fineamount", pInfo[playerid][pFineAmount]);
			PlayerPlaySound(playerid, 1132, 0.0, 0.0, 0.0);
			if(pInfo[playerid][pFine] >= 10)
			{
			    pInfo[playerid][pFine] = 0;
			    TakeLicCar(playerid);
			    SendClientMessage(playerid, COLOR_RED, "У Вас были изъяты водительские права за многочисленное превышение скорости!");
			}
		}
	}
    else if(areaid >= AreaInfo[arServerHelp][0] && areaid <= AreaInfo[arServerHelp][1] && player_state == PLAYER_STATE_ONFOOT)
    {
		ShowPlayerDialog(playerid, 3793, DIALOG_STYLE_MSGBOX, "{f0144e}Помощь по серверу", "{FFFFFF}Добро пожаловать на сервер {FFCC00}"SERVER_NAME"\n{FFFFFF}Если Вы на сервере впервые, то прочитайте эту информацию до конца", "Далее", "Отмена");
    }
    else if(areaid == AreaInfo[arAdminsZoneHP] && player_state == PLAYER_STATE_ONFOOT)
    {
        new Float:health;
        GetPlayerHealth(playerid, health);
		if(health < 100)
		{
			SetHealth(playerid, 100.0);
			SetHealth(playerid, 100.0);
		}
		GameTextForPlayer(playerid, "~b~~h~You regain ~n~~b~~h~health", 3000, 1);
    }
    else if(areaid >= AreaInfo[arHotdogHP][0] && areaid <= AreaInfo[arHotdogHP][4] && player_state == PLAYER_STATE_ONFOOT)
    {
        if(pInfo[playerid][pLevel] > 3) return SendClientMessage(playerid, COLOR_GREY, "Бесплатная еда доступна до 3 уровня");
        else if(pInfo[playerid][pHunger] >= 100) return SendClientMessage(playerid, COLOR_GREY, "Вы не голодны!");
        else if(GetPVarInt(playerid, "eat_timer") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Бесплатная еда доступна раз в минуту");
        PlayerPlaySound(playerid, 32200, 0.0, 0.0, 0.0);
		ClearAnimations(playerid);
		ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0,1);
		if(pInfo[playerid][pHunger] <= 75) GiveHunger(playerid, 25);
    	else SetHunger(playerid, 100);
		if(pInfo[playerid][pSex] == 1) MeAction(playerid, "съел хот-дог");
		else MeAction(playerid, "съела хот-дог");
		GameTextForPlayer(playerid, "~g~have you ~n~eaten", 3000, 1);
		SetPVarInt(playerid, "eat_timer", gettime()+60);
    }
    else if(areaid == AreaInfo[arGunWork] && player_state == PLAYER_STATE_ONFOOT)
    {
	    if(pTemp[playerid][pWork] == 1 || pTemp[playerid][pWork] == 2) return SendClientMessage(playerid, COLOR_RED, "Вы уже где-то работаете! Завершите работу!");
    	if(!pTemp[playerid][pWork]) ShowPlayerDialog(playerid,673,DIALOG_STYLE_MSGBOX,"{FFCC00}Оружейный завод","{FFFFFF}Хотите начать работу на оружейном заводе?","Да","Нет");
        else if(pTemp[playerid][pWork] == 3) ShowPlayerDialog(playerid,674,DIALOG_STYLE_MSGBOX,"{FFCC00}Оружейный завод","{FFFFFF}Хотите завершить работу на оружейном заводе?","Да","Нет");
    }
    else if(areaid >= AreaInfo[arGunWorkLoad][0] && areaid <= AreaInfo[arGunWorkLoad][1] && player_state == PLAYER_STATE_ONFOOT && pTemp[playerid][pWork] == 3 && !GetPVarInt(playerid,"workamountgun"))
	{
		new locatid;
		for(new i; i < 2; i++)
		{
			if(AreaInfo[arGunWorkLoad][i] == areaid) locatid = i;
		}
		if(gGunWorkTime[locatid]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] На этом столе нет заготовок. Подойдите к другому");
		if(gGunWorkWH[0] < 100) return SendClientMessage(playerid, COLOR_GREY, "На складе недостаточно угля");
		if(gGunWorkWH[1] < 100) return SendClientMessage(playerid, COLOR_GREY, "На складе недостаточно древесины");
		gGunWorkWH[0] -= 50;
		gGunWorkWH[1] -= 50;
		gGunWorkTime[locatid] = 5;
		SetPVarInt(playerid, "workamountgun", 1);
		SendClientMessage(playerid, COLOR_WHITE, "Вы взяли заготовку. Подойдите к свободному столу для сбора оружия.");
		new objectmodel = gGunWorkWeapon[RandomEx(0,6)];
		SetPlayerAttachedObject(playerid, 0, objectmodel, 6);
		SetPVarInt(playerid, "pgunmodel", objectmodel);
		GameTextForPlayer(playerid,"~b~+1kg",3000,1);
	}
	else if(areaid >= AreaInfo[arGunWorkWork][0] && areaid <= AreaInfo[arGunWorkWork][9] && player_state == PLAYER_STATE_ONFOOT && pTemp[playerid][pWork] == 3 && GetPVarInt(playerid,"workamountgun") == 1)
	{
		if(GetPVarInt(playerid, "pgunobject")) return 1;
		new locatid;
		for(new i; i < 10; i++)
		{
			if(AreaInfo[arGunWorkWork][i] == areaid) locatid = i;
		}
		if(gGunWorkTableStat[locatid]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Стол занят. Подойдите к другому");
	    if(IsPlayerInAnyVehicle(playerid)) return 1;
		new objectmodel = GetPVarInt(playerid,"pgunmodel");
		RemovePlayerAttachedObject(playerid, 0);
		new objectid = CreateDynamicObject(objectmodel,gGunWorkTables[locatid][0],gGunWorkTables[locatid][1],gGunWorkTables[locatid][2],gGunWorkTables[locatid][3],gGunWorkTables[locatid][4],gGunWorkTables[locatid][5]);
		SetPVarInt(playerid,"pgunobject",objectid);
		SetPVarInt(playerid,"pgunlocat",locatid+1);
		gGunWorkTableStat[locatid] = true;
		ClearAnimations(playerid);
		ApplyAnimation(playerid,"CAR_CHAT","CAR_Sc4_BL",4.0,1,1,1,0,6000,0);
		SetPlayerAttachedObject(playerid,0,18644,5,0.078999,0.042999,-0.012999,-3.299995,0.000000,0.000000);
		SetPlayerAttachedObject(playerid,1,18635,6);
		SetTimerEx("@GunReady",6000,false,"i",playerid);
	}
	else if(areaid == AreaInfo[arGunWorkUnload] && pTemp[playerid][pWork] == 3 && GetPVarInt(playerid,"workamountgun") == 2)
	{
	    if(IsPlayerInAnyVehicle(playerid)) return 1;
		ApplyAnimation(playerid,"CARRY","putdwn",4.0,0,1,1,0,0,1);
		pTemp[playerid][pWorkSalary] += 1;
		new mes[128];
		format(mes, sizeof(mes), "Оружие сдано на склад. Отправляйтесь делать другое.", pTemp[playerid][pWorkSalary]);
		SendClientMessage(playerid, COLOR_WHITE, mes);
		new str[18];
		format(str, sizeof(str), "AMOUNT: %d", pTemp[playerid][pWorkSalary]);
		PlayerTextDrawSetString(playerid, status_work_TD[playerid][2], str);
		gGunWorkWH[2] += 40;
		RemovePlayerAttachedObject(playerid,0);
		DeletePVar(playerid, "workamountgun");
		DisablePlayerCheckpoint(playerid);
	}
	else if(areaid == AreaInfo[arMineWork][0] && player_state == PLAYER_STATE_ONFOOT)
    {
     	if(pTemp[playerid][pWork] == 2 || pTemp[playerid][pWork] == 3) return SendClientMessage(playerid, COLOR_RED, "Вы уже где-то работаете! Завершите работу!");
  		if(!pTemp[playerid][pWork]) ShowPlayerDialog(playerid, 671, 0, "{FFCC00}Шахта", "{FFFFFF}Вы желаете заключить контракт о добыче угля из подземной шахты?", "Да", "Нет");
		else if(pTemp[playerid][pWork] == 1) ShowPlayerDialog(playerid, 672, 0, "{FFCC00}Шахта", "{FFFFFF}Вы хотите завершить работу на шахте?", "Да", "Нет");
	}
	else if(areaid == AreaInfo[arMineWork][1] && player_state == PLAYER_STATE_ONFOOT)
	{
	    stringer[0] = EOS;
		strcat(stringer, "{EAD86A}Добро пожаловать на шахту.\n\n");
		strcat(stringer, "{FFFFFF}Здесь Вы можете устроиться на временную работу.\n");
		strcat(stringer, "Для это вам нужно спуститься в шахту и начать работу в раздевалке,\n");
		strcat(stringer, "после вам выдадут спецодежду и необходимые инструменты, а также\n");
		strcat(stringer, "расскажут что делать дальше.\n\n");
		strcat(stringer, "Работа шахтера специализируется на добыче угля.\n");
		strcat(stringer, "Регулярная добыча угля поддерживает экономическую цепь.");
		ShowPlayerDialog(playerid, dNull, DIALOG_STYLE_MSGBOX, "{F5DEB3}О шахте", stringer, "Закрыть", "");
	}
	else if(areaid == AreaInfo[arMineWork][2] && player_state == PLAYER_STATE_ONFOOT)
	{
	    stringer[0] = EOS;
		strcat(stringer, "{FFFFFF}Обычный уголь.\n\n");
		strcat(stringer, "{FFFFFF}Уголь в этих туннелях обычный.\n");
		strcat(stringer, "За каждую партию угля из этого туннеля не полагается премия.\n");
		strcat(stringer, "За 1 кг принесённого угля, вы получаете 3$.");
		ShowPlayerDialog(playerid, dNull, DIALOG_STYLE_MSGBOX, "{3399FF}Вид угля", stringer, "Закрыть", "");
	}
	else if(areaid == AreaInfo[arMineWork][3] && player_state == PLAYER_STATE_ONFOOT)
	{
	    stringer[0] = EOS;
		strcat(stringer, "{FFCC00}Качественный уголь.\n\n");
		strcat(stringer, "{FFFFFF}Уголь в этих туннелях намного качественней обычного.\n");
		strcat(stringer, "Качественный уголь намного больше цениться, чем обычный.\n");
		strcat(stringer, "Поэтому за каждую партию угля из этого туннеля полагается премия.\n");
		strcat(stringer, "За 1 кг принесённого угля, вы получаете 4$.");
		ShowPlayerDialog(playerid, dNull, DIALOG_STYLE_MSGBOX, "{3399FF}Вид угля", stringer, "Закрыть", "");
	}
	else if(areaid == AreaInfo[arMineWork][4] && player_state == PLAYER_STATE_ONFOOT)
	{
	    stringer[0] = EOS;
		strcat(stringer, "{63BD4E}Редкий уголь.\n\n");
		strcat(stringer, "{FFFFFF}Уголь в этих туннелях намного крайне редкий.\n");
		strcat(stringer, "Редкий уголь намного больше цениться, чем качественный и обычный.\n");
		strcat(stringer, "Поэтому за каждую партию угля из этого туннеля полагается премия.\n");
		strcat(stringer, "За 1 кг принесённого угля, вы получаете 5$.");
		ShowPlayerDialog(playerid, dNull, DIALOG_STYLE_MSGBOX, "{3399FF}Вид угля", stringer, "Закрыть", "");
	}
	else if((areaid >= AreaInfo[arMineWorkUnload][0] && areaid <= AreaInfo[arMineWorkUnload][2]) && pTemp[playerid][pWork] == 1 && pTemp[playerid][pMinerStatus] && IsPlayerAttachedObjectSlotUsed(playerid, 4))
	{
	    if(pTemp[playerid][pMineAntiflood]>0) ToCheat(playerid,5214);
	    RemovePlayerAttachedObject(playerid,4);
		RemovePlayerMapIcon(playerid, 88);
		TogglePlayerControllable(playerid,1);
		ClearAnimations(playerid);
		ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
        new string[128];
		if(pTemp[playerid][pMinerAmount][0])
		{
		    pTemp[playerid][pMinerSalary][0] += pTemp[playerid][pMinerAmount][0];
			format(string,sizeof(string),"Вы доставили на склад {FFFFFF}%i кг {3399FF}обычного угля",pTemp[playerid][pMinerAmount][0]);
			SendClientMessage(playerid,COLOR_BLUE,string);
			format(string,sizeof(string),"%i кг",pTemp[playerid][pMinerAmount][0]);
			SetPlayerChatBubble(playerid,string,0xFF6600FF,20.0,10000);
			Mineral += pTemp[playerid][pMinerAmount][0];
		}
		if(pTemp[playerid][pMinerAmount][1])
		{
		    pTemp[playerid][pMinerSalary][1] += pTemp[playerid][pMinerAmount][1];
            format(string,sizeof(string),"Вы доставили на склад {FFCC00}%i кг {3399FF}качественного угля",pTemp[playerid][pMinerAmount][1]);
            SendClientMessage(playerid,COLOR_BLUE,string);
            format(string,sizeof(string),"%i кг",pTemp[playerid][pMinerAmount][1]);
			SetPlayerChatBubble(playerid,string,0xFFCC00FF,20.0,10000);
            Mineral += pTemp[playerid][pMinerAmount][1];
      	}
      	if(pTemp[playerid][pMinerAmount][2])
		{
		    pTemp[playerid][pMinerSalary][2] += pTemp[playerid][pMinerAmount][2];
            format(string,sizeof(string),"Вы доставили на склад {63BD4E}%i кг {3399FF}редкого угля",pTemp[playerid][pMinerAmount][2]);
            SendClientMessage(playerid,COLOR_BLUE,string);
            format(string,sizeof(string),"%i кг",pTemp[playerid][pMinerAmount][2]);
			SetPlayerChatBubble(playerid,string,0xFFCC00FF,20.0,10000);
            Mineral += pTemp[playerid][pMinerAmount][2];
      	}
		format(string,sizeof(string),"Общее количество добытого сырья {FF6600}%i кг",pTemp[playerid][pMinerSalary][0]+pTemp[playerid][pMinerSalary][1]+pTemp[playerid][pMinerSalary][2]);
		SendClientMessage(playerid,COLOR_BLUE,string);
		new str[18];
		format(str,sizeof(str),"AMOUNT: %dKG",pTemp[playerid][pMinerSalary][0]+pTemp[playerid][pMinerSalary][1]+pTemp[playerid][pMinerSalary][2]);
		PlayerTextDrawSetString(playerid,status_work_TD[playerid][2],str);
		pTemp[playerid][pMinerAmount][0] = pTemp[playerid][pMinerAmount][1] = pTemp[playerid][pMinerAmount][2] = 0;
		pTemp[playerid][pMinerProgress] = 0;
		pTemp[playerid][pMinerStatus] = 0;
		pTemp[playerid][pMineAntiflood] = 0;
		PlayerTextDrawSetString(playerid, status_work_TD[playerid][3], "PERCENT: 0%");
		SetPlayerAttachedObject(playerid, 3, 18634, 6, 0.078222, 0.000000, 0.110844, 298.897308, 264.126861, 193.350555, 1.000000, 1.000000, 1.000000);
	}
	else if(areaid == AreaInfo[arSawmillWork][0] && player_state == PLAYER_STATE_ONFOOT)
	{
     	if(pTemp[playerid][pWork] == 1 || pTemp[playerid][pWork] == 3) return SendClientMessage(playerid, COLOR_RED, "Вы уже где-то работаете! Завершите работу!");
  		if(!pTemp[playerid][pWork]) ShowPlayerDialog(playerid, 669, 0, "{FFCC00}Лесопилка", "{FFFFFF}Вы хотите начать работу на лесопилке?", "Да", "Нет");
		else if(pTemp[playerid][pWork] == 2) ShowPlayerDialog(playerid, 670, 0, "{FFCC00}Лесопилка", "{FFFFFF}Вы хотите завершить работу на лесопилке?", "Да", "Нет");
	}
	else if(areaid == AreaInfo[arSawmillWork][1] && player_state == PLAYER_STATE_ONFOOT)
	{
	    stringer[0] = EOS;
	    strcat(stringer, "{EAD86A}Добро пожаловать на лесопилку.\n\n");
		strcat(stringer, "{FFFFFF}Здесь Вы сможете заработать немного денег, вы пилите лес и приносите\n");
		strcat(stringer, "его на склад за каждый принесенный кг вы получаете 2$\n");
		strcat(stringer, "с одного дерева может быть от 30 до 60 кг.\n\n");
		strcat(stringer, "Что бы начать работу встаньте на пикап одежды, далее у Вас на мини карте\n");
		strcat(stringer, "отобразится дерево которое нужно спилить, следуете к нему, далее\n");
		strcat(stringer, "встаньте на чекпоинт и нажимайте ЛКМ не удерживая.");
  		ShowPlayerDialog(playerid, dNull, DIALOG_STYLE_MSGBOX, "{3399FF}О лесопилке", stringer, "Закрыть", "");
	}
	else if((areaid == AreaInfo[arTruckLoadCoal] || areaid == AreaInfo[arTruckLoadWood]) && pInfo[playerid][pJob] == JOB_TRUCKER && pTemp[playerid][pTruckID] != INVALID_VEHICLE_ID)
	{
		SendClientMessage(playerid, COLOR_WHITE, "Чтобы подписать контракт нажмите {63BD4E}~k~~VEHICLE_HORN~");
	}
	else if(areaid >= AreaInfo[arGettingPassport][0] && areaid <= AreaInfo[arGettingPassport][2] && player_state == PLAYER_STATE_ONFOOT)
	{
	    #if MYSQL_R41_2 == true

	    if(!strlen(IsValidPassport(playerid))) ShowPlayerDialog(playerid, dCreatePass, DIALOG_STYLE_LIST, "{FFCC00}Получение паспорта [1/2]", "{63BD4E}Выберите пол:\n{FFFFFF}- Мужчина\n{FFFFFF}- Женщина", "Далее", "Отмена");
		else return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У Вас уже есть паспорт!");

		#else

		if(!IsValidPassport(playerid)) ShowPlayerDialog(playerid, dCreatePass, DIALOG_STYLE_LIST, "{FFCC00}Получение паспорта [1/2]", "{63BD4E}Выберите пол:\n{FFFFFF}- Мужчина\n{FFFFFF}- Женщина", "Далее", "Отмена");
		else return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У Вас уже есть паспорт!");

		#endif
	}
	else if(areaid == AreaInfo[arBuyFishki] && player_state == PLAYER_STATE_ONFOOT)
	{
        ShowPlayerDialog(playerid, dBuyFishki, DIALOG_STYLE_LIST, "{FFCC00}Выберите действие", "1. Купить фишки\n2. Обменять фишки", "Выбрать", "Отмена");
	}
	else if(areaid == AreaInfo[arRegRace] && player_state == PLAYER_STATE_ONFOOT)
	{
	    if(EndingKartRound == true) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Регистрация на мероприятие закрыта");
		if(!GetLicCar(playerid)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас нет водительских прав");
		if(pInfo[playerid][pLevel] < 2) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Участвовать в мероприятии можно со 2 уровня");
		if(pInfo[playerid][pWarn]) return SendClientMessage(playerid, COLOR_RED, "[Ошибка] Вы не можете учавствовать с предупреждениями");
		if(GetPVarInt(playerid, "PlayerGonka")) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы уже зарегистрированы на мероприятие");
		if(GonkaPlayers >= 9) return SendClientMessage(playerid, COLOR_GREY, "Все гоночные места уже заняты, приходите на следующие гонки");
		new text[400];
		strcat(text,"{FFFFFF}Введите сумму которую хотите внести в бюджет гонки\n");
		strcat(text,"Сумма должна быть не менее 2.000$ и не более 100.000$\n\n");
		strcat(text,"Приз:\n");
		strcat(text,"{FFFFFF}1 место - {3399FF}80% от бюджета игры\n");
		strcat(text,"{FFFFFF}2 место - {3399FF}60% от бюджета игры\n");
		strcat(text,"{FFFFFF}3 место - {3399FF}40% от бюджета игры\n");
		strcat(text,"{FFFFFF}4 место - {3399FF}10% от бюджета игры\n");
		strcat(text,"{FFFFFF}5 место - {3399FF}6% от бюджета игры");
		ShowPlayerDialog(playerid, dStavkaRace, DIALOG_STYLE_INPUT, "{FFCC00}Регистрация на мероприятие", text, "Принять", "Отмена");
	}
	else if(areaid == AreaInfo[arBuyNarko][0] && player_state == PLAYER_STATE_ONFOOT)
	{
	    if(GetPVarInt(playerid, "next_actor")) return SendClientMessage(playerid, COLOR_GREY, "Я тебе уже сказал, иди в соседнюю комнату");
	    ShowPlayerDialog(playerid,1212,DIALOG_STYLE_MSGBOX," ","\n\n{FFFFFF}Эй, парень! Ты к кому пришёл?\n\n","За травой","Заблудился");
	}
	else if(areaid == AreaInfo[arBuyNarko][1] && player_state == PLAYER_STATE_ONFOOT)
	{
	    if(!GetPVarInt(playerid, "next_actor")) return SendClientMessage(playerid, COLOR_GREY, "Парень ты заблудился. Шагай отсюда!");
		ShowPlayerDialog(playerid,1213,DIALOG_STYLE_INPUT,"{FFCC00}Покупка травы","{FFFFFF}Введите количество грамм которое вы хотите купить.","Купить","Отмена");
	}
	else if(areaid >= AreaInfo[arPoliceMenu][0] && areaid <= AreaInfo[arPoliceMenu][2] && player_state == PLAYER_STATE_ONFOOT)
	{
	    ShowPlayerDialog(playerid, dMenuPolice, DIALOG_STYLE_LIST, "{FFCC00}Что Вас интересует?", "1. Оформление лицензии на оружие\n2. Оплата штрафов\n3. Получение гос.на Т/С\n4. Сдаться с повинной", "Выбрать", "Отмена");
	}
	else if(areaid == AreaInfo[arArmyAmmo] && player_state == PLAYER_STATE_ONFOOT)
	{
		if(IsAArmy(playerid))
		{
			if(GetPVarInt(playerid,"carryammo"))
			{
				if(gArmyWarehouse[0]+300 > 200000 && gArmyWarehouse[1]+300 > 200000) return SendClientMessage(playerid, COLOR_GREY, "На складе недостаточно места для ящиков с боеприпасами");
				gArmyWarehouse[0] += 300;
				gArmyWarehouse[1] += 300;
				SetPVarInt(playerid,"carryammo",0);
				RemovePlayerAttachedObject(playerid,0);
				ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
			}
			else
			{
				if(gArmyWarehouse[0] < 300 || gArmyWarehouse[1] < 135 && !IsAArmy(playerid)) return SendClientMessage(playerid, COLOR_GREY, "На складе недостаточно боеприпасов");
			}
		}
	}
	else if(areaid == AreaInfo[arArmyJob][0] && player_state == PLAYER_STATE_ONFOOT)
	{
	    if(pInfo[playerid][pMember] != TEAM_NG) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Армию!");
	    if(pInfo[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY, "Ваш ранг недостаточен!");
	    if(!pTemp[playerid][pArmyJob])
	    {
	        new mes[256];
			format(mes, sizeof(mes), "{FFFFFF}Вы хотите начать охрану базы?\n\n{FFFFFF}Оплата: {63BD4E}50$/мин\n{FFFFFF}Свободно мест: {3399FF}%d/10", gCountArmyJob);
			ShowPlayerDialog(playerid, dArmyJob, DIALOG_STYLE_MSGBOX, "{FFCC00}Склад оружия", mes, "Начать", "Отмена");
		}
		else ShowPlayerDialog(playerid, dArmyJob, DIALOG_STYLE_MSGBOX, "{FFCC00}Склад оружия", "{FFFFFF}Вы хотите закончить охрану базы?", "Закончить", "Отмена");
	}
	else if(areaid == AreaInfo[arGunSklad][0] && player_state == PLAYER_STATE_ONFOOT)
	{
	    if(pInfo[playerid][pMember] != TEAM_GROVE) return 1;
        if(b_Sklad[0]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Доступ к складу вашей банды закрыт!");
		ShowPlayerDialog(playerid, dGang, 2, "{FFCC00}Склад банды", "{63BD4E}Положить патроны\n{63BD4E}Положить ед. оружия\n{63BD4E}Положить деньги\n{63BD4E}Положить наркотики\n{FFFFFF}Взять патроны\nВзять ед. оружия\nВзять деньги\nВзять наркотики", "Принять", "Отмена");
	}
	else if(areaid == AreaInfo[arGunSklad][1] && player_state == PLAYER_STATE_ONFOOT)
	{
	    if(pInfo[playerid][pMember] != TEAM_BALLAS) return 1;
	    if(b_Sklad[1]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Доступ к складу вашей банды закрыт!");
       	ShowPlayerDialog(playerid, dGang, 2, "{FFCC00}Склад банды", "{63BD4E}Положить патроны\n{63BD4E}Положить ед. оружия\n{63BD4E}Положить деньги\n{63BD4E}Положить наркотики\n{FFFFFF}Взять патроны\nВзять ед. оружия\nВзять деньги\nВзять наркотики", "Принять", "Отмена");
	}
	else if(areaid == AreaInfo[arGunSklad][2] && player_state == PLAYER_STATE_ONFOOT)
	{
	    if(pInfo[playerid][pMember] != TEAM_RIFA) return 1;
        if(b_Sklad[2]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Доступ к складу вашей банды закрыт!");
	   	ShowPlayerDialog(playerid, dGang, 2, "{FFCC00}Склад банды", "{63BD4E}Положить патроны\n{63BD4E}Положить ед. оружия\n{63BD4E}Положить деньги\n{63BD4E}Положить наркотики\n{FFFFFF}Взять патроны\nВзять ед. оружия\nВзять деньги\nВзять наркотики", "Принять", "Отмена");
	}
	else if(areaid == AreaInfo[arGunSklad][3] && player_state == PLAYER_STATE_ONFOOT)
	{
	    if(pInfo[playerid][pMember] != TEAM_AZTECAS) return 1;
        if(b_Sklad[3]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Доступ к складу вашей банды закрыт!");
	   	ShowPlayerDialog(playerid, dGang, 2, "{FFCC00}Склад банды", "{63BD4E}Положить патроны\n{63BD4E}Положить ед. оружия\n{63BD4E}Положить деньги\n{63BD4E}Положить наркотики\n{FFFFFF}Взять патроны\nВзять ед. оружия\nВзять деньги\nВзять наркотики", "Принять", "Отмена");
	}
	else if(areaid == AreaInfo[arGunSklad][4] && player_state == PLAYER_STATE_ONFOOT)
	{
	    if(pInfo[playerid][pMember] != TEAM_VAGOS) return 1;
        if(b_Sklad[4]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Доступ к складу вашей банды закрыт!");
	   	ShowPlayerDialog(playerid, dGang, 2, "{FFCC00}Склад банды", "{63BD4E}Положить патроны\n{63BD4E}Положить ед. оружия\n{63BD4E}Положить деньги\n{63BD4E}Положить наркотики\n{FFFFFF}Взять патроны\nВзять ед. оружия\nВзять деньги\nВзять наркотики", "Принять", "Отмена");
	}
	else if(areaid == AreaInfo[arGunSklad][5] && player_state == PLAYER_STATE_ONFOOT)
	{
	    if(pInfo[playerid][pMember] != TEAM_LCN) return 1;
        if(b_Sklad[5]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Доступ к складу вашей мафии закрыт!");
		ShowPlayerDialog(playerid, dMafia, 2, "{FFCC00}Склад мафии", "{63BD4E}Положить патроны\n{63BD4E}Положить ед. оружия\n{63BD4E}Положить деньги\n{63BD4E}Положить наркотики\n{FFFFFF}Взять патроны\nВзять ед. оружия\nВзять деньги\nВзять наркотики", "Принять", "Отмена");
	}
	else if(areaid == AreaInfo[arGunSklad][6] && player_state == PLAYER_STATE_ONFOOT)
	{
	    if(pInfo[playerid][pMember] != TEAM_YAKUZA) return 1;
        if(b_Sklad[6]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Доступ к складу вашей мафии закрыт!");
		ShowPlayerDialog(playerid, dMafia, 2, "{FFCC00}Склад мафии", "{63BD4E}Положить патроны\n{63BD4E}Положить ед. оружия\n{63BD4E}Положить деньги\n{63BD4E}Положить наркотики\n{FFFFFF}Взять патроны\nВзять ед. оружия\nВзять деньги\nВзять наркотики", "Принять", "Отмена");
	}
	else if(areaid == AreaInfo[arGunSklad][7] && player_state == PLAYER_STATE_ONFOOT)
	{
	    if(pInfo[playerid][pMember] != TEAM_RM) return 1;
        if(b_Sklad[7]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Доступ к складу вашей мафии закрыт!");
		ShowPlayerDialog(playerid, dMafia, 2, "{FFCC00}Склад мафии", "{63BD4E}Положить патроны\n{63BD4E}Положить ед. оружия\n{63BD4E}Положить деньги\n{63BD4E}Положить наркотики\n{FFFFFF}Взять патроны\nВзять ед. оружия\nВзять деньги\nВзять наркотики", "Принять", "Отмена");
	}
	else if(areaid == AreaInfo[arSetWeaponFrac][0] && player_state == PLAYER_STATE_ONFOOT)
	{
	    if(!IsANews(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	    GivePlayerWeaponEx(playerid, 43, 30);
	}
	else if(areaid == AreaInfo[arSetWeaponFrac][1] && player_state == PLAYER_STATE_ONFOOT)
	{
	    if(pInfo[playerid][pMember] != TEAM_GROVE) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	    GivePlayerWeaponEx(playerid, 5, 1);
	}
	else if(areaid == AreaInfo[arSetWeaponFrac][2] && player_state == PLAYER_STATE_ONFOOT)
	{
	    if(pInfo[playerid][pMember] != TEAM_BALLAS) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	    GivePlayerWeaponEx(playerid, 5, 1);
	}
	else if(areaid == AreaInfo[arSetWeaponFrac][3] && player_state == PLAYER_STATE_ONFOOT)
	{
	    if(pInfo[playerid][pMember] != TEAM_RIFA) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	    GivePlayerWeaponEx(playerid, 5, 1);
	}
	else if(areaid == AreaInfo[arSetWeaponFrac][4] && player_state == PLAYER_STATE_ONFOOT)
	{
	    if(pInfo[playerid][pMember] != TEAM_AZTECAS) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	    GivePlayerWeaponEx(playerid, 5, 1);
	}
	else if(areaid == AreaInfo[arSetWeaponFrac][5] && player_state == PLAYER_STATE_ONFOOT)
	{
	    if(pInfo[playerid][pMember] != TEAM_VAGOS) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	    GivePlayerWeaponEx(playerid, 5, 1);
	}
	else if(areaid == AreaInfo[arSetWeaponFrac][6] && player_state == PLAYER_STATE_ONFOOT)
	{
	    if(pInfo[playerid][pMember] != TEAM_LCN) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	    GivePlayerWeaponEx(playerid, 2, 1);
	}
	else if(areaid == AreaInfo[arSetWeaponFrac][7] && player_state == PLAYER_STATE_ONFOOT)
	{
	    if(pInfo[playerid][pMember] != TEAM_YAKUZA) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	    GivePlayerWeaponEx(playerid, 8, 1);
	}
	else if(areaid == AreaInfo[arSetWeaponFrac][8] && player_state == PLAYER_STATE_ONFOOT)
	{
	    if(pInfo[playerid][pMember] != TEAM_RM) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	    GivePlayerWeaponEx(playerid, 1, 1);
	}
    else if(areaid == Ships[playerid] && player_state == PLAYER_STATE_DRIVER)
    {
        new panels, tires, doors, lights;
        GetVehicleDamageStatus(GetPVarInt(playerid,"VehicleEnters"), panels, doors, lights, tires);
        tires = 15;
        UpdateVehicleDamageStatus(GetPVarInt(playerid,"VehicleEnters"), panels, doors, lights, tires);
    }
    else if(areaid >= AreaInfo[arGosJob][0] && areaid <= AreaInfo[arGosJob][2] && player_state == PLAYER_STATE_ONFOOT)
	{
		if(pInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Вы состоите в организации!");
		ShowPlayerDialog(playerid, dHeal+10, 2, "{FFCC00}Устройство на работу", "{ffffff}Водитель автобуса\t\t| {33AAFF}2 уровень\n{ffffff}Водитель такси\t\t| {33AAFF}2 уровень\n{ffffff}Автомеханик\t\t\t| {33aaff}3 уровень\n{ffffff}Дальнобойщик\t\t| {33aaff}4 уровень\n{ffffff}Уволиться с работы", "Выбор", "Отмена");
	}
	else if(areaid == AreaInfo[arAutoschool][0] && player_state == PLAYER_STATE_ONFOOT)
	{
		stringer[0] = EOS;
		strcat(stringer, "{63BD4E}1. Общие правила\n");
		strcat(stringer, "{FFFFFF}Обгон транспортного средства разрешен только с левой стороны,\n");
		strcat(stringer, "при этом водители обязаны убедиться, что встречная полоса свободна на достаточном для обгона расстояние.\n");
		strcat(stringer, "При ДТП водители обязаны позвонить в полицию (/c), и дождаться ДПС\n\n");
		strcat(stringer, "{63BD4E}2. Скорость движения\n");
		strcat(stringer, "{FFFFFF}Ограничение скорости за переделами города не более 120 км/ч\n");
		strcat(stringer, "Ограничение скорости в пределах города и населенных пунктов не более 70 км/ч\n\n");
		strcat(stringer, "{63BD4E}3. Остановка и стоянка\n");
		strcat(stringer, "{ffffff}Остановка и стоянка транспортных средств разрешаются на правой стороне дороги на обочине.\n");
		strcat(stringer, "В специальных отведённых для этого местах\n\n");
		strcat(stringer, "{63BD4E}4. ДПС\n");
		strcat(stringer, "{FFFFFF}При виде автомобиля с включённой сереной, водитель обязан сбавить скорость и прижаться к обочине.\n");
		strcat(stringer, "Водитель обязан предъявить паспорт/лицензии, если тот попросил\n\n");
		strcat(stringer, "Управление транспортом:\n\n");
		strcat(stringer, "Завести/заглушить двигатель: {FFCC00}2{FFFFFF}. Вкл/откл фары: {FFCC00}LCTRL{FFFFFF}\n");
		strcat(stringer, "Управление поворотниками: {FF9900}NUM 4 / NUM 6{FFFFFF}. Аварийный сигнал: {FF9900}NUM 8{FFFFFF}\n");
		strcat(stringer, "Чтобы пристегнуть ремень безопасности или надеть шлем: {FF9900}NUM 2");
		strcat(stringer, "Верхняя передача(+1) - {FF9900}Y{FFFFFF}, Нижняя передача(-1) - {FF9900}N{FFFFFF}.");
		ShowPlayerDialog(playerid, dNull, DIALOG_STYLE_MSGBOX, "{33AAFF}Правила Дорожного Движения", stringer, "Закрыть", "");
	}
	else if(areaid == AreaInfo[arAutoschool][1] && player_state == PLAYER_STATE_ONFOOT)
	{
		if(GetPVarInt(playerid, "DrivingTest")) return ShowPlayerDialog(playerid, dNull, 0, " ", "\n\n{ffffff}Вы уже сдаете экзамен на управление наземным транспортом!\n\n", "Закрыть", "");
		else if(GetPVarInt(playerid, "FlyTest")) return ShowPlayerDialog(playerid, dNull, 0, " ", "\n\n{ffffff}Вы уже сдаете экзамен на управление воздушным транспортом!\n\n", "Закрыть", "");
		else if(GetPVarInt(playerid, "WaterTest")) return ShowPlayerDialog(playerid, dNull, 0, " ", "\n\n{ffffff}Вы уже сдаете экзамен на управление водным транспортом!\n\n", "Закрыть", "");
		ShowPlayerDialog(playerid, dJob+8, DIALOG_STYLE_LIST, "{33AAFF}Выберите вид экзамена", "{ffffff}1. Управление наземным транспортом", "Выбрать", "Отмена");
		//\n2. Управление воздушным транспортом\n3. Управление водным транспортом
	}
    else if(IsAArmy(playerid) || IsAMafia(playerid))
	{
	    new string[128];
	    foreach(new vehicleid : VehicleGun)
		{
			if(areaid != gVehicleGun[vehicleid][vGunArea]) continue;
			if(gVehicleGun[vehicleid][vGunLoading] && GetPVarInt(playerid, "carryammo"))
			{
				new ammo = GetPVarInt(playerid, "carryammo");
				SetPVarInt(playerid, "carryammo", 0);
				RemovePlayerAttachedObject(playerid, 0);
				ApplyAnimation(playerid, "CARRY", "putdwn", 1.0, 0, 1, 1, 0, 0, 1);
				if(gVehicleGun[vehicleid][vGunAmmo]+ammo > 20) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] В транспорте недостаточно места");
				if(ammo) gVehicleGun[vehicleid][vGunAmmo] += ammo;
				format(string, sizeof(string), "Ящиков с боеприпасами:\n{63BD4E}%d/20", gVehicleGun[vehicleid][vGunAmmo]);
				UpdateDynamic3DTextLabelText(gVehicleGun[vehicleid][vGunText], 0xFFFFFFFF, string);
			}
			else if(gVehicleGun[vehicleid][vGunUnloading] && !GetPVarInt(playerid, "carryammo"))
			{
				if(gVehicleGun[vehicleid][vGunAmmo] < 1) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] В транспорте недостаточно ящиков с боеприпасами");
				if(gVehicleGun[vehicleid][vGunAmmo] >= 1)
				{
					gVehicleGun[vehicleid][vGunAmmo] -= 1;
					SetPVarInt(playerid, "carryammo", 1);
				}
				format(string, sizeof(string), "Ящиков с боеприпасами:\n{63BD4E}%d/20", gVehicleGun[vehicleid][vGunAmmo]);
				UpdateDynamic3DTextLabelText(gVehicleGun[vehicleid][vGunText], 0xFFFFFFFF, string);
				ApplyAnimation(playerid, "CARRY", "liftup", 1.0, 0, 1, 1, 0, 0, 1);
				SetTimerEx("@CarryDelay", 1000, false, "i", playerid);
				SetPlayerAttachedObject(playerid, 0, 3052, 6, 0.0, 0.10, -0.2, -110.0, 0.0, 78.0);
			}
			break;
		}
	}
	else if(IsAMedic(playerid))
	{
	    new string[128];
	    foreach(new vehicleid : VehicleMed)
		{
			if(areaid != gVehicleMed[vehicleid][vMedArea]) continue;
			if(gVehicleMed[vehicleid][vMedLoading] && GetPVarInt(playerid, "carrymed"))
			{
				new medicaments = GetPVarInt(playerid, "carrymed");
				SetPVarInt(playerid, "carrymed", 0);
				RemovePlayerAttachedObject(playerid, 0);
				ApplyAnimation(playerid, "CARRY", "putdwn", 1.0, 0, 1, 1, 0, 0, 1);
				if(gVehicleMed[vehicleid][vMedCount]+medicaments > 500) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] В транспорте недостаточно места");
				if(medicaments) gVehicleMed[vehicleid][vMedCount] += medicaments;
				format(string, sizeof(string), "Медикаментов:\n{63BD4E}%d/500", gVehicleMed[vehicleid][vMedCount]);
				UpdateDynamic3DTextLabelText(gVehicleMed[vehicleid][vMedText], 0xFFFFFFFF, string);
			}
			else if(gVehicleMed[vehicleid][vMedUnloading] && !GetPVarInt(playerid, "carrymed"))
			{
				if(gVehicleMed[vehicleid][vMedCount] < 10) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] В транспорте недостаточно медикаментов");
				if(gVehicleMed[vehicleid][vMedCount] >= 10)
				{
					gVehicleMed[vehicleid][vMedCount] -= 10;
					SetPVarInt(playerid, "carrymed", 10);
				}
				format(string, sizeof(string), "Медикаментов:\n{63BD4E}%d/500", gVehicleMed[vehicleid][vMedCount]);
				UpdateDynamic3DTextLabelText(gVehicleMed[vehicleid][vMedText], 0xFFFFFFFF, string);
				SetPlayerAttachedObject(playerid, 0, 11738, 6,  0.285000, 0.042000, 0.038999,  -1.400000, -98.300041, -1.600002,  1.000000, 1.000000, 1.000000);
			}
			break;
		}
	}
    for(new i; i < sizeof(AreaInfo[arGreenZone]); i++)
	{
		if(areaid != AreaInfo[arGreenZone][i]) continue;
        for(new l = 0; l < 1; l++) PlayerTextDrawShow(playerid, zz_PTD[playerid][l]);
		break;
	}
	for(new idx = 1; idx <= TOTALHOUSE; idx++) {
	    if(areaid != HouseInfo[idx][hAreaEnter]) continue;
	    if(player_state != PLAYER_STATE_ONFOOT) continue;
		stringer[0] = EOS;
		new subsidia = floatround(HouseInfo[idx][hPrice] * 0.005);
		if(HouseInfo[idx][hSubsidia]) subsidia = subsidia / 2;
		if(GetString(HouseInfo[idx][hOwner],"None"))
		{
			format(stringer,512,"{ffffff}\t\tДом №%d\n\nСтоимость:\t\t{63BD4E}%d${FFFFFF}\nКласс:\t\t\t{FF9900}%s{ffffff}\nКвартплата:\t\t{63BD4E}%d$ {FFFFFF}за 1 день\n",idx,HouseInfo[idx][hPrice],HclassInfo[HouseInfo[idx][hClass]][hcName],subsidia);
			strcat(stringer,"\nУстановки:\n\n");
			strcat(stringer,(HouseInfo[idx][hGarage])?("Гаражное помещение: Есть"):("Гаражное помещение: Нет"));
			ShowPlayerDialog(playerid,dJoinHouse,0,"{FFCC00}Дом продаётся",stringer,"Купить","Отмена");
		}
		else
		{
			new status_online[27] = "[{F04245}OffLine{ffffff}]";
			if(GetPlayerID(HouseInfo[idx][hOwner]) != INVALID_PLAYER_ID) status_online = "[{63BD4E}Online{ffffff}]";
			format(stringer,512,"{ffffff}\t\tДом №%d\n\nВладелец:\t\t%s %s\nКласс:\t\t\t{FF9900}%s{ffffff}\nКвартплата:\t\t{63BD4E}%d$ {FFFFFF}за 1 день\n",idx,HouseInfo[idx][hOwner],status_online,HclassInfo[HouseInfo[idx][hClass]][hcName],subsidia);
			strcat(stringer,"\nУстановки:\n\n");
			strcat(stringer,(HouseInfo[idx][hAutoDoors])?("Автоматические двери: Есть\n"):("Автоматические двери: Нет\n"));
			strcat(stringer,(HouseInfo[idx][hGarage])?("Гаражное помещение: Есть\n"):("Гаражное помещение: Нет\n"));
			strcat(stringer,(HouseInfo[idx][hSubsidia])?("Субсидия для снижения квартплаты: Есть"):("Субсидия для снижения квартплаты: Нет"));
			// strcat(stringer,(HouseInfo[idx][hGarderob])?("Гардероб для вещей: Есть"):("Гардероб для вещей: Нет")); // added
			ShowPlayerDialog(playerid,dJoinHouse,0,"{FFCC00}Дом занят ",stringer,"Войти","Отмена");
		}
		SetPVarInt(playerid, "UseHouse", idx);
		break;
	}
	for(new idx = 1; idx <= TOTALBIZ; idx++) {
		if(areaid != BizInfo[idx][bAreaEnter]) continue;
		if(player_state != PLAYER_STATE_ONFOOT) continue;
	    if(GetPVarInt(playerid, "_ShowDialog")) return DeletePVar(playerid, "_ShowDialog");
	    if(BizInfo[idx][bType] == 9 && pInfo[playerid][pLevel] < 3) return SendClientMessage(playerid, COLOR_GREY, "Казино доступно с 3 уровня");
	    stringer[0] = EOS;
	    if(BizInfo[idx][bType] != 2 && BizInfo[idx][bType] != 7)
		{
			if(GetString(BizInfo[idx][bOwner],"None"))
			{
			    format(stringer,512,"{FFFFFF}Номер бизнеса:\t№%i\nСтоимость:\t\t%i\n\nВы хотите войти в бизнес?",idx,BizInfo[idx][bPrice]);
				ShowPlayerDialog(playerid,dHeal+9,0,"{3399FF}Бизнес",stringer,"Да","Нет");
			}
			else
			{
				if(BizInfo[idx][bEnter] > 0) format(stringer,sizeof(stringer),"{FFFFFF}Цена входа: %i$\n\nВы хотите войти в бизнес?",BizInfo[idx][bEnter]);
				else format(stringer,512,"{FFFFFF}Вход бесплатный\n\nВы хотите войти в бизнес?");
				ShowPlayerDialog(playerid,dHeal+14,0,"{3399FF}Бизнес",stringer,"Да","Нет");
			}
		}
		SetPVarInt(playerid, "UseBiz", idx);
		break;
	}
    return 1;
}

public OnPlayerLeaveDynamicArea(playerid, areaid)
{
    if(areaid == AreaInfo[arArmyJob][1] && pTemp[playerid][pArmyJob])
	{
        pTemp[playerid][pArmyJob] = 0;
        gCountArmyJob ++;
        SendClientMessage(playerid, COLOR_RED, "Вы покинули склад оружия и больше не являетесь охранником");
	}
    for(new i; i < sizeof(AreaInfo[arGreenZone]); i++)
	{
		if(areaid != AreaInfo[arGreenZone][i]) continue;
        for(new l = 0; l < 1; l++) PlayerTextDrawHide(playerid, zz_PTD[playerid][l]);
		break;
	}
	return 1;
}

public OnPlayerStateChange(playerid, newstate, oldstate){
	pTemp[playerid][pAbletoGun] = 2;
	if(newstate == PLAYER_STATE_DRIVER) SetPVarInt(playerid,"VehicleEnters",GetPlayerVehicleID(playerid)),SetPVarInt(playerid,"exitedtrans",0);
	if(oldstate == PLAYER_STATE_DRIVER)
	{
		if(BanCar[GetPVarInt(playerid, "VehicleEnters")]) KillTimer(TimeUpdate[playerid]);
		TimeUpdate[playerid] = SetTimerEx("@UpdateVehiclePos", 10000, false, "ii", playerid, GetPVarInt(playerid, "VehicleEnters"), 1);
		BanCar[GetPVarInt(playerid, "VehicleEnters")] = true;
		DeletePVar(playerid, "VehicleEnters");
	}
	if(oldstate == PLAYER_STATE_DRIVER){
	    if(Plveh[playerid] != -1){
	        DestroyVehicle(Plveh[playerid]);
	        Plveh[playerid] = -1;
	    }
	}
	if(oldstate == PLAYER_STATE_ONFOOT && newstate == PLAYER_STATE_DRIVER && !IsVehiclePlane(GetPlayerVehicleID(playerid))){
		HideGear(playerid);
	}
	else if(newstate == PLAYER_STATE_ONFOOT && oldstate == PLAYER_STATE_DRIVER){
	    HideGear(playerid);
	}
	if(!gPlayerLogged[playerid] && newstate != PLAYER_STATE_SPECTATING) return ToCheat(playerid, 1700);
	new vehicleid = 0, model = 0;
	new string[200];
	if(newstate == PLAYER_STATE_PASSENGER)
	{
	    vehicleid = GetPVarInt(playerid,"VehicleEnters");
		model = GetVehicleModel(vehicleid);
		if(400 <= model <= 611)
		{
			model -= 400;
			new seat = GetPlayerVehicleSeat(playerid);
			if(seat != 128)
			{
				model = (MaxPassengers[model >>> 3] >>> ((model & 7) << 2)) & 0xF;
				if(!model || model == 15)
				{
					format(string, sizeof(string), "[A] %s[%d] возможно использует читы", GetName(playerid), playerid);
					SendAdminMessage(COLOR_ORANGE, string);
				}
				else if(!(0 < seat <= model) && (model != 431 || model != 437|| model != 402))
				{
					format(string, sizeof(string), "[A] %s[%d] возможно использует читы", GetName(playerid), playerid);
					SendAdminMessage(COLOR_ORANGE, string);
				}
			}
			else
			{
				format(string, sizeof(string), "[A] %s[%d] возможно использует читы", GetName(playerid), playerid);
				SendAdminMessage(COLOR_ORANGE, string);
			}
		}
	}
	if(newstate == PLAYER_STATE_ONFOOT)
	{
		if(GetPVarInt(playerid, "DrivingTest"))
		{
			SendClientMessage(playerid, COLOR_RED, "У вас есть 15 секунд, чтобы вернуться");
			DisablePlayerRaceCheckpoint(playerid);
			DrivingTestTime[playerid] = 15;
		}
		if(GetPVarInt(playerid, "FlyTest"))
		{
			SendClientMessage(playerid, COLOR_RED, "У вас есть 15 секунд, чтобы вернуться");
			DisablePlayerRaceCheckpoint(playerid);
			FlyTestTime[playerid] = 15;
		}
		if(GetPVarInt(playerid, "WaterTest") && GetPVarInt(playerid, "WaterTestTimeOn"))
		{
			SendClientMessage(playerid, COLOR_RED, "У вас есть 15 секунд, чтобы вернуться");
			DisablePlayerRaceCheckpoint(playerid);
			WaterTestTime[playerid] = 15;
		}
		if(pInfo[playerid][pJob] == JOB_BUS && pTemp[playerid][pBusID] != INVALID_VEHICLE_ID)
		{
			DisablePlayerRaceCheckpoint(playerid);
			SendClientMessage(playerid, COLOR_RED, "У Вас есть 15 секунд, чтобы вернуться в автобус");
			pTemp[playerid][pBusSpawnTimer] = SetTimerEx("@BusSpawn",15000,false,"i",playerid);
			SetPVarInt(playerid, "exitedtrans", 1);
		}
		if(pInfo[playerid][pJob] == JOB_TRUCKER && pTemp[playerid][pTruckID] != INVALID_VEHICLE_ID)
		{
			DisablePlayerRaceCheckpoint(playerid);
			SendClientMessage(playerid, COLOR_RED, "У Вас есть 15 секунд, чтобы вернуться в грузовик");
			pTemp[playerid][pTruckSpawnTimer] = SetTimerEx("@TruckerSpawn",15000,false,"i",playerid);
			SetPVarInt(playerid,"exitedtrans",1);
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
	{
	    vehicleid = GetPVarInt(playerid,"VehicleEnters");
	    model = GetVehicleModel(vehicleid);
	    SetPVarInt(playerid,"AC_ANTIFLOOD", gettime()+3);
	    SetPlayerArmedWeapon(playerid, 0);
		if(vehicleid) VehicleInfo[vehicleid][vDriver] = playerid;
		SetPVarInt(playerid, "exitedtrans", 0);
	    if((GetTickCount()-GetPVarInt(playerid, "СarTime")) < 1000)
		{
			SetPVarInt(playerid, "TimeCar", GetPVarInt(playerid, "TimeCar")+5);
			if(GetPVarInt(playerid, "TimeCar") > 10) return ToCheat(playerid, 1132);
		}
		SetPVarInt(playerid, "СarTime", GetTickCount());
		pTemp[playerid][pDeathCar] = vehicleid;
		new seat = GetPlayerVehicleSeat(playerid);
		if(seat != 128)
		{
			if(!seat)
			{
				if(!(400 <= model <= 611) || MaxPassengers[model - 400 >>> 3] >>> ((model - 400 & 7) << 2) & 0xF == 15) return ToCheat(playerid, 12);
			}
			else return ToCheat(playerid, 62);
		}
		if(!InShop[playerid])
		{
		    if(GetEngineStat(vehicleid) == 0 && IsAVel(vehicleid))
			{
			    new engine, lights, alarm, doors, bonnet, boot, objective;
				GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(vehicleid, true, lights, alarm, doors, bonnet, boot, objective);
			}
			if(!IsAVel(vehicleid) && !IsABoat(vehicleid) && !IsAPlane(vehicleid))
			{
			    @UpdateCarInfo(playerid, vehicleid, 0);
				pTemp[playerid][pCarInfoTimer] = SetTimerEx("@UpdateCarInfo", 100, true, "iii", playerid, vehicleid, 0);
			}
			if(!IsAVel(vehicleid) && !GetLicCar(playerid))
			{
				if(GetPVarInt(playerid, "DrivingTest") != 1)
				{
					SendClientMessage(playerid, COLOR_GREY, "У вас нет водительских прав!");
					RemovePlayerFromVehicle(playerid);
					return 1;
				}
			}
			if(IsABoat(vehicleid) && !GetLicWater(playerid))
			{
			    if(GetPVarInt(playerid, "WaterTest") != 1)
				{
					SendClientMessage(playerid, COLOR_GREY, "У вас нет лицензии на водный транспорт!");
					RemovePlayerFromVehicle(playerid);
					return 1;
				}
			}
			if(IsAPlane(vehicleid) && !GetLicPlane(playerid))
			{
			    if(GetPVarInt(playerid, "FlyTest") != 1)
			    {
					SendClientMessage(playerid, COLOR_GREY, "У вас нет лицензии на воздушный транспорт!");
					RemovePlayerFromVehicle(playerid);
					return 1;
				}
			}
			if(vehicleid >= aArmyNG[0] && vehicleid <= aArmyNG[10])
            {
	            if(pInfo[playerid][pMember] != TEAM_NG)
	            {
            	    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Армию!");
				    RemovePlayerFromVehicle(playerid);
				    return 1;
				}
            }
      /*      if(vehicleid >= aArmyNG[24] && vehicleid <= aArmyNG[25])
			{
	            if(pInfo[playerid][pMember] == TEAM_NG && pInfo[playerid][pRank] >= 11) { }
	            else
	            {
            	    SendClientMessage(playerid, COLOR_GREY, "Вам недоступен данный транспорт!");
				    RemovePlayerFromVehicle(playerid);
				    return 1;
				}
			}*/
			if(vehicleid >= aGrove[0] && vehicleid <= aGrove[5])
            {
	            if(pInfo[playerid][pMember] != TEAM_GROVE)
	            {
            	    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в ОПГ Южная!");
				    RemovePlayerFromVehicle(playerid);
				    return 1;
				}
            }
            if(vehicleid >= aBallas[0] && vehicleid <= aBallas[4])
            {
	            if(pInfo[playerid][pMember] != TEAM_BALLAS)
	            {
            	    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в ОПГ Тамбовская!");
				    RemovePlayerFromVehicle(playerid);
				    return 1;
				}
            }
            if(vehicleid >= aRifa[0] && vehicleid <= aRifa[4])
            {
	            if(pInfo[playerid][pMember] != TEAM_RIFA)
	            {
            	    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Южная братва!");
				    RemovePlayerFromVehicle(playerid);
				    return 1;
				}
            }
            if(vehicleid >= aAztecas[0] && vehicleid <= aAztecas[4])
            {
	            if(pInfo[playerid][pMember] != TEAM_AZTECAS)
	            {
            	    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в ОПГ Солнцевская!");
				    RemovePlayerFromVehicle(playerid);
				    return 1;
				}
            }
            if(vehicleid >= aVagos[0] && vehicleid <= aVagos[5])
            {
	            if(pInfo[playerid][pMember] != TEAM_VAGOS)
	            {
            	    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в ОПГ Ореховская!");
				    RemovePlayerFromVehicle(playerid);
				    return 1;
				}
            }
            if(vehicleid >= aMayorLS[0] && vehicleid <= aMayorLS[5])
            {
	            if(pInfo[playerid][pMember] != TEAM_LSMAYOR)
	            {
            	    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Администрации г.Южный!");
				    RemovePlayerFromVehicle(playerid);
				    return 1;
				}
            }
            if(vehicleid >= aMayorSF[0] && vehicleid <= aMayorSF[5])
            {
	            if(pInfo[playerid][pMember] != TEAM_SFMAYOR)
	            {
            	    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Администрации Области!");
				    RemovePlayerFromVehicle(playerid);
				    return 1;
				}
            }
            if(vehicleid >= aMayorLV[0] && vehicleid <= aMayorLV[5])
            {
	            if(pInfo[playerid][pMember] != TEAM_LVMAYOR)
	            {
            	    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Администрации г.Арзмас!");
				    RemovePlayerFromVehicle(playerid);
				    return 1;
				}
            }
            if(vehicleid >= aLSPD[0] && vehicleid <= aLSPD[16])
            {
	            if(pInfo[playerid][pMember] != TEAM_DPS)
	            {
            	    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Полиции г.Южного!");
				    RemovePlayerFromVehicle(playerid);
				    return 1;
				}
            }
            if(vehicleid >= aSFPD[0] && vehicleid <= aSFPD[9])
            {
	            if(pInfo[playerid][pMember] != TEAM_SFPD)
	            {
            	    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Полиции пгт.Батырево!");
				    RemovePlayerFromVehicle(playerid);
				    return 1;
				}
            }
            if(vehicleid >= aLVPD[0] && vehicleid <= aLVPD[18])
            {
	            if(pInfo[playerid][pMember] != TEAM_LVPD)
	            {
            	    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Полиции г.Арзамас!");
				    RemovePlayerFromVehicle(playerid);
				    return 1;
				}
            }
            if(vehicleid >= aHospitalLS[0] && vehicleid <= aHospitalLS[4])
            {
	            if(pInfo[playerid][pMember] != TEAM_LSHOSPITAL)
	            {
            	    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Больнице г.Южный!");
				    RemovePlayerFromVehicle(playerid);
				    return 1;
				}
            }
            if(vehicleid >= aHospitalSF[0] && vehicleid <= aHospitalSF[3])
            {
	            if(pInfo[playerid][pMember] != TEAM_SFHOSPITAL)
	            {
            	    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Больнице пгт.Батырево!");
				    RemovePlayerFromVehicle(playerid);
				    return 1;
				}
            }
            if(vehicleid >= aHospitalLV[0] && vehicleid <= aHospitalLV[7])
            {
	            if(pInfo[playerid][pMember] != TEAM_LVHOSPITAL)
	            {
            	    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Больнице LV!");
				    RemovePlayerFromVehicle(playerid);
				    return 1;
				}
            }
            if(vehicleid >= aNewsLS[0] && vehicleid <= aNewsLS[5])
            {
	            if(pInfo[playerid][pMember] != TEAM_LSNEWS)
	            {
            	    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в СМИ г.Южный!");
				    RemovePlayerFromVehicle(playerid);
				    return 1;
				}
            }
            if(vehicleid >= aNewsSF[0] && vehicleid <= aNewsSF[3])
            {
	            if(pInfo[playerid][pMember] != TEAM_SFNEWS)
	            {
            	    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в СМИ пгт.Батырево!");
				    RemovePlayerFromVehicle(playerid);
				    return 1;
				}
            }
            if(vehicleid >= aNewsLV[0] && vehicleid <= aNewsLV[4])
            {
	            if(pInfo[playerid][pMember] != TEAM_LVNEWS)
	            {
            	    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Закрыто!");
				    RemovePlayerFromVehicle(playerid);
				    return 1;
				}
            }
			if(vehicleid >= aRussianMafia[0] && vehicleid <= aRussianMafia[6])
            {
	            if(pInfo[playerid][pMember] != TEAM_RM)
	            {
            	    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Русской мафии!");
				    RemovePlayerFromVehicle(playerid);
				    return 1;
				}
            }
            if(vehicleid >= aLCN[0] && vehicleid <= aLCN[6])
            {
	            if(pInfo[playerid][pMember] != TEAM_LCN)
	            {
            	    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Итальянская Мафия!");
				    RemovePlayerFromVehicle(playerid);
				    return 1;
				}
            }
            if(vehicleid >= aYakuza[0] && vehicleid <= aYakuza[6])
            {
	            if(pInfo[playerid][pMember] != TEAM_YAKUZA)
	            {
            	    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Yakuza!");
				    RemovePlayerFromVehicle(playerid);
				    return 1;
				}
            }
            if(vehicleid >= aAutoschool[0] && vehicleid <= aAutoschool[3])
            {
                if((vehicleid >= aAutoschool[0] && vehicleid <= aAutoschool[3]) && GetPVarInt(playerid, "DrivingTest"))
				{
					SendClientMessage(playerid, COLOR_BLUE, "Следуйте по чекпоинтам, соблюдая правила дорожного движения");
					ShowPlayerDialog(playerid, dNull, 0, " ", "\n\n{ffffff}Ваша задача следовать по чекпоинтам. Вперед\n\n", "Закрыть", "");
					new i = pPressed[playerid];
					SetPlayerRaceCheckpoint(playerid,0,DrivingTest[i][0],DrivingTest[i][1],DrivingTest[i][2],DrivingTest[i][3],DrivingTest[i][4],DrivingTest[i][5],2.0);
					return 1;
				}
	            if(pInfo[playerid][pMember] == TEAM_AUTOSCHOOL || (GetPVarInt(playerid, "DrivingTest") || GetPVarInt(playerid, "FlyTest") || GetPVarInt(playerid, "WaterTest"))) { }
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "Транспорт доступен только {FFCC00}экзаменуемым {AFAFAF}или {FFCC00}лицензерам{AFAFAF}!");
				    RemovePlayerFromVehicle(playerid);
				    return 1;
				}
            }
            if(vehicleid >= aFBI[0] && vehicleid <= aFBI[4])
            {
	            if(pInfo[playerid][pMember] != TEAM_FBI)
	            {
            	    SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в ФСБ!");
				    RemovePlayerFromVehicle(playerid);
				    return 1;
				}
            }
			if((vehicleid >= aTruck[0][0] && vehicleid <= aTruck[2][1]))
			{
				if(pInfo[playerid][pJob] != JOB_TRUCKER)
				{
					SendClientMessage(playerid,COLOR_GREY,"Вы не работаете дальнобойщиком");
					RemovePlayerFromVehicle(playerid);
					return 1;
				}
				if(pTemp[playerid][pTruckID] == vehicleid) return 1;
				if(pTemp[playerid][pTruckID] != INVALID_VEHICLE_ID)
				{
					SendClientMessage(playerid,COLOR_GREY,"Вы уже арендуете тягач");
					RemovePlayerFromVehicle(playerid);
					return 1;
				}
				foreach(new i: Player)
				{
					if(pTemp[i][pTruckID] == vehicleid)
					{
						SendClientMessage(playerid,COLOR_GREY,"Этот тягач уже арендуют.");
						RemovePlayerFromVehicle(playerid);
						return 1;
					}
				}
				new trucklevel,price;
				if((vehicleid >= aTruck[0][0] && vehicleid <= aTruck[0][1])) {trucklevel = 1; price = 200;}
				else if(vehicleid >= aTruck[1][0] && vehicleid <= aTruck[1][1]) {trucklevel = 2; price = 300;}
				else {trucklevel = 3; price = 350;}
				if((trucklevel == 2 && pInfo[playerid][pTruckSkill] < TRUCK_LEVEL_2) ||
				(trucklevel == 3 && pInfo[playerid][pTruckSkill] < TRUCK_LEVEL_3))
				{
					SendClientMessage(playerid,COLOR_GREY,"Ваш опыт работы дальнобойщиком не достаточен для этого транспорта");
					RemovePlayerFromVehicle(playerid);
					return 1;
				}
				if(GetCash(playerid) < price)
				{
					format(string,sizeof(string),"Вам нужно %d$ чтобы арендовать этот грузовик",price);
					SendClientMessage(playerid,COLOR_GREY,string);
					return RemovePlayerFromVehicle(playerid);
				}
				SetPVarInt(playerid,"truckprice",price);
				format(string,sizeof(string),"{FFFFFF}Вы хотите арендовать этот грузовик за {63BD4E}$%d{FFFFFF},\n чтобы возить на нем грузы?",price);
				ShowPlayerDialog(playerid,dTruckJob,0,"{FFCC00}Аренда грузовика",string,"Да","Нет");
			}
			if(vehicleid >= mechanic[0] && vehicleid <= mechanic[9])
			{
				if(pInfo[playerid][pJob] != JOB_MECHANIC)
				{
					SendClientMessage(playerid, COLOR_GREY, "Вы не автомеханик!");
					RemovePlayerFromVehicle(playerid);
					return 1;
				}
				if(GetCash(playerid) < 200)
				{
					SendClientMessage(playerid, COLOR_GREY, "Вам нужно 200$ чтобы арендовать этот транспорт");
					RemovePlayerFromVehicle(playerid);
					return 1;
				}
				if(pTemp[playerid][pMechID] == vehicleid) { }
				else
				{
				    SetTimerEx("@CheckRentCar",8000,0,"i",playerid);
					ShowPlayerDialog(playerid, dJob+15, 0, "{ffffff}Аренда", "{ffffff}Вы хотите арендовать данный транспорт?\n\nСтоимость: {33CCFF}200$", "Да", "Нет");
				}
			}
			if(vehicleid >= aBus[0] && vehicleid <= aBus[12])
			{
				if(pInfo[playerid][pJob] != JOB_BUS)
				{
					SendClientMessage(playerid, COLOR_GREY, "Вы не водитель автобуса");
					RemovePlayerFromVehicle(playerid);
					return 1;
				}
				if(pTemp[playerid][pBusID] == vehicleid)
				{
					if(pTemp[playerid][pBusSpawnTimer]) KillTimer(pTemp[playerid][pBusSpawnTimer]);
					SetNextBusCP(playerid,pTemp[playerid][pBusPos]);
					return 1;
				}
				for(new i;i<MAX_PLAYERS;i++)
				{
					if(!IsPlayerConnected(i) || i == playerid) continue;
					if(pTemp[i][pBusID] == vehicleid)
					{
						SendClientMessage(playerid, COLOR_GREY, "Этот автобус уже арендуют");
						RemovePlayerFromVehicle(playerid);
						break;
					}
				}
				if(pTemp[playerid][pBusID] != INVALID_VEHICLE_ID && pTemp[playerid][pBusID] != vehicleid) return SendClientMessage(playerid, COLOR_GREY, "Вы уже арендуете автобус");
				if(GetCash(playerid) < 200)
				{
					SendClientMessage(playerid, COLOR_GREY, "Вам нужно 200$ для аренды автобуса");
					RemovePlayerFromVehicle(playerid);
					return 1;
				}
	      		ShowPlayerDialog(playerid,dBusJob,0,"{FFCC00}Аренда автобуса","{FFFFFF}Вы хотите арендовать этот автобус за {63BD4E}200${FFFFFF},\nчтобы возить на нем пассажиров и зарабатывать деньги?","Да","Нет");
			}
			if(vehicleid >= taxicar[0] && vehicleid <= taxicar[10])
			{
				if(pInfo[playerid][pJob] != JOB_TAXI)
				{
					SendClientMessage(playerid, COLOR_GREY, "Вы не таксист!");
					RemovePlayerFromVehicle(playerid);
					return 1;
				}
				if(GetCash(playerid) < 200)
				{
					SendClientMessage(playerid, COLOR_GREY, "Вам нужно 200$ чтобы арендовать это такси");
					RemovePlayerFromVehicle(playerid);
					return 1;
				}
				if(pTemp[playerid][pTaxiID] == vehicleid) { }
				else
				{
					SetTimerEx("@CheckRentCar",8000,0,"i",playerid);
					ShowPlayerDialog(playerid, dJob+14, 0, "{FFCC00}Аренда", "{ffffff}Вы хотите арендовать данное такси?\nСтоимость аренды: {63BD4E}200$", "Да", "Нет");
				}
			}
			new arend_id = INVALID_PLAYER_ID;
	     	if(GetArendCarID(vehicleid, arend_id) != (-1))
			{
				if(arend_id == INVALID_PLAYER_ID || !IsPlayerConnected(arend_id))
				{
				    new rc = GetArendCarID(vehicleid);
				    format(string,sizeof(string), "{FFFFFF}Транспорт для аренды!\n\n- Модель: {63BD4E}%s{FFFFFF}\n- Стоимость: {63BD4E}%i${FFFFFF}\n\n{afafaf}Чтобы арендовать, нажмите `Аренда`", VehStats[model-400][vName], ArendInfo[rc][aCost]);
					ShowPlayerDialog(playerid, dJob+5, 0, "{FFCC00}Аренда", string, "Аренда", "Отмена");
					return 1;
				}
				else if(arend_id != playerid)
				{
				    SendClientMessage(playerid, COLOR_GREY, "Этот транспорт уже арендуют");
				    RemovePlayerFromVehicle(playerid);
				    return 1;
				}
			}
			if(GetEngineStat(vehicleid) == 0 && !IsAVel(vehicleid) && !IsAPlane(vehicleid) && !InShop[playerid])
			{
				SendClientMessage(playerid, COLOR_WHITE, "{97b96c}Завести/заглушить двигатель: {FF9900}2{97b96c}. Вкл/откл фары: {FF9900}LCTRL");
			}
			if(GetEngineStat(vehicleid) == 0 && !IsAVel(vehicleid) && IsAPlane(vehicleid) && !InShop[playerid])
			{
				SendClientMessage(playerid, COLOR_WHITE, "{97b96c}Завести/заглушить двигатель: {FF9900}/start (/st)");
			}
			if(!IsAVel(vehicleid) && !IsABoat(vehicleid) && !IsAPlane(vehicleid) && !InShop[playerid])
			{
			   	SendClientMessage(playerid, COLOR_WHITE, "{97b96c}Управление поворотниками: {FF9900}NUM 4 / NUM 6{97b96c}. Аварийный сигнал: {FF9900}NUM 8");
      			if(!GetPVarInt(playerid, "BeltStatus")) SendClientMessage(playerid, COLOR_WHITE, "{97b96c}Чтобы пристегнуть ремень безопасности или надеть шлем: {FF9900}NUM 2");
		        SendClientMessage(playerid, COLOR_GREY, "Верхняя передача(+1) - {FF9900}Y{FFFFFF}, Нижняя передача(-1) - {FF9900}N{FFFFFF}.");
			}
			if(gVehicleGun[vehicleid][vGunLoading] || gVehicleGun[vehicleid][vGunUnloading])
			{
				ShowPlayerDialog(playerid, dStopLoad, DIALOG_STYLE_MSGBOX, " ", "\n\n{97b96c}Вы хотите прекратить загрузку / разгрузку {FFCC00}боеприпасов{97b96c}?\n\n", "Да", "Нет");
			}
			if(gVehicleMed[vehicleid][vMedLoading] || gVehicleMed[vehicleid][vMedUnloading])
			{
				ShowPlayerDialog(playerid, dMedStopLoad, DIALOG_STYLE_MSGBOX, " ", "\n\n{97b96c}Вы хотите прекратить загрузку / разгрузку {FFCC00}медикаментов{97b96c}?\n\n", "Да", "Нет");
			}
			if((newstate == 2 && oldstate == 3) || (newstate == 3 && oldstate == 2)  || (newstate == 2 && oldstate == 2))
			{
				SetPVarInt(playerid, "AC124", GetPVarInt(playerid,"AC124") + 1);
				if(GetPVarInt(playerid,"AC124") >= 3)
				{
					SetVehicleToRespawn(vehicleid);
					ToCheat(playerid, 115);
				}
				return 1;
			}
		}
	}
	if(newstate == PLAYER_STATE_PASSENGER)
	{
	    vehicleid = GetPVarInt(playerid,"VehicleEnters");
		if(vehicleid >= aBus[0] && vehicleid <= aBus[1] && VehicleInfo[vehicleid][vDriver] != INVALID_PLAYER_ID)
		{
			new driverid = VehicleInfo[vehicleid][vDriver];
			new price = pTemp[driverid][pBusPrice];
			if(GetCash(playerid) < price) return MeAction(playerid, "показал проездной водителю");
			format(string,sizeof(string),"~b~+%i$",price);
			GameTextForPlayer(driverid,string,1000,1);
			format(string,sizeof(string),"~r~-%i$",price);
			GameTextForPlayer(playerid,string,1000,1);
			TransferMoney(playerid, driverid, price);
		}
		foreach(new i : Player)
		{
			if(!gPlayerLogged[i]) continue;
			if(IsPlayerInVehicle(i, vehicleid) && GetPlayerState(i) == 2)
			{
				if(GetPVarInt(i, "PriceTaxi") > 0)
				{
					if(GetCash(playerid) < GetPVarInt(i, "PriceTaxi"))
					{
						SendClientMessage(playerid, COLOR_GREY, NoMoney);
						RemovePlayerFromVehicle(playerid);
					}
					else
					{
						TransferMoney(playerid, -1, GetPVarInt(i, "PriceTaxi"));
						if(doubling_salary) pInfo[i][pPayCheck] += GetPVarInt(i, "PriceTaxi")*2;
						else pInfo[i][pPayCheck] += GetPVarInt(i, "PriceTaxi");
						SetPVarInt(playerid, "TimeTaxi", 30);
						SetPVarInt(playerid, "TaxiPrice",GetPVarInt(i, "PriceTaxi"));
						SetPVarInt(playerid, "PlayerTaxi", i);
						format(string, sizeof(string), "~r~-%i$", GetPVarInt(i, "PriceTaxi"));
						GameTextForPlayer(playerid, string, 1000, 1);
						if(doubling_salary) format(string, sizeof(string), "~b~+%i$", GetPVarInt(i, "PriceTaxi")*2);
						else format(string, sizeof(string), "~b~+%i$", GetPVarInt(i, "PriceTaxi"));
						GameTextForPlayer(i, string, 1000, 1);
						SetPVarInt(i, "TaxiMoney", GetPVarInt(i, "TaxiMoney") + GetPVarInt(i, "PriceTaxi"));
					}
				}
			}
		}
	}
	if(newstate == PLAYER_STATE_SPECTATING)
	{
	    if(!gPlayerLogged[playerid] || !gPlayerSpawned[playerid] || pInfo[playerid][Spectating][0] != INVALID_PLAYER_ID) return 1;
		if(!pInfo[playerid][pAdmin] || !gAdminLogged[playerid]) return ToCheat(playerid, 1701);
	}
	if(oldstate == PLAYER_STATE_DRIVER)
	{
	    vehicleid = GetPVarInt(playerid,"VehicleEnters");
	    model = GetVehicleModel(vehicleid);
	    if(pTemp[playerid][pCarInfoTimer] != 0)
		{
			HideSpeedometer(playerid);
			KillTimer(pTemp[playerid][pCarInfoTimer]);
			pTemp[playerid][pCarInfoTimer] = 0;
		}
		if(model>=400)
		{
		    @UpdateVehiclePos(playerid, vehicleid, 0);
			VehicleInfo[vehicleid][vDriver] = INVALID_PLAYER_ID;
			SetPVarInt(playerid, "lastveh", vehicleid);
		}
	}
	return 1;
}
public OnPlayerEnterDynamicCP(playerid, checkpointid)
{
	if(checkpointid == armyammo)
	{
	    if(IsAArmy(playerid) || IsAGang(playerid)) @StealMats(playerid);
		else SendClientMessage(playerid, COLOR_GREY, "Вы не можете пользоваться этим складом!");
	}
	else if(checkpointid == unloadammomafia[0])
	{
	    if(pInfo[playerid][pMember] != TEAM_LCN) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете пользоваться этим складом!");
	    if(GetPVarInt(playerid,"carryammo"))
		{
			if(MafiaEd[0]+300 > 100000) return SendClientMessage(playerid, COLOR_GREY, "На складе недостаточно места для ящиков с боеприпасами");
			else MafiaEd[0] += 300;
			if(MafiaPatr[0]+300 > 100000) return SendClientMessage(playerid, COLOR_GREY, "На складе недостаточно места для ящиков с боеприпасами");
			else MafiaPatr[0] += 300;
			SetPVarInt(playerid,"carryammo",0);
			RemovePlayerAttachedObject(playerid,0);
			ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
			mysql_query_string[0] = EOS;
			format(mysql_query_string, 64, "UPDATE "T_MAFIA" SET lcned = %d, lcnpat = %d", MafiaEd[0], MafiaPatr[0]);
			mysql_tquery(dbHandle, mysql_query_string, "", "");
		}
	}
	else if(checkpointid == unloadammomafia[1])
	{
	    if(pInfo[playerid][pMember] != TEAM_YAKUZA) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете пользоваться этим складом!");
	    if(GetPVarInt(playerid,"carryammo"))
		{
		    if(MafiaEd[1]+300 > 100000) return SendClientMessage(playerid, COLOR_GREY, "На складе недостаточно места для ящиков с боеприпасами");
			else MafiaEd[1] += 300;
			if(MafiaPatr[1]+300 > 100000) return SendClientMessage(playerid, COLOR_GREY, "На складе недостаточно места для ящиков с боеприпасами");
			else MafiaPatr[1] += 300;
			SetPVarInt(playerid,"carryammo",0);
			RemovePlayerAttachedObject(playerid,0);
			ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
			mysql_query_string[0] = EOS;
			format(mysql_query_string, 64, "UPDATE "T_MAFIA" SET yaked = %d, yakpat = %d", MafiaEd[1], MafiaPatr[1]);
			mysql_tquery(dbHandle, mysql_query_string, "", "");
		}
	}
	else if(checkpointid == unloadammomafia[2])
	{
	    if(pInfo[playerid][pMember] != TEAM_RM) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете пользоваться этим складом!");
	    if(GetPVarInt(playerid,"carryammo"))
		{
		    if(MafiaEd[2]+300 > 100000) return SendClientMessage(playerid, COLOR_GREY, "На складе недостаточно места для ящиков с боеприпасами");
			else MafiaEd[2] += 300;
			if(MafiaPatr[2]+300 > 100000) return SendClientMessage(playerid, COLOR_GREY, "На складе недостаточно места для ящиков с боеприпасами");
			else MafiaPatr[2] += 300;
			SetPVarInt(playerid,"carryammo",0);
			RemovePlayerAttachedObject(playerid,0);
			ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
			mysql_query_string[0] = EOS;
			format(mysql_query_string, 64, "UPDATE "T_MAFIA" SET rmed = %d, rmpat = %d", MafiaEd[2], MafiaPatr[2]);
			mysql_tquery(dbHandle, mysql_query_string, "", "");
		}
	}
	else if(checkpointid == UnloadMed[0])
	{
	    if(pInfo[playerid][pMember] != TEAM_LSHOSPITAL) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете пользоваться этим складом!");
	    if(GetPVarInt(playerid,"carrymed"))
		{
		    if(MedWH[0]+10 > 10000) return SendClientMessage(playerid, COLOR_GREY, "На складе недостаточно места для медикаментов");
			else MedWH[0] += 10;
			SetPVarInt(playerid,"carrymed",0);
			RemovePlayerAttachedObject(playerid,0);
			ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
		}
	}
	else if(checkpointid == UnloadMed[1])
	{
	    if(pInfo[playerid][pMember] != TEAM_SFHOSPITAL) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете пользоваться этим складом!");
	    if(GetPVarInt(playerid,"carrymed"))
		{
		    if(MedWH[1]+10 > 10000) return SendClientMessage(playerid, COLOR_GREY, "На складе недостаточно места для медикаментов");
			else MedWH[1] += 10;
			SetPVarInt(playerid,"carrymed",0);
			RemovePlayerAttachedObject(playerid,0);
			ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
		}
	}
	else if(checkpointid == UnloadMed[2])
	{
	    if(pInfo[playerid][pMember] != TEAM_LVHOSPITAL) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете пользоваться этим складом!");
	    if(GetPVarInt(playerid,"carrymed"))
		{
		    if(MedWH[2]+10 > 10000) return SendClientMessage(playerid, COLOR_GREY, "На складе недостаточно места для медикаментов");
			else MedWH[2] += 10;
			SetPVarInt(playerid,"carrymed",0);
			RemovePlayerAttachedObject(playerid,0);
			ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
		}
	}
	return 1;
}

public OnPlayerLeaveDynamicCP(playerid, checkpointid) return 1;

public OnPlayerEnterCheckpoint(playerid)
{
	if(pTemp[playerid][pWork] == 2 && IsPlayerInRangeOfPoint(playerid,3.0,1813.6746,1424.7982,9.9600))
	{
	    if(pTemp[playerid][pLessAntiflood]>0) ToCheat(playerid,5215);
	    DisablePlayerCheckpoint(playerid);
	    RemovePlayerAttachedObject(playerid, 4);
		new rand = 50+random(30);
	    pTemp[playerid][pWorkSalary] += rand;
	    Lessdrov += rand;
	    new str[18];
	    format(str,sizeof(str),"AMOUNT: %d KG",pTemp[playerid][pWorkSalary]);
		PlayerTextDrawSetString(playerid,status_work_TD[playerid][2],str);
	    format(str,sizeof(str),"%d кг",rand);
	    SetPlayerChatBubble(playerid,str,COLOR_PURPLE,20.0,10000);
	    ClearAnimations(playerid);
		ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
		DeletePVar(playerid, "Derevo");
	    pTemp[playerid][pLessProgress] = 0;
	    pTemp[playerid][pLessStatus] = 0;
	    pTemp[playerid][pLessAntiflood] = 0;
	    PlayerTextDrawSetString(playerid, status_work_TD[playerid][3], "PERCENT: 0%");
		SetPlayerAttachedObject(playerid, 3, 341, 6, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
        new rand_coord = random(sizeof(DerevoPos));
		SetPlayerCheckpoint(playerid, DerevoPos[rand_coord][0], DerevoPos[rand_coord][1], DerevoPos[rand_coord][2], 3.0);
		SetPVarInt(playerid, "Derevo", rand_coord);
		return 1;
	}
	return 1;
}

public OnPlayerLeaveCheckpoint(playerid) return 1;

public OnPlayerEnterRaceCheckpoint(playerid)
{
	if(UseGPS[playerid])
	{
		SendClientMessage(playerid, COLOR_YELLOW, "Вы достигли места назначения");
   		DisablePlayerRaceCheckpoint(playerid);
	   	UseGPS[playerid] = false;
     	for(new i; i < 2; i++) TextDrawHideForPlayer(playerid, enable_gps_TD[i]);
	   	return 1;
	}
	if(pInfo[playerid][pJob] == JOB_BUS && pTemp[playerid][pBusID] != INVALID_VEHICLE_ID)
	{
		DisablePlayerRaceCheckpoint(playerid);
		new pos = pTemp[playerid][pBusPos];
		new route = pTemp[playerid][pBusRoute];
		if(gBusCPs[route][pos][0] == gBusCPs[route][pos+1][0] && gBusCPs[route][pos][1] == gBusCPs[route][pos+1][1]) //Остановка
		{
			new routename[56], string[106];
			switch(route)
			{
				case 0: routename = "г.Южный - Лесопилка";
				case 1: routename = "пгт.Батырево - Шахта";
			/*	case 2: routename = "ЖДЛС - Лесопилка";
				case 3: routename = "ЖДСФ - Лесопилка";
				case 4: routename = "ЖДЛС - Шахта";
				case 5: routename = "Лос-Сантос - Лас-Вентурас";
				case 6: routename = "Лас-Вентурас - Сан-Фиерро";*/
			}
			format(string,sizeof(string),"Автобус по маршруту %s отправляется через 10 секунд",routename);
			SendStreamMessage(30.0, playerid, string, 0x99CCFFFF);
			SetTimerEx("@BusStop",10000,false,"i",playerid);
			return 1;
		}
		if(pos == 99 || gBusCPs[route][pos+1][0] == 0.0)
		{
		    if(route < 4) pTemp[playerid][pBusPos] = 10;
			else pTemp[playerid][pBusPos] = 0;
		}
		else pTemp[playerid][pBusPos]++;
		SetNextBusCP(playerid,pTemp[playerid][pBusPos]);
	}
	if(GetPVarInt(playerid, "DrivingTest") > 0)
	{
		if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться за рулем!");
		if(pPressed[playerid] == 22)
		{
			if(GetPVarInt(playerid, "DrivingTestError") > 2)
			{
				SendClientMessage(playerid, COLOR_RED, "Вы провалили экзамен на управление наземным транспортом");
				ShowPlayerDialog(playerid, dNull, 0, " ", "\n\n{F04245}К сожалению вы не сдали экзамен на управление наземным транспортом\n\n", "Закрыть", "");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREEN, "Поздравляем! Вы сдали экзамен на управление наземным транспортом");
				ShowPlayerDialog(playerid, dNull, 0, " ", "\n\n{ffffff}Поздравляем, вы сдали экзамен на управление наземным транспортом\n\n", "Закрыть", "");
				GiveLicCar(playerid);
			}
			DeletePVar(playerid, "DrivingTest");
			DeletePVar(playerid, "DrivingTestHealth");
			DeletePVar(playerid, "DrivingTestError");
			SetVehicleToRespawn(GetPVarInt(playerid,"VehicleEnters"));
			DisablePlayerRaceCheckpoint(playerid);
		}
		else
		{
			pPressed[playerid]++;
			new Float:health, i = pPressed[playerid], string[128];
			GetVehicleHealth(GetPVarInt(playerid,"VehicleEnters"), health);
			if(health < GetPVarFloat(playerid, "DrivingTestHealth"))
			{
			    format(string, sizeof(string), "Вы повредили транспорт. Ошибок: {ffffff}%i", GetPVarInt(playerid, "DrivingTestError") + 1);
				SendClientMessage(playerid, COLOR_RED, string);
				SetPVarInt(playerid, "DrivingTestError", GetPVarInt(playerid, "DrivingTestError") + 1);
			}
			/*if(GetVehicleSpeed(playerid) > 70)
			{
			    format(string, sizeof(string), "Вы превысили скорость. Ошибок: {ffffff}%i", GetPVarInt(playerid, "DrivingTestError") + 1);
				SendClientMessage(playerid, COLOR_RED, string);
				SetPVarInt(playerid, "DrivingTestError", GetPVarInt(playerid, "DrivingTestError") + 1);
			}*/
			if(pPressed[playerid] < 22) SetPlayerRaceCheckpoint(playerid, 0, DrivingTest[i][0],DrivingTest[i][1],DrivingTest[i][2],DrivingTest[i][3],DrivingTest[i][4],DrivingTest[i][5], 2.0);
			else SetPlayerRaceCheckpoint(playerid,1, DrivingTest[i][0],DrivingTest[i][1],DrivingTest[i][2],DrivingTest[i][3],DrivingTest[i][4],DrivingTest[i][5], 2.0);
			SetPVarFloat(playerid, "DrivingTestHealth", health);
		}
	}
	if(GetPVarInt(playerid, "FlyTest") > 0)
	{
		if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться за рулем!");
		if(pPressed[playerid] == 12)
		{
			if(GetPVarInt(playerid, "FlyTestError") > 2)
			{
				SendClientMessage(playerid, COLOR_RED, "Вы провалили экзамен на управление воздушным транспортом");
				ShowPlayerDialog(playerid, dNull, 0, " ", "\n\n{F04245}К сожалению вы не сдали экзамен на управление воздушным транспортом\n\n", "Закрыть", "");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREEN, "Поздравляем! Вы сдали экзамен на управление воздушным транспортом");
				ShowPlayerDialog(playerid, dNull, 0, " ", "\n\n{ffffff}Поздравляем, вы сдали экзамен на управление воздушным транспортом\n\n", "Закрыть", "");
				GiveLicPlane(playerid);
			}
			DeletePVar(playerid, "FlyTest");
			DeletePVar(playerid, "FlyTestHealth");
			DeletePVar(playerid, "FlyTestError");
			SetVehicleToRespawn(GetPVarInt(playerid,"VehicleEnters"));
			DisablePlayerRaceCheckpoint(playerid);
		}
		else
		{
			pPressed[playerid]++;
			new Float:health, i = pPressed[playerid], string[128];
			GetVehicleHealth(GetPVarInt(playerid,"VehicleEnters"), health);
			if(health < GetPVarFloat(playerid, "FlyTestHealth"))
			{
			    format(string, sizeof(string), "Вы повредили вертолёт. Ошибок: {ffffff}%i", GetPVarInt(playerid, "FlyTestError") + 1);
				SendClientMessage(playerid, COLOR_RED, string);
				SetPVarInt(playerid, "FlyTestError", GetPVarInt(playerid, "FlyTestError") + 1);
			}
			if(pPressed[playerid] < 12) SetPlayerRaceCheckpoint(playerid, 3, FlyTest[i][0],FlyTest[i][1],FlyTest[i][2],FlyTest[i][3],FlyTest[i][4],FlyTest[i][5], 5.0);
			else SetPlayerRaceCheckpoint(playerid, 4, FlyTest[i][0],FlyTest[i][1],FlyTest[i][2],FlyTest[i][3],FlyTest[i][4],FlyTest[i][5], 5.0);
			SetPVarFloat(playerid, "FlyTestHealth", health);
		}
	}
	if(GetPVarInt(playerid, "WaterTest"))
	{
		if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться за рулем!");
		if(pPressed[playerid] == 13)
		{
			if(GetPVarInt(playerid, "WaterTestError") > 2)
			{
				SendClientMessage(playerid, COLOR_RED, "Вы провалили экзамен на управление водным транспортом");
				ShowPlayerDialog(playerid, dNull, 0, " ", "\n\n{F04245}К сожалению вы не сдали экзамен на управление водным транспортом\n\n", "Закрыть", "");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREEN, "Поздравляем! Вы сдали экзамен на управление водным транспортом");
				ShowPlayerDialog(playerid, dNull, 0, " ", "\n\n{ffffff}Поздравляем, вы сдали экзамен на управление водным транспортом\n\n", "Закрыть", "");
				GiveLicWater(playerid);
			}
			DeletePVar(playerid, "WaterTest");
			DeletePVar(playerid, "WaterTestTimeOn");
			DeletePVar(playerid, "WaterTestHealth");
			DeletePVar(playerid, "WaterTestError");
			SetVehicleToRespawn(GetPVarInt(playerid,"VehicleEnters"));
			DisablePlayerRaceCheckpoint(playerid);
			SetPlayerPos(playerid,-2960.4763,480.3259,4.9084);
			SetPlayerFacingAngle(playerid,242.2719);
		}
		else
		{
			pPressed[playerid]++;
			new Float:health, i = pPressed[playerid], string[128];
			GetVehicleHealth(GetPVarInt(playerid,"VehicleEnters"), health);
			if(health < GetPVarFloat(playerid, "WaterTestHealth"))
			{
			    format(string, sizeof(string), "Вы повредили лодку. Ошибок: {ffffff}%i", GetPVarInt(playerid, "WaterTestError") + 1);
				SendClientMessage(playerid, COLOR_RED, string);
				SetPVarInt(playerid, "WaterTestError", GetPVarInt(playerid, "WaterTestError") + 1);
			}
			if(pPressed[playerid] < 13) SetPlayerRaceCheckpoint(playerid, 0, WaterTest[i][0],WaterTest[i][1],WaterTest[i][2],WaterTest[i][3],WaterTest[i][4],WaterTest[i][5], 5.0);
			else SetPlayerRaceCheckpoint(playerid, 1, WaterTest[i][0],WaterTest[i][1],WaterTest[i][2],WaterTest[i][3],WaterTest[i][4],WaterTest[i][5], 5.0);
			SetPVarFloat(playerid, "WaterTestHealth", health);
		}
	}
	switch(RaceCP[playerid])
	{
		case 10:
		{
			RaceCP[playerid] = 11;
			DisablePlayerRaceCheckpoint(playerid);
			GonkaSchet[playerid] ++;
			GameTextForPlayer(playerid, "~w~~n~~n~Point: ~b~1 / 38", 5000, 4);
			SetPlayerRaceCheckpoint(playerid,0, GonkaCPOINT[1][0], GonkaCPOINT[1][1], GonkaCPOINT[1][2], GonkaCPOINT[2][0], GonkaCPOINT[2][1],GonkaCPOINT[2][2], 6.0);
		}
		case 11:
		{
			RaceCP[playerid] = 12;
			DisablePlayerRaceCheckpoint(playerid);
			GonkaSchet[playerid] ++;
			GameTextForPlayer(playerid, "~w~~n~~n~Point: ~b~2 / 38", 5000, 4);
			SetPlayerRaceCheckpoint(playerid, 0, GonkaCPOINT[2][0], GonkaCPOINT[2][1], GonkaCPOINT[2][2], GonkaCPOINT[3][0], GonkaCPOINT[3][1], GonkaCPOINT[3][2], 6.0);
		}
		case 12:
		{
			RaceCP[playerid] = 13;
			DisablePlayerRaceCheckpoint(playerid);
			GonkaSchet[playerid] ++;
			GameTextForPlayer(playerid, "~w~~n~~n~Point: ~b~3 / 38", 5000, 4);
			SetPlayerRaceCheckpoint(playerid, 0, GonkaCPOINT[3][0], GonkaCPOINT[3][1], GonkaCPOINT[3][2], GonkaCPOINT[4][0], GonkaCPOINT[4][1], GonkaCPOINT[4][2], 6.0);
		}
		case 13:
		{
			RaceCP[playerid] = 14;
			DisablePlayerRaceCheckpoint(playerid);
			GonkaSchet[playerid] ++;
			GameTextForPlayer(playerid, "~w~~n~~n~Point: ~b~4 / 38", 5000, 4);
			SetPlayerRaceCheckpoint(playerid, 0, GonkaCPOINT[4][0], GonkaCPOINT[4][1], GonkaCPOINT[4][2], GonkaCPOINT[5][0], GonkaCPOINT[5][1], GonkaCPOINT[5][2], 6.0);
		}
		case 14:
		{
			RaceCP[playerid] = 15;
			DisablePlayerRaceCheckpoint(playerid);
			GonkaSchet[playerid] ++;
			GameTextForPlayer(playerid, "~w~~n~~n~Point: ~b~5 / 38", 5000, 4);
			SetPlayerRaceCheckpoint(playerid,0, GonkaCPOINT[5][0], GonkaCPOINT[5][1], GonkaCPOINT[5][2], GonkaCPOINT[6][0], GonkaCPOINT[6][1],GonkaCPOINT[6][2], 6.0);
		}
		case 15:
		{
			RaceCP[playerid] = 16;
			DisablePlayerRaceCheckpoint(playerid);
			GonkaSchet[playerid] ++;
			GameTextForPlayer(playerid, "~w~~n~~n~Point: ~b~6 / 38", 5000, 4);
			SetPlayerRaceCheckpoint(playerid, 0, GonkaCPOINT[6][0], GonkaCPOINT[6][1], GonkaCPOINT[6][2], GonkaCPOINT[7][0], GonkaCPOINT[7][1], GonkaCPOINT[7][2], 6.0);
		}
		case 16:
		{
			RaceCP[playerid] = 17;
			DisablePlayerRaceCheckpoint(playerid);
			GonkaSchet[playerid] ++;
			GameTextForPlayer(playerid, "~w~~n~~n~Point: ~b~7 / 38", 5000, 4);
			SetPlayerRaceCheckpoint(playerid, 0, GonkaCPOINT[7][0], GonkaCPOINT[7][1], GonkaCPOINT[7][2], GonkaCPOINT[8][0], GonkaCPOINT[8][1], GonkaCPOINT[8][2], 6.0);
		}
		case 17:
		{
			RaceCP[playerid] = 18;
			DisablePlayerRaceCheckpoint(playerid);
			GonkaSchet[playerid] ++;
			GameTextForPlayer(playerid, "~w~~n~~n~Point: ~b~8 / 38", 5000, 4);
			SetPlayerRaceCheckpoint(playerid, 0, GonkaCPOINT[8][0], GonkaCPOINT[8][1], GonkaCPOINT[8][2], GonkaCPOINT[9][0], GonkaCPOINT[9][1], GonkaCPOINT[9][2], 6.0);
		}
		case 18:
		{
			RaceCP[playerid] = 19;
			DisablePlayerRaceCheckpoint(playerid);
			GonkaSchet[playerid] ++;
			GameTextForPlayer(playerid, "~w~~n~~n~Point: ~b~9 / 38", 5000, 4);
			SetPlayerRaceCheckpoint(playerid,0, GonkaCPOINT[9][0], GonkaCPOINT[9][1], GonkaCPOINT[9][2], GonkaCPOINT[10][0], GonkaCPOINT[10][1],GonkaCPOINT[10][2], 6.0);
		}
		case 19:
		{
			RaceCP[playerid] = 20;
			DisablePlayerRaceCheckpoint(playerid);
			GonkaSchet[playerid] ++;
			GameTextForPlayer(playerid, "~w~~n~~n~Point: ~b~10 / 38", 5000, 4);
			SetPlayerRaceCheckpoint(playerid, 0, GonkaCPOINT[10][0], GonkaCPOINT[10][1], GonkaCPOINT[10][2], GonkaCPOINT[11][0], GonkaCPOINT[11][1], GonkaCPOINT[11][2], 6.0);
		}
		case 20:
		{
			RaceCP[playerid] = 21;
			DisablePlayerRaceCheckpoint(playerid);
			GonkaSchet[playerid] ++;
			GameTextForPlayer(playerid, "~w~~n~~n~Point: ~b~11 / 38", 5000, 4);
			SetPlayerRaceCheckpoint(playerid, 0, GonkaCPOINT[11][0], GonkaCPOINT[11][1], GonkaCPOINT[11][2], GonkaCPOINT[12][0], GonkaCPOINT[12][1], GonkaCPOINT[12][2], 6.0);
		}
		case 21:
		{
			RaceCP[playerid] = 22;
			DisablePlayerRaceCheckpoint(playerid);
			GonkaSchet[playerid] ++;
			GameTextForPlayer(playerid, "~w~~n~~n~Point: ~b~12 / 38", 5000, 4);
			SetPlayerRaceCheckpoint(playerid, 0, GonkaCPOINT[12][0], GonkaCPOINT[12][1], GonkaCPOINT[12][2], GonkaCPOINT[13][0], GonkaCPOINT[13][1], GonkaCPOINT[13][2], 6.0);
		}
		case 22:
		{
			RaceCP[playerid] = 23;
			DisablePlayerRaceCheckpoint(playerid);
			GonkaSchet[playerid] ++;
			GameTextForPlayer(playerid, "~w~~n~~n~Point: ~b~13 / 38", 5000, 4);
			SetPlayerRaceCheckpoint(playerid,0, GonkaCPOINT[13][0], GonkaCPOINT[13][1], GonkaCPOINT[13][2], GonkaCPOINT[14][0], GonkaCPOINT[14][1],GonkaCPOINT[14][2], 6.0);
		}
		case 23:
		{
			RaceCP[playerid] = 24;
			DisablePlayerRaceCheckpoint(playerid);
			GonkaSchet[playerid] ++;
			GameTextForPlayer(playerid, "~w~~n~~n~Point: ~b~14 / 38", 5000, 4);
			SetPlayerRaceCheckpoint(playerid, 0, GonkaCPOINT[14][0], GonkaCPOINT[14][1], GonkaCPOINT[14][2], GonkaCPOINT[15][0], GonkaCPOINT[15][1], GonkaCPOINT[15][2], 6.0);
		}
		case 24:
		{
			RaceCP[playerid] = 25;
			DisablePlayerRaceCheckpoint(playerid);
			GonkaSchet[playerid] ++;
			GameTextForPlayer(playerid, "~w~~n~~n~Point: ~b~15 / 38", 5000, 4);
			SetPlayerRaceCheckpoint(playerid, 0, GonkaCPOINT[15][0], GonkaCPOINT[15][1], GonkaCPOINT[15][2], GonkaCPOINT[16][0], GonkaCPOINT[16][1], GonkaCPOINT[16][2], 6.0);
		}
		case 25:
		{
			RaceCP[playerid] = 26;
			DisablePlayerRaceCheckpoint(playerid);
			GonkaSchet[playerid] ++;
			GameTextForPlayer(playerid, "~w~~n~~n~Point: ~b~16 / 38", 5000, 4);
			SetPlayerRaceCheckpoint(playerid, 0, GonkaCPOINT[16][0], GonkaCPOINT[16][1], GonkaCPOINT[16][2], GonkaCPOINT[17][0], GonkaCPOINT[17][1], GonkaCPOINT[17][2], 6.0);
		}
		case 26:
		{
			RaceCP[playerid] = 27;
			DisablePlayerRaceCheckpoint(playerid);
			GonkaSchet[playerid] ++;
			GameTextForPlayer(playerid, "~w~~n~~n~Point: ~b~17 / 38", 5000, 4);
			SetPlayerRaceCheckpoint(playerid,0, GonkaCPOINT[17][0], GonkaCPOINT[17][1], GonkaCPOINT[17][2], GonkaCPOINT[18][0], GonkaCPOINT[18][1],GonkaCPOINT[18][2], 6.0);
		}
		case 27:
		{
			RaceCP[playerid] = 28;
			DisablePlayerRaceCheckpoint(playerid);
			GonkaSchet[playerid] ++;
			GameTextForPlayer(playerid, "~w~~n~~n~Point: ~b~18 / 38", 5000, 4);
			SetPlayerRaceCheckpoint(playerid, 0, GonkaCPOINT[18][0], GonkaCPOINT[18][1], GonkaCPOINT[18][2], GonkaCPOINT[19][0], GonkaCPOINT[19][1], GonkaCPOINT[19][2], 6.0);
		}
		case 28:
		{
			RaceCP[playerid] = 29;
			DisablePlayerRaceCheckpoint(playerid);
			GonkaSchet[playerid] ++;
			GameTextForPlayer(playerid, "~w~~n~~n~Point: ~b~19 / 38", 5000, 4);
			SetPlayerRaceCheckpoint(playerid, 0, GonkaCPOINT[19][0], GonkaCPOINT[19][1], GonkaCPOINT[19][2], GonkaCPOINT[20][0], GonkaCPOINT[20][1], GonkaCPOINT[20][2], 6.0);
		}
		case 29:
		{
			RaceCP[playerid] = 30;
			DisablePlayerRaceCheckpoint(playerid);
			GonkaSchet[playerid] ++;
			GameTextForPlayer(playerid, "~w~~n~~n~Point: ~b~20 / 38", 5000, 4);
			SetPlayerRaceCheckpoint(playerid, 0, GonkaCPOINT[20][0], GonkaCPOINT[20][1], GonkaCPOINT[20][2], GonkaCPOINT[21][0], GonkaCPOINT[21][1], GonkaCPOINT[21][2], 6.0);
		}
		case 30:
		{
			RaceCP[playerid] = 31;
			DisablePlayerRaceCheckpoint(playerid);
			GonkaSchet[playerid] ++;
			GameTextForPlayer(playerid, "~w~~n~~n~Point: ~b~21 / 38", 5000, 4);
			SetPlayerRaceCheckpoint(playerid,0, GonkaCPOINT[21][0], GonkaCPOINT[21][1], GonkaCPOINT[21][2], GonkaCPOINT[22][0], GonkaCPOINT[22][1],GonkaCPOINT[22][2], 6.0);
		}
		case 31:
		{
			RaceCP[playerid] = 32;
			DisablePlayerRaceCheckpoint(playerid);
			GonkaSchet[playerid] ++;
			GameTextForPlayer(playerid, "~w~~n~~n~Point: ~b~22 / 38", 5000, 4);
			SetPlayerRaceCheckpoint(playerid, 0, GonkaCPOINT[22][0], GonkaCPOINT[22][1], GonkaCPOINT[22][2], GonkaCPOINT[23][0], GonkaCPOINT[23][1], GonkaCPOINT[23][2], 6.0);
		}
		case 32:
		{
			RaceCP[playerid] = 33;
			DisablePlayerRaceCheckpoint(playerid);
			GonkaSchet[playerid] ++;
			GameTextForPlayer(playerid, "~w~~n~~n~Point: ~b~23 / 38", 5000, 4);
			SetPlayerRaceCheckpoint(playerid, 0, GonkaCPOINT[23][0], GonkaCPOINT[23][1], GonkaCPOINT[23][2], GonkaCPOINT[24][0], GonkaCPOINT[24][1], GonkaCPOINT[24][2], 6.0);
		}
		case 33:
		{
			RaceCP[playerid] = 34;
			DisablePlayerRaceCheckpoint(playerid);
			GonkaSchet[playerid] ++;
			GameTextForPlayer(playerid, "~w~~n~~n~Point: ~b~24 / 38", 5000, 4);
			SetPlayerRaceCheckpoint(playerid, 0, GonkaCPOINT[24][0], GonkaCPOINT[24][1], GonkaCPOINT[24][2], GonkaCPOINT[25][0], GonkaCPOINT[25][1], GonkaCPOINT[25][2], 6.0);
		}
		case 34:
		{
			RaceCP[playerid] = 35;
			DisablePlayerRaceCheckpoint(playerid);
			GonkaSchet[playerid] ++;
			GameTextForPlayer(playerid, "~w~~n~~n~Point: ~b~25 / 38", 5000, 4);
			SetPlayerRaceCheckpoint(playerid,0, GonkaCPOINT[25][0], GonkaCPOINT[25][1], GonkaCPOINT[25][2], GonkaCPOINT[26][0], GonkaCPOINT[26][1], GonkaCPOINT[26][2], 6.0);
		}
		case 35:
		{
			RaceCP[playerid] = 36;
			DisablePlayerRaceCheckpoint(playerid);
			GonkaSchet[playerid] ++;
			GameTextForPlayer(playerid, "~w~~n~~n~Point: ~b~26 / 38", 5000, 4);
			SetPlayerRaceCheckpoint(playerid, 0, GonkaCPOINT[26][0], GonkaCPOINT[26][1], GonkaCPOINT[26][2], GonkaCPOINT[27][0], GonkaCPOINT[27][1], GonkaCPOINT[27][2], 6.0);
		}
		case 36:
		{
			RaceCP[playerid] = 37;
			DisablePlayerRaceCheckpoint(playerid);
			GonkaSchet[playerid] ++;
			GameTextForPlayer(playerid, "~w~~n~~n~Point: ~b~27 / 38", 5000, 4);
			SetPlayerRaceCheckpoint(playerid, 0, GonkaCPOINT[27][0], GonkaCPOINT[27][1], GonkaCPOINT[27][2], GonkaCPOINT[28][0], GonkaCPOINT[28][1], GonkaCPOINT[28][2], 6.0);
		}
		case 37:
		{
			RaceCP[playerid] = 38;
			DisablePlayerRaceCheckpoint(playerid);
			GonkaSchet[playerid] ++;
			GameTextForPlayer(playerid, "~w~~n~~n~Point: ~b~28 / 38", 5000, 4);
			SetPlayerRaceCheckpoint(playerid, 0, GonkaCPOINT[28][0], GonkaCPOINT[28][1], GonkaCPOINT[28][2], GonkaCPOINT[29][0], GonkaCPOINT[29][1], GonkaCPOINT[29][2], 6.0);
		}
		case 38:
		{
			RaceCP[playerid] = 39;
			DisablePlayerRaceCheckpoint(playerid);
			GonkaSchet[playerid] ++;
			GameTextForPlayer(playerid, "~w~~n~~n~Point: ~b~29 / 38", 5000, 4);
			SetPlayerRaceCheckpoint(playerid,0, GonkaCPOINT[29][0], GonkaCPOINT[29][1], GonkaCPOINT[29][2], GonkaCPOINT[30][0], GonkaCPOINT[30][1], GonkaCPOINT[30][2], 6.0);
		}
		case 39:
		{
			RaceCP[playerid] = 40;
			DisablePlayerRaceCheckpoint(playerid);
			GonkaSchet[playerid] ++;
			GameTextForPlayer(playerid, "~w~~n~~n~Point: ~b~30 / 38", 5000, 4);
			SetPlayerRaceCheckpoint(playerid, 0, GonkaCPOINT[30][0], GonkaCPOINT[30][1], GonkaCPOINT[30][2], GonkaCPOINT[31][0], GonkaCPOINT[31][1], GonkaCPOINT[31][2], 6.0);
		}
		case 40:
		{
			RaceCP[playerid] = 41;
			DisablePlayerRaceCheckpoint(playerid);
			GonkaSchet[playerid] ++;
			GameTextForPlayer(playerid, "~w~~n~~n~Point: ~b~31 / 38", 5000, 4);
			SetPlayerRaceCheckpoint(playerid, 0, GonkaCPOINT[31][0], GonkaCPOINT[31][1], GonkaCPOINT[31][2], GonkaCPOINT[32][0], GonkaCPOINT[32][1], GonkaCPOINT[32][2], 6.0);
		}
		case 41:
		{
			RaceCP[playerid] = 42;
			DisablePlayerRaceCheckpoint(playerid);
			GonkaSchet[playerid] ++;
			GameTextForPlayer(playerid, "~w~~n~~n~Point: ~b~32 / 38", 5000, 4);
			SetPlayerRaceCheckpoint(playerid, 0, GonkaCPOINT[32][0], GonkaCPOINT[32][1], GonkaCPOINT[32][2], GonkaCPOINT[33][0], GonkaCPOINT[33][1], GonkaCPOINT[33][2], 6.0);
		}
		case 42:
		{
			RaceCP[playerid] = 43;
			DisablePlayerRaceCheckpoint(playerid);
			GonkaSchet[playerid] ++;
			GameTextForPlayer(playerid, "~w~~n~~n~Point: ~b~33 / 38", 5000, 4);
			SetPlayerRaceCheckpoint(playerid,0, GonkaCPOINT[33][0], GonkaCPOINT[33][1], GonkaCPOINT[33][2], GonkaCPOINT[34][0], GonkaCPOINT[34][1], GonkaCPOINT[34][2], 6.0);
		}
		case 43:
		{
			RaceCP[playerid] = 44;
			DisablePlayerRaceCheckpoint(playerid);
			GonkaSchet[playerid] ++;
			GameTextForPlayer(playerid, "~w~~n~~n~Point: ~b~34 / 38", 5000, 4);
			SetPlayerRaceCheckpoint(playerid, 0, GonkaCPOINT[34][0], GonkaCPOINT[34][1], GonkaCPOINT[34][2], GonkaCPOINT[35][0], GonkaCPOINT[35][1], GonkaCPOINT[35][2], 6.0);
		}
		case 44:
		{
			RaceCP[playerid] = 45;
			DisablePlayerRaceCheckpoint(playerid);
			GonkaSchet[playerid] ++;
			GameTextForPlayer(playerid, "~w~~n~~n~Point: ~b~35 / 38", 5000, 4);
			SetPlayerRaceCheckpoint(playerid, 0, GonkaCPOINT[35][0], GonkaCPOINT[35][1], GonkaCPOINT[35][2], GonkaCPOINT[36][0], GonkaCPOINT[36][1], GonkaCPOINT[36][2], 6.0);
		}
		case 45:
		{
			RaceCP[playerid] = 46;
			DisablePlayerRaceCheckpoint(playerid);
			GonkaSchet[playerid] ++;
			GameTextForPlayer(playerid, "~w~~n~~n~Point: ~b~36 / 38", 5000, 4);
			SetPlayerRaceCheckpoint(playerid, 0, GonkaCPOINT[36][0], GonkaCPOINT[36][1], GonkaCPOINT[36][2], GonkaCPOINT[37][0], GonkaCPOINT[37][1], GonkaCPOINT[37][2], 6.0);
		}
		case 46:
		{
			RaceCP[playerid] = 47;
			DisablePlayerRaceCheckpoint(playerid);
			GonkaSchet[playerid] ++;
			GameTextForPlayer(playerid, "~w~~n~~n~Point: ~b~37 / 38", 5000, 4);
			SetPlayerRaceCheckpoint(playerid, 1, GonkaCPOINT[37][0], GonkaCPOINT[37][1], GonkaCPOINT[37][2], 0.0, 0.0, 0.0, 6.0);
		}
		case 47:
		{
		    DisablePlayerRaceCheckpoint(playerid);
			GameTextForPlayer(playerid, "~w~~n~~n~Point: ~b~38 / 38~n~~g~YOU FINISHED", 5000, 4);
			winners ++;
			new string[100];
			static const pos[9][3] = {"st","nd","rd","th","th","th","th","th","th"};
			if(winners <= 5)
			{
				format(string, sizeof(string), "{63BD4E}%s (%i%s)\n", GetName(playerid), winners, pos[winners-1]);
				strcat(RaceText, string);
			}
			else
			{
				format(string, sizeof(string), "{FFFFFF}%s (%i%s)\n", GetName(playerid), winners, pos[winners-1]);
				strcat(RaceText, string);
			}
			RaceCP[playerid] = 0;
			if(pTemp[playerid][pRaceID] != INVALID_VEHICLE_ID)
			{
				DestroyVehicle(pTemp[playerid][pRaceID]);
	    		pTemp[playerid][pRaceID] = INVALID_VEHICLE_ID;
  			}
			DisablePlayerRaceCheckpoint(playerid);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerPos(playerid, 1795.5133,2040.0596,15.8694, 1);
			SetPlayerFacingAngle(playerid, 4.1259);
			GonkaSchet[playerid] = GonkaStavka[playerid] = 0;
			PlayerPlaySound(playerid, 31202, 0.0, 0.0, 0.0);
			if(Gonshiki[0] == 1001)
			{
				Gonshiki[0] = playerid;
				new win_summa = (GonkaPriz/100)*80;
				SendMes(playerid, COLOR_GREEN, "Вы приехали первым и получили %i$", win_summa);
				TransferMoney(-1, playerid, win_summa, "Победил в гонке", 1);
				PlayerPlaySound(playerid, 31205, 0.0, 0.0, 0.0);
			}
			else if(Gonshiki[1] == 1001)
			{
				Gonshiki[1] = playerid;
				new win_summa = (GonkaPriz/100)*60;
				SendMes(playerid, COLOR_GREEN, "Вы приехали вторым и получили %i$", win_summa);
				TransferMoney(-1, playerid, win_summa, "Победил в гонке", 1);
				PlayerPlaySound(playerid, 31205, 0.0, 0.0, 0.0);
			}
			else if(Gonshiki[2] == 1001)
			{
				Gonshiki[2] = playerid;
				new win_summa = (GonkaPriz/100)*40;
				SendMes(playerid, COLOR_GREEN, "Вы приехали третьим и получили %i$", win_summa);
				TransferMoney(-1, playerid, win_summa, "Победил в гонке", 1);
				PlayerPlaySound(playerid, 31205, 0.0, 0.0, 0.0);
			}
			else if(Gonshiki[3] == 1001)
			{
				Gonshiki[3] = playerid;
				new win_summa = (GonkaPriz/100)*10;
				SendMes(playerid, COLOR_GREEN, "Вы приехали четвёртым и получили %i$", win_summa);
				TransferMoney(-1, playerid, win_summa, "Победил в гонке", 1);
				PlayerPlaySound(playerid, 31205, 0.0, 0.0, 0.0);
			}
			else if(Gonshiki[4] == 1001)
			{
				Gonshiki[4] = playerid;
				new win_summa = (GonkaPriz/100)*5;
				SendMes(playerid, COLOR_GREEN, "Вы приехали пятым и получили %i$", win_summa);
				TransferMoney(-1, playerid, win_summa, "Победил в гонке", 1);
				PlayerPlaySound(playerid, 31205, 0.0, 0.0, 0.0);
			}
			DeletePVar(playerid, "PlayerGonka");
			return 1;
		}
	}
	return 1;
}

public OnPlayerRequestSpawn(playerid)
{
    if(!gPlayerLogged[playerid])
	{
	    SendClientMessage(playerid, COLOR_RED, PlayerNeedToLoggedForToPlay);
		SKick(playerid, 2);
		return 0;
	}
    return 1;
}

public OnPlayerLeaveRaceCheckpoint(playerid)
{
    return 1;
}

public OnUnoccupiedVehicleUpdate(vehicleid, playerid, passenger_seat, Float:new_x, Float:new_y, Float:new_z, Float:vel_x, Float:vel_y, Float:vel_z)
{
    new Float:Pos[3];
    GetVehiclePos(vehicleid, Pos[0], Pos[1], Pos[2]);
    new Float:Count[2];
    Count[0] = Difference(Pos[0],VehicleInfo[vehicleid][vX]);
    Count[1] = Difference(Pos[1],VehicleInfo[vehicleid][vY]);
    switch(GetVehicleModel(vehicleid))
    {
        case 435, 450, 584, 591, 606..608, 610..611: goto UPDATE;
    }
   	new bool:check__voditel = false;
	for(new i = 0, j = MAX_PLAYERS; i <= j; i++)
	{
	    if(GetPlayerVehicleID(i) == vehicleid)
	    {
	        check__voditel = true;
	        break;
	    }
	}
    if((Count[0] > 5 || Count[1] > 5) && !check__voditel && !BanCar[vehicleid])
    {
  		SetVehiclePos(vehicleid, VehicleInfo[vehicleid][vX], VehicleInfo[vehicleid][vY], VehicleInfo[vehicleid][vZ]);
		SetVehicleZAngle(vehicleid, VehicleInfo[vehicleid][vA]);
    }
    else UPDATE: @UpdateVehiclePos(playerid, vehicleid, 0);
	return 1;
}

@UpdateVehiclePos(playerid, vehicleid, type);
@UpdateVehiclePos(playerid, vehicleid, type)
{
    if(vehicleid == -1 && playerid != -1) return KillTimer(TimeUpdate[playerid]), 1;
	if(type == 1) BanCar[vehicleid] = false;
	GetVehiclePos(vehicleid, VehicleInfo[vehicleid][vX], VehicleInfo[vehicleid][vY], VehicleInfo[vehicleid][vZ]);
    GetVehicleZAngle(vehicleid, VehicleInfo[vehicleid][vA]);
	return 1;
}

stock IsANotSpawnCar(vehicleid)
{
	switch(GetVehicleModel(vehicleid))
	{
		case 435, 450, 584, 591, 606..608, 610..611: return 1;
		default: return 0;
	}
	return 0;
}

stock Difference(Float:Value1, Float:Value2)
{
	return floatround((Value1 > Value2) ? (Value1 - Value2) : (Value2 - Value1));
}

GetVehicleRotation(vehicleid, &Float:x, &Float:y, &Float:z)
{
	new Float:quat_w, Float:quat_x, Float:quat_y, Float:quat_z;
	GetVehicleRotationQuat(vehicleid, quat_w, quat_x, quat_y, quat_z);
	x = atan2(2*((quat_x*quat_y)+(quat_w+quat_z)), (quat_w*quat_w)+(quat_x*quat_x)-(quat_y*quat_y)-(quat_z*quat_z));
	y = atan2(2*((quat_y*quat_z)+(quat_w*quat_x)), (quat_w*quat_w)-(quat_x*quat_x)-(quat_y*quat_y)+(quat_z*quat_z));
	z = asin(-2*((quat_x*quat_z)+(quat_w*quat_y)));
	return 1;
}

public OnObjectMoved(objectid) return 1;
public OnPlayerObjectMoved(playerid, objectid) return 1;

@PickupBack(playerid);
@PickupBack(playerid) return pickupentered[playerid] = 0;

@OnPlayerPickupExit(playerid);
@OnPlayerPickupExit(playerid) return SetPVarInt(playerid, "OldPickup", -1);

public OnPlayerPickUpDynamicPickup(playerid, pickupid)
{
    if(pickupentered[playerid] == 1) return 1;
	if(GetPVarInt(playerid, "OldPickup") == pickupid) return 1;
	SetPVarInt(playerid, "OldPickup", pickupid);
	SetTimerEx("@OnPlayerPickupExit", 3000, 0, "i", playerid);
	if(!IsPlayerInRangeOfPoint(playerid,2.0,Pickups[pickupid][0],Pickups[pickupid][1],Pickups[pickupid][2])) return 1;
	if(pickupid == cPickup[0]) ShowPlayerDialog(playerid, dJoinCars, 0, "{FFCC00}Автосалон", "{FFFFFF}Вас приветствует автосалон класса: Эконом\nПерейти к покупке транспорта?", "Перейти", "Закрыть");
 	if(pickupid == cPickup[1]) ShowPlayerDialog(playerid, dJoinCars+1, 0, "{FFCC00}Автосалон", "{FFFFFF}Вас приветствует автосалон класса: Средний\nПерейти к покупке транспорта?", "Перейти", "Закрыть");
	if(pickupid == cPickup[2]) ShowPlayerDialog(playerid, dJoinCars+2, 0, "{FFCC00}Автосалон", "{FFFFFF}Вас приветствует автосалон класса: Спорт\nПерейти к покупке транспорта?", "Перейти", "Закрыть");
	if(pickupid == cPickup[3]) ShowPlayerDialog(playerid, dJoinCars+3, 0, "{FFCC00}Мотосалон", "{FFFFFF}Вас приветствует мотосалон\nПерейти к покупке транспорта?", "Перейти", "Закрыть");
 	if(pickupid == Pickup[2]) // ППС г.Южного
	{
		if(pInfo[playerid][pMember] != TEAM_DPS) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в полиции!");
	    ShowPlayerDialog(playerid, dArmoury, DIALOG_STYLE_LIST, "{FFCC00}Оружейная", "Silenced Pistol (35 пт.)\nDesert Eagle (35 пт.)\nM4 (150 пт.)\nMP5 (100 пт.)\nShotgun (50 пт.)\nДубинка\nБронежилет\nМаска", "Выбрать", "Отмена");
    }
	if(pickupid == BolnicaLS[2]) // Выход с крыши
	{
	    ShowPlayerDialog(playerid, dHospitalLS+2, DIALOG_STYLE_LIST, "{FFCC00}Куда Вы хотите?", "- В больницу\n- На улицу", "Ок", "Закрыть");
	}
/*	if(pickupid == BolnicaLV[0]) // Вход
 	{
 	    ShowPlayerDialog(playerid, dHospitalLV, DIALOG_STYLE_LIST, "{FFCC00}Куда Вы хотите?", "- В больницу\n- На крышу (для сотрудников)", "Ок", "Закрыть");
	}
	if(pickupid == BolnicaLV[1]) // Выход
	{
	    ShowPlayerDialog(playerid, dHospitalLV+1, DIALOG_STYLE_LIST, "{FFCC00}Куда Вы хотите?", "- На улицу\n- На крышу (для сотрудников)", "Ок", "Закрыть");
	}
	if(pickupid == BolnicaLV[2]) // Выход с крыши
	{
	    ShowPlayerDialog(playerid, dHospitalLV+2, DIALOG_STYLE_LIST, "{FFCC00}Куда Вы хотите?", "- В больницу\n- На улицу", "Ок", "Закрыть");
	}*/

    else if(pickupid == merpicls[0]) // Гл.выход
	{
		SetPlayerPos(playerid, 1906.1484,-2232.8611,11.2457, 1);
		SetPlayerFacingAngle(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
    else if(pickupid == merpicls[1]) // Вход Администрация г.Южный
	{
		SetPlayerPos(playerid, -933.4342,860.3955,2512.9500, 1);
		SetPlayerFacingAngle(playerid, 271.3998);
		SetPlayerVirtualWorld(playerid, 1);
		SetPlayerInterior(playerid, 3);
		SetCameraBehindPlayer(playerid);
	}
	else if(pickupid == merpicls[2]) // Администрация г.Южный
	{
	    if(pInfo[playerid][pMember] != TEAM_LSMAYOR) return 1;
	    else if(!(2 <= pInfo[playerid][pRank] <= 3)) return SendClientMessage(playerid, COLOR_GREY, "Оружие могут брать только охранники!");
	    ShowPlayerDialog(playerid, dArmoury+1, DIALOG_STYLE_LIST, "{FFCC00}Оружейная", "SD Pistol (35 пт.)\nDesert Eagle (35 пт.)\nMP5 (100 пт.)\nДубинка\nБронежилет", "Выбрать", "Отмена");
		return 1;
	}
	else if(pickupid == merpicsf[0]) // Гл.выход
	{
		SetPlayerPos(playerid, 1821.4178,2095.3235,16.1631, 1);
		SetPlayerFacingAngle(playerid, 268.5165);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
    else if(pickupid == merpicsf[1]) // Вход
	{
		SetPlayerPos(playerid, 171.1024,1166.4674,542.4528, 1);
		SetPlayerFacingAngle(playerid, 271.3998);
		SetPlayerVirtualWorld(playerid, 2);
		SetPlayerInterior(playerid, 3);
		SetCameraBehindPlayer(playerid);
	}
	else if(pickupid == merpicsf[2]) // мэрия
	{
	    if(pInfo[playerid][pMember] != TEAM_SFMAYOR) return 1;
	    else if(pInfo[playerid][pRank] >= 2 && pInfo[playerid][pRank] <= 3) return SendClientMessage(playerid, COLOR_GREY, "Оружие могут брать только охранники!");
	    ShowPlayerDialog(playerid, dArmoury+1, DIALOG_STYLE_LIST, "{FFCC00}Оружейная", "SD Pistol (35 пт.)\nDesert Eagle (35 пт.)\nMP5 (100 пт.)\nДубинка\nБронежилет", "Выбрать", "Отмена");
		return 1;
	}
	else if(pickupid == merpiclv[0]) // Гл.выход
	{
		SetPlayerPos(playerid, -140.0479,594.1907,12.1464, 1);
		SetPlayerFacingAngle(playerid, 173.3626);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
    else if(pickupid == merpiclv[1]) // Вход
	{
  		SetPlayerPos(playerid, -933.4342,860.3955,2512.9500, 1);
		SetPlayerFacingAngle(playerid, 271.3998);
		SetPlayerVirtualWorld(playerid, 3);
		SetPlayerInterior(playerid, 3);
		SetCameraBehindPlayer(playerid);
	}
	else if(pickupid == merpiclv[2]) // мэрия
	{
	    if(pInfo[playerid][pMember] != TEAM_LVMAYOR) return 1;
	    else if(pInfo[playerid][pRank] >= 2 && pInfo[playerid][pRank] <= 3) return SendClientMessage(playerid, COLOR_GREY, "Оружие могут брать только охранники!");
	    ShowPlayerDialog(playerid, dArmoury+1, DIALOG_STYLE_LIST, "{FFCC00}Оружейная", "SD Pistol (35 пт.)\nDesert Eagle (35 пт.)\nMP5 (100 пт.)\nДубинка\nБронежилет", "Выбрать", "Отмена");
		return 1;
	}
	if(pickupid == fbipic[0]) // Выход
 	{
		SetPlayerPos(playerid, 2412.8472,-1844.5907,21.8546, 1);
		SetPlayerFacingAngle(playerid, 178.4220);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == fbipic[1]) // Вход
	{
		if(IsACop(playerid) || pInfo[playerid][pMember] == TEAM_NG)
		{
			SetPlayerPos(playerid, 209.1030,-468.1856,1006.4200, 1);
			SetPlayerFacingAngle(playerid, 1.9345);
			SetPlayerInterior(playerid, 2);
			SetPlayerVirtualWorld(playerid, 0);
			SetCameraBehindPlayer(playerid);
		}
		else SendClientMessage(playerid, COLOR_RED,"У вас нету пропуска!");
	}
	if(pickupid == fbipic[2]) // Раздевалка
	{
        if(pInfo[playerid][pMember] != TEAM_FBI) return 1;
    	if(GetPVarInt(playerid, "razdfbi") > gettime()) return 1;
    	if(pInfo[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_RED, "Гардероб доступен с 3 ранга и выше!");
    	ShowPlayerDialog(playerid, 15420, DIALOG_STYLE_LIST, "{FFCC00}Гардероб ФСБ", "Служебная форма\nОдежда группировки - ОПГ Ореховская\nОдежда группировки - ОПГ Южная\nОдежда группировки - ОПГ Тамбовская\nОдежда группировки - ОПГ Солнцевская\nОдежда группировки - Южная братва", "Одеть", "Нет");
    	SetPVarInt(playerid, "razdfbi", gettime()+5);
	}
	if(pickupid == ashpic[0]) // Вход
 	{
 	    ShowPlayerDialog(playerid, dAutoSchool, DIALOG_STYLE_LIST, "{FFCC00}Куда Вы хотите?", "- В автошколу\n- На крышу (для сотрудников)", "Ок", "Закрыть");
	}
	if(pickupid == ashpic[1]) // Выход
	{
	    ShowPlayerDialog(playerid, dAutoSchool+1, DIALOG_STYLE_LIST, "{FFCC00}Куда Вы хотите?", "- На улицу\n- На крышу (для сотрудников)", "Ок", "Закрыть");
	}
	if(pickupid == ashpic[2]) // Выход с крыши
	{
	    ShowPlayerDialog(playerid, dAutoSchool+2, DIALOG_STYLE_LIST, "{FFCC00}Куда Вы хотите?", "- В автошколу\n- На улицу", "Ок", "Закрыть");
	}
	if(pickupid == lsnpic[0]) // Вход
 	{
		SetPlayerPos(playerid, -70.2179,461.0153,3013.1499, 1);
		SetPlayerFacingAngle(playerid, 0.9609);
		SetPlayerInterior(playerid, 1);
		SetPlayerVirtualWorld(playerid, 1);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == lsnpic[1]) // Выход
	{
		if(Ether[playerid])
		{
			new CB[16];
			new string[128];
			Ether[playerid] = false;
			Convert(pTemp[playerid][pLiveTime],CB);
			if(EtherSms[pInfo[playerid][pNews]-1]) { format(string, 90, "[R] %s выключил%s прием СМС",GetName(playerid),(pInfo[playerid][pSex]==1)?(""):("а")); SendFMes(pInfo[playerid][pMember], COLOR_BLUE, string); }
			if(EtherCall[pInfo[playerid][pNews]-1]) { format(string, 90, "[R] %s выключил%s прием звонков",GetName(playerid),(pInfo[playerid][pSex]==1)?(""):("а")); SendFMes(pInfo[playerid][pMember], COLOR_BLUE, string); }
			format(string, 90, "[R] %s выш%s из прямого эфира (Время в эфире: %s, звонков: %i, СМС: %i)",GetName(playerid), (pInfo[playerid][pSex]==1)?("ел"):("ла"), CB, CallNews[pInfo[playerid][pNews]-1],SmsNews[pInfo[playerid][pNews]-1]);
			SendFMes(pInfo[playerid][pMember], COLOR_BLUE, string);
			EtherSms[pInfo[playerid][pNews]-1] = EtherCall[pInfo[playerid][pNews]-1] = false;
			SmsNews[pInfo[playerid][pNews]-1] = CallNews[pInfo[playerid][pNews]-1] = pTemp[playerid][pLiveTime] = 0;
			if(Mobile[playerid] != -1) MobileCrash(playerid);
		}
		if(EtherLive[playerid])
		{
			EtherLive[playerid] = false;
			DeletePVar(playerid, "Etherfrac");
		    SendClientMessage(playerid, COLOR_RED, "Вы вышли из прямого эфира");
		}
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 2126.5879,-1960.1663,20.2498);
		SetPlayerFacingAngle(playerid, 180.8779);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == sfnpic[0]) // Вход
 	{
		SetPlayerPos(playerid, -1077.6106,2208.7002,1002.0000, 1);
		SetPlayerFacingAngle(playerid, 0.9609);
		SetPlayerInterior(playerid, 1);
		SetPlayerVirtualWorld(playerid, 2);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == sfnpic[1]) // Выход
	{
		if(Ether[playerid])
		{
			new CB[16];
			new string[128];
			Ether[playerid] = false;
			Convert(pTemp[playerid][pLiveTime],CB);
			if(EtherSms[pInfo[playerid][pNews]-1]) { format(string, 90, "[R] %s выключил%s прием СМС",GetName(playerid),(pInfo[playerid][pSex]==1)?(""):("а")); SendFMes(pInfo[playerid][pMember], COLOR_BLUE, string); }
			if(EtherCall[pInfo[playerid][pNews]-1]) { format(string, 90, "[R] %s выключил%s прием звонков",GetName(playerid),(pInfo[playerid][pSex]==1)?(""):("а")); SendFMes(pInfo[playerid][pMember], COLOR_BLUE, string); }
			format(string, 90, "[R] %s выш%s из прямого эфира (Время в эфире: %s, звонков: %i, СМС: %i)",GetName(playerid), (pInfo[playerid][pSex]==1)?("ел"):("ла"), CB, CallNews[pInfo[playerid][pNews]-1],SmsNews[pInfo[playerid][pNews]-1]);
			SendFMes(pInfo[playerid][pMember], COLOR_BLUE, string);
			EtherSms[pInfo[playerid][pNews]-1] = EtherCall[pInfo[playerid][pNews]-1] = false;
			SmsNews[pInfo[playerid][pNews]-1] = CallNews[pInfo[playerid][pNews]-1] = pTemp[playerid][pLiveTime] = 0;
			if(Mobile[playerid] != -1) MobileCrash(playerid);
		}
		if(EtherLive[playerid])
		{
			EtherLive[playerid] = false;
			DeletePVar(playerid, "Etherfrac");
		    SendClientMessage(playerid, COLOR_RED, "Вы вышли из прямого эфира");
		}
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 1993.4167,1944.6849,15.5928);
		SetPlayerFacingAngle(playerid, 308.4413);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == lvnpic[0]) // Вход
 	{
		SetPlayerPos(playerid, -1742.6362,2591.3359,62.6659, 1);
		SetPlayerFacingAngle(playerid, 0.9609);
		SetPlayerInterior(playerid, 1);
		SetPlayerVirtualWorld(playerid, 3);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == lvnpic[1]) // Выход
	{
		if(Ether[playerid])
		{
			new CB[16];
			new string[128];
			Ether[playerid] = false;
			Convert(pTemp[playerid][pLiveTime],CB);
			if(EtherSms[pInfo[playerid][pNews]-1]) { format(string, 90, "[R] %s выключил%s прием СМС",GetName(playerid),(pInfo[playerid][pSex]==1)?(""):("а")); SendFMes(pInfo[playerid][pMember], COLOR_BLUE, string); }
			if(EtherCall[pInfo[playerid][pNews]-1]) { format(string, 90, "[R] %s выключил%s прием звонков",GetName(playerid),(pInfo[playerid][pSex]==1)?(""):("а")); SendFMes(pInfo[playerid][pMember], COLOR_BLUE, string); }
			format(string, 90, "[R] %s выш%s из прямого эфира (Время в эфире: %s, звонков: %i, СМС: %i)",GetName(playerid), (pInfo[playerid][pSex]==1)?("ел"):("ла"), CB, CallNews[pInfo[playerid][pNews]-1],SmsNews[pInfo[playerid][pNews]-1]);
			SendFMes(pInfo[playerid][pMember], COLOR_BLUE, string);
			EtherSms[pInfo[playerid][pNews]-1] = EtherCall[pInfo[playerid][pNews]-1] = false;
			SmsNews[pInfo[playerid][pNews]-1] = CallNews[pInfo[playerid][pNews]-1] = pTemp[playerid][pLiveTime] = 0;
			if(Mobile[playerid] != -1) MobileCrash(playerid);
		}
		if(EtherLive[playerid])
		{
			EtherLive[playerid] = false;
			DeletePVar(playerid, "Etherfrac");
		    SendClientMessage(playerid, COLOR_RED, "Вы вышли из прямого эфира");
		}
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 2650.9226,1182.8777,10.8203);
		SetPlayerFacingAngle(playerid, 180.9401);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == grovpic[0]) // Vhod Grov
	{
		SetPlayerPos(playerid,410.3659,1663.7157,-31.3641, 1);
		SetPlayerFacingAngle(playerid,89.8295);
		SetPlayerVirtualWorld(playerid,1);
		SetPlayerInterior(playerid,1);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == grovpic[1]) // Vhod Grov
	{
		SetPlayerPos(playerid,2325.6943,-1969.5836,22.1137, 1);
		SetPlayerFacingAngle(playerid,0.0000);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == vagospic[0]) // Vhod ОПГ Ореховская
	{
		SetPlayerPos(playerid,410.3659,1663.7157,-31.3641, 1);
		SetPlayerFacingAngle(playerid,89.8295);
		SetPlayerVirtualWorld(playerid,2);
		SetPlayerInterior(playerid,1);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == vagospic[1]) // Vyhod ОПГ Ореховская
	{
		SetPlayerPos(playerid,2615.5791,1765.8829,2.5432, 1);
		SetPlayerFacingAngle(playerid,358.1798);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == Bog[0]) // Церковь
	{
		SetPlayerPos(playerid,878.1530,1210.0283,1132.1559, 1);
		SetPlayerFacingAngle(playerid, 179.0834);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == Bog[1]) // Церковь
	{
		SetPlayerPos(playerid, 2081.4272,1918.0682,15.6368, 1);
		SetPlayerFacingAngle(playerid, 96.0259);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == Avto[0]) // Автошкола
	{
		SetPlayerPos(playerid,2313.6721,-1927.9768,2022.9600, 1);
		SetPlayerFacingAngle(playerid, 89.7591);
		SetPlayerVirtualWorld(playerid,1);
		SetPlayerInterior(playerid, 1);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == Avto[1]) // Автошкола
	{
		SetPlayerPos(playerid, 2174.2556,-2197.9958,23.1784, 1);
		SetPlayerFacingAngle(playerid, 272.8886);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == Sahta[0]) // Шахта
	{
		SetPlayerPos(playerid,-1024.2910,1223.1633,3011.5601, 1);
		SetPlayerFacingAngle(playerid,89.8295);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == Sahta[1]) // Шахта
	{
		SetPlayerPos(playerid, 2491.0784,-1499.3846,24.2386, 1);
		SetPlayerFacingAngle(playerid, 89.5630);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == rifapic[0]) // Vhod Южная братва
	{
		SetPlayerPos(playerid,410.3659,1663.7157,-31.3641, 1);
		SetPlayerFacingAngle(playerid,89.8295);
		SetPlayerVirtualWorld(playerid,3);
		SetPlayerInterior(playerid, 1);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == rifapic[1]) // Южная братва выход
	{
		SetPlayerPos(playerid, 2398.3821,-1719.9879,21.9582, 1);
		SetPlayerFacingAngle(playerid, 89.5630);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == azpic[0]) // ОПГ Солнцевская вход
	{
		SetPlayerPos(playerid,410.3659,1663.7157,-31.3641, 1);
		SetPlayerFacingAngle(playerid,89.8295);
		SetPlayerVirtualWorld(playerid,4);
		SetPlayerInterior(playerid,1);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == azpic[1]) // ОПГ Солнцевская выход
	{
		SetPlayerPos(playerid, 2331.0046,-2616.5344,21.8096, 1);
		SetPlayerFacingAngle(playerid, 0.1418);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == balpic[0]) // Vhod ОПГ Тамбовская
	{
		SetPlayerPos(playerid,410.3659,1663.7157,-31.3641, 1);
		SetPlayerFacingAngle(playerid,89.8295);
		SetPlayerVirtualWorld(playerid,5);
		SetPlayerInterior(playerid,1);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == balpic[1]) // Vyhod ОПГ Тамбовская
	{
		SetPlayerPos(playerid, 2564.4656,-1847.4319,21.9560, 1);
		SetPlayerFacingAngle(playerid, 181.3647);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == lcnpic[0]) // Vhod Итальянская Мафия
	{
	    if(pInfo[playerid][pMember] != TEAM_LCN) return SendClientMessage(playerid, COLOR_GREY, "У вас нет ключей от этой двери!");
		SetPlayerPos(playerid, 254.9183,1774.7697,575.3359, 1);
		SetPlayerFacingAngle(playerid, 278.6968);
		SetPlayerVirtualWorld(playerid,1);
		SetPlayerInterior(playerid, 5);
	}
	if(pickupid == lcnpic[1]) // Vyhod Итальянская Мафия
	{
		SetPlayerPos(playerid, 2164.5564,-981.6027,2.2500, 1);
		SetPlayerFacingAngle(playerid, 257.5349);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == BolnicaSF[0]) // Болньица пгт.Батырево
	{
		SetPlayerPos(playerid,367.2651,127.6520,1003.8500, 1);
		SetPlayerFacingAngle(playerid,356.3849);
		SetPlayerVirtualWorld(playerid,5);
		SetPlayerInterior(playerid, 1);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == BolnicaSF[1]) // Больница пгт.Батырево
	{
	    if(PlayerDied[playerid] || PlayerLie[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Вы не прошли курс лечения");
		SetPlayerPos(playerid, 1966.9260,1593.3176,15.9727, 1);
		SetPlayerFacingAngle(playerid, 269.2774);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == BolnicaLS[0]) // Болньица г.Южного
	{
		SetPlayerPos(playerid,2459.1506,-2139.4192,634.2466, 1);
		SetPlayerFacingAngle(playerid,89.8295);
		SetPlayerVirtualWorld(playerid,4);
		SetPlayerInterior(playerid, 1);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == BolnicaLS[1]) // Больница г.Южного
	{
	    if(PlayerDied[playerid] || PlayerLie[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Вы не прошли курс лечения");
		SetPlayerPos(playerid, 2114.7644,-2389.7288,22.6821, 1);
		SetPlayerFacingAngle(playerid, 89.5630);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
 	if(pickupid == BolnicaLV[0]) // Болньица г.Арзамас
	{
		SetPlayerPos(playerid,2459.1506,-2139.4192,634.2466, 1);
		SetPlayerFacingAngle(playerid,89.8295);
		SetPlayerVirtualWorld(playerid,6);
		SetPlayerInterior(playerid, 1);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == BolnicaLV[1]) // Больница г.Арзамас
	{
	    if(PlayerDied[playerid] || PlayerLie[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Вы не прошли курс лечения");
		SetPlayerPos(playerid, -286.3593,581.9556,12.1144, 1);
		SetPlayerFacingAngle(playerid, 353.6312);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == yakpic[0]) // Vhod Yakuza
	{
	    if(pInfo[playerid][pMember] != TEAM_YAKUZA) return SendClientMessage(playerid, COLOR_GREY, "У вас нет ключей от этой двери!");
		SetPlayerPos(playerid, 2557.2214,-1852.3584,2522.8401, 1);
		SetPlayerFacingAngle(playerid, 180.4069);
		SetPlayerVirtualWorld(playerid,2);
		SetPlayerInterior(playerid, 5);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == yakpic[1]) // Vyhod Yakuza
	{
		SetPlayerPos(playerid, 2310.3342,1762.4661,1.0319, 1);
		SetPlayerFacingAngle(playerid, 269.1689);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == rmpic[0]) // Vhod RM
	{
	    if(pInfo[playerid][pMember] != TEAM_RM) return SendClientMessage(playerid, COLOR_GREY, "У вас нет ключей от этой двери!");
		SetPlayerPos(playerid, -2616.3054,2907.7051,2738.6201, 1);
		SetPlayerFacingAngle(playerid, 180.4069);
		SetPlayerVirtualWorld(playerid,3);
		SetPlayerInterior(playerid, 5);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == rmpic[1]) // Vyhod RM
	{
		SetPlayerPos(playerid, 2135.9229,-1805.5398,19.5650, 1);
		SetPlayerFacingAngle(playerid, 270.9551);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == lvpdpic[0]) //lvpd 1 вход в здание с гаража
	{
	    if(!GetPVarInt(playerid, "player_cout_lvpd") && IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "У вас нету пропуска!");
	    SetPlayerPos(playerid,1001.0336,583.6276,1010.5649, 1);
		SetPlayerFacingAngle(playerid, 269.7568);
		SetPlayerInterior(playerid,1);
		SetPlayerVirtualWorld(playerid, 3);
		SetCameraBehindPlayer(playerid);
		if(GetPVarInt(playerid, "player_cout_lvpd")) DeletePVar(playerid, "player_cout_lvpd");
	}
	if(pickupid == lvpdpic[1])//lvpd 2 выход в гараж..
	{
		SetPlayerPos(playerid,2295.1934,2451.8459,10.8203, 1);
		SetPlayerFacingAngle(playerid, 94.8742);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == lvpdpic[2]) //lvpd 3 в здание
	{
		SetPlayerPos(playerid,905.1191,2088.6418,2721.8237, 1);
		SetPlayerFacingAngle(playerid,91.2326);
		SetPlayerInterior(playerid,1);
		SetPlayerVirtualWorld(playerid, 3);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == lvpdpic[3])//lvpd  4 на улицу
	{
		SetPlayerPos(playerid,762.0588,759.3110,12.2119, 1);
		SetPlayerFacingAngle(playerid, 76.9477);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == sfpdpic[0]) // вход в участок ППС пгт.Батырево
	{
		SetPlayerPos(playerid,2194.3350,-524.9172,-2.6141, 1);
		SetPlayerFacingAngle(playerid,91.2326);
		SetPlayerInterior(playerid,1);
		SetPlayerVirtualWorld(playerid, 2);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == sfpdpic[1]) // выход из участка ППС пгт.Батырево
	{
		SetPlayerPos(playerid,1917.0271,2183.6101,15.7060, 1);
		SetPlayerFacingAngle(playerid, 359.219665);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == sfpdpic[2]) // вход из гаража sfpd
	{
	    if(!GetPVarInt(playerid, "player_cout_sfpd") && !IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "У вас нету пропуска!");
		SetPlayerPos(playerid,1001.0336,583.6276,1010.5649, 1);
		SetPlayerFacingAngle(playerid, 269.7568);
		SetPlayerInterior(playerid,1);
		SetPlayerVirtualWorld(playerid, 2);
		SetCameraBehindPlayer(playerid);
		if(GetPVarInt(playerid, "player_cout_sfpd")) DeletePVar(playerid, "player_cout_sfpd");
	}
	if(pickupid == sfpdpic[3]) // выход в гараж sfpd
	{
		SetPlayerPos(playerid,-1591.921630,716.198181,-5.242187, 1);
		SetPlayerFacingAngle(playerid, 268.898040);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == lspdpic[0]) // вход в участок
	{
		SetPlayerPos(playerid,905.1191,2088.6418,2721.8237, 1);
		SetPlayerFacingAngle(playerid,91.2326);
		SetPlayerInterior(playerid,1);
		SetPlayerVirtualWorld(playerid,1);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == lspdpic[1]) // выход с участка
	{
		SetPlayerPos(playerid, 2580.6526,-2406.5391,22.0065, 1);
		SetPlayerFacingAngle(playerid, 89.6519);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid,0);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == lspdpic[2]) // вход с гаража
	{
	    if(!GetPVarInt(playerid, "player_cout_lspd") && !IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "У вас нету пропуска!");
		SetPlayerPos(playerid,1001.0336,583.6276,1010.5649, 1);
		SetPlayerFacingAngle(playerid, 269.7568);
		SetPlayerInterior(playerid,1);
		SetPlayerVirtualWorld(playerid, 1);
		SetCameraBehindPlayer(playerid);
		if(GetPVarInt(playerid, "player_cout_lspd")) DeletePVar(playerid, "player_cout_lspd");
	}
	if(pickupid == lspdpic[3]) // выход с гаража
	{
		SetPlayerPos(playerid,1568.6962,-1692.2069,5.8906, 1);
		SetPlayerFacingAngle(playerid, 259.617370);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == arpic[0]) // Vhod 51
	{
		if(IsACop(playerid) || pInfo[playerid][pMember] == TEAM_NG)
		{
			SetPlayerPos(playerid, 291.1631,1836.4696,17.6406);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid, 0);
			SetPlayerFacingAngle(playerid, 354.0381);
			SetCameraBehindPlayer(playerid);
		}
		else SendClientMessage(playerid, COLOR_GREY, "У вас нету пропуска!");
	}
	if(pickupid == arpic[1]) // Vhod 51
	{
		if(IsACop(playerid) || pInfo[playerid][pMember] == TEAM_NG)
		{
			SetPlayerPos(playerid, 278.6574,1835.4679,17.6481);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid, 0);
			SetPlayerFacingAngle(playerid, 179.8231);
			SetCameraBehindPlayer(playerid);
		}
		else SendClientMessage(playerid, COLOR_GREY, "У вас нету пропуска!");
	}
	if(pickupid == arpic[2]) // Vhod 51
	{
		if(IsACop(playerid) || pInfo[playerid][pMember] == TEAM_NG)
		{
			SetPlayerPos(playerid, 145.2731,1947.0204,19.7697);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid, 0);
			SetPlayerFacingAngle(playerid, 3.650848);
			SetCameraBehindPlayer(playerid);
		}
		else SendClientMessage(playerid, COLOR_GREY, "У вас нету пропуска!");
	}
	if(pickupid == arpic[3]) // Vhod 51
	{
		if(IsACop(playerid) || pInfo[playerid][pMember] == TEAM_NG)
		{
			SetPlayerPos(playerid, 145.3774,1935.9425,19.2709);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid, 0);
			SetPlayerFacingAngle(playerid, 177.915008);
			SetCameraBehindPlayer(playerid);
		}
		else SendClientMessage(playerid, COLOR_GREY, "У вас нету пропуска!");
	}
	if(pickupid == armypick[0]) // вход казарма
	{
		if(pInfo[playerid][pMember] != TEAM_NG) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы не состоите в Армию!");
		SetPlayerPos(playerid, -317.4127,315.0161,2213.000, 1);
		SetPlayerFacingAngle(playerid, 4.3868);
		SetPlayerInterior(playerid, 1);
	    SetPlayerVirtualWorld(playerid, 1);
	    SetCameraBehindPlayer(playerid);
	}
	if(pickupid == armypick[1]) // выход казарма
	{
		SetPlayerPos(playerid, 1545.6876,1799.4995,15.3236, 1);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
		SetPlayerFacingAngle(playerid, 352.5267);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == armypick[2]) // вход оружейка
	{
		if(IsACop(playerid) || pInfo[playerid][pMember] == TEAM_NG || IsAGang(playerid))
		{
			SetPlayerPos(playerid, 1310.0464,1622.3102,759.3867, 1);
			SetPlayerFacingAngle(playerid, 262.7208);
			SetPlayerVirtualWorld(playerid,1);
			SetPlayerInterior(playerid, 6);
			SetCameraBehindPlayer(playerid);
	    }
	    else SendClientMessage(playerid, COLOR_GREY, "У вас нету пропуска!");
	}
	if(pickupid == armypick[3]) // выход оружейка
	{
		SetPlayerPos(playerid,1819.8336,1742.8083,15.2794, 1);
		SetPlayerFacingAngle(playerid, 183.7600);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == armshield)
	{
		if(pInfo[playerid][pMember] != TEAM_NG) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Армию!");
        else if(GetPVarInt(playerid, "armour_timer") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Бронежилет доступен раз в минуту");
		SendClientMessage(playerid, COLOR_GREEN, "Вы надели бронежилет");
        SetArmour(playerid, 100);
        SetPVarInt(playerid, "armour_timer", gettime()+60);
	}
	if(pickupid == armystol) // Столовая
	{
		if(pInfo[playerid][pMember] != TEAM_NG) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Армию!");
		if(pInfo[playerid][pHunger] >= 100) return SendClientMessage(playerid, COLOR_GREY, "Вы не голодны!");
		PlayerPlaySound(playerid, 32200, 0.0, 0.0, 0.0);
		ClearAnimations(playerid);
		ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0,1);
		if(pInfo[playerid][pHunger] <= 75) GiveHunger(playerid, 25);
    	else SetHunger(playerid, 100);
		if(pInfo[playerid][pSex] == 1) MeAction(playerid, "съел кусочек пиццы");
		else MeAction(playerid, "съела кусочек пиццы");
	}
	if(pickupid == GetMedicines[0])
	{
        if(pInfo[playerid][pMember] != TEAM_LSHOSPITAL) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
        if(MedWH[0] < 10) return SendClientMessage(playerid, COLOR_GREY, "На складе недостаточно медикаментов");
		if(Medicines[playerid]+Medicines[playerid] >= 10) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете взять более 10 медикаментов!");
		Medicines[playerid] += 10;
		MedWH[0] -= 10;
		SendClientMessage(playerid, COLOR_GREEN, "Вы взяли медикаменты {FF9900}(10 шт)");
		SetPlayerChatBubble(playerid, (pInfo[playerid][pSex] == 1)?("взял медикаменты"):("взяла медикаменты"), COLOR_PURPLE, 13.0, 10000);
	}
	if(pickupid == GetMedicines[1])
	{
		if(pInfo[playerid][pMember] != TEAM_SFHOSPITAL) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
        if(MedWH[1] < 10) return SendClientMessage(playerid, COLOR_GREY, "На складе недостаточно медикаментов");
		if(Medicines[playerid]+Medicines[playerid] >= 10) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете взять более 10 комплектов медикаментов!");
		Medicines[playerid] += 10;
		MedWH[1] -= 10;
		SendClientMessage(playerid, COLOR_GREEN, "Вы взяли медикаменты {FF9900}(10 шт)");
		SetPlayerChatBubble(playerid, (pInfo[playerid][pSex] == 1)?("взял медикаменты"):("взяла медикаменты"), COLOR_PURPLE, 13.0, 10000);
	}
	if(pickupid == GetMedicines[2])
	{
		if(pInfo[playerid][pMember] != TEAM_LVHOSPITAL) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
        if(MedWH[2] < 10) return SendClientMessage(playerid, COLOR_GREY, "На складе недостаточно медикаментов");
		if(Medicines[playerid]+Medicines[playerid] >= 10) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете взять более 10 комплектов медикаментов!");
		Medicines[playerid] += 10;
		MedWH[2] -= 10;
		SendClientMessage(playerid, COLOR_GREEN, "Вы взяли медикаменты {FF9900}(10 шт)");
		SetPlayerChatBubble(playerid, (pInfo[playerid][pSex] == 1)?("взял медикаменты"):("взяла медикаменты"), COLOR_PURPLE, 13.0, 10000);
	}
	if(pickupid == sportpickup)
	{
		if(gym_cloakroom[playerid]) ShowPlayerDialog(playerid, 6446, 0, "{FFCC00}Спортзал", "{FFFFFF}\n\nВы хотите снять форму и закончить тренировку?\n\n", "Принять", "Отмена");
		else ShowPlayerDialog(playerid, 6446, 0, "{FFCC00}Спортзал", "{FFFFFF}\n\nВы хотите надеть форму и начать тренировку?\nСтоимость тренировки: {63BD4E}500$\n\n", "Принять", "Отмена");
	}
    if(pickupid == zavod[0])
    {
		SetPlayerPos(playerid, 2723.1980,-2195.8320,3044.0100, 1);
    	SetPlayerFacingAngle(playerid, 183.2963);
    	SetPlayerVirtualWorld(playerid, 1);
		SetPlayerInterior(playerid, 1);
		SetCameraBehindPlayer(playerid);
    }
   	if(pickupid == zavod[1])
    {
		SetPlayerPos(playerid, 2728.1216,-2237.7834,17.9269, 1);
    	SetPlayerFacingAngle(playerid, 87.1254);
		SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
	    SetCameraBehindPlayer(playerid);
    }
    if(pickupid == sportzal[0])
    {
		SetPlayerPos(playerid, 395.7754,1933.0214,1001.7459, 1);
    	SetPlayerFacingAngle(playerid, 181.2294);
    	SetPlayerVirtualWorld(playerid, 1);
		SetPlayerInterior(playerid, 7);
		SetCameraBehindPlayer(playerid);
    }
   	if(pickupid == sportzal[1])
    {
		SetPlayerPos(playerid, 2350.0212,-2140.8877,21.9605, 1);
    	SetPlayerFacingAngle(playerid, 174.3600);
    	SetCameraBehindPlayer(playerid);
		SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
	    if(gym_cloakroom[playerid])
		{
		    gym_cloakroom[playerid] = false;
			if(pInfo[playerid][pMember]) SetPlayerSkin(playerid, pInfo[playerid][pMemberSkin]);
			else SetPlayerSkin(playerid, pInfo[playerid][pModel]);
			SendClientMessage(playerid, COLOR_RED, "Вы закончили тренировку!");
		}
    }
    if(pickupid == sportzal[2])
    {
		SetPlayerPos(playerid, 773.730041,-74.796867,1000.654296);
    	SetPlayerFacingAngle(playerid, 14.933022);
    	SetCameraBehindPlayer(playerid);
    	SetPlayerVirtualWorld(playerid, 2);
		SetPlayerInterior(playerid, 7);
    }
   	if(pickupid == sportzal[3])
    {
		SetPlayerPos(playerid, -2267.3469,-155.8721,35.3203);
    	SetPlayerFacingAngle(playerid, 271.1808);
    	SetCameraBehindPlayer(playerid);
		SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
	    if(gym_cloakroom[playerid])
		{
		    gym_cloakroom[playerid] = false;
			if(pInfo[playerid][pMember]) SetPlayerSkin(playerid, pInfo[playerid][pMemberSkin]);
			else SetPlayerSkin(playerid, pInfo[playerid][pModel]);
			SendClientMessage(playerid, COLOR_RED, "Вы закончили тренировку!");
		}
    }
    if(pickupid == sportzal[4])
    {
		SetPlayerPos(playerid, 773.730041,-74.796867,1000.654296);
    	SetPlayerFacingAngle(playerid, 14.933022);
    	SetCameraBehindPlayer(playerid);
    	SetPlayerVirtualWorld(playerid, 3);
		SetPlayerInterior(playerid, 7);
    }
   	if(pickupid == sportzal[5])
    {
		SetPlayerPos(playerid, 2114.9670,2498.4312,14.8390);
    	SetPlayerFacingAngle(playerid, 180.9399);
    	SetCameraBehindPlayer(playerid);
		SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
	    if(gym_cloakroom[playerid])
		{
		    gym_cloakroom[playerid] = false;
			if(pInfo[playerid][pMember]) SetPlayerSkin(playerid, pInfo[playerid][pMemberSkin]);
			else SetPlayerSkin(playerid, pInfo[playerid][pModel]);
			SendClientMessage(playerid, COLOR_RED, "Вы закончили тренировку!");
		}
    }
	if(pickupid == Pickup[3]) // ППС пгт.Батырево
	{
		if(pInfo[playerid][pMember] != TEAM_SFPD) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете брать оружие!");
		ShowPlayerDialog(playerid, dArmoury, DIALOG_STYLE_LIST, "{FFCC00}Оружейная", "Silenced Pistol (35 пт.)\nDesert Eagle (35 пт.)\nM4 (150 пт.)\nMP5 (100 пт.)\nShotgun (50 пт.)\nДубинка\nБронежилет\nМаска", "Выбрать", "Отмена");
		return 1;
	}
	if(pickupid == lvpdguns) // LVPD
   	{
		if(pInfo[playerid][pMember] != TEAM_LVPD) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете брать оружие!");
		ShowPlayerDialog(playerid, dArmoury, DIALOG_STYLE_LIST, "{FFCC00}Оружейная", "Silenced Pistol (35 пт.)\nDesert Eagle (35 пт.)\nM4 (150 пт.)\nMP5 (100 пт.)\nShotgun (50 пт.)\nДубинка\nБронежилет\nМаска", "Выбрать", "Отмена");
		return 1;
	}
	if(pickupid == Pickup[4]) // ФСБ
	{
		if(pInfo[playerid][pMember] != TEAM_FBI) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете брать оружие!");
		ShowPlayerDialog(playerid, dArmoury+2, DIALOG_STYLE_LIST, "{FFCC00}Оружейная", "Silenced Pistol (35 пт.)\nDesert Eagle (35 пт.)\nM4 (150 пт.)\nMP5 (100 пт.)\nSniper Rifle (25 пт.)\nSpray (100 мл.)\nСлезоточивый газ (5 шт.)\nДубинка\nБронежилет\nМаска", "Выбрать", "Отмена");
		return 1;
	}
	if(pickupid == narkoenter[0])
	{
	    new zone = GetPlayerGangZone(playerid);
	    if((GZInfo[zone][gFrak]==pInfo[playerid][pMember]))
		{
		    if(pInfo[playerid][pRank]>9)
		    {
		        SendClientMessage(playerid,COLOR_ORANGE,"Этот наркопритон принадлежит вашей банде!");
		        SendClientMessage(playerid,COLOR_WHITE,"Для управления наркопритоном используйте команды:");
		        SendClientMessage(playerid,COLOR_WHITE,"/getmoney /setdsell");
		        SendClientMessage(playerid,COLOR_ORANGE,"Необходимо подойти к вашему барыге!");
				CanUse[playerid]=1;
		    }
			else SendClientMessage(playerid,COLOR_ORANGE,"Этот наркопритон принадлежит вашей банде!");
		}
		SetPlayerPos(playerid,310.5410,1324.4667,705.8284, 1);
		SetPlayerFacingAngle(playerid, 270.0959);
		SetPlayerInterior(playerid,5);
		SetPlayerVirtualWorld(playerid,1);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == narkoenter[1])
	{
	    if(CanUse[playerid]>0) CanUse[playerid]=0;
	    if(GetPVarInt(playerid, "next_actor")) DeletePVar(playerid, "next_actor");
		SetPlayerPos(playerid,2207.2402,-1789.4098,21.8974, 1);
		SetPlayerFacingAngle(playerid,157.8982);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,0);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == bankls[0])
	{
	    SetPlayerPos(playerid,2379.0945,-1888.9504,22.8719, 1);
		SetPlayerFacingAngle(playerid,359.9526);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,0);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == bankls[1])
	{
		SetPlayerPos(playerid,370.5907,961.6376,-6.5172, 1);
		SetPlayerFacingAngle(playerid,159.9727);
		SetPlayerInterior(playerid,1);
		SetPlayerVirtualWorld(playerid,1);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == banksf[0])
	{
	    SetPlayerPos(playerid,339.5281,2096.1909,514.0859, 1);
		SetPlayerFacingAngle(playerid,359.9526);
		SetPlayerInterior(playerid,1);
		SetPlayerVirtualWorld(playerid,2);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == banksf[1])
	{
		SetPlayerPos(playerid,1853.4142,2036.4857,16.9742, 1);
		SetPlayerFacingAngle(playerid,89.7824);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,0);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == banklv[0])
	{
	    SetPlayerPos(playerid,1507.4923,-1571.0270,-1.9141, 1);
		SetPlayerFacingAngle(playerid,359.9526);
		SetPlayerInterior(playerid,1);
		SetPlayerVirtualWorld(playerid,3);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == banklv[1])
	{
		SetPlayerPos(playerid,2361.5044,2377.4451,10.8203, 1);
		SetPlayerFacingAngle(playerid,89.9275);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,0);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == bankpalomino[0])
	{
		SetPlayerPos(playerid,1507.4923,-1571.0270,-1.9141, 1);
		SetPlayerFacingAngle(playerid,359.9526);
		SetPlayerInterior(playerid,1);
		SetPlayerVirtualWorld(playerid,4);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == bankpalomino[1])
	{
		SetPlayerPos(playerid,2300.7771,-16.2614,26.4844, 1);
		SetPlayerFacingAngle(playerid,90.9891);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,0);
		SetCameraBehindPlayer(playerid);
	}
    if(pickupid == armskin)
  	{
  	    if(pInfo[playerid][pMember] != TEAM_NG) return 1;
	    if(pInfo[playerid][pRank] < 6) return ShowPlayerDialog(playerid, 15419, DIALOG_STYLE_LIST, "{FFCC00}Раздевалка", "Постовая\nСпортивная", "Выбрать", "Отмена");
        ShowPlayerDialog(playerid, 15419, DIALOG_STYLE_LIST, "{FFCC00}Раздевалка", "Постовая\nСпортивная\nПарадная", "Выбрать", "Отмена");
    }
	return 1;
}

public OnPlayerPickUpPickup(playerid, pickupid) {
	return 1;
}

public OnVehicleMod(playerid, vehicleid, componentid) {
    switch(componentid) {
        case 1008..1010: if(IsPlayerInInvalidNosVehicle(playerid)) RemoveVehicleComponent(vehicleid, componentid);
    }
    if(!IsComponentidCompatible(GetVehicleModel(vehicleid), componentid)) RemoveVehicleComponent(vehicleid, componentid);
    if(componentid != 1010 && GetPlayerInterior(playerid) == 0 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER && pInfo[playerid][pAdmin] != 6) {
		RemoveVehicleComponent(vehicleid, componentid);
		SetVehicleToRespawn(vehicleid);
		ToCheat(playerid, 6344);
		return 1;
	}
	return 1;
}

public OnVehiclePaintjob(playerid, vehicleid, paintjobid) {
    if(GetPlayerInterior(playerid) == 0 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) return ToCheat(playerid, 6345);
	return 1;
}

public OnVehicleRespray(playerid, vehicleid, color1, color2) {
	if(GetPlayerInterior(playerid) == 0 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
		if(pInfo[playerid][pHouse] != 0 && pTemp[playerid][pCarPlayerID] == vehicleid) {
			pInfo[playerid][cColor][0] = color1;
			pInfo[playerid][cColor][1] = color2;
		}
		else {
			ToCheat(playerid, 1442);
		}
	}
	return 1;
}

public OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid){ // контейнеры здесь
	if(playertextid == PlayerText: cont_PTD[playerid][1]){ // обычный
	    CancelSelectTextDraw(playerid);
	    for(new i; i < 5; i++) TextDrawHideForPlayer(playerid, cont_TD[i]);
	   	for(new i; i < 2; i++) PlayerTextDrawHide(playerid, cont_PTD[playerid][i]);
	}
	if(playertextid == PlayerText:cont_PTD[playerid][0]){
		new rand_str[256], rands = random(25000)+15000;
		new string[128];

		format(string,sizeof(string),"~r~+ %d$",rands);
		pInfo[playerid][pCash] += rands;
		TransferMoney(-1, playerid, rands);

		format(rand_str, sizeof rand_str, "Вы успешно открыли контейнер [Обычный], и получили: %d $", rands);
		SendClientMessage(playerid, -1,rand_str);
		MysqlUpdatePlayerInt(playerid, "cash", pInfo[playerid][pCash]);
		// после выдачи

  	    CancelSelectTextDraw(playerid);
	    for(new i; i < 5; i++) TextDrawHideForPlayer(playerid, cont_TD[i]);
	   	for(new i; i < 2; i++) PlayerTextDrawHide(playerid, cont_PTD[playerid][i]);
	}
	if(playertextid == PlayerText:INVALID_TEXT_DRAW)
    {
        if(Ujahhs[playerid] == 1)
        {
            pInfo[playerid][pInputCode] = 0;
			CancelSelectTextDraw(playerid);
	        for(new osa = 0; osa < 10; osa++) PlayerTextDrawHide(playerid, security_code_TD[playerid][osa]);
	        SendClientMessage(playerid, COLOR_RED, "Вы были кикнуты по причине отказа ввода графического пароля!");
	        Kick(playerid);
        }
    }
    for(new i = 0; i < 9; i++)
	{
		if(playertextid == security_code_TD[playerid][i])
		{
		    PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
		    if(GetPVarInt(playerid, "NumberDigits") == 0) return pInfo[playerid][pInputCode] += 1000 * (mass_pass[playerid][i]), SetPVarInt(playerid, "NumberDigits", GetPVarInt(playerid, "NumberDigits") + 1);
		    else if(GetPVarInt(playerid, "NumberDigits") == 1) return pInfo[playerid][pInputCode] += 100 * (mass_pass[playerid][i]), SetPVarInt(playerid, "NumberDigits", GetPVarInt(playerid, "NumberDigits") + 1);
		    else if(GetPVarInt(playerid, "NumberDigits") == 2) return pInfo[playerid][pInputCode] += 10 * (mass_pass[playerid][i]), SetPVarInt(playerid, "NumberDigits", GetPVarInt(playerid, "NumberDigits") + 1);
		    else if(GetPVarInt(playerid, "NumberDigits") == 3)
			{
				pInfo[playerid][pInputCode] += 1 * (mass_pass[playerid][i]), SetPVarInt(playerid, "NumberDigits", 0);
				if(pInfo[playerid][pInputCode] == pInfo[playerid][pSecurityCode])
				{
				    if(pInfo[playerid][pAdmin] > ADM_NONE) SendClientMessage(playerid,COLOR_LIME,"Вы вошли как администратор. Для авторизации, введите /alogin");
				    if(!pInfo[playerid][pMailConfirmed] && pInfo[playerid][pLevel] < 3) SendClientMessage(playerid, COLOR_YELLOW, "[Информация] {FFFFFF}Ваша почта не привязана. Привяжите её, чтобы потвердить ваш аккаунт (/menu - Безопасность)");
				    gPlayerLogged[playerid] = true;
				    DeletePVar(playerid, "Logged");
				    if(pInfo[playerid][pSettings] & setHungerInfo) Hunger(playerid, 0);
   					SpawnPlayerEx(playerid);
				}
				else Kick(playerid), SendClientMessage(playerid, COLOR_RED, "Вы были кикнуты по причине ввода неверного графического пароля!");
				for(new f = 0; f < 10; f++) PlayerTextDrawHide(playerid,security_code_TD[playerid][f]);
				pInfo[playerid][pInputCode] = 0;
				Ujahhs[playerid] = 0;
				CancelSelectTextDraw(playerid);
			}
		}
	}
    return 1;
}

public OnPlayerClickTextDraw(playerid, Text:clickedid)
{
    if(clickedid == Text:INVALID_TEXT_DRAW)
    {
        if(Ujahhs[playerid] == 1)
        {
            pInfo[playerid][pInputCode] = 0;
			CancelSelectTextDraw(playerid);
	        for(new osa = 0; osa < 10; osa++) PlayerTextDrawHide(playerid, security_code_TD[playerid][osa]);
	        SendClientMessage(playerid, COLOR_RED, "Вы были кикнуты по причине отказа ввода графического пароля!");
	        Kick(playerid);
        }
	}
	return 1;
}

public OnPlayerExitedMenu(playerid)
{
    if(playerid == INVALID_PLAYER_ID) return SKick(playerid, 7434);
    if(GetPlayerMenu(playerid) == Menu:INVALID_MENU) return SKick(playerid, 7435);
	return 1;
}

public OnEnterExitModShop(playerid, enterexit, interiorid)
{
    if(enterexit == 1) return ToCheat(playerid, 2156);
    return 1;
}

public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
{
	return 1;
}

#define PRESSED(%0) (((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
#define KEY_AIM (128)

public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
    if(newkeys == 1 || newkeys == 9 || newkeys == 33 && oldkeys != 1 || oldkeys != 9 || oldkeys != 33)
	{
		if(IsACar(playerid) && GetPVarInt(playerid, "adm_nitro"))
		{
			AddVehicleComponent(GetPVarInt(playerid,"VehicleEnters"), 1010);
		}
	}
	if(newkeys & KEY_FIRE)
	{
	    if(pTemp[playerid][pWork] == 1 && (
		   IsPlayerInRangeOfPoint(playerid,5.0,-769.6103,1193.4557,3011.3577)
  		|| IsPlayerInRangeOfPoint(playerid,5.0,-758.9952,1182.8615,3011.3240)
		|| IsPlayerInRangeOfPoint(playerid,5.0,-745.4455,1190.9069,3011.3416)
		|| IsPlayerInRangeOfPoint(playerid,5.0,-747.6874,1249.5793,3011.3496)
		|| IsPlayerInRangeOfPoint(playerid,5.0,-739.1017,1243.2605,3011.3408)
		|| IsPlayerInRangeOfPoint(playerid,5.0,-746.6099,1239.8412,3011.3557)
		|| IsPlayerInRangeOfPoint(playerid,5.0,-748.3160,1242.5010,3011.3508)
		|| IsPlayerInRangeOfPoint(playerid,5.0,-753.6164,1217.7378,3011.3257)
		|| IsPlayerInRangeOfPoint(playerid,5.0,-747.4539,1214.3978,3011.4045)))
		{
		    if((GetTickCount() - PlayerLastTick[playerid]) < 1000) return 1;
        	if(pTemp[playerid][pMinerProgress] >= 100) return 1;
			pTemp[playerid][pMinerProgress] += 15;
			new str[14];
			format(str, sizeof(str), "PERCENT: %d%", pTemp[playerid][pMinerProgress]);
			PlayerTextDrawSetString(playerid, status_work_TD[playerid][3], str);
			ApplyAnimation(playerid, "BASEBALL", "Bat_4", 4.1, 0, 1, 1, 1, 0);
			if(pTemp[playerid][pMinerProgress] >= 100 && !pTemp[playerid][pMinerStatus])
			{
			    PlayerTextDrawSetString(playerid, status_work_TD[playerid][3], "PERCENT: 0%");
			    RemovePlayerMapIcon(playerid, 88);
			    ClearAnimations(playerid);
				TogglePlayerControllable(playerid,1);
				ApplyAnimation(playerid, "CARRY", "liftup", 1.0, 0, 1, 1, 0, 0, 1);
				SetTimerEx("@CarryDelay", 1000, false, "i", playerid);
				if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
                SetPlayerAttachedObject(playerid, 4, 905, 1, 0.242263, 0.535462, -0.046915, 353.850921, 306.869110, 242.540740, 1.000000, 1.000000, 1.000000 );
				new rand = 50+random(30);
				if(IsPlayerInRangeOfPoint(playerid,10.0,-769.6103,1193.4557,3011.3577)
				|| IsPlayerInRangeOfPoint(playerid,10.0,-758.9952,1182.8615,3011.3240)
				|| IsPlayerInRangeOfPoint(playerid,10.0,-745.4455,1190.9069,3011.3416))
				{
				    SetPlayerMapIcon(playerid,88,-880.9386,1217.7375,3011.5386,0,0xFFCC00FF,1);
				    pTemp[playerid][pMinerAmount][0] = rand;
				}
				if(IsPlayerInRangeOfPoint(playerid,10.0,-747.6874,1249.5793,3011.3496)
				|| IsPlayerInRangeOfPoint(playerid,10.0,-739.1017,1243.2605,3011.3408)
				|| IsPlayerInRangeOfPoint(playerid,10.0,-746.6099,1239.8412,3011.3557)
				|| IsPlayerInRangeOfPoint(playerid,10.0,-748.3160,1242.5010,3011.3508))
				{
				    SetPlayerMapIcon(playerid,88,-882.9556,1217.7389,3011.5386,0,0xFFCC00FF,1);
				    pTemp[playerid][pMinerAmount][1] = rand;
				}
				if(IsPlayerInRangeOfPoint(playerid,10.0,-753.6164,1217.7378,3011.3257)
				|| IsPlayerInRangeOfPoint(playerid,10.0,-747.4539,1214.3978,3011.4045))
				{
				    SetPlayerMapIcon(playerid,88,-885.4828,1217.7394,3011.5386,0,0xFFCC00FF,1);
                    pTemp[playerid][pMinerAmount][2] = rand;
				}
				SendClientMessage(playerid, COLOR_WHITE, "Место куда относить добытый уголь отмечено {FFCC00}маркером {FFFFFF}на Вашей карте");
				pTemp[playerid][pMinerStatus] = 1;
				pTemp[playerid][pMineAntiflood] = 5;
				return 1;
			}
			PlayerLastTick[playerid] = GetTickCount();
		}
	    if(pTemp[playerid][pWork] == 2 && (IsPlayerInRangeOfPoint(playerid,2.5,DerevoPos[GetPVarInt(playerid, "Derevo")][0],DerevoPos[GetPVarInt(playerid, "Derevo")][1],DerevoPos[GetPVarInt(playerid, "Derevo")][2])))
		{
		    if((GetTickCount() - PlayerLastTick[playerid]) < 1000) return 1;
		    if(pTemp[playerid][pLessProgress] >= 100) return 1;
			pTemp[playerid][pLessProgress] += 15;
			new str[14];
			format(str, sizeof(str), "PERCENT: %d%", pTemp[playerid][pLessProgress]);
			PlayerTextDrawSetString(playerid, status_work_TD[playerid][3], str);
			ApplyAnimation(playerid, "CHAINSAW", "weapon_csaw", 4.0, 0, 0, 0, 0, 0);
			if(pTemp[playerid][pLessProgress] >= 100 && !pTemp[playerid][pLessStatus])
			{
		        PlayerTextDrawSetString(playerid, status_work_TD[playerid][3], "PERCENT: 0%");
				DisablePlayerCheckpoint(playerid);
				ClearAnimations(playerid);
				TogglePlayerControllable(playerid,1);
				ApplyAnimation(playerid, "CARRY", "liftup", 1.0, 0, 1, 1, 0, 0, 1);
				SetTimerEx("@CarryDelay", 1000, false, "i", playerid);
				if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
				SetPlayerAttachedObject(playerid, 4, 1463, 1, 0.184699, 0.426247, 0.000000, 259.531341, 80.949592, 0.000000, 0.476124, 0.468181, 0.470769);
				SetPlayerCheckpoint(playerid,1813.6746,1424.7982,9.9600,3.0);
				pTemp[playerid][pLessStatus] = 1;
				pTemp[playerid][pLessAntiflood] = 4;
				return 1;
		    }
			PlayerLastTick[playerid] = GetTickCount();
		}
	}
	if(newkeys & KEY_CTRL_BACK)
	{
	    for(new i = 1; i <= TOTALBIZ; i++)
	    {
		    if(IsPlayerInRangeOfPoint(playerid, 5.0, BizInfo[i][bEntr][0], BizInfo[i][bEntr][1], BizInfo[i][bEntr][2]) && BizInfo[i][bType] == 2)
		    {
			    ShowPlayerDialog(playerid, dFilling, DIALOG_STYLE_LIST, "{FFCC00}АЗС", "Заправить транспорт\nКанистра\nНабор инструментов", "Выбрать", "Отмена");
			    SetPVarInt(playerid, "FuelBizID", i);
			    BizInfo[i][bVisitors]++;
		    }
	    }
	    if((IsAArmy(playerid) || IsAMafia(playerid)) && IsPlayerInDynamicArea(playerid, AreaInfo[arLoadAmmo]))
		{
			if(gGunWorkWH[3] < 300) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] На складе недостаточно ящиков с боеприпасами");
			if(!GetPVarInt(playerid, "carryammo"))
			{
				gGunWorkWH[3] -= 300;
				SetPlayerFacingAngle(playerid, 270.0);
				ClearAnimations(playerid);
				ApplyAnimation(playerid, "CARRY", "liftup", 1.0, 0, 1, 1, 0, 0, 1);
				SetTimerEx("@CarryDelay", 1000, false, "i", playerid);
				SetPlayerAttachedObject(playerid,0,3052,6,0.0,0.10,-0.2, -110.0,0.0,78.0);
				SetPVarInt(playerid, "carryammo", 1);
			}
		}
		if(IsAMedic(playerid) && IsPlayerInDynamicArea(playerid, AreaInfo[arLoadMed]))
		{
			if(!GetPVarInt(playerid, "carrymed"))
			{
				SetPlayerFacingAngle(playerid, 270.0);
				SetPlayerAttachedObject(playerid, 0, 11738, 6,  0.285000, 0.042000, 0.038999,  -1.400000, -98.300041, -1.600002,  1.000000, 1.000000, 1.000000);
				SetPVarInt(playerid, "carrymed", 10);
			}
		}
	}
	if(PRESSED(KEY_FIRE) || PRESSED(KEY_HANDBRAKE) || PRESSED(KEY_CROUCH) || PRESSED(KEY_ACTION))
    {
        if(pTemp[playerid][pWork] == 1 && IsPlayerAttachedObjectSlotUsed(playerid, 4) || pTemp[playerid][pLessStatus] && IsPlayerAttachedObjectSlotUsed(playerid, 4))
        {
        	ClearAnimations(playerid);
        	ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,0,1,1,1,1);
        	return 1;
        }
	}
    if((PRESSED(KEY_SECONDARY_ATTACK) || PRESSED(KEY_JUMP) || PRESSED(KEY_SPRINT)) && !IsPlayerInAnyVehicle(playerid))
    {
        if(pTemp[playerid][pWork] == 1 && pTemp[playerid][pMinerStatus] && IsPlayerAttachedObjectSlotUsed(playerid, 4))
        {
        	SendClientMessage(playerid, COLOR_RED, "Вы уронили уголь, попробуйте еще раз!");
        	RemovePlayerAttachedObject(playerid,4);
			RemovePlayerMapIcon(playerid, 88);
			TogglePlayerControllable(playerid,1);
			ClearAnimations(playerid);
			pTemp[playerid][pMinerAmount][0] = pTemp[playerid][pMinerAmount][1] = pTemp[playerid][pMinerAmount][2] = 0;
			pTemp[playerid][pMinerProgress] = 0;
			pTemp[playerid][pMinerStatus] = 0;
			PlayerTextDrawSetString(playerid, status_work_TD[playerid][3], "PERCENT: 0%");
        	ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
			SetPlayerAttachedObject(playerid, 3, 18634, 6, 0.078222, 0.000000, 0.110844, 298.897308, 264.126861, 193.350555, 1.000000, 1.000000, 1.000000);
        }
        else if(pTemp[playerid][pWork] == 2 && pTemp[playerid][pLessStatus] && IsPlayerAttachedObjectSlotUsed(playerid, 4))
        {
			SendClientMessage(playerid, COLOR_RED, "Вы уронили срубленые бруски!");
            DisablePlayerCheckpoint(playerid);
	        RemovePlayerAttachedObject(playerid, 4);
			ClearAnimations(playerid);
			ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
			DeletePVar(playerid, "Derevo");
			pTemp[playerid][pLessProgress] = 0;
		    pTemp[playerid][pLessStatus] = 0;
		    PlayerTextDrawSetString(playerid, status_work_TD[playerid][3], "PERCENT: 0%");
			SetPlayerAttachedObject(playerid, 3, 341, 6, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
            new rand_coord = random(sizeof(DerevoPos));
			SetPlayerCheckpoint(playerid, DerevoPos[rand_coord][0], DerevoPos[rand_coord][1], DerevoPos[rand_coord][2], 3.0);
			SetPVarInt(playerid, "Derevo", rand_coord);
		}
		if(GetPVarInt(playerid, "carryammo"))
		{
			SendClientMessage(playerid, COLOR_RED, "Вы уронили ящик c боеприпасами!");
			SetPVarInt(playerid,"carryammo",0);
			RemovePlayerAttachedObject(playerid,0);
			RemovePlayerAttachedObject(playerid,1);
			gGunWorkWH[3] += 300;
			ClearAnimations(playerid);
			ApplyAnimation(playerid,"CARRY","putdwn105",5.0,0,0,0,0,1);
		}
		if(GetPVarInt(playerid, "carrymed"))
		{
			SendClientMessage(playerid, COLOR_RED, "Вы уронили медикаменты!");
			SetPVarInt(playerid,"carrymed",0);
			RemovePlayerAttachedObject(playerid,0);
			RemovePlayerAttachedObject(playerid,1);
			ClearAnimations(playerid);
			ApplyAnimation(playerid,"CARRY","putdwn105",5.0,0,0,0,0,1);
		}
    }
	if(pCuff[playerid][pCuffee] == playerid && !IsPlayerInAnyVehicle(playerid))
	{
		if((newkeys & KEY_JUMP || newkeys & KEY_FIRE || newkeys & KEY_CROUCH || (newkeys & KEY_HANDBRAKE && newkeys & KEY_SECONDARY_ATTACK)))
		{
			ClearAnimations(playerid);
			ApplyAnimation(playerid,"FAT","IDLE_tired",3.0,1,0,0,0,3000,1);
			SendClientMessage(playerid, COLOR_GREY, "Вы не можете использовать это действие так как вы в наручниках.");
		}
	}
	if(newkeys & KEY_SECONDARY_ATTACK)
	{
	    if(ClothesRound[playerid] == 1) return ShowMenuForPlayer(clothing_selection, playerid);
		if(ClothesRound[playerid] == 2) return ShowMenuForPlayer(buy_clothing, playerid);
		if(pInfo[playerid][Spectating][0] != INVALID_PLAYER_ID) return ShowMenuForPlayer(spectate_menu, playerid);
	    new string[71];
		for(new i; i < sizeof(HealInfo); i++)
		{
		    if(IsPlayerInRangeOfPoint(playerid,1.6,HealInfo[i][hBed][0],HealInfo[i][hBed][1],HealInfo[i][hBed][2]) && GetPlayerVirtualWorld(playerid)==HealInfo[i][hWorld])
			{
	        	if(pInfo[playerid][pHeal] >= 95) return SendClientMessage(playerid, COLOR_GREY, "Вы не нуждаетесь в лечении, вы здоровы");
	        	if(PlayerLie[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Вы уже начали лечение!");
	        	if(!GetString(HealInfo[i][hName],"The State")) return SendClientMessage(playerid, COLOR_GREY, "Данная койка занята другим пациентом!");
				SendClientMessage(playerid, COLOR_BLUE, "Вам назначили курс лечения. Длительность курса лечения зависит от состояния вашего здоровья.");
				format(string,sizeof(string),"Койка {F04245}[Занята]\n{bbbbbb}Пациент: %s",GetName(playerid));
				UpdateDynamic3DTextLabelText(HealText[i],0xFFFFFFFF,string);
				PlayerBed[playerid] = i;
				PlayerLie[playerid] = true;
				SetString(HealInfo[i][hName],GetName(playerid));
	        	break;
  			}
	    }
	}
	if(newkeys & KEY_WALK && IsPlayerInRangeOfPoint(playerid, 1.2, 1731.8839,-1032.4688,12.2917))
	{
	    if(pInfo[playerid][pCash] < 15000) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно денег!");
	    
		for(new i = 0; i <5; i++) TextDrawShowForPlayer(playerid, cont_TD[i]);
    	for(new i = 0; i <2; i++)PlayerTextDrawShow(playerid, cont_PTD[playerid][i]);
    	SelectTextDraw(playerid,COLOR_RED);
	}
	if(newkeys & KEY_WALK && IsPlayerInRangeOfPoint(playerid, 1.2, 1733.6411,-1039.6805,12.8198))
	{
        if(pInfo[playerid][pCredits] < 50) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно кредитов!");
		new fmt_cont[345];
		format(fmt_cont,sizeof fmt_cont, "Контейнер: Китай\
		\nТип контейнера: {37e337}V.I.P{FFFFFF}\
		\nВ данном контейнере, вы сможете получить следующее: \
		\n\t... {20a1d2}Игровую валюту(от 80 до 120 тыс){FFFFFF}\
		\n\t... {20a1d2}Игровой донат(от 40 руб).{FFFFFF}\
		\n Стоимость открытия контейнера - {37e337}50 FCoins{FFFFFF}.\
		\n Чтобы открыть его, Вам требуется нажать на кнопку\"Открыть\"");
	   	ShowPlayerDialog(playerid, dCont_Two, DIALOG_STYLE_MSGBOX, "Статистика контейнера №2 'V.I.P' ", fmt_cont, "Открыть", "Закрыть");
	}
	if(newkeys & KEY_WALK)
	{
	    new player_state = GetPlayerState(playerid);
	    for(new i = 1; i <= TOTALBIZ; i++)
	    {
	        if((IsPlayerInDynamicArea(playerid, BizInfo[i][bAreaExit])) && player_state == PLAYER_STATE_ONFOOT)
			{
			    SetPVarInt(playerid, "_ShowDialog", 1);
				SetPlayerPos(playerid, BizInfo[i][bEntr][0], BizInfo[i][bEntr][1], BizInfo[i][bEntr][2], 1);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
			}
			if((IsPlayerInDynamicArea(playerid, BizInfo[i][bAreaMenu])) && player_state == PLAYER_STATE_ONFOOT)
	        {
				switch(BizInfo[i][bType])
				{
				    case 1: MagazineList(playerid);
				    case 3: EatList(playerid, i);
				    case 4,5,9,10: BarList(playerid, i);
				    case 6: GunShopList(playerid);
				    case 8: SkinShopList(playerid);
				}
			}
	    }
		for(new i = 1; i <= TOTALATM; i++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 3.0, ATMInfo[i][aX], ATMInfo[i][aY], ATMInfo[i][aZ]) && player_state == PLAYER_STATE_ONFOOT)
			{
				ATMList(playerid);
			}
		}
		new a = GetPVarInt(playerid, "UseHouse");
		if(IsPlayerInRangeOfPoint(playerid, 3.0, -1658.8940,1541.3593,835.6316) && GetPlayerVirtualWorld(playerid) == HouseInfo[a][hID])
		{
		    if(HouseInfo[a][hAutoDoors] == 0) return 1;
		    new _c = HouseInfo[a][hClass], _i = HouseInfo[a][hInt];
			SetPlayerPos(playerid, HintsInfo[_c][_i][hiExitX], HintsInfo[_c][_i][hiExitY], HintsInfo[_c][_i][hiExitZ], 1);
            SetPlayerFacingAngle(playerid, HintsInfo[_c][_i][hiExitFA]);
			SetCameraBehindPlayer(playerid);
			SetPlayerInterior(playerid, HintsInfo[_c][_i][hiInt]);
			SetPlayerVirtualWorld(playerid, HouseInfo[a][hID]);
		}
		if(HouseInfo[a][hGarage])
		{
		    new _c = HouseInfo[a][hClass], _i = HouseInfo[a][hInt];
			if(IsPlayerInRangeOfPoint(playerid, 6.0, HintsInfo[_c][_i][hiExitX], HintsInfo[_c][_i][hiExitY], HintsInfo[_c][_i][hiExitZ]) && GetPlayerVirtualWorld(playerid) == HouseInfo[a][hID])
			{
			    if(HouseInfo[a][hAutoDoors] == 0) return 1;
				ShowPlayerDialog(playerid, dHome+1, DIALOG_STYLE_LIST, "{FFCC00}Куда Вы хотите выйти?", "- На улицу\n- В гараж", "Ок", "Закрыть");
			}
		}
		else
		{
		    new _c = HouseInfo[a][hClass], _i = HouseInfo[a][hInt];
			if(IsPlayerInRangeOfPoint(playerid, 6.0, HintsInfo[_c][_i][hiExitX], HintsInfo[_c][_i][hiExitY], HintsInfo[_c][_i][hiExitZ]) && GetPlayerVirtualWorld(playerid) == HouseInfo[a][hID])
			{
			    if(HouseInfo[a][hAutoDoors] == 0) return 1;
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPos(playerid, HouseInfo[a][hEntr][0], HouseInfo[a][hEntr][1], HouseInfo[a][hEntr][2]);
			}
		}
		for(new i = 0; i < 5; i++)
		{
			if((IsPlayerInDynamicArea(playerid, AreaInfo[arBankMenu][i])) && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) BankList(playerid);
		}
	}
	if(newkeys == KEY_YES){
	    if(IsPlayerInAnyVehicle(playerid) && !IsVehiclePlane(GetPlayerVehicleID(playerid))){
	        if(PlayerGear[playerid] == 5){
	            new info[35];
            	format(info, sizeof(info), "~r~5");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][4], info);
				format(info, sizeof(info), "~w~1");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][0], info);
				format(info, sizeof(info), "~w~2");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][1], info);
				format(info, sizeof(info), "~w~3");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][2], info);
				format(info, sizeof(info), "~w~4");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][3], info);
				format(info, sizeof(info), "~w~R");
			    PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][5], info);
				format(info, sizeof(info), "~w~N");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][6], info);
	            SetTimerEx("PlayerCTGear", 2000, false, "i", playerid);
	            return true;
	        }
	        else if(PlayerGear[playerid] == -1){
				new info[35];
	            PlayerCGear[playerid] = 0;
	            PlayerGear[playerid] ++;
            	format(info, sizeof(info), "~r~R");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][5], info);
				format(info, sizeof(info), "~w~1");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][0], info);
				format(info, sizeof(info), "~w~2");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][1], info);
				format(info, sizeof(info), "~w~3");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][2], info);
				format(info, sizeof(info), "~w~4");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][3], info);
				format(info, sizeof(info), "~w~5");
			    PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][4], info);
				format(info, sizeof(info), "~w~N");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][6], info);
	            return true;
	        }
	        else if(PlayerGear[playerid] == 0){
	            new info[35];
	            PlayerCGear[playerid] = 0;
				PlayerGear[playerid] ++;
            	format(info, sizeof(info), "~r~1");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][0], info);
				format(info, sizeof(info), "~w~2");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][1], info);
				format(info, sizeof(info), "~w~3");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][2], info);
				format(info, sizeof(info), "~w~4");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][3], info);
				format(info, sizeof(info), "~w~5");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][4], info);
				format(info, sizeof(info), "~w~R");
			    PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][5], info);
				format(info, sizeof(info), "~w~N");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][6], info);
	            return true;
	        }
	        else if(PlayerGear[playerid] == 1){
	            new info[35];
	            PlayerCGear[playerid] = 0;
				PlayerGear[playerid] ++;
            	format(info, sizeof(info), "~r~2");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][1], info);
				format(info, sizeof(info), "~w~1");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][0], info);
				format(info, sizeof(info), "~w~3");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][2], info);
				format(info, sizeof(info), "~w~4");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][3], info);
				format(info, sizeof(info), "~w~5");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][4], info);
				format(info, sizeof(info), "~w~R");
			    PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][5], info);
				format(info, sizeof(info), "~w~N");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][6], info);
	            return true;
	        }
	        else if(PlayerGear[playerid] == 2){
	            new info[35];
	            PlayerCGear[playerid] = 0;
				PlayerGear[playerid] ++;
            	format(info, sizeof(info), "~r~3");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][2], info);
				format(info, sizeof(info), "~w~1");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][0], info);
				format(info, sizeof(info), "~w~2");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][1], info);
				format(info, sizeof(info), "~w~4");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][3], info);
				format(info, sizeof(info), "~w~5");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][4], info);
				format(info, sizeof(info), "~w~R");
			    PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][5], info);
				format(info, sizeof(info), "~w~N");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][6], info);
	            return true;
	        }
	        else if(PlayerGear[playerid] == 3){
	            new info[35];
	            PlayerCGear[playerid] = 0;
				PlayerGear[playerid] ++;
            	format(info, sizeof(info), "~r~4");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][3], info);
				format(info, sizeof(info), "~w~1");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][0], info);
				format(info, sizeof(info), "~w~2");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][1], info);
				format(info, sizeof(info), "~w~3");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][2], info);
				format(info, sizeof(info), "~w~5");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][4], info);
				format(info, sizeof(info), "~w~R");
			    PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][5], info);
				format(info, sizeof(info), "~w~N");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][6], info);
	            return true;
	        }
	        else if(PlayerGear[playerid] == 4){
	            new info[35];
	            PlayerCGear[playerid] = 0;
				PlayerGear[playerid] ++;
              	format(info, sizeof(info), "~r~5");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][4], info);
				format(info, sizeof(info), "~w~1");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][0], info);
				format(info, sizeof(info), "~w~2");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][1], info);
				format(info, sizeof(info), "~w~3");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][2], info);
				format(info, sizeof(info), "~w~4");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][3], info);
				format(info, sizeof(info), "~w~R");
			    PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][5], info);
				format(info, sizeof(info), "~w~N");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][6], info);
	            return true;
	        }
	    }
	}
	if(newkeys == KEY_NO){
	    if(IsPlayerInAnyVehicle(playerid) && !IsVehiclePlane(GetPlayerVehicleID(playerid))){
	        if(PlayerGear[playerid] == -1){
	            new info[25];
    			format(info, sizeof(info), "~r~R");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][5], info);
	            SetTimerEx("PlayerCTGearz", 2000, false, "i", playerid);
	            return true;
	        }
	        else if(PlayerGear[playerid] == 0){
				new info[25];
	            PlayerGear[playerid] --;
            	format(info, sizeof(info), "~r~N");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][6], info);
				format(info, sizeof(info), "~w~1");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][0], info);
				format(info, sizeof(info), "~w~2");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][1], info);
				format(info, sizeof(info), "~w~3");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][2], info);
				format(info, sizeof(info), "~w~4");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][3], info);
				format(info, sizeof(info), "~w~5");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][4], info);
				format(info, sizeof(info), "~w~R");
			    PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][5], info);
	            return true;
	        }
	        else if(PlayerGear[playerid] == 1){
				new info[25];
	            PlayerGear[playerid] --;
            	format(info, sizeof(info), "~r~1");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][0], info);
				format(info, sizeof(info), "~w~2");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][1], info);
				format(info, sizeof(info), "~w~3");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][2], info);
				format(info, sizeof(info), "~w~4");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][3], info);
				format(info, sizeof(info), "~w~5");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][4], info);
				format(info, sizeof(info), "~w~R");
			    PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][5], info);
				format(info, sizeof(info), "~w~N");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][6], info);
	            return true;
	        }
	        else if(PlayerGear[playerid] == 2){
				new info[25];
	            PlayerGear[playerid] --;
            	format(info, sizeof(info), "~r~2");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][1], info);
				format(info, sizeof(info), "~w~1");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][0], info);
				format(info, sizeof(info), "~w~3");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][2], info);
				format(info, sizeof(info), "~w~4");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][3], info);
				format(info, sizeof(info), "~w~5");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][4], info);
				format(info, sizeof(info), "~w~R");
			    PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][5], info);
				format(info, sizeof(info), "~w~N");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][6], info);
	            return true;
	        }
	        else if(PlayerGear[playerid] == 3){
				new info[25];
	            PlayerGear[playerid] --;
            	format(info, sizeof(info), "~r~3");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][2], info);
				format(info, sizeof(info), "~w~1");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][0], info);
				format(info, sizeof(info), "~w~2");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][1], info);
				format(info, sizeof(info), "~w~4");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][3], info);
				format(info, sizeof(info), "~w~5");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][4], info);
				format(info, sizeof(info), "~w~R");
			    PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][5], info);
				format(info, sizeof(info), "~w~N");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][6], info);
	            return true;
	        }
	        else if(PlayerGear[playerid] == 4){
				new info[25];
	            PlayerGear[playerid] --;
            	format(info, sizeof(info), "~r~4");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][3], info);
				format(info, sizeof(info), "~w~1");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][0], info);
				format(info, sizeof(info), "~w~2");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][1], info);
				format(info, sizeof(info), "~w~3");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][2], info);
				format(info, sizeof(info), "~w~5");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][4], info);
				format(info, sizeof(info), "~w~R");
			    PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][5], info);
				format(info, sizeof(info), "~w~N");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][6], info);
	            return true;
         	}
	        else if(PlayerGear[playerid] == 5){
				new info[25];
	            PlayerGear[playerid] --;
            	format(info, sizeof(info), "~r~5");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][4], info);
				format(info, sizeof(info), "~w~1");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][0], info);
				format(info, sizeof(info), "~w~2");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][1], info);
				format(info, sizeof(info), "~w~3");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][2], info);
				format(info, sizeof(info), "~w~4");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][3], info);
				format(info, sizeof(info), "~w~R");
			    PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][5], info);
				format(info, sizeof(info), "~w~N");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][6], info);
	            return true;
	        }
	    }
	}
	if(newkeys == KEY_YES) // Y
	{
        switch(pTemp[playerid][pTargetAction])
        {
            case ACTION_HOSPITAL:
            {
	   			new targetid = pTemp[playerid][pTargetPlayer], price = pTemp[playerid][pActionPrice];
	            if(!gPlayerLogged[targetid] || !IsPlayerConnected(targetid))
				{
					SendClientMessage(playerid, COLOR_GREY, "Тот, кто предлагал Вам вылечиться вышел из игры");
	    			pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetAction] = ACTION_NONE;
					return pTemp[playerid][pActionPrice] = 0;
				}
				else if(GetCash(playerid) < price)
				{
					SendMes(targetid, COLOR_GREY, "У игрока %s недостаточно денег!", GetName(playerid));
					SendClientMessage(playerid, COLOR_GREY, NoMoney);
					pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetAction] = ACTION_NONE;
					return pTemp[playerid][pActionPrice] = 0;
				}
				if(IsPlayerInAnyVehicle(targetid) && !IsPlayerInVehicle(playerid, GetPVarInt(targetid,"VehicleEnters"))) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Игрок должен находиться вместе с вами в машине!");
				TransferMoney(-1, targetid, price);
				TransferMoney(playerid, -1, price);
				SetHealth(playerid, 100);
				if(PlayerDied[playerid])
				{
					BedDefault(playerid);
					pInfo[playerid][pCity] = 0;
					PlayerDied[playerid] = false;
				}
				if(GetPlayerDrunkLevel(playerid) > 0) SetPlayerDrunkLevel(playerid, 0);
				if(!IsPlayerInAnyVehicle(targetid))
				{
				    SetPlayerAttachedObject(targetid, 1, 11738, 6,  0.243999, 0.020000, 0.036000,  2.300000, -100.599929, 2.100000,  1.000000, 1.000000, 1.000000);
					HealmeObject[targetid] = 2;
				}
				SendMes(playerid, COLOR_GREEN, "%s %s вылечил вас за %i$", Fraction_Rang[pInfo[targetid][pMember]][pInfo[targetid][pRank]], GetName(targetid), price);
				SendMes(targetid, COLOR_GREEN, "Вы вылечили %s за %i$", GetName(playerid), price);
				new string[128];
				format(string, sizeof(string), "[MED] %s %s[%i] %s курс лечения пациенту %s[%i] за %i$", Fraction_Rang[pInfo[targetid][pMember]][pInfo[targetid][pRank]], GetName(targetid), targetid, (pInfo[targetid][pSex] == 1)?("провёл"):("провела"), GetName(playerid), playerid, price);
				SendFMes(pInfo[targetid][pMember], COLOR_YELLOW, string);
				if(Medicines[targetid]) Medicines[targetid]--;
				SendMes(targetid, COLOR_WHITE, "Количество комплектов медикаментов с собой: %i", Medicines[targetid]);
				pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
				pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
				pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
				pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
				pTemp[playerid][pTargetAction] = ACTION_NONE;
				return pTemp[playerid][pActionPrice] = 0;
	  		}
	  		case ACTION_SELL_DRUGS:
	  		{
	  		    new targetid = pTemp[playerid][pTargetPlayer], price = pTemp[playerid][pActionPrice], gramm = pTemp[playerid][pSellDrugsGramm];
	            if(!gPlayerLogged[targetid] || !IsPlayerConnected(targetid))
				{
					SendClientMessage(playerid, COLOR_GREY, "Продавец вышел из игры");
					pTemp[playerid][pSellDrugsGramm] = 0;
					pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetAction] = ACTION_NONE;
					return pTemp[playerid][pActionPrice] = 0;
				}
				else if(GetCash(playerid) < price)
				{
					SendMes(targetid, COLOR_GREY, "У игрока %s недостаточно денег!", GetName(playerid));
					SendClientMessage(playerid, COLOR_GREY, NoMoney);
					pTemp[playerid][pSellDrugsGramm] = 0;
					pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetAction] = ACTION_NONE;
					return pTemp[playerid][pActionPrice] = 0;
				}
				else if(pInfo[playerid][pDrugs]+gramm > 100 && !pInfo[playerid][pImprove][2])
				{
				    SendMes(targetid, COLOR_GREY, "У игрока %s достаточно наркотиков на руках!", GetName(playerid));
					SendClientMessage(playerid, COLOR_GREY, "У вас не может быть более 100 грамм наркотиков!");
					pTemp[playerid][pSellDrugsGramm] = 0;
					pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetAction] = ACTION_NONE;
					return pTemp[playerid][pActionPrice] = 0;
				}
				else if(pInfo[playerid][pDrugs]+gramm > 200 && pInfo[playerid][pImprove][2])
				{
				    SendMes(targetid, COLOR_GREY, "У игрока %s достаточно наркотиков на руках!", GetName(playerid));
					SendClientMessage(playerid, COLOR_GREY, "У вас не может быть более 200 грамм наркотиков!");
					pTemp[playerid][pSellDrugsGramm] = 0;
					pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetAction] = ACTION_NONE;
					return pTemp[playerid][pActionPrice] = 0;
				}
				TransferMoney(playerid, -1, price, "Купил нарко", 1);
				TransferMoney(-1, targetid, price, "Продал нарко", 1);
				pInfo[targetid][pDrugs] -= gramm;
				pInfo[playerid][pDrugs] += gramm;
				new string[100];
				SendMes(targetid, COLOR_GREEN, "Вы продали наркотики (%i грамм) за %i$. Наркотиков в кармане: %i", gramm, price, pInfo[targetid][pDrugs]);
				SendMes(playerid, COLOR_GREEN, "Вы купили наркотики у %s (%i грамм). Цена: %i", GetName(targetid), gramm, price);
				format(string, sizeof(string), "достал%s пакетик и передал его %s", (pInfo[playerid][pSex]==1)?(""):("а"), GetName(targetid));
				MeAction(playerid, string);
				pTemp[playerid][pSellDrugsGramm] = 0;
				pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
				pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
				pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
				pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
				pTemp[playerid][pTargetAction] = ACTION_NONE;
				return pTemp[playerid][pActionPrice] = 0;
			}
			case ACTION_SELL_ZONE:
			{
	  		    new targetid = pTemp[playerid][pTargetPlayer], price = pTemp[playerid][pActionPrice], i = pTemp[playerid][pSellZoneID];
	            if(!gPlayerLogged[targetid] || !IsPlayerConnected(targetid))
				{
					SendClientMessage(playerid, COLOR_GREY, "Продавец вышел из игры");
					pTemp[playerid][pSellZoneID] = -1;
					pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetAction] = ACTION_NONE;
					return pTemp[playerid][pActionPrice] = 0;
				}
				else if(GetCash(playerid) < price)
				{
					SendMes(targetid, COLOR_GREY, "У игрока %s недостаточно денег!", GetName(playerid));
					SendClientMessage(playerid, COLOR_GREY, NoMoney);
					pTemp[playerid][pSellZoneID] = -1;
					pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetAction] = ACTION_NONE;
					return pTemp[playerid][pActionPrice] = 0;
				}
				GZInfo[i][gFrak] = pInfo[playerid][pMember];
				GangZoneStopFlashForAll(GangZone[i]);
				GangZoneHideForAll(GangZone[i]);
				GangZoneShowForAll(GangZone[i],TeamColors[GZInfo[i][gFrak]]);
				SaveGZ(i);
				UpdTerrsBand();
				TransferMoney(playerid, -1, price, "Купил территорию", 1);
				TransferMoney(-1, targetid, price, "Продал территорию", 1);
				new string[100];
				format(string, sizeof(string), "%s продал%s зону %s (%s)", GetName(targetid), (pInfo[targetid][pSex]==1)?(""):("а"), GetName(playerid), Fraction_Name[pInfo[playerid][pMember]]);
				SendFMes(pInfo[targetid][pMember], COLOR_YELLOW, string);
				format(string, sizeof(string), "%s купил%s зону у %s (%s)", GetName(playerid), (pInfo[playerid][pSex]==1)?(""):("а"), GetName(targetid), Fraction_Name[pInfo[targetid][pMember]]);
				SendFMes(pInfo[playerid][pMember], COLOR_YELLOW, string);
				format(string, sizeof(string), "Банда %s купила территорию у банды %s", Fraction_Name[pInfo[targetid][pMember]], Fraction_Name[pInfo[playerid][pMember]]);
				SendGhettoMes(COLOR_RED, string);
				pTemp[playerid][pSellZoneID] = -1;
				pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
				pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
				pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
				pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
				pTemp[playerid][pTargetAction] = ACTION_NONE;
				return pTemp[playerid][pActionPrice] = 0;
	  		}
	  		case ACTION_SELL_GUN:
	  		{
	  		    new targetid = pTemp[playerid][pTargetPlayer], weaponid = pTemp[playerid][pSellGunWeapon], price = pTemp[playerid][pActionPrice], needammo = pTemp[playerid][pSellGunAmmo];
	            if(!gPlayerLogged[targetid] || !IsPlayerConnected(targetid))
				{
					SendClientMessage(playerid, COLOR_GREY, "Продавец вышел из игры");
					pTemp[playerid][pSellGunWeapon] = 0;
					pTemp[playerid][pSellGunAmmo] = 0;
					pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetAction] = ACTION_NONE;
					return pTemp[playerid][pActionPrice] = 0;
				}
				else if(GetCash(playerid) < price)
				{
					SendMes(targetid,COLOR_GREY, "У игрока %s недостаточно денег!", GetName(playerid));
					SendClientMessage(playerid, COLOR_GREY, NoMoney);
					pTemp[playerid][pSellGunWeapon] = 0;
					pTemp[playerid][pSellGunAmmo] = 0;
					pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetAction] = ACTION_NONE;
					return pTemp[playerid][pActionPrice] = 0;
				}
				new slot = GetWeaponSlot(weaponid), weapon, ammo;
				GetPlayerWeaponData(targetid, slot, weapon, ammo);
				if(weapon != weaponid || ammo < needammo) return SendClientMessage(playerid, COLOR_GREY, "У продавца закончилось оружие");
				new remain = ammo - needammo;
				if(remain > ammo) return 1;
				if(GetCash(playerid) < price) return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно денег");
				new ostat = ammo - needammo;
				GivePlayerWeaponEx(playerid, weaponid, needammo);
				SetPlayerAmmoEx(targetid, weaponid, 0);
				GivePlayerWeaponEx(targetid, weaponid, ostat);
				TransferMoney(playerid, -1, price, "Купил оружие", 1);
				TransferMoney(-1, targetid, price, "Продал оружие", 1);
				new string[100];
				SendMes(targetid, COLOR_GREEN, "Вы продали оружие %s за %i$", GetName(playerid), price);
				SendMes(playerid, COLOR_GREEN, "Вы купили оружие у %s c %i патронами. Цена: %i", GetName(targetid), ammo, price);
				format(string, sizeof(string), "продал%s оружие %s", (pInfo[playerid][pSex]==1)?(""):("а"), GetName(targetid));
				MeAction(playerid, string);
				pTemp[playerid][pSellGunWeapon] = 0;
				pTemp[playerid][pSellGunAmmo] = 0;
				pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
				pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
				pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
				pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
				pTemp[playerid][pTargetAction] = ACTION_NONE;
				return pTemp[playerid][pActionPrice] = 0;
	  		}
	  		case ACTION_SELL_CAR:
	  		{
	  		    new targetid = pTemp[playerid][pTargetPlayer], price = pTemp[playerid][pActionPrice];
	            if(!gPlayerLogged[targetid] || !IsPlayerConnected(targetid))
				{
					SendClientMessage(playerid, COLOR_GREY, "Продавец вышел из игры");
					pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetAction] = ACTION_NONE;
					return pTemp[playerid][pActionPrice] = 0;
				}
				else if(GetCash(playerid) < price)
				{
					SendMes(targetid, COLOR_GREY, "У игрока %s недостаточно денег!", GetName(playerid));
					SendClientMessage(playerid, COLOR_GREY, NoMoney);
					pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetAction] = ACTION_NONE;
					return pTemp[playerid][pActionPrice] = 0;
				}
				pInfo[playerid][cModel] = pInfo[targetid][cModel];
				pInfo[playerid][cClass] = pInfo[targetid][cClass];
				pInfo[playerid][cFuel] = pInfo[targetid][cFuel];
				pInfo[playerid][cColor][0] = pInfo[targetid][cColor][0];
				pInfo[playerid][cColor][1] = pInfo[targetid][cColor][1];
				pInfo[playerid][cCost] = pInfo[targetid][cCost];
				pInfo[playerid][cVehcom] = pInfo[targetid][cVehcom];
				sscanf(pInfo[targetid][cVehcom], "p<,>a<i>[14]",pInfo[targetid][cVehcoms]);
				pInfo[playerid][cPaintjob] = pInfo[targetid][cPaintjob];
				pInfo[targetid][cModel] = pInfo[targetid][cClass] = pInfo[targetid][cColor][0] = pInfo[targetid][cColor][1] = pInfo[targetid][cCost] = 0;
				pInfo[targetid][cFuel] = VehStats[pInfo[playerid][cModel]-400][vMaxFuel];
				format(pInfo[targetid][cVehcom],64,"0,0,0,0,0,0,0,0,0,0,0,0,0,0");
				sscanf(pInfo[targetid][cVehcom], "p<,>a<i>[14]", pInfo[targetid][cVehcoms]);
				pInfo[targetid][cPaintjob] = 3;
				foreach(new i : Player) if(pInfo[i][pVehicleKey] == pTemp[targetid][pCarPlayerID]) pInfo[i][pVehicleKey] = 0;
				if(pTemp[targetid][pCarPlayerID] != INVALID_VEHICLE_ID)
				{
					DestroyVehicle(pTemp[targetid][pCarPlayerID]);
					pTemp[targetid][pCarPlayerID] = INVALID_VEHICLE_ID;
				}
				LoadPlayerVehicle(playerid);
				SendClientMessage(targetid, COLOR_GREEN, "Поздравляем с продажей транспортного средства");
				SendClientMessage(playerid, COLOR_GREEN, "Поздравляем с приобретением транспортного средства");
				pInfo[playerid][pRegVehicle] = pInfo[targetid][pRegVehicle] = 0;
				strmid(pInfo[playerid][pNumberVehicle], "ТРАНЗИТ", 0, strlen("ТРАНЗИТ"), 64);
				strmid(pInfo[targetid][pNumberVehicle], "None", 0, strlen("None"), 64);
				SetVehicleNumberPlate(pTemp[playerid][pCarPlayerID], pInfo[playerid][pNumberVehicle]);
				mysql_query_string[0] = EOS;
				format(mysql_query_string, 200, "UPDATE "T_ACCOUNTS" SET veh_reg = %i, veh_number = '%s' WHERE id = %i", pInfo[playerid][pRegVehicle], pInfo[playerid][pNumberVehicle], pInfo[playerid][pID]);
				mysql_tquery(dbHandle, mysql_query_string, "", "");
				mysql_query_string[0] = EOS;
				format(mysql_query_string, 200, "UPDATE "T_ACCOUNTS" SET veh_reg = %i, veh_number = '%s' WHERE id = %i", pInfo[targetid][pRegVehicle], pInfo[targetid][pNumberVehicle], pInfo[targetid][pID]);
				mysql_tquery(dbHandle, mysql_query_string, "", "");
				SaveAccount(playerid);
				SaveAccount(targetid);
				TransferMoney(playerid, -1, price, "Купил транспорт у игрока", 1);
				TransferMoney(-1, targetid, price, "Продал транспорт игроку", 1);
				new string[128];
				format(string, sizeof(string), "Игрок %s купил транспорт %s[%i] за %d$ у игрока %s", GetName(playerid), VehStats[pInfo[playerid][cModel]-400][vName], pInfo[playerid][cModel], price, GetName(targetid));
				WriteLog("BuyCar", string);
				format(string, sizeof(string), "Игрок %s продал транспорт %s[%i] за %d$ игроку %s", GetName(targetid), VehStats[pInfo[playerid][cModel]-400][vName], pInfo[playerid][cModel], price, GetName(playerid));
				WriteLog("SellCar", string);
				pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
				pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
				pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
				pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
				pTemp[playerid][pTargetAction] = ACTION_NONE;
				return pTemp[playerid][pActionPrice] = 0;
	  		}
	  		case ACTION_CHANGE_CAR:
	  		{
				new targetid = pTemp[playerid][pTargetPlayer], price = pTemp[playerid][pActionPrice];
			    if(!gPlayerLogged[targetid] || !IsPlayerConnected(targetid))
				{
					SendClientMessage(playerid, COLOR_GREY, "Продавец вышел из игры");
					pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetAction] = ACTION_NONE;
					return pTemp[playerid][pActionPrice] = 0;
				}
				else if(GetCash(playerid) < price)
				{
					SendMes(targetid, COLOR_GREY, "У игрока %s недостаточно денег!", GetName(playerid));
					SendClientMessage(playerid, COLOR_GREY, NoMoney);
					pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetAction] = ACTION_NONE;
					return pTemp[playerid][pActionPrice] = 0;
				}
				SetPVarInt(playerid,"CModel",pInfo[playerid][cModel]);
				SetPVarInt(playerid,"CClass",pInfo[playerid][cClass]);
				SetPVarFloat(playerid,"CFuel",pInfo[playerid][cFuel]);
				SetPVarFloat(playerid,"CMileage",pInfo[playerid][cMileage]);
				SetPVarInt(playerid,"CColor1",pInfo[playerid][cColor][0]);
				SetPVarInt(playerid,"CColor2",pInfo[playerid][cColor][1]);
				SetPVarInt(playerid,"CCost",pInfo[playerid][cCost]);
				SetPVarString(playerid,"CVehcom",pInfo[playerid][cVehcom]);
				SetPVarInt(playerid,"cPaintjob",pInfo[playerid][cPaintjob]);
				pInfo[playerid][cModel] = pInfo[targetid][cModel];
				pInfo[playerid][cClass] = pInfo[targetid][cClass];
				pInfo[playerid][cFuel] = pInfo[targetid][cFuel];
				pInfo[playerid][cMileage] = pInfo[targetid][cMileage];
				pInfo[playerid][cColor][0] = pInfo[targetid][cColor][0];
				pInfo[playerid][cColor][1] = pInfo[targetid][cColor][1];
				pInfo[playerid][cCost] = pInfo[targetid][cCost];
				pInfo[playerid][cVehcom] = pInfo[targetid][cVehcom];
				sscanf(pInfo[playerid][cVehcom], "p<,>a<i>[14]", pInfo[playerid][cVehcoms]);
				pInfo[playerid][cPaintjob] = pInfo[targetid][cPaintjob];
				pInfo[targetid][cModel] = GetPVarInt(playerid, "CModel");
				pInfo[targetid][cClass] = GetPVarInt(playerid, "CClass");
				pInfo[targetid][cFuel] = GetPVarFloat(playerid, "CFuel");
				pInfo[targetid][cMileage] = GetPVarFloat(playerid, "cMileage");
				pInfo[targetid][cColor][0] = GetPVarInt(playerid, "CColor1");
				pInfo[targetid][cColor][1] = GetPVarInt(playerid, "CColor2");
				pInfo[targetid][cCost] = GetPVarInt(playerid, "CCost");
				pInfo[targetid][cVehcom] = GetPVarInt(playerid, "CVehcom");
				sscanf(pInfo[targetid][cVehcom], "p<,>a<i>[14]",pInfo[targetid][cVehcoms]);
				pInfo[targetid][cPaintjob] = GetPVarInt(playerid, "cPaintjob");
				LoadPlayerVehicle(playerid);
				LoadPlayerVehicle(targetid);
				SendMes(playerid, COLOR_GREEN, "Вы обменялись т/с с %s. Ваша доплата: %i$", GetName(targetid), price);
				SendMes(targetid, COLOR_GREEN, "%s обменялся т/с с Вами. Доплата игрока: %i$", GetName(playerid), price);
				SaveAccount(playerid);
				SaveAccount(targetid);
				TransferMoney(playerid, -1, price, "Доплата за обмен ТС", 1);
				TransferMoney(-1, targetid, price, "Доплата за обмен ТС", 1);
				pInfo[playerid][pRegVehicle] = pInfo[targetid][pRegVehicle] = 0;
				strmid(pInfo[playerid][pNumberVehicle], "ТРАНЗИТ", 0, strlen("ТРАНЗИТ"), 64);
				strmid(pInfo[targetid][pNumberVehicle], "None", 0, strlen("None"), 64);
				SetVehicleNumberPlate(pTemp[playerid][pCarPlayerID], pInfo[playerid][pNumberVehicle]);
				SetVehicleNumberPlate(pTemp[targetid][pCarPlayerID], pInfo[targetid][pNumberVehicle]);
				mysql_query_string[0] = EOS;
				format(mysql_query_string, 200, "UPDATE "T_ACCOUNTS" SET veh_reg = %i, veh_number = '%s' WHERE id = %i", pInfo[playerid][pRegVehicle], pInfo[playerid][pNumberVehicle], pInfo[playerid][pID]);
				mysql_tquery(dbHandle, mysql_query_string, "", "");
				mysql_query_string[0] = EOS;
				format(mysql_query_string, 200, "UPDATE "T_ACCOUNTS" SET veh_reg = %i, veh_number = '%s' WHERE id = %i", pInfo[targetid][pRegVehicle], pInfo[targetid][pNumberVehicle], pInfo[targetid][pID]);
				mysql_tquery(dbHandle, mysql_query_string, "", "");
				pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
				pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
				pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
				pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
				pTemp[playerid][pTargetAction] = ACTION_NONE;
				return pTemp[playerid][pActionPrice] = 0;
			}
			case ACTION_SELL_HOUSE:
			{
			    new targetid = pTemp[playerid][pTargetPlayer], price = pTemp[playerid][pActionPrice];
			    if(!gPlayerLogged[targetid] || !IsPlayerConnected(targetid))
				{
					SendClientMessage(playerid, COLOR_GREY, "Продавец вышел из игры");
					pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetAction] = ACTION_NONE;
					return pTemp[playerid][pActionPrice] = 0;
				}
				else if(GetCash(playerid) < price)
				{
					SendMes(targetid, COLOR_GREY, "У игрока %s недостаточно денег!", GetName(playerid));
					SendClientMessage(playerid, COLOR_GREY, NoMoney);
					pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetAction] = ACTION_NONE;
					return pTemp[playerid][pActionPrice] = 0;
				}
				TransferMoney(playerid, -1, price, "Купил дом у игрока", 1);
				TransferMoney(-1, targetid, price, "Продал дом игроку", 1);
				pInfo[playerid][pHouse] = pInfo[targetid][pHouse];
				pInfo[targetid][pHouse] = 0;
				new idx = pInfo[playerid][pHouse];
				mysql_query_string[0] = EOS;
				format(mysql_query_string, sizeof(mysql_query_string), "UPDATE "T_HOUSE" SET hOwner = '%s', hLock = 1 WHERE id = %d LIMIT 1", GetName(playerid), idx);
				mysql_tquery(dbHandle, mysql_query_string, "", "");
				strmid(HouseInfo[idx][hOwner], GetName(playerid), 0, strlen(GetName(playerid)), MAX_PLAYER_NAME);
				HouseInfo[idx][hLock] = 1;
				new subsidia = floatround(HouseInfo[idx][hPrice] * 0.005);
				new string[128];
				format(string, sizeof(string), "Вы продали свой дом игроку %s за %i$", GetName(playerid), price);
				SendClientMessage(targetid, COLOR_RED, string);
				format(string, sizeof(string), "Вы приобрели дом №%i за %i$ у %s", idx, price, GetName(targetid));
				SendClientMessage(playerid, COLOR_GREEN, string);
				format(string, sizeof(string), "[Информация] {FFFFFF}Квартплата проплачена на %i %s, рекомендуем вам пополнить счет", BizInfo[idx][bDays], (HouseInfo[idx][hDays]==1)?("день"):(HouseInfo[idx][hDays]<5)?("дня"):("дней"));
				SendClientMessage(playerid, COLOR_YELLOW, string);
	            format(string, sizeof(string), "[Информация] {FFFFFF}Стоимость кварплаты для вашего дома будет составлять %d$ в сутки",subsidia);
				SendClientMessage(playerid, COLOR_YELLOW, string);
				pInfo[playerid][pSpawnChange] = pInfo[targetid][pSpawnChange] = 0;
				SendClientMessage(playerid, COLOR_GREEN, "[Подсказка] {FFFFFF}Местом спавна автоматически назначен вокзал. Изменить место спавна {AFAFAF}/setspawn");
				SendClientMessage(targetid, COLOR_GREEN, "[Подсказка] {FFFFFF}Местом спавна автоматически назначен вокзал. Изменить место спавна {AFAFAF}/setspawn");
                if(pTemp[targetid][pCarPlayerID] != INVALID_VEHICLE_ID)
				{
					DestroyVehicle(pTemp[targetid][pCarPlayerID]);
					pTemp[targetid][pCarPlayerID] = INVALID_VEHICLE_ID;
				}
				LoadPlayerVehicle(playerid);
				pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
				pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
				pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
				pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
				pTemp[playerid][pTargetAction] = ACTION_NONE;
				return pTemp[playerid][pActionPrice] = 0;
			}
			case ACTION_CHANGE_HOUSE:
			{
			    new targetid = pTemp[playerid][pTargetPlayer], price = pTemp[playerid][pActionPrice];
			    if(!gPlayerLogged[targetid] || !IsPlayerConnected(targetid))
				{
					SendClientMessage(playerid, COLOR_GREY, "Продавец вышел из игры");
					pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetAction] = ACTION_NONE;
					return pTemp[playerid][pActionPrice] = 0;
				}
				else if(GetCash(playerid) < price)
				{
					SendMes(targetid, COLOR_GREY, "У игрока %s недостаточно денег!", GetName(playerid));
					SendClientMessage(playerid, COLOR_GREY, NoMoney);
					pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetAction] = ACTION_NONE;
					return pTemp[playerid][pActionPrice] = 0;
				}
				TransferMoney(playerid, -1, price, "Доплата за обмен домами", 1);
				TransferMoney(-1, targetid, price, "Доплата за обмен домами", 1);
				new idx = pInfo[playerid][pHouse];
				new idx2 = pInfo[targetid][pHouse];
				pInfo[playerid][pHouse] = idx2;
				pInfo[targetid][pHouse] = idx;
				mysql_query_string[0] = EOS;
				format(mysql_query_string, sizeof(mysql_query_string), "UPDATE "T_HOUSE" SET hOwner = '%s', hLock = 1 WHERE id = %d LIMIT 1", GetName(playerid), idx2);
				mysql_tquery(dbHandle, mysql_query_string, "", "");
				mysql_query_string[0] = EOS;
				format(mysql_query_string, sizeof(mysql_query_string), "UPDATE "T_HOUSE" SET hOwner = '%s', hLock = 1 WHERE id = %d LIMIT 1", GetName(targetid), idx);
				mysql_tquery(dbHandle, mysql_query_string, "", "");
				strmid(HouseInfo[idx2][hOwner], GetName(playerid), 0, strlen(GetName(playerid)), MAX_PLAYER_NAME);
				strmid(HouseInfo[idx][hOwner], GetName(targetid), 0, strlen(GetName(targetid)), MAX_PLAYER_NAME);
				HouseInfo[idx2][hLock] = 1;
				HouseInfo[idx][hLock] = 1;
				new subsidia = floatround(HouseInfo[idx2][hPrice] * 0.005);
				new subsidia2 = floatround(HouseInfo[idx][hPrice] * 0.005);
				new string[128];
				format(string, sizeof(string), "Вы обменяли свой дом №%i на дом №%i игрока %s с доплатой %i$", idx, idx2, GetName(targetid), price);
				SendClientMessage(playerid, COLOR_GREEN, string);
				format(string, sizeof(string), "[Информация] {FFFFFF}Квартплата проплачена на %i %s, рекомендуем вам пополнить счет", BizInfo[idx2][bDays], (HouseInfo[idx2][hDays]==1)?("день"):(HouseInfo[idx2][hDays]<5)?("дня"):("дней"));
				SendClientMessage(playerid, COLOR_YELLOW, string);
	            format(string, sizeof(string), "[Информация] {FFFFFF}Стоимость кварплаты для вашего дома будет составлять %d$ в сутки", subsidia);
				SendClientMessage(playerid, COLOR_YELLOW, string);
				format(string, sizeof(string), "Вы обменяли свой дом №%i на дом №%i игрока %s с доплатой %i$", idx2, idx, GetName(playerid), price);
				SendClientMessage(targetid, COLOR_GREEN, string);
				format(string, sizeof(string), "[Информация] {FFFFFF}Квартплата проплачена на %i %s, рекомендуем вам пополнить счет", BizInfo[idx][bDays], (HouseInfo[idx][hDays]==1)?("день"):(HouseInfo[idx][hDays]<5)?("дня"):("дней"));
				SendClientMessage(targetid, COLOR_YELLOW, string);
	            format(string, sizeof(string), "[Информация] {FFFFFF}Стоимость кварплаты для вашего дома будет составлять %d$ в сутки", subsidia2);
				SendClientMessage(targetid, COLOR_YELLOW, string);
				pInfo[playerid][pSpawnChange] = pInfo[targetid][pSpawnChange] = 0;
				SendClientMessage(playerid, COLOR_GREEN, "[Подсказка] {FFFFFF}Местом спавна автоматически назначен вокзал. Изменить место спавна {AFAFAF}/setspawn");
				SendClientMessage(targetid, COLOR_GREEN, "[Подсказка] {FFFFFF}Местом спавна автоматически назначен вокзал. Изменить место спавна {AFAFAF}/setspawn");
                LoadPlayerVehicle(targetid);
				LoadPlayerVehicle(playerid);
				pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
				pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
				pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
				pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
				pTemp[playerid][pTargetAction] = ACTION_NONE;
				return pTemp[playerid][pActionPrice] = 0;
			}
			case ACTION_SELL_BIZ:
			{
			    new targetid = pTemp[playerid][pTargetPlayer], price = pTemp[playerid][pActionPrice];
			    if(!gPlayerLogged[targetid] || !IsPlayerConnected(targetid))
				{
					SendClientMessage(playerid, COLOR_GREY, "Продавец вышел из игры");
					pTemp[playerid][pSellBizID] = 0;
					pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetAction] = ACTION_NONE;
					return pTemp[playerid][pActionPrice] = 0;
				}
				else if(GetCash(playerid) < price)
				{
					SendMes(targetid, COLOR_GREY, "У игрока %s недостаточно денег!", GetName(playerid));
					SendClientMessage(playerid, COLOR_GREY, NoMoney);
					pTemp[playerid][pSellBizID] = 0;
					pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetAction] = ACTION_NONE;
					return pTemp[playerid][pActionPrice] = 0;
				}
				TransferMoney(playerid, -1, price, "Купил бизнес у игрока", 1);
				TransferMoney(-1, targetid, price, "Продал бизнес игроку", 1);
				pInfo[playerid][pBiz] = pInfo[targetid][pBiz];
				pInfo[targetid][pBiz] = 0;
				new idx = pInfo[playerid][pBiz];
				mysql_query_string[0] = EOS;
				format(mysql_query_string, sizeof(mysql_query_string), "UPDATE "T_BIZ" SET owner = '%s' WHERE id = %d LIMIT 1", GetName(playerid), idx);
				mysql_tquery(dbHandle, mysql_query_string, "", "");
				strmid(BizInfo[idx][bOwner], GetName(playerid), 0, strlen(GetName(playerid)), MAX_PLAYER_NAME);
				UpdateBizStats(idx);
				new string[128];
				format(string, sizeof(string), "Вы продали свой бизнес игроку %s за %i$", GetName(playerid), price);
				SendClientMessage(targetid, COLOR_RED, string);
				format(string, sizeof(string), "Вы приобрели бизнес %s (%i) за %i$ у %s", BizInfo[idx][bName], idx, price, GetName(targetid));
				SendClientMessage(playerid, COLOR_GREEN, string);
				format(string, sizeof(string), "[Информация] {FFFFFF}Аренда бизнеса оплачена на %i %s, не забывайте регулярно продлевать её", BizInfo[idx][bDays], (BizInfo[idx][bDays]==1)?("день"):(BizInfo[idx][bDays]<5)?("дня"):("дней"));
				SendClientMessage(playerid, COLOR_YELLOW, string);
	            format(string, sizeof(string), "[Информация] {FFFFFF}Приобретите лицензию на ваш бизнес, если в течении 12 часов этого не будет, он будет продан государству");
				SendClientMessage(playerid, COLOR_YELLOW, string);
			    pTemp[playerid][pSellBizID] = 0;
				pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
				pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
				pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
				pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
				pTemp[playerid][pTargetAction] = ACTION_NONE;
				return pTemp[playerid][pActionPrice] = 0;
			}
			case ACTION_CHANGE_BIZ:
			{
			    new targetid = pTemp[playerid][pTargetPlayer], price = pTemp[playerid][pActionPrice];
			    if(!gPlayerLogged[targetid] || !IsPlayerConnected(targetid))
				{
					SendClientMessage(playerid, COLOR_GREY, "Продавец вышел из игры");
					pTemp[targetid][pChangeBizID] = 0;
					pTemp[playerid][pChangeBizID2] = 0;
					pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetAction] = ACTION_NONE;
					return pTemp[playerid][pActionPrice] = 0;
				}
				else if(GetCash(playerid) < price)
				{
					SendMes(targetid, COLOR_GREY, "У игрока %s недостаточно денег!", GetName(playerid));
					SendClientMessage(playerid, COLOR_GREY, NoMoney);
					pTemp[targetid][pChangeBizID] = 0;
					pTemp[playerid][pChangeBizID2] = 0;
					pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetAction] = ACTION_NONE;
					return pTemp[playerid][pActionPrice] = 0;
				}
				TransferMoney(playerid, -1, price, "Доплата за обмен бизнесами", 1);
				TransferMoney(-1, targetid, price, "Доплата за обмен бизнесами", 1);
				new idx = pInfo[playerid][pBiz];
				new idx2 = pInfo[targetid][pBiz];
				pInfo[playerid][pBiz] = idx2;
				pInfo[targetid][pBiz] = idx;
				mysql_query_string[0] = EOS;
				format(mysql_query_string, sizeof(mysql_query_string), "UPDATE "T_BIZ" SET owner = '%s' WHERE id = %d LIMIT 1", GetName(playerid), idx2);
				mysql_tquery(dbHandle, mysql_query_string, "", "");
				mysql_query_string[0] = EOS;
				format(mysql_query_string, sizeof(mysql_query_string), "UPDATE "T_BIZ" SET owner = '%s' WHERE id = %d LIMIT 1", GetName(targetid), idx);
				mysql_tquery(dbHandle, mysql_query_string, "", "");
				strmid(BizInfo[idx2][bOwner], GetName(playerid), 0, strlen(GetName(playerid)), MAX_PLAYER_NAME);
				strmid(BizInfo[idx][bOwner], GetName(targetid), 0, strlen(GetName(targetid)), MAX_PLAYER_NAME);
				UpdateBizStats(idx2);
				UpdateBizStats(idx);
				new string[128];
				format(string, sizeof(string), "Вы обменяли свой бизнес %s (%i) на бизнес %s (%i) игрока %s с доплатой %i$", BizInfo[idx][bName], idx, BizInfo[idx2][bName], idx2, GetName(targetid), price);
				SendClientMessage(playerid, COLOR_RED, string);
				format(string, sizeof(string), "[Информация] {FFFFFF}Аренда бизнеса оплачена на %i %s, не забывайте регулярно продлевать её", BizInfo[idx2][bDays], (BizInfo[idx2][bDays]==1)?("день"):(BizInfo[idx2][bDays]<5)?("дня"):("дней"));
				SendClientMessage(playerid, COLOR_YELLOW, string);
	            format(string, sizeof(string), "[Информация] {FFFFFF}Приобретите лицензию на ваш бизнес, если в течении 12 часов этого не будет, он будет продан государству");
				SendClientMessage(playerid, COLOR_YELLOW, string);
				format(string, sizeof(string), "Вы обменяли свой бизнес %s (%i) на бизнес %s (%i) игрока %s с доплатой %i$", BizInfo[idx2][bName], idx2, BizInfo[idx][bName], idx, GetName(playerid), price);
				SendClientMessage(targetid, COLOR_RED, string);
				format(string, sizeof(string), "[Информация] {FFFFFF}Аренда бизнеса оплачена на %i %s, не забывайте регулярно продлевать её", BizInfo[idx][bDays], (BizInfo[idx][bDays]==1)?("день"):(BizInfo[idx][bDays]<5)?("дня"):("дней"));
				SendClientMessage(targetid, COLOR_YELLOW, string);
	            format(string, sizeof(string), "[Информация] {FFFFFF}Приобретите лицензию на ваш бизнес, если в течении 12 часов этого не будет, он будет продан государству");
				SendClientMessage(targetid, COLOR_YELLOW, string);
				pTemp[targetid][pChangeBizID] = 0;
				pTemp[playerid][pChangeBizID2] = 0;
				pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
				pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
				pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
				pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
				pTemp[playerid][pTargetAction] = ACTION_NONE;
				return pTemp[playerid][pActionPrice] = 0;
			}
			case ACTION_TICKET:
			{
	  		    new targetid = pTemp[playerid][pTargetPlayer], price = pTemp[playerid][pActionPrice];
	            if(!gPlayerLogged[targetid] || !IsPlayerConnected(targetid))
				{
					SendClientMessage(playerid, COLOR_GREY, "Тот, кто предлагал Вам оплатить штраф вышел из игры");
					pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetAction] = ACTION_NONE;
					return pTemp[playerid][pActionPrice] = 0;
				}
				else if(GetCash(playerid) < price)
				{
					SendMes(targetid, COLOR_GREY, "У игрока %s недостаточно денег!", GetName(playerid));
					SendClientMessage(playerid, COLOR_GREY, NoMoney);
					pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetAction] = ACTION_NONE;
					return pTemp[playerid][pActionPrice] = 0;
				}
				TransferMoney(playerid, -1, price, "Оплата штрафа офицеру", 1);
				SendMes(playerid, COLOR_GREEN, "Вы оплатили штраф на %i$ офицеру %s", price, GetName(targetid));
				SendMes(targetid, COLOR_GREEN, "%s оплатил штраф в размере %i$", GetName(playerid), price);
				pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
				pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
				pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
				pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
				pTemp[playerid][pTargetAction] = ACTION_NONE;
				return pTemp[playerid][pActionPrice] = 0;
	  		}
	  		case ACTION_DICE:
	  		{
	  		    if(KostiName[playerid] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вам никто не предлагал бросить кости");
    			if(kostiKos[playerid]>0) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Сейчас вы не можете принять игру!");
    			new dice = random(5)+2;
    			new dice1 = random(5)+2;
    			if(!IsPlayerStream(6.0, playerid, KostiName[playerid])) return 1;
    			if(Predlog[playerid]!=0) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы не можете принять игру!");
    			new fiski=pInfo[playerid][pFishki];
				new fiski1=pInfo[KostiName[playerid]][pFishki];
	  		    if(fiski < KostiMoney[playerid] || fiski1 < KostiMoney[KostiName[playerid]])
				{
				    SendClientMessage(playerid,COLOR_GREY,"[Ошибка] У одного из вас не хватает фишек для игры в кости.");
				    SendClientMessage(KostiName[playerid],COLOR_GREY,"[Ошибка] У одного из вас не хватает фишек для игры в кости.");
				    cmd_cancel(playerid),cmd_cancel(KostiName[playerid]);
				    return 0;
				}
				new string[128];
		    	format(string, sizeof(string), "%s и %s бросили кости. Результат: {EAD86A}%i : %i", GetName(KostiName[playerid]), GetName(playerid), dice, dice1);
		    	SendStreamMessage(13.0, playerid, string, COLOR_PURPLE);
			    if(dice > dice1)
			    {
			        fiski1+=KostiMoney[playerid];
			        fiski-=KostiMoney[playerid];
			        pInfo[KostiName[playerid]][pFishki] = fiski1;
		        	pInfo[playerid][pFishki] = fiski;
		        	MysqlUpdatePlayerInt(KostiName[playerid], "fishki", pInfo[KostiName[playerid]][pFishki]);
		        	MysqlUpdatePlayerInt(playerid, "fishki", pInfo[playerid][pFishki]);
		        	format(string,sizeof(string),"%s выиграл %d фишек у %s", GetName(KostiName[playerid]), KostiMoney[playerid], GetName(playerid));
		        	WriteLog("Fishki",string);
		        	format(string,sizeof(string),"%s проиграл %d фишек %s", GetName(playerid), KostiMoney[playerid], GetName(KostiName[playerid]));
		        	WriteLog("Fishki",string);
			        SendClientMessage(KostiName[playerid], COLOR_GREEN, "Поздравляем! Вы выиграли!");
			        SendClientMessage(playerid, COLOR_RED, "К сожалению, Вы проиграли!");
			        format(string, 20, "~g~+%d$", KostiMoney[playerid]);
			        GameTextForPlayer(KostiName[playerid], string, 3000, 1);
			        format(string, 20, "~r~-%d$", KostiMoney[playerid]);
			        GameTextForPlayer(playerid, string, 3000, 1);
			    }
			    else if(dice < dice1)
			    {
			        fiski1-=KostiMoney[playerid];
			        fiski+=KostiMoney[playerid];
			        pInfo[KostiName[playerid]][pFishki] = fiski1;
		        	pInfo[playerid][pFishki] = fiski;
		        	MysqlUpdatePlayerInt(KostiName[playerid], "fishki", pInfo[KostiName[playerid]][pFishki]);
		        	MysqlUpdatePlayerInt(playerid, "fishki", pInfo[playerid][pFishki]);
		        	format(string,sizeof(string),"%s выиграл %d фишек у %s", GetName(playerid), KostiMoney[playerid], GetName(KostiName[playerid]));
		        	WriteLog("Fishki",string);
		        	format(string,sizeof(string),"%s проиграл %d фишек %s", GetName(KostiName[playerid]), KostiMoney[playerid], GetName(playerid));
		        	WriteLog("Fishki",string);
			        SendClientMessage(playerid, COLOR_GREEN, "Поздравляем! Вы выиграли!");
			        SendClientMessage(KostiName[playerid], COLOR_RED, "К сожалению, Вы проиграли!");
			        format(string, 20, "~g~+%d$", KostiMoney[playerid]);
			        GameTextForPlayer(playerid, string, 3000, 1);
			        format(string, 20, "~r~-%d$", KostiMoney[playerid]);
			        GameTextForPlayer(KostiName[playerid], string, 3000, 1);
			    }
			    else if(dice == dice1)
			    {
			        SendClientMessage(playerid, COLOR_ORANGE, "Игра закончилась в ничью!");
			        SendClientMessage(KostiName[playerid], COLOR_ORANGE, "Игра закончилась в ничью!");
			    }
			    switch(dice1)
				{
				    case 1: SetPlayerAttachedObject(playerid, 7, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 90.0000, 0.0000);//+
				    case 2: SetPlayerAttachedObject(playerid, 7, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 180.0000, 0.0000);//+
				    case 3: SetPlayerAttachedObject(playerid, 7, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 360.0000, 90.0000);//+
				    case 4: SetPlayerAttachedObject(playerid, 7, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 360.0000, 270.0000);
				    case 5: SetPlayerAttachedObject(playerid, 7, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 360.0000, 0.0000); //+
				    case 6: SetPlayerAttachedObject(playerid, 7, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 270.0000, 0.0000); //+
				    default: SendClientMessage(playerid,COLOR_RED,"Произошла ошибка. Напишите о ней на форум!");
				}
				switch(dice)
				{
			     	case 1: SetPlayerAttachedObject(KostiName[playerid], 7, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 90.0000, 0.0000);//+
				    case 2: SetPlayerAttachedObject(KostiName[playerid], 7, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 180.0000, 0.0000);//+
				    case 3: SetPlayerAttachedObject(KostiName[playerid], 7, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 360.0000, 90.0000);//+
				    case 4: SetPlayerAttachedObject(KostiName[playerid], 7, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 360.0000, 270.0000);
				    case 5: SetPlayerAttachedObject(KostiName[playerid], 7, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 360.0000, 0.0000); //+
				    case 6: SetPlayerAttachedObject(KostiName[playerid], 7, 1851, 1, 0.062400, 0.453750, 0.000000, 360.0000, 270.0000, 0.0000); //+
				    default: SendClientMessage(KostiName[playerid],COLOR_RED,"Произошла ошибка. Напишите о ней на форум!");
				}
				kostiKos[KostiName[playerid]] = 5;
			    kostiKos[playerid] = 5;
				format(string, 14, "Выпало: %i", dice1);
				SetPlayerChatBubble(playerid,string,COLOR_RED,30.0,10000);
				format(string, 14, "Выпало: %i", dice);
				SetPlayerChatBubble(KostiName[playerid],string,COLOR_GREEN,30.0,10000);
			 	ZapretDice[playerid] = 0;
				ZapretDice[KostiName[playerid]] = 0;
				KostiMoney[playerid] = 0;
				KostiMoney[KostiName[playerid]] = 0;
				Predlog[KostiName[playerid]] = 0;
				KostiName[KostiName[playerid]] = INVALID_PLAYER_ID;
				KostiName[playerid] = INVALID_PLAYER_ID;
				return pTemp[playerid][pTargetAction] = ACTION_NONE;
			}
			case ACTION_SELL_SIM:
			{
				new targetid = pTemp[playerid][pTargetPlayer], price = pTemp[playerid][pActionPrice];
				if(!gPlayerLogged[targetid] || !IsPlayerConnected(targetid))
				{
					SendClientMessage(playerid, COLOR_GREY, "Продавец вышел из игры");
					pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetAction] = ACTION_NONE;
					return pTemp[playerid][pActionPrice] = 0;
				}
				else if(GetCash(playerid) < price)
				{
					SendMes(targetid, COLOR_GREY, "У игрока %s недостаточно денег!", GetName(playerid));
					pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetAction] = ACTION_NONE;
					return pTemp[playerid][pActionPrice] = 0;
				}
				TransferMoney(-1, targetid, price, "Продал сим-карту", 1);
				TransferMoney(playerid, -1, price, "Купил сим-карту", 1);
				SendMes(playerid, COLOR_GREEN, "Вы приобрели SIM-карту у %s за %i$", GetName(targetid), price);
				SendMes(targetid, COLOR_GREEN, "%s купил у Вас SIM-карту за %i$", GetName(playerid), price);
				pInfo[playerid][pPhoneNumber] = pInfo[targetid][pPhoneNumber];
				pInfo[targetid][pPhoneNumber] = 1;
				MysqlUpdatePlayerInt(playerid, "phonenumber", pInfo[playerid][pPhoneNumber]);
				MysqlUpdatePlayerInt(targetid, "phonenumber", pInfo[targetid][pPhoneNumber]);
				SendMes(playerid, COLOR_YELLOW, "Ваш новый номер: {FFFFFF}%i", pInfo[playerid][pPhoneNumber]);
				pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
				pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
				pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
				pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
				pTemp[playerid][pTargetAction] = ACTION_NONE;
				return pTemp[playerid][pActionPrice] = 0;
			}
			case ACTION_SELL_LIC:
			{
			    new targetid = pTemp[playerid][pTargetPlayer], rcv = pTemp[playerid][pSellLicType], price = pTemp[playerid][pActionPrice];
	            if(!gPlayerLogged[targetid] || !IsPlayerConnected(targetid))
				{
					SendClientMessage(playerid, COLOR_GREY, "Продавец вышел из игры");
					pTemp[playerid][pSellLicType] = 0;
					pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetAction] = ACTION_NONE;
					return pTemp[playerid][pActionPrice] = 0;
				}
				else if(GetCash(playerid) < price)
				{
					SendMes(targetid, COLOR_GREY, "У игрока %s недостаточно денег!", GetName(playerid));
					SendClientMessage(playerid, COLOR_GREY, NoMoney);
					pTemp[playerid][pSellLicType] = 0;
					pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetAction] = ACTION_NONE;
					return pTemp[playerid][pActionPrice] = 0;
				}
				new Float:x, Float:y, Float:z;
				GetPlayerPos(targetid, x, y, z);
				if(!IsPlayerInRangeOfPoint(playerid, 10.0, x, y, z))
				{
					SendClientMessage(playerid, COLOR_GREY, "Вы далеко друг от друга");
					pTemp[playerid][pSellLicType] = 0;
					pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
					pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
					pTemp[playerid][pTargetAction] = ACTION_NONE;
					return pTemp[playerid][pActionPrice] = 0;
				}
				if(pInfo[playerid][pFineAmount] > 0) return SendClientMessage(targetid, COLOR_GREY, "Этот игрок ещё не оплатил все штрафы за превышения скорости!");
				new type[28];
				switch(rcv)
				{
					case 1:
					{
						GiveLicCar(playerid);
						type = "водительские права";
					}
					case 2:
					{
						GiveLicWater(playerid);
						type = "лицензию на судоходство";
					}
					case 3:
					{
						GiveLicPlane(playerid);
						type = "лицензию на полеты";
					}
					case 4:
					{
						GiveLicWeapon(playerid);
						type = "лицензию на оружие";
					}
					case 5:
					{
						new i = pInfo[playerid][pBiz];
						BizInfo[i][bLic] = 1;
						MysqlUpdateBizInt(i, "lic", BizInfo[i][bLic]);
						type = "лицензию на бизнес";
					}
				}
				FracBank[11] += (price/100)*15;
				if(!pInfo[targetid][pAdmin]) pInfo[targetid][pPayCheck] += (price/100)*5;
				TransferMoney(playerid, -1, price, "Купил лицензию", 1);
				SendMes(playerid, COLOR_GREEN, "Вы купили %s у %s. Цена: %i$", type, GetName(targetid), price);
				SendMes(targetid, COLOR_GREEN, "Вы продали %s игроку %s за %i$", GetName(playerid), type, price);
				SendClientMessage(targetid, COLOR_YELLOW, "Премия 5% от стоимости лицензии добавлена в зарплату");
				new string[128];
				format(string, sizeof(string), "[LIC] %s %s[%i] продал%s %s игроку %s[%i] за %i$", Fraction_Rang[pInfo[targetid][pMember]][pInfo[targetid][pRank]], GetName(targetid), targetid, (pInfo[targetid][pSex]==1)?(""):("а"), type, GetName(playerid), playerid, price);
				SendFMes(pInfo[targetid][pMember], COLOR_YELLOW, string);
				pTemp[playerid][pSellLicType] = 0;
				pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
				pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
				pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
				pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
				pTemp[playerid][pTargetAction] = ACTION_NONE;
				return pTemp[playerid][pActionPrice] = 0;
			}
			case ACTION_HI:
			{
			    new targetid = pTemp[playerid][pTargetPlayer];
			    new Float:angle, string[64];
				GetPlayerFacingAngle(targetid, angle);
				SetPlayerFacingAngle(playerid, angle + 180);
				format(string, sizeof(string), "пожал%s руку %s", (pInfo[targetid][pSex]==1)?(""):("а"), GetName(playerid));
				MeAction(targetid, string);
				if(!IsPlayerInAnyVehicle(playerid)) ApplyAnimation(playerid, "GANGS", "hndshkfa", 4.1, 0, 1, 1, 0, 0, 1);
				if(!IsPlayerInAnyVehicle(targetid)) ApplyAnimation(targetid, "GANGS", "hndshkfa", 4.1, 0, 1, 1, 0, 0, 1);
				pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
				pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
				pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
				pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
				return pTemp[playerid][pTargetAction] = ACTION_NONE;
			}
			case ACTION_SHOW_LIC:
			{
			    new targetid = pTemp[playerid][pTargetPlayer];
			    new string[100];
			    stringer[0] = EOS;
				format(string, sizeof(string), "{FFCC00}Лицензии %s", GetName(targetid));
				format(stringer, 120, "{FFFFFF}Водительские права: %s\nЛицензия на полеты: %s\nЛицензия на оружие: %s\nЛицензия на судоходство: %s",
				(!GetLicCar(targetid))?("Нет"):("Есть"),(!GetLicPlane(targetid))?("Нет"):("Есть"),(!GetLicWeapon(targetid))?("Нет"):("Есть"),(!GetLicWater(targetid))?("Нет"):("Есть"));
				ShowPlayerDialog(playerid, dNull, DIALOG_STYLE_MSGBOX, string, stringer, "Закрыть", "");
				if(pInfo[targetid][pSex] == 1) format(string, sizeof(string), "показал свои лицензии %s", GetName(playerid));
				else format(string, sizeof(string), "показала свои лицензии %s", GetName(playerid));
				MeAction(targetid, string);
				pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
				pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
				pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
				pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
				return pTemp[playerid][pTargetAction] = ACTION_NONE;
			}
			case ACTION_SHOW_PASS:
			{
			    new targetid = pTemp[playerid][pTargetPlayer];
			    new text[20] = "Не имеется", mtext[MAX_PLAYER_NAME] = "Нет";
				if(pInfo[targetid][pMarried]) format(mtext, sizeof(mtext), "%s", pInfo[targetid][pWhoMarried]);
				if(pInfo[targetid][pPhoneNumber] > 1) format(text, sizeof(text), "%i", pInfo[targetid][pPhoneNumber]);
				stringer[0] = EOS;
				format(stringer, 500, "{FFFFFF}Имя: %s\nПроживание в штате: %i\nСерия: %i\nНомер: %i\nТелефон: %s\nБрак: %s\nВоенный билет: %s\nОрганизация: %s\nДолжность: %s",
				GetName(targetid), pInfo[targetid][pLevel], PassInfo[targetid][psSeria], PassInfo[targetid][psNumber], text, mtext,
				(pInfo[targetid][pVoennik]) ? ("Имеется") : ("Не имеется"), Fraction_Name[pInfo[targetid][pMember]], Fraction_Rang[pInfo[targetid][pMember]][pInfo[targetid][pRank]]);
				ShowPlayerDialog(playerid, dNull, DIALOG_STYLE_MSGBOX, "{FFCC00}Паспорт", stringer, "Закрыть", "");
	            new string[100];
				if(pInfo[targetid][pSex] == 1) format(string, sizeof(string), "показал свой паспорт %s", GetName(playerid));
				else format(string, sizeof(string), "показалa свой паспорт %s", GetName(playerid));
				MeAction(targetid, string);
				pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
				pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
				pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
				pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
				return pTemp[playerid][pTargetAction] = ACTION_NONE;
			}
			case ACTION_SHOW_MED:
			{
			    new targetid = pTemp[playerid][pTargetPlayer];
			    new med_status[25];
				switch(PassInfo[targetid][mcState])
				{
				    case -1:
					{
						SendClientMessage(targetid, COLOR_GREY, "У вас нет мед. карты");
						SendClientMessage(playerid, COLOR_GREY, "У игрока нет мед. карты");
						pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
						pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
						pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
						pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
						return pTemp[playerid][pTargetAction] = ACTION_NONE;
					}
				   	case 0: med_status = "не определен";
				   	case 1: med_status = "психически не здоров(-а)";
				   	case 2: med_status = "наблюдаются отклонения";
				   	case 3: med_status = "полностью здоровый(-ая)";
				}
				stringer[0] = EOS;
				format(stringer, 300, "{FFFFFF}Имя: %s\nВозраст: %d\nПол: %s\nСтатус: %s\n",
				GetName(targetid), pInfo[targetid][pAge], (pInfo[targetid][pSex] == 1) ? ("Мужчина") : ("Женщина"), med_status);
				ShowPlayerDialog(playerid, dNull, DIALOG_STYLE_MSGBOX, "{FFCC00}Мед. карта", stringer, "Закрыть", "");
				new string[64];
				if(pInfo[targetid][pSex] == 1) format(string, sizeof(string), "показал свою мед. карту %s", GetName(playerid));
				else format(string, sizeof(string), "показалa свою мед. карту %s", GetName(playerid));
				MeAction(targetid, string);
				pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
				pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
				pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
				pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
				return pTemp[playerid][pTargetAction] = ACTION_NONE;
			}
			case ACTION_SHOW_SKILL:
			{
			   	new Stats_Level[8][30], targetid = pTemp[playerid][pTargetPlayer];
			    if(pInfo[targetid][pGunSkill][0] <= 10) Stats_Level[0] = "{F04245}[Очень плохо]";
			    else if(pInfo[targetid][pGunSkill][0] <= 30) Stats_Level[0] = "{F04245}[Плохо]";
			    else if(pInfo[targetid][pGunSkill][0] <= 70) Stats_Level[0] = "{63BD4E}[Нормально]";
			    else if(pInfo[targetid][pGunSkill][0] <= 90) Stats_Level[0] = "{F09945}[Хорошо]";
			    else Stats_Level[0] = "{EAD86A}[Отлично]";
			    if(pInfo[targetid][pGunSkill][1] <= 10) Stats_Level[1] = "{F04245}[Очень плохо]";
			    else if(pInfo[targetid][pGunSkill][1] <= 30) Stats_Level[1] = "{F04245}[Плохо]";
			    else if(pInfo[targetid][pGunSkill][1] <= 70) Stats_Level[1] = "{63BD4E}[Нормально]";
			    else if(pInfo[targetid][pGunSkill][1] <= 90) Stats_Level[1] = "{F09945}[Хорошо]";
			    else Stats_Level[1] = "{EAD86A}[Отлично]";
			    if(pInfo[targetid][pGunSkill][2] <= 10) Stats_Level[2] = "{F04245}[Очень плохо]";
			    else if(pInfo[targetid][pGunSkill][2] <= 30) Stats_Level[2] = "{F06245}[Плохо]";
			    else if(pInfo[targetid][pGunSkill][2] <= 70) Stats_Level[2] = "{63BD4E}[Нормально]";
			    else if(pInfo[targetid][pGunSkill][2] <= 90) Stats_Level[2] = "{F09945}[Хорошо]";
			    else Stats_Level[2] = "{EAD86A}[Отлично]";
			    if(pInfo[targetid][pGunSkill][3] <= 10) Stats_Level[3] = "{F04245}[Очень плохо]";
			    else if(pInfo[targetid][pGunSkill][3] <= 30) Stats_Level[3] = "{F04245}[Плохо]";
			    else if(pInfo[targetid][pGunSkill][3] <= 70) Stats_Level[3] = "{63BD4E}[Нормально]";
			    else if(pInfo[targetid][pGunSkill][3] <= 90) Stats_Level[3] = "{F09945}[Хорошо]";
			    else Stats_Level[3] = "{EAD86A}[Отлично]";
			    if(pInfo[targetid][pGunSkill][4] <= 10) Stats_Level[4] = "{F04245}[Очень плохо]";
			    else if(pInfo[targetid][pGunSkill][4] <= 30) Stats_Level[4] = "{F04245}[Плохо]";
			    else if(pInfo[targetid][pGunSkill][4] <= 70) Stats_Level[4] = "{63BD4E}[Нормально]";
			    else if(pInfo[targetid][pGunSkill][4] <= 90) Stats_Level[4] = "{F09945}[Хорошо]";
			    else Stats_Level[4] = "{EAD86A}[Отлично]";
			    if(pInfo[targetid][pGunSkill][5] <= 10) Stats_Level[5] = "{F04245}[Очень плохо]";
			    else if(pInfo[targetid][pGunSkill][5] <= 30) Stats_Level[5] = "{F04245}[Плохо]";
			    else if(pInfo[targetid][pGunSkill][5] <= 70) Stats_Level[5] = "{63BD4E}[Нормально]";
			    else if(pInfo[targetid][pGunSkill][5] <= 90) Stats_Level[5] = "{F09945}[Хорошо]";
			    else Stats_Level[5] = "{EAD86A}[Отлично]";
			    if(pInfo[targetid][pGunSkill][6] <= 10) Stats_Level[6] = "{F04245}[Очень плохо]";
			    else if(pInfo[targetid][pGunSkill][6] <= 30) Stats_Level[6] = "{F04245}[Плохо]";
			    else if(pInfo[targetid][pGunSkill][6] <= 70) Stats_Level[6] = "{63BD4E}[Нормально]";
			    else if(pInfo[targetid][pGunSkill][6] <= 90) Stats_Level[6] = "{F09945}[Хорошо]";
			    else Stats_Level[6] = "{EAD86A}[Отлично]";
			    if(pInfo[targetid][pGunSkill][7] <= 10) Stats_Level[7] = "{F04245}[Очень плохо]";
			    else if(pInfo[targetid][pGunSkill][7] <= 30) Stats_Level[7] = "{F04245}[Плохо]";
			    else if(pInfo[targetid][pGunSkill][7] <= 70) Stats_Level[7] = "{63BD4E}[Нормально]";
			    else if(pInfo[targetid][pGunSkill][7] <= 90) Stats_Level[7] = "{F09945}[Хорошо]";
			    else Stats_Level[7] = "{EAD86A}[Отлично]";
			    //
			    new status[50], count[40], target;
				if(pInfo[targetid][pTruckSkill] >= TRUCK_LEVEL_3) { status = "{FF9900}[Опытный работник]"; target = 0; }
				if(pInfo[targetid][pTruckSkill] >= TRUCK_LEVEL_2) { status = "{EAD86A}[Стабильный работник]"; target = TRUCK_LEVEL_3; }
				else { status = "{63BD4E}[Начинающий работник]"; target = TRUCK_LEVEL_2; }
				if(!target) format(count, sizeof(count), "%d", pInfo[targetid][pTruckSkill]);
				else format(count, sizeof(count), "%d/%d", pInfo[targetid][pTruckSkill], target);
			    //
				stringer[0] = EOS;
				format(stringer, sizeof(stringer), "\
				{3399FF}Владение оружием\n\n\
				{FFFFFF}Colt 45:\t\t%d%%\t%s\n\
				{FFFFFF}Silenced Pistol:\t%d%%\t%s\n\
				{FFFFFF}Desert Eeagle:\t\t%d%%\t%s\n\
				{FFFFFF}Shotgun:\t\t%d%%\t%s\n\
				{FFFFFF}UZI:\t\t\t%d%%\t%s\n\
				{FFFFFF}MP5:\t\t\t%d%%\t%s\n\
				{FFFFFF}AK47:\t\t\t%d%%\t%s\n\
				{FFFFFF}M4:\t\t\t%d%%\t%s\n\n\
				{3399FF}Опыт работы\n\n\
				{FFFFFF}- Дальнобойщик:\n\
				{FFFFFF}%s кг\t%s",
				pInfo[targetid][pGunSkill][6], Stats_Level[6],
				pInfo[targetid][pGunSkill][0], Stats_Level[0],
				pInfo[targetid][pGunSkill][1], Stats_Level[1],
				pInfo[targetid][pGunSkill][2], Stats_Level[2],
				pInfo[targetid][pGunSkill][7], Stats_Level[7],
				pInfo[targetid][pGunSkill][3], Stats_Level[3],
				pInfo[targetid][pGunSkill][4], Stats_Level[4],
				pInfo[targetid][pGunSkill][5], Stats_Level[5],
				count, status);
				ShowPlayerDialog(playerid, dNull, DIALOG_STYLE_MSGBOX, "{FFCC00}Навыки игрока", stringer, "Закрыть", "");
	            new string[56];
				if(pInfo[targetid][pSex] == 1) format(string, sizeof(string), "показал свои навыки %s", GetName(playerid));
				else format(string, sizeof(string), "показалa свои навыки %s", GetName(playerid));
				MeAction(targetid, string);
	            pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
				pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
				pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
				pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
				return pTemp[playerid][pTargetAction] = ACTION_NONE;
			}
		}
		return 1;
	}
	if(newkeys & KEY_NO) // N
	{
	    if(pTemp[playerid][pTargetAction] == ACTION_DICE)
		{
		    SendClientMessage(playerid, COLOR_RED, "Вы отказались от предложения");
			SendClientMessage(KostiName[playerid], COLOR_RED, "Игрок отказался от предложения");
			pTemp[playerid][pTargetAction] = ACTION_NONE;
		    if(KostiName[playerid] != INVALID_PLAYER_ID) return 1;
			Predlog[KostiName[playerid]] = 0;
			KostiMoney[playerid] = 0;
			ZapretDice[playerid] = 0;
			ZapretDice[KostiName[playerid]] = 0;
			KostiName[KostiName[playerid]] = INVALID_PLAYER_ID;
			KostiName[playerid] = INVALID_PLAYER_ID;
		}
		else if((pTemp[playerid][pTargetAction] >= ACTION_HOSPITAL && pTemp[playerid][pTargetAction] <= ACTION_TICKET)
		&& (pTemp[playerid][pTargetAction] >= ACTION_SELL_SIM && pTemp[playerid][pTargetAction] <= ACTION_SHOW_SKILL))
		{
		    new targetid = pTemp[playerid][pTargetPlayer];
		    SendClientMessage(playerid, COLOR_RED, "Вы отказались от предложения");
			SendClientMessage(targetid, COLOR_RED, "Игрок отказался от предложения");
			pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
			pTemp[playerid][pTargetPlayer] = INVALID_PLAYER_ID;
			pTemp[playerid][pTargetAction] = ACTION_NONE;
		}
		return 1;
	}
	if(!IsACop(playerid) && !IsAArmy(playerid) && !IsAMayor(playerid) && !gAdminLogged[playerid])
    {
		for(new i; i < sizeof(AreaInfo[arGreenZone]); i++)
		{
		    if(i != 25)
		    {
				if((i != 11 && i != 13) && !pTemp[playerid][pWork])
				{
			    	if(IsPlayerInDynamicArea(playerid, AreaInfo[arGreenZone][i]))
				    {
						new index = GetPlayerAnimationIndex(playerid);
						if(index >= 1136 && index <= 1138 || index == 504 || index == 505 || index == 1141)
						{
						    if(GetPlayerWeapon(playerid) != 43)
						    {
								ApplyAnimation(playerid,"PED","handscower",4.1,1,0,0,0,1000);
								SetTimerEx("@ClearAnimText",1000,0,"i",playerid);
							}
						}
				    }
		    	}
	    	}
		}
	}
	if(!IsPlayerInAnyVehicle(playerid))
	{
		if((oldkeys & 128 && newkeys & 16))
		{
			if(IsPlayerInRangeOfPoint(playerid, 4.0, 399.9479,1928.7749,1001.8036) || IsPlayerInRangeOfPoint(playerid, 2.0, 400.1577,1923.9833,1001.8036))
			{
				if(!gym_cloakroom[playerid]) return SendClientMessage(playerid, COLOR_WHITE, "Вы не переоделись!");
				if(random(3)==1)
				{
					PlayerPlaySound(playerid, (random(2)==0)?(17805):(17806), 0.0, 0.0, 0.0);
					pInfo[playerid][pSportExp]++;
					new string[20];
					if(pInfo[playerid][pSportExp] <= 1000) format(string, sizeof(string), "%d/1000", pInfo[playerid][pSportExp]);
					else if(pInfo[playerid][pSportExp] <= 3000) format(string, sizeof(string), "%d/3000", pInfo[playerid][pSportExp]);
					else if(pInfo[playerid][pSportExp] <= 6000) format(string, sizeof(string), "%d/6000", pInfo[playerid][pSportExp]);
					else format(string, sizeof(string), "%d", pInfo[playerid][pSportExp]);
					GameTextForPlayer(playerid, string, 500, 6);
					switch(pInfo[playerid][pSportExp])
					{
						case 1000:
						{
							SendClientMessage(playerid, COLOR_WHITE, "Вы выучили новый стиль боя 'Бокс' 1000 ударов, используйте /fstyle 1");
							SendClientMessage(playerid, COLOR_WHITE, "Осталось открыть 2 стиля боя, требуется еще 2000 ударов");
							pInfo[playerid][pFightStyle] = 5;
						}
						case 3000:
						{
							SendClientMessage(playerid, COLOR_WHITE, "Вы выучили новый стиль боя 'Кунг-фу' 3000 ударов, используйте /fstyle 2");
							SendClientMessage(playerid, COLOR_WHITE, "Осталось открыть 1 стиль боя, требуется еще 3000 ударов");
							pInfo[playerid][pFightStyle] = 6;
						}
						case 6000:
						{
							SendClientMessage(playerid, COLOR_WHITE, "Вы выучили новый стиль боя 'Кикбокс' 6000 ударов, используйте /fstyle 3");
							SendClientMessage(playerid, COLOR_WHITE, "Вы выучили все стили боя! Поздравляем!");
							pInfo[playerid][pFightStyle] = 7;
						}
					}
				}
			}
		}
		if(newkeys & KEY_SPRINT)
	    {
	        if(GetPVarInt(playerid, "enable_animation") == 1)
	        {
		    	ClearAnimations(playerid);
		    	SetPlayerSpecialAction(playerid, 0);
		    	ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
		    	DeletePVar(playerid,"enable_animation");
		    	TextDrawHideForPlayer(playerid, enable_animation_TD[0]);
		    	TextDrawHideForPlayer(playerid, enable_animation_TD[1]);
	   		}
	   		if(newkeys & KEY_JUMP)
	   		{
	   		    if(times[playerid])
	   		    {
	   		        times[playerid] = false;
					SetTimerEx("@AntiBH",790,false,"i",playerid);
	   		    }
	   		}
	    }
	}
    else
	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	    {
		    new vehicleid = 0, model = 0;
			if(!InShop[playerid])
			{
			    vehicleid = GetPVarInt(playerid,"VehicleEnters");
			    if(!IsAVel(vehicleid) && !IsAPlane(vehicleid))
			    {
			        if(PRESSED(KEY_SUBMISSION))
					{
						new arend_id = INVALID_PLAYER_ID;
						if(GetArendCarID(vehicleid, arend_id) != (-1))
					    {
					        new rc = GetArendCarID(vehicleid);
					        if(ArendInfo[rc][aPlayerID] != playerid) return 1;
					    }
					    if((!IsABoat(vehicleid) && !IsAPlane(vehicleid)) && VehicleInfo[vehicleid][vFuel] <= 0.0) return GameTextForPlayer(playerid, "~r~NO FUEL", 2000, 1);
					    new Float:vhealth;
						GetVehicleHealth(vehicleid, vhealth);
						if((!IsABoat(vehicleid) && !IsAPlane(vehicleid)) && vhealth <= 300.0) return SendClientMessage(playerid, COLOR_GREY, "Машина поломана, вызовите механика!");
						new engine, lights, alarm, doors, bonnet, boot, objective;
						GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
						SetVehicleParamsEx(vehicleid, (engine)?(false):(true), lights, alarm, doors, bonnet, boot, objective);
					}
			        if(!IsABoat(vehicleid))
			        {
			            if(PRESSED(KEY_ACTION))
						{
						    new engine, lights, alarm, doors, bonnet, boot, objective;
							GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
							SetVehicleParamsEx(vehicleid, engine, (lights)?(false):(true), alarm, doors, bonnet, boot, objective);
							PlayerPlaySound(playerid, 4604, 0.0, 0.0, 0.0);
						}
						if(PRESSED(KEY_ANALOG_LEFT))
						{
						    model = (GetVehicleModel(vehicleid)-400);
						    if(LightsObject[vehicleid][0]!=-1) DestroyDynamicObject(LightsObject[vehicleid][0]), LightsObject[vehicleid][0]=-1;
				            if(LightsObject[vehicleid][1]!=-1) DestroyDynamicObject(LightsObject[vehicleid][1]), LightsObject[vehicleid][1]=-1;
				            if(LightsObject[vehicleid][2]!=-1) DestroyDynamicObject(LightsObject[vehicleid][2]), LightsObject[vehicleid][2]=-1;
				            if(LightsObject[vehicleid][3]!=-1) DestroyDynamicObject(LightsObject[vehicleid][3]), LightsObject[vehicleid][3]=-1;
						    if(Signal[vehicleid] == 1)
				            {
				                SignalTick[vehicleid][0] = 0;
				                SignalTick[vehicleid][1] = -1;
				                Signal[vehicleid] = 0;
						    }
						    else
						    {
						        // Сюда пихать ТД с поворотника, с обновлением на таймерах.
						        LightsObject[vehicleid][0] = CreateDynamicObject(19294, 0, 0, 0, 0, 0, 0);
				                LightsObject[vehicleid][1] = CreateDynamicObject(19294, 0, 0, 0, 0, 0, 0);
				                AttachDynamicObjectToVehicle(LightsObject[vehicleid][0], vehicleid, -LightsPos[model][0], LightsPos[model][1], LightsPos[model][2], 0, 0, 0);
				                AttachDynamicObjectToVehicle(LightsObject[vehicleid][1], vehicleid, -LightsPos[model][3], LightsPos[model][4], LightsPos[model][5], 0, 0, 0);
						        GetVehicleZAngle(vehicleid, SignalAngle[vehicleid]);
						        SignalTick[vehicleid][0] = 0;
						        SignalTick[vehicleid][1] = -1;
						    	Signal[vehicleid] = 1;
						    	SetPlayerChatBubble(playerid, (pInfo[playerid][pSex]==1)?("включил левый поворотник"):("включила левый поворотник"), COLOR_PURPLE, 13.0, 10000);
						    }
						}
						if(PRESSED(KEY_ANALOG_RIGHT))
						{
						    model = (GetVehicleModel(vehicleid)-400);
						    if(LightsObject[vehicleid][0]!=-1) DestroyDynamicObject(LightsObject[vehicleid][0]), LightsObject[vehicleid][0]=-1;
				            if(LightsObject[vehicleid][1]!=-1) DestroyDynamicObject(LightsObject[vehicleid][1]), LightsObject[vehicleid][1]=-1;
				            if(LightsObject[vehicleid][2]!=-1) DestroyDynamicObject(LightsObject[vehicleid][2]), LightsObject[vehicleid][2]=-1;
				            if(LightsObject[vehicleid][3]!=-1) DestroyDynamicObject(LightsObject[vehicleid][3]), LightsObject[vehicleid][3]=-1;
						    if(Signal[vehicleid] == 2)
				            {
				                SignalTick[vehicleid][0] = 0;
				                SignalTick[vehicleid][1] = -1;
				                Signal[vehicleid] = 0;
						    }
						    else
						    {
								LightsObject[vehicleid][0] = CreateDynamicObject(19294, 0, 0, 0, 0, 0, 0);
				                LightsObject[vehicleid][1] = CreateDynamicObject(19294, 0, 0, 0, 0, 0, 0);
				                AttachDynamicObjectToVehicle(LightsObject[vehicleid][0], vehicleid, LightsPos[model][0], LightsPos[model][1], LightsPos[model][2], 0, 0, 0);
				                AttachDynamicObjectToVehicle(LightsObject[vehicleid][1], vehicleid, LightsPos[model][3], LightsPos[model][4], LightsPos[model][5], 0, 0, 0);
						        GetVehicleZAngle(vehicleid, SignalAngle[vehicleid]);
						        SignalTick[vehicleid][0] = 0;
						        SignalTick[vehicleid][1] = -1;
						    	Signal[vehicleid] = 2;
						    	SetPlayerChatBubble(playerid, (pInfo[playerid][pSex]==1)?("включил правый поворотник"):("включила правый поворотник"), COLOR_PURPLE, 13.0, 10000);
						    }
						}
						if(PRESSED(KEY_ANALOG_UP))
						{
						    model = (GetVehicleModel(vehicleid)-400);
						    if(LightsObject[vehicleid][0]!=-1) DestroyDynamicObject(LightsObject[vehicleid][0]), LightsObject[vehicleid][0]=-1;
				            if(LightsObject[vehicleid][1]!=-1) DestroyDynamicObject(LightsObject[vehicleid][1]), LightsObject[vehicleid][1]=-1;
				            if(LightsObject[vehicleid][2]!=-1) DestroyDynamicObject(LightsObject[vehicleid][2]), LightsObject[vehicleid][2]=-1;
				            if(LightsObject[vehicleid][3]!=-1) DestroyDynamicObject(LightsObject[vehicleid][3]), LightsObject[vehicleid][3]=-1;
						    if(Signal[vehicleid] == 3)
				            {
				                Signal[vehicleid] = 0;
						    }
						    else
						    {
								LightsObject[vehicleid][0] = CreateDynamicObject(19294, 0, 0, 0, 0, 0, 0);
				                LightsObject[vehicleid][1] = CreateDynamicObject(19294, 0, 0, 0, 0, 0, 0);
				                LightsObject[vehicleid][2] = CreateDynamicObject(19294, 0, 0, 0, 0, 0, 0);
				                LightsObject[vehicleid][3] = CreateDynamicObject(19294, 0, 0, 0, 0, 0, 0);
				                AttachDynamicObjectToVehicle(LightsObject[vehicleid][0], vehicleid, LightsPos[model][0], LightsPos[model][1], LightsPos[model][2], 0, 0, 0);
				                AttachDynamicObjectToVehicle(LightsObject[vehicleid][1], vehicleid, LightsPos[model][3], LightsPos[model][4], LightsPos[model][5], 0, 0, 0);
				                AttachDynamicObjectToVehicle(LightsObject[vehicleid][2], vehicleid, -LightsPos[model][0], LightsPos[model][1], LightsPos[model][2], 0, 0, 0);
				                AttachDynamicObjectToVehicle(LightsObject[vehicleid][3], vehicleid, -LightsPos[model][3], LightsPos[model][4], LightsPos[model][5], 0, 0, 0);
						        GetVehicleZAngle(vehicleid, SignalAngle[vehicleid]);
						    	Signal[vehicleid] = 3;
						    	SetPlayerChatBubble(playerid, (pInfo[playerid][pSex]==1)?("включил аварийный сигнал"):("включила аварийный сигнал"), COLOR_PURPLE, 13.0, 10000);
						    }
						}
						if(PRESSED(KEY_ANALOG_DOWN))
						{
						    if(GetPVarInt(playerid, "BeltStatus") == 0)
							{
								SetPVarInt(playerid, "BeltStatus", 1);
								if(IsABike(vehicleid) || IsAMoped(vehicleid))
								{
									SetPlayerAttachedObject(playerid,3,18977,2,0.078000,0.000000,0.005999,-32.200004,83.399993,111.799964,1.000000,1.000000,1.000000);
									if(pInfo[playerid][pSex]==1) SetPlayerChatBubble(playerid, "надел шлем", COLOR_PURPLE, 13.0, 10000);
									else SetPlayerChatBubble(playerid, "надела шлем", COLOR_PURPLE, 13.0, 10000);
									PlayerPlaySound(playerid, 45400, 0.0, 0.0, 0.0);
								}
								else
								{
									if(pInfo[playerid][pSex]==1) SetPlayerChatBubble(playerid, "пристегнул ремень безопасности", COLOR_PURPLE, 13.0, 10000);
									else SetPlayerChatBubble(playerid, "пристегнула ремень безопасности", COLOR_PURPLE, 13.0, 10000);
								}
							}
							else
							{
								SetPVarInt(playerid, "BeltStatus", 0);
								if(IsABike(vehicleid) || IsAMoped(vehicleid))
								{
									RemovePlayerAttachedObject(playerid, 3);
									if(pInfo[playerid][pSex]==1) SetPlayerChatBubble(playerid, "снял шлем", COLOR_PURPLE, 13.0, 10000);
									else SetPlayerChatBubble(playerid, "сняла шлем", COLOR_PURPLE, 13.0, 10000);
								}
								else
								{
									if(pInfo[playerid][pSex]==1) SetPlayerChatBubble(playerid, "расстегнул ремень безопасности", COLOR_PURPLE, 13.0, 10000);
									else SetPlayerChatBubble(playerid, "расстегнула ремень безопасности", COLOR_PURPLE, 13.0, 10000);
								}
							}
						}
			        }
				}
			}
			if(newkeys & KEY_CROUCH)
			{
			    for(new i = 1; i <= TOTALBIZ; i++)
			    {
				    if(IsPlayerInRangeOfPoint(playerid, 5.0, BizInfo[i][bEntr][0], BizInfo[i][bEntr][1], BizInfo[i][bEntr][2]) && BizInfo[i][bType] == 2)
				    {
				        ShowPlayerDialog(playerid, dFilling, DIALOG_STYLE_LIST, "{FFCC00}АЗС", "Заправить транспорт\nКанистра\nНабор инструментов", "Выбрать", "Отмена");
					    SetPVarInt(playerid, "FuelBizID", i);
					    BizInfo[i][bVisitors]++;
				    }
				    if(IsPlayerInRangeOfPoint(playerid, 10.0, BizInfo[i][bEntr][0], BizInfo[i][bEntr][1], BizInfo[i][bEntr][2]) && BizInfo[i][bType] == 7)
					{
					    if(pTemp[playerid][pCarPlayerID] == INVALID_VEHICLE_ID) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас нету машины!");
						else if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в транспорте!");
						else if(GetPVarInt(playerid,"VehicleEnters") != pTemp[playerid][pCarPlayerID]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы должны находиться в вашем личном транспорте!");
						else if(GetVehicleModel(GetPVarInt(playerid,"VehicleEnters")) == 462) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы не можете тюнинговать мопед!");
						ShowPlayerDialog(playerid, dTuning, DIALOG_STYLE_MSGBOX, BizInfo[i][bName], "{FFFFFF}\n\nТут вы можете прокачать свое авто\nВы хотите перейти к тюнингу вашего авто?\n\n", "Да", "Отмена");
						SetPVarInt(playerid, "TuningBizID", i);
					}
			    }
			    new a = GetPVarInt(playerid, "UseHouse");
				if(IsPlayerInRangeOfPoint(playerid, 15.0, -1658.8940,1541.3593,835.6316) && GetPlayerVirtualWorld(playerid) == HouseInfo[a][hID])
				{
					SetVehiclePos(GetPVarInt(playerid,"VehicleEnters"), HouseInfo[a][hCar][0], HouseInfo[a][hCar][1], HouseInfo[a][hCar][2]);
					PutPlayerInVehicle(playerid, GetPVarInt(playerid,"VehicleEnters"), 0);
					SetVehicleZAngle(GetPVarInt(playerid,"VehicleEnters"), HouseInfo[a][hCar][3]);
					SetCameraBehindPlayer(playerid);
					LinkVehicleToInterior(GetPVarInt(playerid,"VehicleEnters"), 0);
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
					SetVehicleVirtualWorld(GetPVarInt(playerid,"VehicleEnters"), 0);
					SendClientMessage(playerid, COLOR_GREEN, "[Подсказка] {FFFFFF}Чтобы припарковать автомобиль в гараж, нажмите клавишу сигнала {AFAFAF}(Caps Lock / H) {FFFFFF}на месте выезда из гаража");
					SetPVarInt(playerid, "ban_second_keystroke", 1);
				}
    			for(new i = 1; i <= TOTALHOUSE; i++)
				{
				    if(HouseInfo[i][hGarage] != 1) continue;
				    if(IsPlayerInRangeOfPoint(playerid, 5.0, HouseInfo[i][hCar][0], HouseInfo[i][hCar][1], HouseInfo[i][hCar][2]) && GetPVarInt(playerid, "ban_second_keystroke"))
					{
					    SetPVarInt(playerid, "ban_second_keystroke", 0);
					    break;
					}
					if(IsPlayerInRangeOfPoint(playerid, 5.0, HouseInfo[i][hCar][0], HouseInfo[i][hCar][1], HouseInfo[i][hCar][2]) && !GetPVarInt(playerid, "ban_second_keystroke"))
					{
					    if(!GetString(HouseInfo[i][hOwner], GetName(playerid))) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Этот гараж принадлежит другому владельцу");
					    SetPVarInt(playerid, "UseHouse", i);
						ShowPlayerDialog(playerid, dHome+2, DIALOG_STYLE_MSGBOX, "{FFCC00}Въезд в гараж", "{FFFFFF}Хотите припарковать машину в гараже?", "Да", "Нет");
					}
				}
				if(IsPlayerInDynamicArea(playerid,AreaInfo[arTruckLoadCoal]) || IsPlayerInDynamicArea(playerid,AreaInfo[arTruckLoadWood]) || IsPlayerInDynamicArea(playerid,AreaInfo[arTruckLoadWeapon]))
				{
					new loadid = 0;
					if(IsPlayerInDynamicArea(playerid,AreaInfo[arTruckLoadWood])) loadid = 1;
					else if(IsPlayerInDynamicArea(playerid,AreaInfo[arTruckLoadWeapon])) loadid = 3;
					if(pInfo[playerid][pJob] == JOB_TRUCKER && pTemp[playerid][pTruckID] != INVALID_VEHICLE_ID && GetPlayerState(playerid) == PLAYER_STATE_DRIVER && pTemp[playerid][pTruckWagonID] == INVALID_VEHICLE_ID)
					{
						vehicleid = GetPVarInt(playerid,"VehicleEnters");
						model = GetVehicleModel(vehicleid);
						if(model == 403 || model == 514 || model == 515)
						{
							new maxcount,level,string[128];
							level = GetPlayerTruckLevel(playerid);
							if(level == 1) maxcount = TRUCK_LOAD_1;
							else if(level == 2) maxcount = TRUCK_LOAD_2;
							else if(level == 3) maxcount = TRUCK_LOAD_3;
							SetPVarInt(playerid,"maxamount",maxcount);
							SetPVarInt(playerid,"loadid",loadid);
							if(loadid == 0)
							{
							    format(string, sizeof(string), "{FFFFFF}Сколько угля Вы хотите загрузить? (макс. %d кг)", maxcount);
								ShowPlayerDialog(playerid, dTruckJob+1, 1, "{FFCC00}Загрузка угля", string, "Принять", "Отмена");
							}
							else if(loadid == 1)
							{
								format(string, sizeof(string), "{FFFFFF}Сколько угля Вы хотите загрузить? (макс. %d кг)", maxcount);
								ShowPlayerDialog(playerid, dTruckJob+1, 1, "{FFCC00}Загрузка древесины", string, "Принять", "Отмена");
							}
							else if(loadid == 3)
							{
							    format(string, sizeof(string), "{FFFFFF}Сколько оружия Вы хотите загрузить? (макс. %d кг)", maxcount);
								ShowPlayerDialog(playerid, dTruckJob+1, 1, "{FFCC00}Загрузка оружия", string, "Принять", "Отмена");
							}
						}
					}
				}
				for(new i; i < 2; i++)
				{
					if(IsPlayerInDynamicArea(playerid,AreaInfo[arTruckUnload][i]))
					{
						if(pInfo[playerid][pJob] == JOB_TRUCKER && pTemp[playerid][pTruckID] != INVALID_VEHICLE_ID && GetPlayerState(playerid) == PLAYER_STATE_DRIVER && pTemp[playerid][pTruckWagonID] != INVALID_VEHICLE_ID)
						{
							vehicleid = GetPVarInt(playerid,"VehicleEnters");
							if(!IsTrailerAttachedToVehicle(vehicleid))
							{
								SendClientMessage(playerid, COLOR_RED, "Вы потеряли прицеп. Заказ аннулирован");
								if(IsValidDynamic3DTextLabel(pTemp[playerid][pTruckWagonText]))
								{
									DestroyDynamic3DTextLabel(pTemp[playerid][pTruckWagonText]);
									pTemp[playerid][pTruckWagonText] = Text3D:INVALID_3DTEXT_ID;
								}
								if(pTemp[playerid][pTruckWagonID] != INVALID_VEHICLE_ID) DestroyVehicle(pTemp[playerid][pTruckWagonID]);
								pTemp[playerid][pTruckWagonID] = INVALID_VEHICLE_ID;
								pTemp[playerid][pTruckWagonTime] = 0;
								pTemp[playerid][pTruckWeight] = 0;
								pTemp[playerid][pTruckLoadID] = 0;
							}
							new amount = floatround(pTemp[playerid][pTruckWeight]/100.0);
							new loadid = pTemp[playerid][pTruckLoadID];
							new price = amount*gTruckUnloadPrice[loadid];
							new another = (loadid == 0) ? 1 : (loadid == 1) ? 0 : 3;
							new award = 0;
							if(!gGunWorkWH[another]) gGunWorkWH[another] = 1;
							if(gGunWorkWH[another] < gGunWorkWH[loadid]) award = floatround(price / 10.0 * (1 - (float(gGunWorkWH[loadid]) / gGunWorkWH[another])));
							new mes[128];
							format(mes,sizeof(mes),"%d кг груза было продано за {63BD4E}%d$",amount*100,price);
							SendClientMessage(playerid,COLOR_WHITE,mes);
							if(award > 0)
							{
								format(mes,sizeof(mes),"Премия за дифицитный груз: {63BD4E}%d$",award);
								SendClientMessage(playerid,COLOR_WHITE,mes);
								price += award;
							}
							if(doubling_salary)
							{
							    new money2 = price*2;
							    SendMes(playerid, COLOR_YELLOW, "[Информация] {FFFFFF}С учётом акции Вы заработали: {63BD4E}%i$",money2);
							    price = money2;
							}
							TransferMoney(-1,playerid,price,"Получил за привезённый груз",1);
							gGunWorkWH[loadid] += pTemp[playerid][pTruckWeight];
							pInfo[playerid][pTruckSkill] +=  pTemp[playerid][pTruckWeight];
							MysqlUpdatePlayerInt(playerid,"truckskill",pInfo[playerid][pTruckSkill]);
							if(IsValidDynamic3DTextLabel(pTemp[playerid][pTruckWagonText]))
							{
								DestroyDynamic3DTextLabel(pTemp[playerid][pTruckWagonText]);
								pTemp[playerid][pTruckWagonText] = Text3D:INVALID_3DTEXT_ID;
							}
							DetachTrailerFromVehicle(vehicleid);
							DestroyVehicle(pTemp[playerid][pTruckWagonID]);
							pTemp[playerid][pTruckWagonID] = INVALID_VEHICLE_ID;
							pTemp[playerid][pTruckWagonTime] = 0;
							pTemp[playerid][pTruckWeight] = 0;
							pTemp[playerid][pTruckLoadID] = 0;
							SetPVarInt(playerid,"informed",0);
						}
					}
				}
		 		if(IsPlayerInRangeOfPoint(playerid,12.0,286.0616,1821.0507,17.2128))
				{
					if(IsACop(playerid) || pInfo[playerid][pMember] == TEAM_NG)
					{
					    if(opengate[playerid][0]) return 1;
					    opengate[playerid][0] = true;
						MoveDynamicObject(Gate[4],285.62500000,1811.20446777,18.36432266,3.0,0.00000000,0.00000000,270.00000000);
						MoveDynamicObject(Gate[5],285.62500000,1830.82177734,18.27965546,3.0,0.00000000,0.00000000,270.00000000);
						SetTimerEx("@CloseGate", 10000, false, "dd", 0, playerid);
						SendClientMessage(playerid,COLOR_BLUE,"Ворота закроются через 10 секунд!");
						SetPlayerChatBubble(playerid, "открывает ворота", COLOR_PURPLE, 13.0, 10000);
				    }
				    else SendClientMessage(playerid,COLOR_GREY,"У вас нет ключей от ворот!");
			    }
		 	    if(IsPlayerInRangeOfPoint(playerid,12.0,131.0000000,1940.5000000,18.7000000))
			    {
				    if(IsACop(playerid) || pInfo[playerid][pMember] == TEAM_NG)
				    {
				        if(opengate[playerid][1]) return 1;
					    opengate[playerid][1] = true;
					    MoveDynamicObject(Gate[6],125.0000000,1940.5000000,18.7000000,3.0,0.00000000,0.00000000,0.00000000);
					    MoveDynamicObject(Gate[7],144.8999900,1940.5000000,18.7000000,3.0,0.00000000,0.00000000,0.00000000);
					    SetTimerEx("@CloseGate", 10000, false, "dd", 1, playerid);
					    SendClientMessage(playerid, COLOR_BLUE, "Ворота закроются через 10 секунд!");
					    SetPlayerChatBubble(playerid, "открывает ворота", COLOR_PURPLE, 13.0, 10000);
				    }
				    else SendClientMessage(playerid, COLOR_GREY, "У вас нет ключей от ворот!");
			    }
			    if(IsPlayerInRangeOfPoint(playerid,7.0,-1701.8092,683.8960,24.8906))
			    {
				    if(IsACop(playerid) || pInfo[playerid][pMember] == TEAM_NG)
				    {
					    if(opengate[playerid][2]) return 1;
					    opengate[playerid][2] = true;
					    MoveDynamicObject(Gate[0], -1701.43395996,687.69000244,24.65999794+0.004,0.004,0.00000000,0.00000000,270.00000000);
					    SetTimerEx("@CloseGate", 10000, false, "dd", 2, playerid);
					    SendClientMessage(playerid, COLOR_BLUE, "Шлагбаум опустится через 10 секунд!");
					    SetPlayerChatBubble(playerid, "открывает шлагбаум", COLOR_PURPLE, 13.0, 10000);
				    }
				    else SendClientMessage(playerid, COLOR_GREY, "У вас нет ключей от шлагбаума!");
		        }
				if(IsPlayerInRangeOfPoint(playerid,7.0,-1572.5665,662.4639,7.1875))
				{
					if(IsACop(playerid) || pInfo[playerid][pMember] == TEAM_NG)
					{
						if(opengate[playerid][3]) return 1;
					    opengate[playerid][3] = true;
						MoveDynamicObject(Gate[1], -1572.18994141,658.70001221,6.89099789+0.004,0.004,0.00000000,0.00000000,90.00000000);
						SetTimerEx("@CloseGate", 10000, false, "dd", 3, playerid);
						SendClientMessage(playerid, COLOR_BLUE, "Шлагбаум опустится через 10 секунд!");
						SetPlayerChatBubble(playerid, "открывает шлагбаум", COLOR_PURPLE, 13.0, 10000);
			        }
			        else SendClientMessage(playerid, COLOR_GREY, "У вас нет ключей от шлагбаума!");
			    }
				if(IsPlayerInRangeOfPoint(playerid,7.0,1545.0767,-1626.9976,13.3828))
				{
					if(IsACop(playerid) || pInfo[playerid][pMember] == TEAM_NG)
					{
						if(opengate[playerid][4]) return 1;
					    opengate[playerid][4] = true;
						MoveDynamicObject(Gate[2], 1544.69006348,-1630.90002441,13.13999939+0.004,0.004,0.00000000,0.00000000,90.00000000);
						SetTimerEx("@CloseGate", 10000, false, "dd", 4, playerid);
						SendClientMessage(playerid, COLOR_BLUE, "Шлагбаум опустится через 10 секунд!");
						SetPlayerChatBubble(playerid, "открывает шлагбаум", COLOR_PURPLE, 13.0, 10000);
			        }
			        else SendClientMessage(playerid,COLOR_GREY, "У вас нет ключей от шлагбаума!");
			    }
				if(IsPlayerInRangeOfPoint(playerid,7.0,2238.5742,2454.0466,10.8203))
				{
					if(IsACop(playerid) || pInfo[playerid][pMember] == TEAM_NG)
					{
						if(opengate[playerid][5]) return 1;
					    opengate[playerid][5] = true;
						MoveDynamicObject(Gate[3], 2238.19995117,2450.29980469,10.65000057+0.004,0.004,0.00000000,0.00000000,90.00000000);
						SetTimerEx("@CloseGate", 10000, false, "dd", 5, playerid);
						SendClientMessage(playerid, COLOR_BLUE, "Шлагбаум опустится через 10 секунд!");
						SetPlayerChatBubble(playerid, "открывает шлагбаум", COLOR_PURPLE, 13.0, 10000);
			        }
			        else SendClientMessage(playerid, COLOR_GREY, "У вас нет ключей от шлагбаума!");
			    }
				if(IsPlayerInRangeOfPoint(playerid,10.0,-1526.37366,481.38431,6.90630))
				{
				    if(opengate[playerid][6]) return 1;
				    opengate[playerid][6] = true;
					MoveDynamicObject(Gate[8],-1526.37366,481.38431,6.90630+0.004,0.004,0.00000000,0.00000000,0.00000000);
					SetTimerEx("@CloseGate", 10000, false, "dd", 6, playerid);
					SendClientMessage(playerid, COLOR_BLUE, "Шлагбаум опустится через 10 секунд!");
					SetPlayerChatBubble(playerid, "открывает шлагбаум", COLOR_PURPLE, 13.0, 10000);
				}
				if(IsPlayerInRangeOfPoint(playerid,10.0,1558.0261,-1572.6226,13.7400))
				{
				    if(IsAMedic(playerid))
				    {
				        if(opengate[playerid][7]) return 1;
					    opengate[playerid][7] = true;
						MoveDynamicObject(Gate[9],1558.0261,-1572.6226,11.3000,3.0,0.00000000,0.00000000,178.4990);
						SetTimerEx("@CloseGate", 10000, false, "dd", 7, playerid);
						SendClientMessage(playerid, COLOR_BLUE, "Ворота закроются через 10 секунд!");
						SetPlayerChatBubble(playerid, "открывает ворота", COLOR_PURPLE, 13.0, 10000);
					}
			        else SendClientMessage(playerid, COLOR_GREY, "У вас нет ключей от ворот!");
				}
				if(IsPlayerInRangeOfPoint(playerid,10.0,-2436.8125,495.46875,29.6797))
				{
				    if(pInfo[playerid][pMember] == TEAM_FBI)
				    {
				        if(opengate[playerid][8]) return 1;
					    opengate[playerid][8] = true;
						MoveDynamicObject(Gate[10],-2436.8125,495.46875,29.6797+0.004,0.004,0.00,0.00,24.999);
						SetTimerEx("@CloseGate", 10000, false, "dd", 8, playerid);
						SendClientMessage(playerid, COLOR_BLUE, "Шлагбаум опустится через 10 секунд!");
						SetPlayerChatBubble(playerid, "открывает шлагбаум", COLOR_PURPLE, 13.0, 10000);
					}
			        else SendClientMessage(playerid, COLOR_GREY, "У вас нет ключей от шлагбаума!");
				}
				if(IsPlayerInRangeOfPoint(playerid,10.0,-1037.111,-587.939,31.663))
				{
			        if(opengate[playerid][9]) return 1;
				    opengate[playerid][9] = true;
					MoveDynamicObject(Gate[11],-1037.111,-587.939,31.663+0.004,0.004,0.00,0.00,0.00);
					SetTimerEx("@CloseGate", 10000, false, "dd", 9, playerid);
					SendClientMessage(playerid, COLOR_BLUE, "Шлагбаум опустится через 10 секунд!");
					SetPlayerChatBubble(playerid, "открывает шлагбаум", COLOR_PURPLE, 13.0, 10000);
				}
			}
		}
	}
	return 1;
}

stock CheckFireArm(weaponid)
{
	switch(weaponid)
	{
		case 16..39, 41..43: return 1;
		default: return 0;
	}
	return 0;
}

public OnPlayerUpdate(playerid)
{
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && !IsVehiclePlane(GetPlayerVehicleID(playerid))){
	    if(PlayerGear[playerid] >= 1){
	        if(GetVehicleSpeedEx(GetPlayerVehicleID(playerid), 0) > (PlayerGear[playerid] * 30)) {
	            new nsp;
	            nsp = GetVehicleSpeedEx(GetPlayerVehicleID(playerid), 0) - (PlayerGear[playerid] * 30);
	            ModifyVehicleSpeed(GetPlayerVehicleID(playerid), -nsp);
	        }
	    }
	    if(PlayerGear[playerid] == 0){
			new nsp;
			nsp = GetVehicleSpeedEx(GetPlayerVehicleID(playerid), 0) - 0 * 30;
			ModifyVehicleSpeed(GetPlayerVehicleID(playerid), -nsp);
			new info[15];
  			format(info, sizeof(info), "~r~N");
			PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][6], info);
			format(info, sizeof(info), "~w~1");
			PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][0], info);
	       	format(info, sizeof(info), "~w~2");
	       	PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][1], info);
	       	format(info, sizeof(info), "~w~3");
	       	PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][2], info);
	       	format(info, sizeof(info), "~w~4");
	       	PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][3], info);
	       	format(info, sizeof(info), "~w~5");
	       	PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][4], info);
	       	format(info, sizeof(info), "~w~R");
			PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][5], info);
	    }
	    if(PlayerGear[playerid] == -1){
	        if(!IsVehicleDrivingBackwards(GetPlayerVehicleID(playerid))){
	            new info[15];
	  			format(info, sizeof(info), "~r~R");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][5], info);
				format(info, sizeof(info), "~w~1");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][0], info);
		       	format(info, sizeof(info), "~w~2");
		       	PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][1], info);
		       	format(info, sizeof(info), "~w~3");
		       	PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][2], info);
		       	format(info, sizeof(info), "~w~4");
		       	PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][3], info);
		       	format(info, sizeof(info), "~w~5");
		       	PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][4], info);
		       	format(info, sizeof(info), "~w~N");
				PlayerTextDrawSetString(playerid, mkpp_PTD[playerid][6], info);
	            new nsp;
	            nsp = GetVehicleSpeedEx(GetPlayerVehicleID(playerid), 0) - 0*30;
	            ModifyVehicleSpeed(GetPlayerVehicleID(playerid), -nsp);
	        }
	    }
	}
 	if(IsPlayerConnected(playerid))
	{
	    if(gPlayerLogged[playerid])
	    {
	 		if(gPlayerSpawned[playerid])
	 		{
	 		    new weaponid = GetPlayerWeapon(playerid);
			 	if(weaponid==35 || weaponid==36 || weaponid==38
				|| weaponid==44 || weaponid==45 || weaponid==16)
				{
				    if(pInfo[playerid][pAdmin] > ADM_NONE && gAdminLogged[playerid]) return 1;
					ToCheat(playerid, 8128);
				}
				if(!pTemp[playerid][pAbletoGun] && !IsKicked(playerid))
				{
					new weapon, ammo;
					for(new i = 0; i < 13; i++)
					{
						GetPlayerWeaponData(playerid, i, weapon, ammo);
						if(weapon != 0 && weapon != 46 && weapon != 40 && weapon != 1 && ammo > 0)
						{
							if(gGuns[playerid][i] != weapon)
							{
								ToCheat(playerid, 8130);
								return 1;
							}
						}
						if(ammo != gAmmos[playerid][i] && CheckFireArm(weapon))
						{
							if(ammo < gAmmos[playerid][i]) gAmmos[playerid][i] = ammo;
							else if((weapon >= 16 && weapon <= 18) || (weapon >= 22 && weapon <= 39) || (weapon >= 41 && weapon <= 43))
							{
			                    ToCheat(playerid, 8131);
			                    return 1;
							}
						}
					}
				}
			}
			SetPVarInt(playerid, "AFK_Tick", GetPVarInt(playerid, "AFK_Tick") + 1);
			if(GetPlayerAnimationIndex(playerid) == 1058 && GetPlayerState(playerid) != 9 && !IsPlayerInAnyVehicle(playerid) && GetPlayerSpeed(playerid) > 7)
			{
			    if(AntiFloodKick[playerid] == 0) ToCheat(playerid, 5213);
				AntiFloodKick[playerid] = 1;
				return 1;
			}
			if(pInfo[playerid][Spectating][1] != INVALID_PLAYER_ID
			&& GetPlayerState(pInfo[playerid][Spectating][0]) == PLAYER_STATE_DRIVER
			&& GetVehicleSpeed(pInfo[playerid][Spectating][0]) > 15)
			{
			    new string[128];
				format(string, sizeof(string), "~n~~n~~n~~n~~n~~n~~n~~n~~w~%d~n~%s~n~~w~Fuel: %.0f",
				GetVehicleSpeed(pInfo[playerid][Spectating][0]),
				(GetEngineStat(GetPVarInt(pInfo[playerid][Spectating][0],"VehicleEnters")) == 1)?("~g~~h~ENG"):("~r~ENG"),
				VehicleInfo[GetPVarInt(pInfo[playerid][Spectating][0],"VehicleEnters")][vFuel]);
				GameTextForPlayer(pInfo[playerid][Spectating][1], string, 250, 3);
			}
			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
				new vehicleid = GetPVarInt(playerid,"VehicleEnters");
				new Float:apos;
				GetVehicleZAngle(vehicleid, apos);
			    if(GetEngineStat(vehicleid) == 1)
				{
					if(Signal[vehicleid] > 0 && Signal[vehicleid] < 3)
					{
						if(SignalTick[vehicleid][1] >= 0)
						{
						    SignalTick[vehicleid][1] --;
		    		 		if(!SignalTick[vehicleid][1])
							{
								Signal[vehicleid] = 0;
								DestroyDynamicObject(LightsObject[vehicleid][0]);
								DestroyDynamicObject(LightsObject[vehicleid][1]);
								LightsObject[vehicleid][0] = -1;
								LightsObject[vehicleid][1] = -1;
							}
						}
						else if(jfloatsub(apos, SignalAngle[vehicleid])>50.0) SignalTick[vehicleid][1] = 20;
						SignalTick[vehicleid][0] ++;
						if(SignalTick[vehicleid][0] > 17) SignalTick[vehicleid][0] = 0;
					}
				}
				if(pInfo[playerid][pJob] == JOB_TRUCKER && IsTrailerAttachedToVehicle(vehicleid))
				{
					new trailerid = GetVehicleTrailer(vehicleid);
					if(pTemp[playerid][pTruckWagonID] != trailerid)
					{
						DetachTrailerFromVehicle(vehicleid);
						new Float:x, Float:y, Float:z;
						GetVehiclePos(vehicleid,x,y,z);
						y -= 1.0;
						SetVehiclePos(vehicleid,x,y,z);
					}
					else if(pTemp[playerid][pTruckWeight] < GetPVarInt(playerid,"truckamount"))
					{
						DetachTrailerFromVehicle(vehicleid);
						SendClientMessage(playerid,COLOR_WHITE,"Фура еще не загружена полностью");
						new Float:x, Float:y, Float:z;
						GetVehiclePos(vehicleid,x,y,z);
						y -= 1.0;
						SetVehiclePos(vehicleid,x,y,z);
					}
					else if(!GetPVarInt(playerid,"informed"))
					{
						pTemp[playerid][pTruckWagonTime] = 60;
						SendClientMessage(playerid,COLOR_WHITE,"Отлично. Теперь у Вас есть 1 минута, чтобы покинуть место загрузки.");
						SendClientMessage(playerid,COLOR_WHITE,"Иначе заказ будет аннулирован");
						SetPVarInt(playerid,"informed",1);
					}
				}
			}
			if(InShop[playerid] > 0) SelectCar(playerid);
			if(FlyInfo[playerid][fType] == 1)
			{
				new keys, ud, lr;
				GetPlayerKeys(playerid, keys, ud, lr);
				new Float:CP[3], Float:FV[3];
				GetPlayerCameraPos(playerid, CP[0], CP[1], CP[2]);
				GetPlayerCameraFrontVector(playerid, FV[0], FV[1], FV[2]);
				if(FlyInfo[playerid][fKeys][0] != ud || FlyInfo[playerid][fKeys][1] != lr)
				{
			    	if((FlyInfo[playerid][fKeys][0] != 0 || FlyInfo[playerid][fKeys][1] != 0) && ud == 0 && lr == 0)
					{
			        	StopDynamicObject(FlyInfo[playerid][fObject]);
	                	FlyInfo[playerid][fDirection] = 0;
			    	}
			    	else
					{
					    if(lr < 0)
						{
							if(ud < 0) FlyInfo[playerid][fDirection] = MOVE_FORWARD_LEFT;
							else if(ud > 0) FlyInfo[playerid][fDirection] = MOVE_BACK_LEFT;
							else FlyInfo[playerid][fDirection] = MOVE_LEFT;
							MovePlayerCamera(playerid, CP, FV);
						}
						else if(lr > 0)
						{
							if(ud < 0) FlyInfo[playerid][fDirection] = MOVE_FORWARD_RIGHT;
							else if(ud > 0) FlyInfo[playerid][fDirection] = MOVE_BACK_RIGHT;
							else FlyInfo[playerid][fDirection] = MOVE_RIGHT;
							MovePlayerCamera(playerid, CP, FV);
						}
						else if(ud < 0)
						{
							FlyInfo[playerid][fDirection] = MOVE_FORWARD;
							MovePlayerCamera(playerid, CP, FV);
						}
						else if(ud > 0)
						{
							FlyInfo[playerid][fDirection] = MOVE_BACK;
							MovePlayerCamera(playerid, CP, FV);
						}
						else FlyInfo[playerid][fDirection] = -1;
			    	}
			    	FlyInfo[playerid][fKeys][0] = ud;
					FlyInfo[playerid][fKeys][1] = lr;
				}
				else if(FlyInfo[playerid][fDirection] && (GetTickCount() - FlyInfo[playerid][fTick] > 100))
				{
				    if((FlyInfo[playerid][fKeys][0] != 0 || FlyInfo[playerid][fKeys][1] != 0) && ud == 0 && lr == 0)
					{
		                StopDynamicObject(FlyInfo[playerid][fObject]);
		                FlyInfo[playerid][fDirection] = 0;
					}
					else MovePlayerCamera(playerid, CP, FV);
				}
			}
		}
		else ResetPlayerWeapons(playerid);
	}
	return 1;
}

public OnPlayerStreamIn(playerid, forplayerid)
{
    if(!(pInfo[forplayerid][pSettings] & setShowNickname)) ShowPlayerNameTagForPlayer(forplayerid,playerid,0);
	return 1;
}

public OnPlayerStreamOut(playerid, forplayerid)
{
	return 1;
}

public OnVehicleStreamIn(vehicleid, forplayerid)
{
    if(!IsValidVehicle(vehicleid)) return 1;
	SetVehicleParamsForPlayer(vehicleid,forplayerid,0,VehicleInfo[vehicleid][vLock]);
	@UpdateVehiclePos(forplayerid, vehicleid, 0);
	return 1;
}
public OnVehicleStreamOut(vehicleid, forplayerid) return 1;

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
    if(strfind(inputtext, "'", true) != -1 || strfind(inputtext, "=", true) != -1) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы используете запрещенные символы!");
	for(new i; i < strlen(inputtext); i++)
	{
     	if(inputtext[i] == '%') inputtext[i] = '#';
     	else if(inputtext[i] == '\\') inputtext[i] = '#';
     	else if(inputtext[i] == '{' && inputtext[i+7] == '}') strdel(inputtext, i, i+8);
	}
	if(GetPVarInt(playerid,"USEDIALOGID") != dialogid) return 1;
	SetPVarInt(playerid, "USEDIALOGID", -1);
	switch(dialogid)
	{
	    case 8423:
		{
		    if(!response)
			switch(listitem)
			{
				case 0: GivePlayerWeapon(playerid, 24,500);
				case 1: GivePlayerWeapon(playerid, 31,500);
				case 2: GivePlayerWeapon(playerid, 34,500);
				case 3: GivePlayerWeapon(playerid, 28,500);
				case 4: GivePlayerWeapon(playerid, 29,500);
				case 5: GivePlayerWeapon(playerid, 32,500);
				case 6: GivePlayerWeapon(playerid, 33,500);
				case 7: GivePlayerWeapon(playerid, 22,500);
				case 8: GivePlayerWeapon(playerid, 25,500);
				case 9: GivePlayerWeapon(playerid, 27,500);
				case 10: GivePlayerWeapon(playerid, 26,500);
			}
		}
	    case 9281:
		{
		    if(!response)
		    switch(listitem)
		    {
		        case 0: ShowPlayerDialog(playerid, 10000, DIALOG_STYLE_LIST,"Включить музыку из списка","Баклажан\nБатя в зданий\nWhatever it Takes\nRadioactive\nNatural\nShots\nСиний ламборгини\nНе грусти по нему","Включить","Отмена");
				case 1: StopAudioStreamForPlayer(playerid);
		    }
		}
		case 8421:
		{
		    if(!response)
		    switch(listitem)
		    {
		        case 0: PlayAudioStreamForPlayer(playerid, "https://dl1.mp3party.net/download/176005");
		        case 1: PlayAudioStreamForPlayer(playerid, "https://dl1.mp3party.net/download/5711636");
		        case 2: PlayAudioStreamForPlayer(playerid, "https://vmuzone.com/dl/OTI1ZmUwYTMwMGE5ZjA2ZWQyYjU0MDRhYzQ1MDQ1NmF8bG9hZA.mp3");
		        case 3: PlayAudioStreamForPlayer(playerid, "https://vmuzone.com/dl/MTBkMDVkNTU5NGY0NGVhOTg0YTk0M2FjZjYxNjMyODB8bG9hZA.mp3");
		        case 4: PlayAudioStreamForPlayer(playerid, "https://vmuzone.com/dl/Y2JjN2IzODMyNjY0ZDFkYTUwOGZhYmQ0ZjM5MzdjOWV8bG9hZA.mp3");
		        case 5: PlayAudioStreamForPlayer(playerid, "https://mp3-midi.org/load.php?f=NzNhYzcwOTNhMjU2ZjhlNzZmMzViYjgwMmMxN2JkZjcubXAz");
		        case 6: PlayAudioStreamForPlayer(playerid, "https://dl1.mp3party.net/download/9882809");
				case 7: PlayAudioStreamForPlayer(playerid, "https://dl1.mp3party.net/download/7325887");
			}
		}
		case 8420:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
				   if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 2)) RemovePlayerAttachedObject(objectplayerid, 2);
				   SetPlayerAttachedObject(objectplayerid,2,19137,2,0.100000,0.000000,0.000000,0.000000,0.000000,0.000000,1.000000,1.000000,1.000000);
				   return 1;
				}
				case 1:
				{
					if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 5)) RemovePlayerAttachedObject(objectplayerid, 5);
					SetPlayerAttachedObject(objectplayerid,5, 19270, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
					return 1;
				}
				case 2:
				{
					if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 4)) RemovePlayerAttachedObject(objectplayerid, 4);
					SetPlayerAttachedObject(objectplayerid,4, 18646, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
					return 1;
				}
				case 3:
				{
					if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 5)) RemovePlayerAttachedObject(objectplayerid, 5);
					SetPlayerAttachedObject(objectplayerid,5, 19163, 2, 0.111052, 0.021643, -0.000846, 100.280899, 100.752510, 445.071044, 1.100000, 1.300000, 1.300000);
					return 1;
				}
				case 4:
				{
					if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 0)) RemovePlayerAttachedObject(objectplayerid, 0);
					SetPlayerAttachedObject(objectplayerid,0, 18915, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
					return 1;
				}
				case 5:
				{
					if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 0)) RemovePlayerAttachedObject(objectplayerid, 0);
					SetPlayerAttachedObject(objectplayerid,0, 18912, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
					return 1;
				}
				case 6:
				{
					if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 0)) RemovePlayerAttachedObject(objectplayerid, 0);
					SetPlayerAttachedObject(objectplayerid,0, 18916, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
					return 1;
				}
				case 7:
				{
					if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 0)) RemovePlayerAttachedObject(objectplayerid, 0);
					SetPlayerAttachedObject(objectplayerid,0, 18917, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
					return 1;
				}
				case 8:
				{
					if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 0)) RemovePlayerAttachedObject(objectplayerid, 0);
					SetPlayerAttachedObject(objectplayerid,0, 18918, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
					return 1;
				}
				case 9:
				{
					if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 4)) RemovePlayerAttachedObject(objectplayerid, 4);
					SetPlayerAttachedObject(objectplayerid,4, 3528, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 0.100000, 0.100000, 0.100000);
					return 1;
				}
				case 10:
				{
					if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 4)) RemovePlayerAttachedObject(objectplayerid, 4);
					SetPlayerAttachedObject(objectplayerid,4, 18643, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
					return 1;
				}
				case 11:
				{
					if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 0) || IsPlayerAttachedObjectSlotUsed(objectplayerid, 1) || IsPlayerAttachedObjectSlotUsed(objectplayerid, 4))
					{
						RemovePlayerAttachedObject(objectplayerid, 0);
						RemovePlayerAttachedObject(objectplayerid, 1);
						RemovePlayerAttachedObject(objectplayerid, 4);
					}
					SetPlayerAttachedObject(objectplayerid,0, 18693, 5, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000);
					SetPlayerAttachedObject(objectplayerid,1, 18693, 6, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000);
					SetPlayerAttachedObject(objectplayerid,4, 18965, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
					return 1;
				}
				case 12:
				{
					if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 5)) RemovePlayerAttachedObject(objectplayerid, 5);
					SetPlayerAttachedObject(objectplayerid,5, 19078, 1, 0.329150, -0.072101, 0.156082, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
					return 1;
				}
				case 13:
				{
					if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 5)) RemovePlayerAttachedObject(objectplayerid, 5);
					SetPlayerAttachedObject(objectplayerid,5, 354, 1, 0.329150, -0.072101, 0.156082, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
					return 1;
				}
				case 14:
				{
					if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 1)) RemovePlayerAttachedObject(objectplayerid, 1);
					SetPlayerAttachedObject(objectplayerid,1, 356, 6, 0.013610, -0.021393, -0.144862, 2.354303, 354.413848, 0.219168, 3.034477, 3.000000, 3.000000);
					return 1;
				}
				case 15:
				{

					if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 1)) RemovePlayerAttachedObject(objectplayerid, 1);
					SetPlayerAttachedObject(objectplayerid,1, 19086, 8, -0.049768, -0.014062, -0.108385, 87.458297, 263.478149, 184.123764, 0.622413, 1.041609, 1.012785);

					return 1;
				}
				case 16:
				{
					if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 0)) RemovePlayerAttachedObject(objectplayerid, 0);
					SetPlayerAttachedObject(objectplayerid,0, 19078, 1, -1.097527, -0.348305, -0.008029, 0.000000, 0.000000, 0.000000, 8.073966, 8.073966, 8.073966);
					return 1;
				}
				case 17:
				{
				    if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 2)) RemovePlayerAttachedObject(objectplayerid, 2);
				    if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 1)) RemovePlayerAttachedObject(objectplayerid, 1);
				    if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 3)) RemovePlayerAttachedObject(objectplayerid, 3);
				    if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 6)) RemovePlayerAttachedObject(objectplayerid, 6);
				    if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 5)) RemovePlayerAttachedObject(objectplayerid, 5);
				    if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 4)) RemovePlayerAttachedObject(objectplayerid, 4);
				    if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 7)) RemovePlayerAttachedObject(objectplayerid, 7);
			        SetPlayerAttachedObject(objectplayerid, 2, 19516, 2,0.050000,-0.019999,0.000000,0.000000,180.000000,-90.000000,1.299999,1.200000,1.000000);
			        SetPlayerAttachedObject(objectplayerid, 1, 19516, 2,-0.064999,0.029999,0.000000,0.000000,0.000000,90.000000,1.000000,1.299999,1.000000);
			        SetPlayerAttachedObject(objectplayerid, 3, 19066, 2,0.150000,-0.009999,0.000000,-90.000000,90.000000,180.000000,1.000000,1.000000,1.000000);
			        SetPlayerAttachedObject(objectplayerid, 6, 19065, 1,-0.209999,0.000000,0.090000,180.000000,75.000000,180.000000,1.200000,3.000000,6.500000);
			        SetPlayerAttachedObject(objectplayerid, 5, 19065, 1,-0.209999,0.000000,-0.090000,0.000000,75.000000,180.000000,1.200000,3.000000,6.500000);
			        SetPlayerAttachedObject(objectplayerid, 4, 19065, 1,-0.550000,-0.200000,0.000000,90.000000,10.000000,185.000000,4.400000,3.799999,1.799999);
			        SetPlayerAttachedObject(objectplayerid, 7, 19348, 6,0.070000,0.000000,0.600000,0.898999,180.000000,-119.299003,1.200000,1.200000,1.799999);
			        SetPlayerSkin(objectplayerid, 189);
			        return 1;
				}
				case 18:
				{
					for(new i; i < 9; i++) RemovePlayerAttachedObject(objectplayerid, i);
					if(pInfo[playerid][pMember])
					{
						if(GetPlayerSkin(playerid)!=pInfo[playerid][pMemberSkin])
						{
							SetPlayerSkin(playerid, pInfo[playerid][pMemberSkin]);
						}
					}
					else
					{
						if(GetPlayerSkin(playerid)!=pInfo[playerid][pModel])
						{
							SetPlayerSkin(playerid, pInfo[playerid][pModel]);
						}
					}
					return 1;
				}
			}
		}
		case 5378:
		{
		        if(!response) return true;
		        new kok;
		        if(sscanf(inputtext, "p<,>i",kok)) return ShowPlayerDialog(playerid,5378,DIALOG_STYLE_INPUT,"Создание","{FFFFFF}Введите ID объяекта","Создать","Назад");
		        new Float:X, Float:Y, Float:Z;
		        GetPlayerPos(playerid, X, Y, Z);
		        pobject[playerid][GetPVarInt(playerid,"ObjID")] = CreateObject(kok, X+1, Y+1, Z+1, 0.0,0.0,0.0);
		        pobjectid[playerid][GetPVarInt(playerid,"ObjID")] = kok;
		        EditObject(playerid,pobject[playerid][GetPVarInt(playerid,"ObjID")]);
		        DeletePVar(playerid,"ObjID");
		}
		case 5879:
		{
	        if(!response) return cmd_objm(playerid);
	        switch(listitem)
	        {
	            case 0:
	            {
	                    DestroyObject(pobject[playerid][GetPVarInt(playerid,"ObjID")]);
	                    pobjectid[playerid][GetPVarInt(playerid,"ObjID")] = 0;
	                    DeletePVar(playerid,"ObjID");
	            }
	            case 1: EditObject(playerid,pobject[playerid][GetPVarInt(playerid,"ObjID")]);
	        }
		}
		case 5677:
		{
		        if(!response) return 1;
		    	SetPVarInt(playerid,"ObjID",listitem);
		        if(pobjectid[playerid][listitem] == 0)ShowPlayerDialog(playerid,5378,DIALOG_STYLE_INPUT,"Создание","{FFFFFF}Введите ID объяекта",
				"Создать","Назад");
		        else ShowPlayerDialog(playerid,5879,DIALOG_STYLE_LIST,"Редактирование","{FFFFFF}Удалить\nРедактировать","Создать","Назад");
		}
	    case 3793:
	    {
	        if(!response) return 1;
	        ShowPlayerDialog(playerid, 3794, DIALOG_STYLE_LIST, "{3399FF}Помощь по серверу", "1. Общение\n2. Список игроков\n3. Транспорт\n4. Общее\n5. Работа\n6. Оружие и убийство", "Далее", "Отмена");
	    	return 1;
	    }
	    case 3794:
	    {
	        if(!response) return 1;
	        switch(listitem)
	        {
	            case 0:
	            {
	                stringer[0] = EOS;
	                strcat(stringer, "\t{FFCC00}Общение{FFFFFF}\n\n");
	                strcat(stringer, "Вы можете общаться с другими игроками через чат в левом верхнем углу.\n");
	                strcat(stringer, "Чтобы напечатать сообщение, нажмите клавишу \"F6\" или \"T\" (на латинице).\n");
	                strcat(stringer, "Так же с помощью чата используются все команды сервера, к примеру \"/menu\".\n\n");
	                strcat(stringer, "Используйте \"/menu\" для просмотра персонального меню.\n");
	                strcat(stringer, "В диалоговом окне Вы сможете найти всё необходимое.\n");
	                strcat(stringer, "Более подробное описание Вы найдёте на нашем сайте {FF9900}"SERVER_WEBSITE"{FFFFFF}\n");
	                strcat(stringer, "Так же регистрируйтесь на форуме, в дальнейшем Вам это пригодится {FF9900}"SERVER_FORUM"");
	                ShowPlayerDialog(playerid, 3795, DIALOG_STYLE_MSGBOX, "{3399FF}Общение", stringer, "Назад", "Закрыть");
	            }
	            case 1:
	            {
	                stringer[0] = EOS;
	                strcat(stringer, "\t{FFCC00}Список игроков{FFFFFF}\n\n");
	                strcat(stringer, "Данный список можно посмотреть, нажав клавишу \"TAB\".\n");
	                strcat(stringer, "Там вы увидите:\n\n");
	                strcat(stringer, "\"ID\" игрока (используется в командах)\n");
	                strcat(stringer, "\"Ник\" (Role Play имя игрока)\n");
	                strcat(stringer, "\"Уровень\" графа Score (количество лет в штате)\n");
	                strcat(stringer, "\"Пинг\" время отклика между Вами и сервером (в милисекундах)\n\n");
	                strcat(stringer, "Для просмотра списка полностью, используйте прокрутку справа.\n");
	                strcat(stringer, "Вы в этой табличке всегда отображаетесь первым, независимо от ID.");
	                ShowPlayerDialog(playerid, 3795, DIALOG_STYLE_MSGBOX, "{3399FF}Список игроков", stringer, "Назад", "Закрыть");
	            }
	            case 2:
	            {
	                stringer[0] = EOS;
	                strcat(stringer, "\t{FFCC00}Транспорт{FFFFFF}\n\n");
	                strcat(stringer, "Я надеюсь Вы умеете управлять транспортным средством, но даже если нет,\n");
	                strcat(stringer, "наша Автошкола и Авиашкола научат Вас.\n\n");
	                strcat(stringer, "В Автошколу и Авиашколу придётся идти в любом случае, поскольку езда без прав не\n");
	                strcat(stringer, "безопасна, а полёты уж темболее, ну и думаю Вы не хотите платить штрафы.\n");
	                strcat(stringer, "Ну а пока можете воспользоваться велосипедом или общественным транспортом.\n");
	                strcat(stringer, "Для того, чтобы сесть на пассажирское место, используйте клавишу \"G\".\n");
	                ShowPlayerDialog(playerid, 3795, DIALOG_STYLE_MSGBOX, "{3399FF}Транспорт", stringer, "Назад", "Закрыть");
				}
				case 3:
				{
				    stringer[0] = EOS;
	                strcat(stringer, "\t{FFCC00}Общее{FFFFFF}\n\n");
	                strcat(stringer, "На нашем сервере можно зарабатывать деньги, все работы Вы можете найти в GPS-навигаторе.\n");
	                strcat(stringer, "На заработанные деньги возможно приобретать недвижимость, транспорт и прочие мелочи.\n\n");
	                strcat(stringer, "Можно работать полицейским защищая гражданских или быть на противоположной стороне закона,\n");
	                strcat(stringer, "ведя войну за контроль над кварталами или бизнесами. И это только малая часть доступного!");
	                ShowPlayerDialog(playerid, 3795, DIALOG_STYLE_MSGBOX, "{3399FF}Общее", stringer, "Назад", "Закрыть");
				}
				case 4:
				{
				    stringer[0] = EOS;
	                strcat(stringer, "\t{FFCC00}Работа{FFFFFF}\n\n");
	                strcat(stringer, "Многие профессии доступны каждому, но есть ограничения по прожитию в Штате (уровню).\n\n");
	                strcat(stringer, "Есть 3 работы для новичков, то место где Вы получите свои первые деньги:\n");
	                strcat(stringer, "Работа на лесопилке. Суть работы: пилить деревья и относить на склад.\n");
	                strcat(stringer, "Работа на шахте. Суть работы: добывать уголь и относить на склад. \n");
	                strcat(stringer, "Работа на оружейном заводе. Суть работы: собирать детали для оружия.\n");
	                strcat(stringer, "Любую из работ можно найти в GPS-навигаторе (/gps).\n\n");
	                strcat(stringer, "Остальные работы (с ограничениями по уровню):\n");
	                strcat(stringer, "Работа водителя автобуса. Суть работы: ездить по разным заданным маршрутам.\n");
	                strcat(stringer, "Работа таксиста. Суть работы: развозить пассажиров по конкретным местам.\n");
	                strcat(stringer, "Работа механика. Суть работы: ремонтировать транспортные средства.\n");
	                strcat(stringer, "Работа дальнобойщика. Суть работы: перевозить дерево и уголь на оружейный завод.\n");
	                strcat(stringer, "На каждую из работ можно устроиться в любой мэрии штата.");
	                ShowPlayerDialog(playerid, 3795, DIALOG_STYLE_MSGBOX, "{3399FF}Работа", stringer, "Назад", "Закрыть");
				}
				case 5:
				{
				    stringer[0] = EOS;
	                strcat(stringer, "\t{FFCC00}Оружие и убийство{FFFFFF}\n\n");
	                strcat(stringer, "Для ношения оружия необходима лицензия, без неё Вы не сможете приобрести оружие\n");
	                strcat(stringer, "в магазине. Но, оружие можно достать и другими способами.\n\n");
	                strcat(stringer, "За убийство человека Вы будете объявлены в розыск, как опасный преступник,\n");
	                strcat(stringer, "а при аресте Вы лишитесь свободы и сядете в тюрьму!\n");
	                strcat(stringer, "Так же почитайте Правила на нашем форуме {FF9900}"SERVER_FORUM"");
	                ShowPlayerDialog(playerid, 3795, DIALOG_STYLE_MSGBOX, "{3399FF}Оружие и убийство", stringer, "Назад", "Закрыть");
				}
	        }
	    }
		case 3795:
		{
		    if(!response) return 1;
			else ShowPlayerDialog(playerid, 3794, DIALOG_STYLE_LIST, "{3399FF}Помощь по серверу", "1. Общение\n2. Список игроков\n3. Транспорт\n4. Общее\n5. Работа\n6. Оружие и убийство", "Далее", "Отмена");
		}
		case dJoinCars+4:
		{
			if(!response) return 1;
			if(pInfo[playerid][pHouse] != 0) BuyCar(playerid);
		}
		case dJoinCars+5:
		{
			if(!response) return 1;
			BuyCloseCar(playerid);
			SendClientMessage(playerid, COLOR_RED, "Вы отменили покупку транспорта");
		}
		case dSetSpawn:
		{
		    if(!response) return 1;
		    switch(listitem)
			{
			case 0:
				{
					pInfo[playerid][pSpawnChange] = 0;
				}
			case 1:
				{
					if(!pInfo[playerid][pHouse]) return SendClientMessage(playerid, COLOR_GREY, "У вас нет дома!");
					pInfo[playerid][pSpawnChange] = 1;
				}
			case 2:
				{
					if(pInfo[playerid][pMember] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в организации!");
					pInfo[playerid][pSpawnChange] = 2;
				}
			}
			SendClientMessage(playerid, COLOR_BLUE, "Ваше место появления в игре изменено");
			MysqlUpdatePlayerInt(playerid, "spawnchange", pInfo[playerid][pSpawnChange]);
		}
		case dBuyFishki:
		{
		    if(!response) return 1;
	        switch(listitem)
	        {
	            case 0: ShowPlayerDialog(playerid, dBuyFishki+1, DIALOG_STYLE_LIST, "{FFCC00}Приобретение фишек", "{EAD86A}Количество\t{EAD86A}Стоимость\n10 фишек\t{63BD4E}1000$\n50 фишек\t{63BD4E}5000$\n100 фишек\t{63BD4E}10000$\n1000 фишек\t{63BD4E}100000$", "Купить", "Отмена");
	            case 1: ShowPlayerDialog(playerid, dBuyFishki+2, DIALOG_STYLE_LIST, "{FFCC00}Обмен фишек", "{EAD86A}Количество\t{EAD86A}Выручка\n10 фишек\t{63BD4E}+800$\n50 фишек\t{63BD4E}+4000$\n100 фишек\t{63BD4E}+8000$\n1000 фишек\t{63BD4E}+80000$", "Продать", "Отмена");
	        }
		}
		case dBuyFishki+1:
	    {
	        if(!response) return 1;
	        new idx = GetPVarInt(playerid, "UseBiz"), string[150];
			switch(listitem)
			{
			    case 0:
				{
				}
				case 1:
				{
					if(GetCash(playerid) < 1000) return SendClientMessage(playerid, COLOR_GREY, NoMoney);
					TransferMoney(playerid, -1, 1000);
					if(pInfo[playerid][pFishki]==0) SendClientMessage(playerid, COLOR_GREEN, "Вы приобрели 10 фишек по цене 1000$. Теперь вы сможете играть в кости (/dice)");
					else SendClientMessage(playerid, COLOR_GREEN, "Вы приобрели 10 фишек по цене 1000$");
					pInfo[playerid][pFishki] += 10;
					MysqlUpdatePlayerInt(playerid, "fishki", pInfo[playerid][pFishki]);
					format(string,sizeof(string),"%s купил 10 фишек за 1000$", GetName(playerid));
		        	WriteLog("Fishki",string);
					GiveBizMoney(idx, 500, 3);
                    ShowPlayerDialog(playerid, dBuyFishki, DIALOG_STYLE_LIST, "{FFCC00}Выберите действие", "1. Купить фишки\n2. Обменять фишки", "Выбрать", "Отмена");
				}
				case 2:
				{
					if(GetCash(playerid) < 5000) return SendClientMessage(playerid, COLOR_GREY, NoMoney);
					TransferMoney(playerid, -1, 5000);
					if(pInfo[playerid][pFishki]==0) SendClientMessage(playerid, COLOR_GREEN, "Вы приобрели 50 фишек по цене 5000$. Теперь вы сможете играть в кости (/dice)");
					else SendClientMessage(playerid, COLOR_GREEN, "Вы приобрели 50 фишек по цене 5000$");
					pInfo[playerid][pFishki] += 50;
					MysqlUpdatePlayerInt(playerid, "fishki", pInfo[playerid][pFishki]);
					format(string,sizeof(string),"%s купил 50 фишек за 5000$", GetName(playerid));
		        	WriteLog("Fishki",string);
					GiveBizMoney(idx, 2500, 15);
					ShowPlayerDialog(playerid, dBuyFishki, DIALOG_STYLE_LIST, "{FFCC00}Выберите действие", "1. Купить фишки\n2. Обменять фишки", "Выбрать", "Отмена");
				}
				case 3:
				{
					if(GetCash(playerid) < 10000) return SendClientMessage(playerid, COLOR_GREY, NoMoney);
					TransferMoney(playerid, -1, 10000);
					if(pInfo[playerid][pFishki]==0) SendClientMessage(playerid, COLOR_GREEN, "Вы приобрели 100 фишек по цене 10000$. Теперь вы сможете играть в кости (/dice)");
					else SendClientMessage(playerid, COLOR_GREEN, "Вы приобрели 100 фишек по цене 10000$");
					pInfo[playerid][pFishki] += 100;
					MysqlUpdatePlayerInt(playerid, "fishki", pInfo[playerid][pFishki]);
					format(string,sizeof(string),"%s купил 100 фишек за 10000$", GetName(playerid));
		        	WriteLog("Fishki",string);
					GiveBizMoney(idx, 5000, 30);
					ShowPlayerDialog(playerid, dBuyFishki, DIALOG_STYLE_LIST, "{FFCC00}Выберите действие", "1. Купить фишки\n2. Обменять фишки", "Выбрать", "Отмена");
				}
				case 4:
				{
				    if(GetCash(playerid) < 100000) return SendClientMessage(playerid, COLOR_GREY, NoMoney);
					TransferMoney(playerid, -1, 100000);
					if(pInfo[playerid][pFishki]==0) SendClientMessage(playerid, COLOR_GREEN, "Вы приобрели 1000 фишек по цене 100000$. Теперь вы сможете играть в кости (/dice)");
					else SendClientMessage(playerid, COLOR_GREEN, "Вы приобрели 1000 фишек по цене 100000$");
					pInfo[playerid][pFishki] += 1000;
					MysqlUpdatePlayerInt(playerid, "fishki", pInfo[playerid][pFishki]);
					format(string,sizeof(string),"%s купил 1000 фишек за 100000$", GetName(playerid));
		        	WriteLog("Fishki",string);
					GiveBizMoney(idx, 50000, 300);
					ShowPlayerDialog(playerid, dBuyFishki, DIALOG_STYLE_LIST, "{FFCC00}Выберите действие", "1. Купить фишки\n2. Обменять фишки", "Выбрать", "Отмена");
				}
			}
	    }
  		case dBuyFishki+2:
	    {
	        if(!response) return 1;
	        new string[150];
			switch(listitem)
			{
			    case 0:
			    {
			    }
				case 1:
				{
					if(pInfo[playerid][pFishki] < 10) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Недостаточно фишек для обмена!");
					TransferMoney(-1, playerid, 800);
					pInfo[playerid][pFishki] -= 10;
					MysqlUpdatePlayerInt(playerid, "fishki", pInfo[playerid][pFishki]);
					format(string,sizeof(string),"%s обменял 10 фишек на 800$", GetName(playerid));
		        	WriteLog("Fishki",string);
					SendClientMessage(playerid, COLOR_GREEN, "Вы обменяли 10 фишек на 800$");
					ShowPlayerDialog(playerid, dBuyFishki, DIALOG_STYLE_LIST, "{FFCC00}Выберите действие", "1. Купить фишки\n2. Обменять фишки", "Выбрать", "Отмена");
				}
				case 2:
				{
					if(pInfo[playerid][pFishki] < 50) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Недостаточно фишек для обмена!");
                    TransferMoney(-1, playerid, 4000);
					pInfo[playerid][pFishki] -= 50;
					MysqlUpdatePlayerInt(playerid, "fishki", pInfo[playerid][pFishki]);
					format(string,sizeof(string),"%s обменял 50 фишек на 4000$", GetName(playerid));
		        	WriteLog("Fishki",string);
					SendClientMessage(playerid, COLOR_GREEN, "Вы обменяли 50 фишек на 4000$");
					ShowPlayerDialog(playerid, dBuyFishki, DIALOG_STYLE_LIST, "{FFCC00}Выберите действие", "1. Купить фишки\n2. Обменять фишки", "Выбрать", "Отмена");
				}
				case 3:
				{
					if(pInfo[playerid][pFishki] < 100) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Недостаточно фишек для обмена!");
                    TransferMoney(-1, playerid, 8000);
					pInfo[playerid][pFishki] -= 100;
					MysqlUpdatePlayerInt(playerid, "fishki", pInfo[playerid][pFishki]);
					format(string,sizeof(string),"%s обменял 100 фишек на 8000$", GetName(playerid));
		        	WriteLog("Fishki",string);
					SendClientMessage(playerid, COLOR_GREEN, "Вы обменяли 100 фишек на 8000$");
					ShowPlayerDialog(playerid, dBuyFishki, DIALOG_STYLE_LIST, "{FFCC00}Выберите действие", "1. Купить фишки\n2. Обменять фишки", "Выбрать", "Отмена");
				}
				case 4:
				{
					if(pInfo[playerid][pFishki] < 1000) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Недостаточно фишек для обмена!");
                    TransferMoney(-1, playerid, 80000);
					pInfo[playerid][pFishki] -= 1000;
					MysqlUpdatePlayerInt(playerid, "fishki", pInfo[playerid][pFishki]);
					format(string,sizeof(string),"%s обменял 1000 фишек на 80000$", GetName(playerid));
		        	WriteLog("Fishki",string);
					SendClientMessage(playerid, COLOR_GREEN, "Вы обменяли 1000 фишек на 80000$");
					ShowPlayerDialog(playerid, dBuyFishki, DIALOG_STYLE_LIST, "{FFCC00}Выберите действие", "1. Купить фишки\n2. Обменять фишки", "Выбрать", "Отмена");
				}
			}
	    }
	    case dStavkaRace:
	    {
	        if(!response) return 1;
	        stringer[0] = EOS;
			new summa;
			if(sscanf(inputtext, "d", summa))
			{
				strcat(stringer,"{FFFFFF}Введите сумму которую хотите внести в бюджет гонки\n");
				strcat(stringer,"Сумма должна быть не менее 2.000$ и не более 100.000$\n\n");
				strcat(stringer,"Приз:\n");
				strcat(stringer,"{FFFFFF}1 место - {3399FF}80% от бюджета игры\n");
				strcat(stringer,"{FFFFFF}2 место - {3399FF}60% от бюджета игры\n");
				strcat(stringer,"{FFFFFF}3 место - {3399FF}40% от бюджета игры\n");
				strcat(stringer,"{FFFFFF}4 место - {3399FF}10% от бюджета игры\n");
				strcat(stringer,"{FFFFFF}5 место - {3399FF}5% от бюджета игры");
				return ShowPlayerDialog(playerid, dStavkaRace, DIALOG_STYLE_INPUT, "{FFCC00}Регистрация на мероприятие", stringer, "Принять", "Отмена");
			}
			if(!(2000 <= summa <= 100000))
			{
			    strcat(stringer,"{FFFFFF}Введите сумму которую хотите внести в бюджет гонки\n");
				strcat(stringer,"Сумма должна быть не менее 2.000$ и не более 100.000$\n\n");
				strcat(stringer,"Приз:\n");
				strcat(stringer,"{FFFFFF}1 место - {3399FF}80% от бюджета игры\n");
				strcat(stringer,"{FFFFFF}2 место - {3399FF}60% от бюджета игры\n");
				strcat(stringer,"{FFFFFF}3 место - {3399FF}40% от бюджета игры\n");
				strcat(stringer,"{FFFFFF}4 место - {3399FF}10% от бюджета игры\n");
				strcat(stringer,"{FFFFFF}5 место - {3399FF}5% от бюджета игры");
				return ShowPlayerDialog(playerid, dStavkaRace, DIALOG_STYLE_INPUT, "{FFCC00}Регистрация на мероприятие", stringer, "Принять", "Отмена");
			}
			if(summa > GetCash(playerid))
			{
			    SendClientMessage(playerid, COLOR_GREY, NoMoney);
			    strcat(stringer,"{FFFFFF}Введите сумму которую хотите внести в бюджет гонки\n");
				strcat(stringer,"Сумма должна быть не менее 2.000$ и не более 100.000$\n\n");
				strcat(stringer,"Приз:\n");
				strcat(stringer,"{FFFFFF}1 место - {3399FF}80% от бюджета игры\n");
				strcat(stringer,"{FFFFFF}2 место - {3399FF}60% от бюджета игры\n");
				strcat(stringer,"{FFFFFF}3 место - {3399FF}40% от бюджета игры\n");
				strcat(stringer,"{FFFFFF}4 место - {3399FF}10% от бюджета игры\n");
				strcat(stringer,"{FFFFFF}5 место - {3399FF}5% от бюджета игры");
				return ShowPlayerDialog(playerid, dStavkaRace, DIALOG_STYLE_INPUT, "{FFCC00}Регистрация на мероприятие", stringer, "Принять", "Отмена");
			}
			GonkaStavka[playerid] = summa;
			TransferMoney(playerid, -1, summa);
			GonkaPriz += summa;
			GonkaPlayers ++;
			NumberMesto[playerid] = GonkaPlayers;
			if(NumberMesto[playerid] < 0) NumberMesto[playerid] = 1;
			SendMes(playerid, COLOR_GREEN, "Вы зарегистрировались на гонки. Ваш номер: %i, ожидайте старта.", NumberMesto[playerid]);
			SetPVarInt(playerid, "PlayerGonka", 1);
	    }
		case dTuning:
		{
			if(!response) return 1;
			if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться за рулем своего авто!");
			new pveh = GetPVarInt(playerid,"VehicleEnters");
			SetVehiclePos(pveh, 614.8751,-124.8771,997.9922);
			SetVehicleZAngle(pveh, 88.5082);
			SetPlayerInterior(playerid, 3);
			SetPlayerVirtualWorld(playerid, playerid);
			SetVehicleVirtualWorld(pveh, playerid);
			LinkVehicleToInterior(pveh, 3);
			PutPlayerInVehicle(playerid, pveh, 0);
			ShowTuningDialog(playerid);
			SetPlayerCameraPos(playerid, 610.0254,-130.5426,999.9613);
			SetPlayerCameraLookAt(playerid, 613.7177,-126.2820,998.7412);
			TogglePlayerControllable(playerid, false);
			SetPVarInt(playerid, "UsedCTO", 1);
			new bizid = GetPVarInt(playerid,"TuningBizID");
			BizInfo[bizid][bVisitors]++;
			SendClientMessage(playerid, COLOR_YELLOW, "[Информация] {FFFFFF}Для того чтобы выйти из тюнинга, введите /canceltune");
		}
		case 669:
		{
			if(!response) return 1;
			SetPlayerSkin(playerid, 260);
			pTemp[playerid][pWork] = 2;
			for(new i; i < 4; i++) PlayerTextDrawShow(playerid, status_work_TD[playerid][i]);
			PlayerTextDrawSetString(playerid, status_work_TD[playerid][2], "AMOUNT: 0KG");
			PlayerTextDrawSetString(playerid, status_work_TD[playerid][3], "PERCENT: 0%");
			new rand_coord = random(sizeof(DerevoPos));
			SetPlayerCheckpoint(playerid, DerevoPos[rand_coord][0], DerevoPos[rand_coord][1], DerevoPos[rand_coord][2], 3.0);
			SetPVarInt(playerid, "Derevo", rand_coord);
			SetPlayerAttachedObject(playerid, 3, 341, 6, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
			SendClientMessage(playerid, COLOR_BLUE, "Вы начали работу на лесопилке.");
		}
		case 670:
		{
			if(!response) return 1;
			new money = pTemp[playerid][pWorkSalary]*AMOUNT_OF_SALARY_SAWMILL;
    		if(pInfo[playerid][pMember]) SetPlayerSkin(playerid,pInfo[playerid][pMemberSkin]);
			else SetPlayerSkin(playerid,pInfo[playerid][pModel]);
            SendMes(playerid, COLOR_BLUE, "Вы закончили рабочий день. Всего заработано: {63BD4E}%i$",money);
            new str[32];
			if(doubling_salary)
			{
			    new money2 = money*2;
			    SendMes(playerid, COLOR_YELLOW, "[Информация] {FFFFFF}С учётом акции Вы заработали: {63BD4E}%i$",money2);
                format(str, sizeof(str), "~g~+%d$", money2);
                GameTextForPlayer(playerid,str,3000,1);
				TransferMoney(-1,playerid,money2);
			}
			else
			{
			    format(str, sizeof(str), "~g~+%d$", money);
			    GameTextForPlayer(playerid,str,3000,1);
			    TransferMoney(-1,playerid,money);
			}
            pTemp[playerid][pWorkSalary] = 0;
			if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
			pTemp[playerid][pWork] = 0;
			DeletePVar(playerid, "Derevo");
			for(new i; i < 4; i++) PlayerTextDrawHide(playerid, status_work_TD[playerid][i]);
			DisablePlayerCheckpoint(playerid);
		}
		case 671:
		{
			if(!response) return 1;
			SetPlayerSkin(playerid, 16);
			pTemp[playerid][pWork] = 1;
			for(new i; i < 4; i++) PlayerTextDrawShow(playerid, status_work_TD[playerid][i]);
			PlayerTextDrawSetString(playerid, status_work_TD[playerid][2], "AMOUNT: 0KG");
			PlayerTextDrawSetString(playerid, status_work_TD[playerid][3], "PERCENT: 0%");
			SetPlayerAttachedObject(playerid, 3, 18634, 6, 0.078222, 0.000000, 0.110844, 298.897308, 264.126861, 193.350555, 1.000000, 1.000000, 1.000000);
			SendClientMessage(playerid, COLOR_BLUE, "Вы начали работу на шахте.");
		}
		case 672:
		{
			if(!response) return 1;
			new money_one = pTemp[playerid][pMinerSalary][0]*AMOUNT_OF_SALARY_MINE_ONE;
			new money_two = pTemp[playerid][pMinerSalary][1]*AMOUNT_OF_SALARY_MINE_TWO;
			new money_three = pTemp[playerid][pMinerSalary][2]*AMOUNT_OF_SALARY_MINE_THREE;
			new salaryminer = money_one+money_two+money_three;
    		if(pInfo[playerid][pMember]) SetPlayerSkin(playerid,pInfo[playerid][pMemberSkin]);
			else SetPlayerSkin(playerid,pInfo[playerid][pModel]);
    		new string[128];
    		format(string, sizeof(string), "Вы закончили рабочий день. Всего заработано: {63BD4E}%i$", salaryminer);
            SendClientMessage(playerid, COLOR_BLUE, string);
            new str[32];
            if(doubling_salary)
			{
			    new salaryminer2 = salaryminer*2;
			    SendMes(playerid, COLOR_YELLOW, "[Информация] {FFFFFF}С учётом акции Вы заработали: {63BD4E}%i$",salaryminer2);
			    format(str, sizeof(str), "~g~+%d$", salaryminer2);
				GameTextForPlayer(playerid,str,3000,1);
				TransferMoney(-1,playerid,salaryminer2);
			}
			else
			{
			    format(str, sizeof(str), "~g~+%d$", salaryminer);
				GameTextForPlayer(playerid,str,3000,1);
				TransferMoney(-1,playerid,salaryminer);
			}
			if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
			for(new i; i < 4; i++) PlayerTextDrawHide(playerid, status_work_TD[playerid][i]);
			pTemp[playerid][pWork] = 0;
			RemovePlayerMapIcon(playerid, 88);
			pTemp[playerid][pMinerAmount][0] = pTemp[playerid][pMinerAmount][1] = pTemp[playerid][pMinerAmount][2] = 0;
			pTemp[playerid][pMinerSalary][0] = pTemp[playerid][pMinerSalary][1] = pTemp[playerid][pMinerSalary][2] = 0;
		}
		case 673:
		{
			if(!response) return 1;
  	        SetPlayerSkin(playerid,42);
			pTemp[playerid][pWork] = 3;
			SendClientMessage(playerid,COLOR_BLUE,"Вы начали рабочий день на заводе.");
			for(new i; i < 3; i++) PlayerTextDrawShow(playerid, status_work_TD[playerid][i]);
			PlayerTextDrawSetString(playerid, status_work_TD[playerid][2], "AMOUNT: 0KG");
		}
		case 674:
		{
			if(!response) return 1;
			if(GetPVarInt(playerid,"pgunobject"))
			{
				new objectid = GetPVarInt(playerid,"pgunobject");
				if(IsValidDynamicObject(objectid)) DestroyDynamicObject(objectid);
				DeletePVar(playerid,"pgunobject");
			}
			new money = pTemp[playerid][pWorkSalary]*AMOUNT_OF_SALARY_PLANT;
			DeletePVar(playerid,"workamountgun");
			RemovePlayerAttachedObject(playerid,0);
			pTemp[playerid][pWork] = 0;
			if(pInfo[playerid][pMember]) SetPlayerSkin(playerid,pInfo[playerid][pMemberSkin]);
			else SetPlayerSkin(playerid,pInfo[playerid][pModel]);
			SendMes(playerid, COLOR_BLUE, "Вы закончили рабочий день. Всего заработано: {63BD4E}%i$", money);
			new str[32];
			if(doubling_salary)
			{
			    new money2 = money*2;
			    SendMes(playerid, COLOR_YELLOW, "[Информация] {FFFFFF}С учётом акции Вы заработали: {63BD4E}%i$",money2);
				format(str, sizeof(str), "~g~+%d$", money2);
				GameTextForPlayer(playerid,str,3000,1);
				TransferMoney(-1, playerid, money2);
			}
			else
			{
				format(str, sizeof(str), "~g~+%d$", money);
				GameTextForPlayer(playerid,str,3000,1);
				TransferMoney(-1, playerid, money);
			}
			for(new i; i < 3; i++) PlayerTextDrawHide(playerid, status_work_TD[playerid][i]);
			pTemp[playerid][pWorkSalary] = 0;
			DisablePlayerCheckpoint(playerid);
		}
		case dGPS:
		{
			if(!response) return 1;
			switch(listitem)
			{
			    case 0: ShowPlayerDialog(playerid, 10001, DIALOG_STYLE_LIST, "{FFCC00}Основные места", "1. Администрация г.Южный\n2. Администрация г.Арзамас\n3. Администрация Облости\n4. Спортзал\n5. Церковь\n6. Автошкола\n7. Склад оружия\n8. Склад медикаментов", "Поиск", "Назад");
                case 1:	ShowPlayerDialog(playerid, 10002, DIALOG_STYLE_LIST, "{FFCC00}Работы", "1. Завод по сборке оружия\n2. Лесопилка\n3. Шахта\n4. Дальнобойщикам\n5. Стоянка автобусов пгт.Батырево\n6. Стоянка автобусов г.Южный\n7. Таксопарк пгт.Батырево\n8. Таксопарк г.Южный\n9. Машины механиков пгт.Батырево\n10. Машины механиков г.Южный", "Поиск", "Назад");
                case 2: ShowPlayerDialog(playerid, 10003, DIALOG_STYLE_LIST, "{FFCC00}Государственные организации", "1. Полиция г.Южного\n2. Полиция г.Арзамас\n3. Полиция пгт.Батырево\n4. ФСБ\n5. Больница г.Южного\n6. Больница пгт.Батырево\n7. Больница г.Арзамас\n8. Армия\n9. СМИ г.Южный\n10. СМИ пгт.Батырево", "Поиск", "Назад");
				case 3: ShowPlayerDialog(playerid, 10004, DIALOG_STYLE_LIST, "{FFCC00}Нелегальные организации", "1. Итальянская Мафия\n2. Yakuza\n3. Русская мафия\n4. Наркопритон", "Поиск", "Назад");
				case 4:	ShowPlayerDialog(playerid, 10006, DIALOG_STYLE_LIST, "{FFCC00}Автосалоны и тюнинги", "1. Автосалон\t{CBCCCE}Эконом{FFFFFF}\n2. Автосалон\t{CBCCCE}Средний{FFFFFF}\n3. Автосалон\t{CBCCCE}Спорт\n4. Мотосалон\n5. Пункт выдачи номеров\n6. Тюнинг пгт.Батырево\n7. Тюнинг г.Южный", "Поиск", "Назад");
				case 5: ShowPlayerDialog(playerid, 10007, DIALOG_STYLE_LIST, "{FFCC00}Банки", "1. Банк г.Южный\n2. Банк пгт.Батырево", "Поиск", "Назад");
				case 6: ShowPlayerDialog(playerid, 10005, DIALOG_STYLE_LIST, "{FFCC00}Бизнесы", "1. Магазины одежды\n2. Амму-нации", "Выбрать", "Назад");
				case 7: ShowPlayerDialog(playerid, 10011, DIALOG_STYLE_LIST, "{FFCC00}Развлечения", "1. Casino Mirage\n2. Гонки: Пустыня", "Выбрать", "Назад");
				case 8: ShowPlayerDialog(playerid, 10012, DIALOG_STYLE_LIST, "{FFCC00}Прочее", "{63BD4E}Ближайшие места\n{FFFFFF}- 24/7\n- АЗС\n- Закусочная\n- Банкомат\n{FF9900}Моё имущество\n{FFFFFF}- Дом\n- Бизнес\n- Транспорт\n- Доверенный транспорт\nКонтейнеры", "Выбрать", "Назад");
			}
		}
		case 10003:
		{
			if(!response) return cmd_gps(playerid, inputtext);
			new locname[30], Float:X, Float:Y, Float:Z;
			switch(listitem)
			{
				case 0: X = 2581.8257, Y = -2405.4414, Z = 22.0078, locname = "Полиция г.Южного";
				case 1: X = 758.9640, Y = 768.2162, Z = 12.0059, locname = "Полиция г.Арзамас";
				case 2: X = 1914.9479, Y = 2183.0967, Z = 15.7060, locname = "Полиция пгт.Батырево";
				case 3: X = 2411.7161, Y = -1848.9020, Z = 21.8578, locname = "ФСБ";
				case 4: X = 2112.8333, Y = -2386.6748, Z = 21.9430, locname = "Больница г.Южного";
				case 5: X = 1971.9451, Y = 1595.6053, Z = 15.7490, locname = "Больница пгт.Батырево";
				case 6: X = -284.9573, Y = 589.2452, Z = 12.1857, locname = "Больница г.Арзамас";
				case 7: X = 1899.9298, Y = 1723.7993, Z = 15.9118, locname = "Армия";
			    case 8: X = 2125.7537, Y = -1954.0420, Z = 20.2422, locname = "СМИ г.Южный";
			    case 9: X = 1991.0562, Y = 1945.6309, Z = 15.5928, locname = "СМИ пгт.Батырево";
			}
			SetPlayerGPS(playerid, X, Y, Z, locname);
		}
		case 10004:
		{
		    if(!response) return cmd_gps(playerid,inputtext);
			new locname[30], Float:X, Float:Y, Float:Z;
			switch(listitem)
			{
			    case 0: X = 2170.5911, Y = -985.5103, Z = 2.2500, locname = "Итальянская Мафия";
				case 1: X = 2312.3796, Y = 1760.0038, Z = 1.0319, locname = "Yakuza";
				case 2: X = 2147.5103, Y = -1797.2211, Z = 18.9510, locname = "Русская мафия";
/*				case 3: X = 2324.6265, Y = -1971.1293, Z = 22.1137, locname = "ОПГ Южная";
				case 4: X = 2567.5972, Y = -1848.0558, Z = 21.9560, locname = "ОПГ Тамбовская";
				case 5: X = 2395.8335, Y = -1726.1880, Z = 21.8594, locname = "Южная братва";
				case 6: X = 2331.0073, Y = -2615.7258, Z = 21.8096, locname = "ОПГ Солнцевская";
				case 7: X = 2614.5947, Y = 1777.4502, Z = 2.5432, locname = "ОПГ Ореховская";*/
				case 3: X = 2206.8955, Y = -1791.6375, Z = 21.7119, locname = "Наркопритон";
			}
			SetPlayerGPS(playerid, X, Y, Z, locname);
		}
		case 10001:
        {
 			if(!response) return cmd_gps(playerid, inputtext);
 			new locname[32], Float:X, Float:Y, Float:Z;
			switch(listitem)
			{
			    case 0: X = 1909.9258, Y = -2236.8240, Z = 11.2373, locname = "Администрация г.Южный";
			    case 1: X = -140.3493, Y = 591.2073, Z = 12.1494, locname = "Администрация г.Арзамас";
			    case 2: X = 1825.9019, Y = 2097.3088, Z = 15.8507, locname = "Администрация Облости";
			    case 3: X = 2351.4106, Y = -2142.2961, Z = 21.9584, locname = "Спортзал";
			    case 4: X = 2081.4229, Y = 1917.8486, Z = 15.6343, locname = "Церковь";
			    case 5: X = 2185.8628, Y = -2194.8933, Z = 22.0478, locname = "Автошкола";
			    case 6: X = 1763.0317, Y = 2268.7573, Z = 15.8666, locname = "Склад оружия";
			    //case 6: X = 1168.4670, Y = 1370.4641, Z = 10.8125, locname = "Военкомат";// До делаю
			    case 7: X = 1970.2356, Y = -2603.8665, Z = 11.4823, locname = "Склад медикаментов";// также
			}
			SetPlayerGPS(playerid, X, Y, Z, locname);
		}
		case 10005:
       	{
	 		if(!response) return cmd_gps(playerid, inputtext);
			switch(listitem)
			{
			    case 0: ShowPlayerDialog(playerid, 10009, DIALOG_STYLE_LIST, "{FFCC00}Магазины одежды", "1. Victim LS\n2. Victim SF\n3. Victim LV", "Поиск", "Назад");
			    case 1: ShowPlayerDialog(playerid, 10010, DIALOG_STYLE_LIST, "{FFCC00}Амму-нации", "1. Ammo-Nation LS\n2. Ammo-Nation SF\n3. Ammo-Nation LV", "Поиск", "Назад");
			}
		}
		case 10009:
		{
		    if(!response) return ShowPlayerDialog(playerid, 10005, DIALOG_STYLE_LIST, "{FFCC00}Бизнесы", "1. Магазины одежды\n2. Амму-нации", "Выбрать", "Назад");
			new locname[30], Float:X, Float:Y, Float:Z;
			switch(listitem)
			{
				case 0: X = 461.710388, Y = -1500.84558, Z = 31.044805, locname = "Victim LS";
				case 1: X = -1694.50732, Y = 951.848144, Z = 24.890625, locname = "Victim SF";
				case 2: X = 2802.937988, Y = 2430.711425, Z = 11.062500, locname = "Victim LV";
			}
			SetPlayerGPS(playerid, X, Y, Z, locname);
		}
		case 10010:
		{
		    if(!response) return ShowPlayerDialog(playerid, 10005, DIALOG_STYLE_LIST, "{FFCC00}Бизнесы", "1. Магазины одежды\n2. Амму-нации", "Выбрать", "Назад");
		    new locname[30], Float:X, Float:Y, Float:Z;
			switch(listitem)
			{
				case 0: X = 1368.999877, Y = -1279.69494, Z = 13.546875, locname = "Ammo-Nation LS";
				case 1: X = -2625.91235, Y = 209.076293, Z = 4.614952, locname = "Ammo-Nation SF";
				case 2: X = 2159.543945, Y = 943.259948, Z = 10.820312, locname = "Ammo-Nation LV";
			}
			SetPlayerGPS(playerid, X, Y, Z, locname);
		}
		case 10006:
        {
 			if(!response) return cmd_gps(playerid, inputtext);
 			new locname[30], Float:X, Float:Y, Float:Z;
			switch(listitem)
			{
				case 0: X = 1827.1608, Y = 2254.0291, Z = 15.2729, locname = "Автосалон";//Эконом
				case 1: X = 2478.8123, Y = -735.5245, Z = 12.0969, locname = "Автосалон";//Средний
				case 2: X = 2324.5576, Y = -1802.3085, Z = 22.4540, locname = "Автосалон";//Спорт
				case 3: X = 2340.3860, Y = 1988.9602, Z = 15.9900, locname = "Мотосалон";
				case 4: SendClientMessage(playerid, COLOR_YELLOW, "[Информация] {FFFFFF}Пункт выдачи номеров находится в полицейском департаменте (/gps - Государственные организации)");
				case 5: X = 2018.1426, Y = 1893.5010, Z = 15.7128, locname = "Тюнинг пгт.Батырево";
				case 6: X = 2176.9626, Y = -1828.1323, Z = 18.8095, locname = "Тюнинг г.Южный";
			//	case 7: X = 2386.954101, Y = 1037.186279, Z = 10.820312, locname = "Тюнинг Las Venturas";
			}
			if(listitem != 4) SetPlayerGPS(playerid, X, Y, Z, locname);
		}
		case 10007:
		{
		    if(!response) return cmd_gps(playerid, inputtext);
	 		new locname[30], Float:X, Float:Y, Float:Z;
		    switch(listitem)
		    {
		        case 0: X = 2379.2395, Y = -1885.5704, Z = 21.9619, locname = "Банк г.Южный";
				case 1: X = 1852.3927, Y = 2041.3236, Z = 15.8850, locname = "Банк пгт.Батырево";
				//case 2: X = 2361.5991, Y = 2398.4265, Z = 10.8203, locname = "Банк Las Venturas";
				//case 3: X = 2300.5100, Y = -16.2092, Z = 26.4844, locname = "Банк Palomino Creek";
		    }
		    SetPlayerGPS(playerid, X, Y, Z, locname);
		}
		case 10008:
		{
			if(!response) return ShowPlayerDialog(playerid, 10002, DIALOG_STYLE_LIST, "{FFCC00}Работы", "1. Завод по сборке оружия\n2. Лесопилка\n3. Шахта\n4. Дальнобойщикам\n5. Стоянка автобусов пгт.Батырево\n6. Стоянка автобусов г.Южный\n7. Таксопарк пгт.Батырево\n8. Таксопарк г.Южный\n9. Машины механиков пгт.Батырево\n10. Машины механиков г.Южный", "Поиск", "Назад");
			new locname[30], Float:X, Float:Y, Float:Z;
			switch(listitem)
			{
				case 0: X = 2686.4407, Y = -2360.1921, Z = 17.9362, locname = "Аренда грузовика";
				case 1: X = 2637.3203, Y = -1420.7903, Z = 24.2823, locname = "Загрузка угля";
				case 2: X = 1832.7698, Y = 1453.2332, Z = 9.9700, locname = "Загрузка древесины";//Это для дальнобой все готов
				case 3: X = 2737.9253, Y = -2276.2805, Z = 17.9269, locname = "Разгрузка на заводе";
				case 4: X = 2677.7083, Y = -2183.0605, Z = 17.9080, locname = "Загрузка оружия";
				case 5: X = 1783.9976, Y = 2266.7744, Z = 15.7810, locname = "Разгрузка на складе оружия";
			}
			SetPlayerGPS(playerid, X, Y, Z, locname);
		}
		case 10002:
		{
			if(!response) return cmd_gps(playerid, inputtext);
			new locname[30], Float:X, Float:Y, Float:Z;
			switch(listitem)
			{
			    case 0: X = 2726.4302, Y = -2237.3257, Z = 17.9269, locname = "Завод по сборке оружия";
				case 1: X = 1825.3193, Y = 1454.5055, Z = 9.9700, locname = "Лесопилка";
                case 2: X = 2493.1067, Y = -1498.8555, Z = 24.2386, locname = "Шахта";
				case 3: ShowPlayerDialog(playerid, 10008, DIALOG_STYLE_LIST, "{FFCC00}Дальнобойщики", "1. Аренда грузовика\n2. Загруза угля\n3. Загрузка древесины\n4. Разгрузка на заводе\n5. Загрузка оружия\n6. Разгрузка на складе оружия", "Выбрать", "Назад");
				case 4: X = 1810.0917, Y = 2512.9749, Z = 15.6717, locname = "Стоянка автобусов батырево";
				case 5: X = 2234.4111, Y = -1958.3313, Z = 18.8125, locname = "Стоянка автобусов г.Южный";
				case 6: X = 1933.3279, Y = 2099.1064, Z = 15.7053, locname = "Таксопарк пгт.Батырево";
				case 7: X = 2204.4446, Y = -1967.6898, Z = 18.8125, locname = "Таксопарк г.Южный";
				case 8: X = 2003.4751, Y = 1888.5432, Z = 15.7128, locname = "Машины механиков пгт.Батырево";
				case 9: X = 2139.7622, Y = -1826.9415, Z = 18.8213, locname = "Машины механиков г.Южный";
				//case 10: X = 2832.1262, Y = 1356.1488, Z = 10.7576, locname = "Автопарк LV";
			}
			if(listitem != 3) SetPlayerGPS(playerid, X, Y, Z, locname);
		}
		case 10011:
		{
		    if(!response) return cmd_gps(playerid, inputtext);
			new locname[30], Float:X, Float:Y, Float:Z;
			switch(listitem)
			{
			    case 0: X = 2545.9976, Y = -2203.9180, Z = 21.9590, locname = "Казино";// Также готово хи хи
			    case 1: X = 1795.1968, Y = 2037.9357, Z = 16.2072, locname = "Гонки: Пустыня";// Готово
			}
			SetPlayerGPS(playerid, X, Y, Z, locname);
		}
		case 10012:
		{
		    if(!response) return cmd_gps(playerid, inputtext);
		    new locname[30], Float:X, Float:Y,Float:Z;
		    switch(listitem)
		    {
		        case 0: ShowPlayerDialog(playerid, 10012, DIALOG_STYLE_LIST, "{FFCC00}Прочее", "{63BD4E}Ближайшие места\n{FFFFFF}- 24/7\n- АЗС\n- Закусочная\n- Банкомат\n{FF9900}Моё имущество\n{FFFFFF}- Дом\n- Бизнес\n- Транспорт\n- Доверенный транспорт\nКонтейнеры", "Выбрать", "Назад");
		        case 1:
				{
				    new max_distance = 100000;
					new id_biz = -1;
					new vehicleid = GetPVarInt(playerid,"VehicleEnters");
				    for(new i = 1; i <= TOTALBIZ; i++)
				    {
				        if(BizInfo[i][bType] != 1) continue;
				        new here_distance =
							(!IsPlayerInAnyVehicle(playerid)) ?
							floatround(GetPlayerDistanceFromPoint(playerid, BizInfo[i][bEntr][0], BizInfo[i][bEntr][1], BizInfo[i][bEntr][2])) :
							floatround(GetVehicleDistanceFromPoint(vehicleid, BizInfo[i][bEntr][0], BizInfo[i][bEntr][1], BizInfo[i][bEntr][2]));
				        if(here_distance < max_distance)
						{
							id_biz = i;
							max_distance = here_distance;
						}
					}
					if(max_distance == -1 || id_biz == -1) return 1;
					X = BizInfo[id_biz][bEntr][0], Y = BizInfo[id_biz][bEntr][1], Z = BizInfo[id_biz][bEntr][2];
					strcat(locname, BizInfo[id_biz][bName]);
				}
				case 2:
				{
				    new max_distance = 100000;
					new id_biz = -1;
					new vehicleid = GetPVarInt(playerid,"VehicleEnters");
				    for(new i = 1; i <= TOTALBIZ; i++)
				    {
				        if(BizInfo[i][bType] != 2) continue;
				        new here_distance =
							(!IsPlayerInAnyVehicle(playerid)) ?
							floatround(GetPlayerDistanceFromPoint(playerid, BizInfo[i][bEntr][0], BizInfo[i][bEntr][1], BizInfo[i][bEntr][2])) :
							floatround(GetVehicleDistanceFromPoint(vehicleid, BizInfo[i][bEntr][0], BizInfo[i][bEntr][1], BizInfo[i][bEntr][2]));
				        if(here_distance < max_distance)
						{
							id_biz = i;
							max_distance = here_distance;
						}
					}
					if(max_distance == -1 || id_biz == -1) return 1;
					X = BizInfo[id_biz][bEntr][0], Y = BizInfo[id_biz][bEntr][1], Z = BizInfo[id_biz][bEntr][2];
					strcat(locname, BizInfo[id_biz][bName]);
				}
				case 3:
				{
				    new max_distance = 100000;
					new id_biz = -1;
					new vehicleid = GetPVarInt(playerid,"VehicleEnters");
				    for(new i = 1; i <= TOTALBIZ; i++)
				    {
				        if(BizInfo[i][bType] != 3) continue;
				        new here_distance =
							(!IsPlayerInAnyVehicle(playerid)) ?
							floatround(GetPlayerDistanceFromPoint(playerid, BizInfo[i][bEntr][0], BizInfo[i][bEntr][1], BizInfo[i][bEntr][2])) :
							floatround(GetVehicleDistanceFromPoint(vehicleid, BizInfo[i][bEntr][0], BizInfo[i][bEntr][1], BizInfo[i][bEntr][2]));
				        if(here_distance < max_distance)
						{
							id_biz = i;
							max_distance = here_distance;
						}
					}
					if(max_distance == -1 || id_biz == -1) return 1;
					X = BizInfo[id_biz][bEntr][0], Y = BizInfo[id_biz][bEntr][1], Z = BizInfo[id_biz][bEntr][2];
					strcat(locname, BizInfo[id_biz][bName]);
				}
				case 4:
				{
				    new max_distance = 100000;
					new id_atm = -1;
					new vehicleid = GetPVarInt(playerid,"VehicleEnters");
				    for(new i = 1; i <= TOTALATM; i++)
				    {
				        new here_distance =
							(!IsPlayerInAnyVehicle(playerid)) ?
							floatround(GetPlayerDistanceFromPoint(playerid, ATMInfo[i][aX], ATMInfo[i][aY], ATMInfo[i][aZ])) :
							floatround(GetVehicleDistanceFromPoint(vehicleid, ATMInfo[i][aX], ATMInfo[i][aY], ATMInfo[i][aZ]));
				        if(here_distance < max_distance)
						{
							id_atm = i;
							max_distance = here_distance;
						}
					}
					if(max_distance == -1 || id_atm == -1) return 1;
					X = ATMInfo[id_atm][aX], Y = ATMInfo[id_atm][aY], Z = ATMInfo[id_atm][aZ], locname = "Ближайший банкомат";
				}
				case 5: ShowPlayerDialog(playerid, 10012, DIALOG_STYLE_LIST, "{FFCC00}Прочее", "{63BD4E}Ближайшие места\n{FFFFFF}- 24/7\n- АЗС\n- Закусочная\n- Банкомат\n{FF9900}Моё имущество\n{FFFFFF}- Дом\n- Бизнес\n- Транспорт\n- Доверенный транспорт\nКонтейнеры", "Выбрать", "Назад");
		        case 6:
		        {
					if(!pInfo[playerid][pHouse]) return SendClientMessage(playerid, COLOR_GREY, "Вы не владеете домом!");
		            new i = pInfo[playerid][pHouse];
		            X = HouseInfo[i][hEntr][0], Y = HouseInfo[i][hEntr][1], Z = HouseInfo[i][hEntr][2], locname = "Дом";
				}
				case 7:
				{
				    if(!pInfo[playerid][pBiz]) return SendClientMessage(playerid, COLOR_GREY, "Вы не владеете бизнесом!");
		            new i = pInfo[playerid][pBiz];
		            X = BizInfo[i][bEntr][0], Y = BizInfo[i][bEntr][1], Z = BizInfo[i][bEntr][2], locname = "Бизнес";
				}
				case 8:
				{
				    if(pTemp[playerid][pCarPlayerID] == INVALID_VEHICLE_ID) return SendClientMessage(playerid, COLOR_GREY, "У вас нет авто!");
				    new vehicleid = pTemp[playerid][pCarPlayerID];
				    if(GetVehicleVirtualWorld(vehicleid) > 0) return SendClientMessage(playerid, COLOR_GREY, "Транспорт находится в вашем гараже");
				    GetVehiclePos(vehicleid, X, Y, Z);
					locname = "Транспорт";
				}
				case 9:
				{
				    if(!pInfo[playerid][pVehicleKey]) return SendClientMessage(playerid, COLOR_GREY, "У вас нет доверенного авто!");
				    new vehicleid = pInfo[playerid][pVehicleKey];
				    if(GetVehicleVirtualWorld(vehicleid) > 0) return SendClientMessage(playerid, COLOR_GREY, "Транспорт находится в гараже владельца");
				    GetVehiclePos(vehicleid, X, Y, Z);
					locname = "Доверенный транспорт";
				}
				case 10:{
					X = 1745.1936, Y = -1013.8396, Z = 11.8497, locname = "Контейнеры г. Южный";
				}

			}
			if(listitem != 0 && listitem != 5) SetPlayerGPS(playerid, X, Y, Z, locname);
		}
		case dTuning+1: // CTO
		{
			if(response)
			{
				new bizid = GetPVarInt(playerid,"TuningBizID");
				new till = BizInfo[bizid][bTill];
				new string[350];
				switch(listitem)
				{
					case 0:
					{
						SendMes(playerid,COLOR_WHITE,"Стоимость перекраски: %d$", till*5);
						ShowPlayerDialog(playerid, dTuning+3, 1, "{FFCC00}Перекраска", "{FFFFFF}Введите основной и дополнительный цвет транспорта через запятую", "Перекрасить", "Назад");
					}
					case 1:
					{
						if(GetVehicleComponentInSlot(GetPVarInt(playerid,"VehicleEnters"),CARMODTYPE_HYDRAULICS) != 1087)
						{
							format(string,128,"{FFFFFF}Стоимость установки: %d$\nВы уверены, что хотите купить и поставить гидравлику?",till*100);
							ShowPlayerDialog(playerid,dTuning+2,DIALOG_STYLE_MSGBOX,"{FFCC00}Установка гидравлики",string,"Да","Назад");
						}
						else
						{
							ShowPlayerDialog(playerid,dTuning+2,DIALOG_STYLE_MSGBOX,"{FFCC00}Удаление гидравлики","{FFFFFF}Вы уверены, что хотите удалить гидравлику?","Да","Назад");
						}
					}
					case 2:
					{
						format(string,128,"1. Nitro x2\t\t[%d$]\n2. Nitro x5\t\t[%d$]\n3. Nitro x10\t\t[%d$]",till*80,till*150,till*300);
						ShowPlayerDialog(playerid,dTuning+4,DIALOG_STYLE_LIST,"{FFCC00}Закись азота",string,"Купить","Назад");
					}
					case 3:
					{
						format(string,350,"1. Shadow\t\t[%d$]\n2. Mega\t\t\t[%d$]\n3. Wires\t\t[%d$]\n4. Classic\t\t[%d$]\n5. Twist\t\t\t[%d$]\n6. Cutter\t\t[%d$]\n7. ОПГ Южная\t\t[%d$]\n8. Atomic\t\t[%d$]\n9. Dollar\t\t[%d$]\n10. Switch\t\t[%d$]",till*60,till*79,till*53,till*73,till*93,till*80,till*42,till*100,till*200,till*300);
						ShowPlayerDialog(playerid,dTuning+5,DIALOG_STYLE_LIST,"{FFCC00}Смена дисков",string,"Смотреть","Назад");
					}
					case 4:
					{
						format(string,150,"1. Покрасочная работа №1\t\t[%d$]\n2. Покрасочная работа №2\t\t[%d$]\n3. Покрасочная работа №3\t\t[%d$]",till*30,till*35,till*40);
						ShowPlayerDialog(playerid,dTuning+6,DIALOG_STYLE_LIST,"{FFCC00}Покрасочные работы",string,"Смотреть","Назад");
					}
					case 5:
					{
						new c = GetPVarInt(playerid,"VehicleEnters");
						new getmodel = GetVehicleModel(c);
						if(getmodel == 562 || getmodel == 560 || getmodel == 565 || getmodel == 561 || getmodel == 559 || getmodel == 558)
						{
							ShowPlayerDialog(playerid,dTuning+9,DIALOG_STYLE_LIST,"{FFCC00}Спойлера","X-Flow\nAlien","Купить","Отмена");
						}
						else SendClientMessage(playerid,COLOR_GREY,"[Ошибка] Данная деталь недоступна для вашей модели"),ShowTuningDialog(playerid);
					}
					case 6:
					{
						new c = GetPVarInt(playerid,"VehicleEnters");
						new getmodel = GetVehicleModel(c);
						if(getmodel == 562 || getmodel == 560 || getmodel == 565 || getmodel == 561 || getmodel == 559 || getmodel == 558  || getmodel == 534  || getmodel == 536  || getmodel == 535  || getmodel == 576)
						{
							ShowPlayerDialog(playerid,dTuning+10,DIALOG_STYLE_LIST,"{FFCC00}Передний бампер","X-Flow\nAlien","Купить","Отмена");
						}
						else SendClientMessage(playerid,COLOR_GREY,"[Ошибка] Данная деталь недоступна для вашей модели"),ShowTuningDialog(playerid);
					}
					case 7:
					{
						new c = GetPVarInt(playerid,"VehicleEnters");
						new getmodel = GetVehicleModel(c);
						if(getmodel == 562 || getmodel == 560 || getmodel == 565 || getmodel == 561 || getmodel == 559 || getmodel == 558  || getmodel == 534  || getmodel == 536  || getmodel == 535  || getmodel == 576)
						{
							ShowPlayerDialog(playerid,dTuning+11,DIALOG_STYLE_LIST,"{FFCC00}Задний бампер","X-Flow\nAlien","Купить","Отмена");
						}
						else SendClientMessage(playerid, COLOR_GREY,"[Ошибка] Данная деталь недоступна для вашей модели"),ShowTuningDialog(playerid);
					}
					case 8:
					{
						new c = GetPVarInt(playerid,"VehicleEnters");
						new getmodel = GetVehicleModel(c);
						if(getmodel == 562 || getmodel == 560 || getmodel == 565 || getmodel == 561 || getmodel == 559 || getmodel == 558  || getmodel == 534  || getmodel == 536  || getmodel == 535  || getmodel == 575 || getmodel == 576)
						{
							ShowPlayerDialog(playerid,dTuning+12,DIALOG_STYLE_LIST,"{FFCC00}Боковые юбки","X-Flow\nAlien","Купить","Отмена");
						}
						else SendClientMessage(playerid, COLOR_GREY,"[Ошибка] Данная деталь недоступна для вашей модели"),ShowTuningDialog(playerid);
					}
					case 9:
					{
						new c = GetPVarInt(playerid,"VehicleEnters");
						new getmodel = GetVehicleModel(c);
						if(getmodel == 562 || getmodel == 560 || getmodel == 565 || getmodel == 561 || getmodel == 559 || getmodel == 558  || getmodel == 534  || getmodel == 536  || getmodel == 535  || getmodel == 575 || getmodel == 576)
						{
							ShowPlayerDialog(playerid,dTuning+13,DIALOG_STYLE_LIST,"{FFCC00}Крыша","X-Flow\nAlien","Купить","Отмена");
						}
						else SendClientMessage(playerid, COLOR_GREY,"[Ошибка] Данная деталь недоступна для вашей модели"),ShowTuningDialog(playerid);
					}
				}
			}
			else
			{
				new bizid = GetPVarInt(playerid,"TuningBizID");
				if(GetPlayerState(playerid) != 2) return ToCheat(playerid, 12221);
				new pveh = GetPVarInt(playerid,"VehicleEnters");
				SetVehiclePos(pveh,BizInfo[bizid][bEntr][0],BizInfo[bizid][bEntr][1],BizInfo[bizid][bEntr][2]);
				DeletePVar(playerid,"UsedCTO");
				SetVehicleZAngle(pveh,270.9845);
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				SetVehicleVirtualWorld(pveh,0);
				LinkVehicleToInterior(pveh,0);
				PutPlayerInVehicle(playerid, pveh, 0);
				TogglePlayerControllable(playerid,true);
				SetCameraBehindPlayer(playerid);
			}
		}
	case dTuning+9:
		{
			if(response)
			{
				new i = GetPVarInt(playerid,"TuningBizID");
				new till = BizInfo[i][bTill];
				new tune[2], c = GetPVarInt(playerid,"VehicleEnters");
				new getmodel = GetVehicleModel(c);
				if(getmodel == 562) tune[0] = 1146, tune[1] = 1147;
				else if(getmodel == 560) tune[0] = 1138, tune[1] = 1139;
				else if(getmodel == 565) tune[0] = 1049, tune[1] = 1050;
				else if(getmodel == 561) tune[0] = 1058, tune[1] = 1060;
				else if(getmodel == 559) tune[0] = 1158, tune[1] = 1162;
				else if(getmodel == 558) tune[0] = 1063, tune[1] = 1064;
				else return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Данная деталь 'Спойлер' недоступна для вашей модели"),ShowTuningDialog(playerid);
				AddVehicleComponent(c, tune[listitem]);
				SetPVarInt(playerid,"PriceCTO",till*25);
				SetPVarInt(playerid,"ComponentCTO",tune[listitem]);
				SetPVarInt(playerid,"ProductCTO",25);
				new string[128];
				format(string,128,"{FFFFFF}Стоимость этой запчасти: %d\nВы надумали с покупкой?",till*79);
				ShowPlayerDialog(playerid,dTuning+7,DIALOG_STYLE_MSGBOX,"{FFCC00}Подтверждение покупки",string,"Купить","Отмена");
			}
			else ShowTuningDialog(playerid);
		}
	case dTuning+10:
		{
			if(response)
			{
				new i = GetPVarInt(playerid,"TuningBizID");
				new till = BizInfo[i][bTill];
				new tune[2], c = GetPVarInt(playerid,"VehicleEnters");
				new getmodel = GetVehicleModel(c);
				if(getmodel == 562) tune[0] = 1171, tune[1] = 1172;
				else if(getmodel == 560) tune[0] = 1169, tune[1] = 1170;
				else if(getmodel == 575) tune[0] = 1174, tune[1] = 1175;
				else if(getmodel == 565) tune[0] = 1152, tune[1] = 1153;
				else if(getmodel == 561) tune[0] = 1155, tune[1] = 1157;
				else if(getmodel == 559) tune[0] = 1160, tune[1] = 1173;
				else if(getmodel == 558) tune[0] = 1165, tune[1] = 1166;
				else if(getmodel == 534) tune[0] = 1179, tune[1] = 1185;
				else if(getmodel == 536) tune[0] = 1181, tune[1] = 1182;
				else if(getmodel == 535) tune[0] = 1188, tune[1] = 1189;
				else if(getmodel == 576) tune[0] = 1190, tune[1] = 1191;
				else return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Данная деталь 'Передний бампер' недоступна для вашей модели"),ShowTuningDialog(playerid);
				AddVehicleComponent(c, tune[listitem]);
				SetPVarInt(playerid,"PriceCTO",till*25);
				SetPVarInt(playerid,"ComponentCTO",tune[listitem]);
				SetPVarInt(playerid,"ProductCTO",25);
				new string[128];
				format(string,128,"{FFFFFF}Стоимость этой запчасти: %d\nВы надумали с покупкой?",till*25);
				ShowPlayerDialog(playerid,dTuning+7,DIALOG_STYLE_MSGBOX,"{FFCC00}Подтверждение покупки",string,"Купить","Отмена");
			}
			else ShowTuningDialog(playerid);
		}
	case dTuning+11:
		{
			if(response)
			{
				new i = GetPVarInt(playerid,"TuningBizID");
				new till = BizInfo[i][bTill];
				new tune[2], c = GetPVarInt(playerid,"VehicleEnters");
				new getmodel = GetVehicleModel(c);
				if(getmodel == 562) tune[0] = 1148, tune[1] = 1149;
				else if(getmodel == 560) tune[0] = 1140, tune[1] = 1141;
				else if(getmodel == 575) tune[0] = 1176, tune[1] = 1177;
				else if(getmodel == 565) tune[0] = 1150, tune[1] = 1151;
				else if(getmodel == 561) tune[0] = 1154, tune[1] = 1156;
				else if(getmodel == 559) tune[0] = 1159, tune[1] = 1161;
				else if(getmodel == 558) tune[0] = 1167, tune[1] = 1168;
				else if(getmodel == 534) tune[0] = 1178, tune[1] = 1180;
				else if(getmodel == 536) tune[0] = 1183, tune[1] = 1184;
				else if(getmodel == 535) tune[0] = 1186, tune[1] = 1187;
				else if(getmodel == 576) tune[0] = 1192, tune[1] = 1193;
				else return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Данная деталь 'Задний бампер' недоступна для вашей модели"),ShowTuningDialog(playerid);
				AddVehicleComponent(c, tune[listitem]);
				SetPVarInt(playerid,"PriceCTO",till*25);
				SetPVarInt(playerid,"ComponentCTO",tune[listitem]);
				SetPVarInt(playerid,"ProductCTO",25);
				new string[128];
				format(string,128,"{FFFFFF}Стоимость этой запчасти: %d\nВы надумали с покупкой?",till*79);
				ShowPlayerDialog(playerid,dTuning+7,DIALOG_STYLE_MSGBOX,"{FFCC00}Подтверждение покупки",string,"Купить","Отмена");
			}
			else ShowTuningDialog(playerid);
		}
	case dTuning+12:
		{
			if(response)
			{
				new i = GetPVarInt(playerid,"TuningBizID");
				new till = BizInfo[i][bTill];
				new tune[4], c = GetPVarInt(playerid,"VehicleEnters");
				new getmodel = GetVehicleModel(c);
				if(getmodel == 562) tune[0] = 1041, tune[1] = 1036, tune[2] = 1039, tune[3] = 1040;
				else if(getmodel == 560) tune[0] = 1031, tune[1] = 1026, tune[2] = 1030, tune[3] = 1027;
				else if(getmodel == 575) { SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Невозможно прикрепить боковые юбки к данному транспорту!"); return ShowTuningDialog(playerid); }
				else if(getmodel == 565) tune[0] = 1048, tune[1] = 1047, tune[2] = 1039, tune[3] = 1040;
				else if(getmodel == 561) tune[0] = 1057, tune[1] = 1056, tune[2] = 1063, tune[3] = 1062;
				else if(getmodel == 559) tune[0] = 1070, tune[1] = 1069, tune[2] = 1072, tune[3] = 1071;
				else if(getmodel == 558) tune[0] = 1095, tune[1] = 1090, tune[2] = 1093, tune[3] = 1194;
				else if(getmodel == 534) tune[0] = 1106, tune[1] = 1101, tune[2] = 1124, tune[3] = 1122;
				else if(getmodel == 536) tune[0] = 1108, tune[1] = 1107, tune[2] = 1108, tune[3] = 1107;
				else if(getmodel == 535) tune[0] = 1119, tune[1] = 1121, tune[2] = 1121, tune[3] = 1120;
				else if(getmodel == 576) tune[0] = 1134, tune[1] = 1137, tune[2] = 1134, tune[3] = 1137;
				else return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Данная деталь 'Боковые Юбки' недоступна для вашей модели"),ShowTuningDialog(playerid);
				AddVehicleComponent(c, tune[listitem]);
				SetPVarInt(playerid,"PriceCTO",till*25);
				SetPVarInt(playerid,"ComponentCTO",tune[listitem]);
				SetPVarInt(playerid,"ComponentCTO2", tune[listitem+2]);
				SetPVarInt(playerid,"ProductCTO",25);
				new string[128];
				format(string,128,"{FFFFFF}Стоимость этой запчасти: %d\nВы надумали с покупкой?",till*79);
				ShowPlayerDialog(playerid,dTuning+7,DIALOG_STYLE_MSGBOX,"{FFCC00}Подтверждение покупки",string,"Купить","Отмена");
			}
			else ShowTuningDialog(playerid);
		}
	case dTuning+13:
		{
			if(response)
			{
				new i = GetPVarInt(playerid,"TuningBizID");
				new till = BizInfo[i][bTill];
				new tune[2], c = GetPVarInt(playerid,"VehicleEnters");
				new getmodel = GetVehicleModel(c);
				if(getmodel == 562) tune[0] = 1035, tune[1] = 1038;
				else if(getmodel == 560) tune[0] = 1032, tune[1] = 1033;
				else if(getmodel == 575) { SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Невозможно прикрепить крышу к данному транспорту!"); return ShowTuningDialog(playerid); }
				else if(getmodel == 565) tune[0] = 1053, tune[1] = 1054;
				else if(getmodel == 561) tune[0] = 1055, tune[1] = 1061;
				else if(getmodel == 559) tune[0] = 1067, tune[1] = 1068;
				else if(getmodel == 558) tune[0] = 1088, tune[1] = 1091;
				else if(getmodel == 534) { SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Невозможно прикрепить крышу к данному транспорту!"); return ShowTuningDialog(playerid); }
				else if(getmodel == 536) tune[0] = 1103, tune[1] = 1128;
				else if(getmodel == 535) tune[0] = 1130, tune[1] = 1131;
				else if(getmodel == 576) { SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Невозможно прикрепить крышу к данному транспорту!"); return ShowTuningDialog(playerid); }
				else
				{
					ShowTuningDialog(playerid);
					return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Данная деталь 'Крыша' недоступна для вашей модели");
				}
				AddVehicleComponent(c, tune[listitem]);
				SetPVarInt(playerid,"PriceCTO",till*25);
				SetPVarInt(playerid,"ComponentCTO",tune[listitem]);
				SetPVarInt(playerid,"ProductCTO",25);
				new string[128];
				format(string,128,"{FFFFFF}Стоимость этой запчасти: %d\nВы надумали с покупкой?",till*79);
				ShowPlayerDialog(playerid,dTuning+7,DIALOG_STYLE_MSGBOX,"{FFCC00}Подтверждение покупки",string,"Купить","Отмена");
			}
			else ShowTuningDialog(playerid);
		}
	case dTuning+2: // CTO
		{
			if(!response) return ShowTuningDialog(playerid);
			new i = GetPVarInt(playerid,"TuningBizID");
			new till = BizInfo[i][bTill];
			if(GetVehicleComponentInSlot(GetPVarInt(playerid,"VehicleEnters"),CARMODTYPE_HYDRAULICS) != 1087)
			{
				if(GetCash(playerid) < till*100) return SendClientMessage(playerid, COLOR_GREY, NoMoney),ShowTuningDialog(playerid);
				TransferMoney(playerid, -1, till*100);
				GiveBizMoney(i, till*100, 100);
				SendClientMessage(playerid,COLOR_GREEN,"Вы поставили гидравлику!");
				AddVehicleComponent(GetPVarInt(playerid,"VehicleEnters"),1087);
			}
			else
			{
				SendClientMessage(playerid,COLOR_RED,"Вы удалили гидравлику!");
				RemoveVehicleComponent(GetPVarInt(playerid,"VehicleEnters"),1087);
			}
			SaveVehicleTuning(playerid);
			ShowTuningDialog(playerid);
		}
	case dTuning+3: // CTO цвета 1
		{
			if(!response) return ShowTuningDialog(playerid);
			new color[2], c = pTemp[playerid][pCarPlayerID];
			if(sscanf(inputtext, "p<,>ii",color[0], color[1])) return ShowPlayerDialog(playerid, dTuning+3, 1, "Перекраска", "Введите основной и дополнительный цвет транспорта через запятую", "Принять", "Назад");
			if(!(0 <= color[0] <= 255))
			{
				ShowPlayerDialog(playerid, dTuning+3, 1, "{FFCC00}Перекраска", "{FFFFFF}Введите основной и дополнительный цвет транспорта через запятую", "Принять", "Назад");
				return SendClientMessage(playerid, COLOR_GREY, "ID цвета от 0 до 255!");
			}
			if(!(0 <= color[1] <= 255))
			{
				ShowPlayerDialog(playerid, dTuning+3, 1, "{FFCC00}Перекраска", "{FFFFFF}Введите основной и дополнительный цвет транспорта через запятую", "Принять", "Назад");
				return SendClientMessage(playerid, COLOR_GREY, "ID цвета от 0 до 255!");
			}
			new i = GetPVarInt(playerid,"TuningBizID");
			new till = BizInfo[i][bTill];
			if(GetCash(playerid) < till*5) return SendClientMessage(playerid, COLOR_GREY, NoMoney);
			TransferMoney(playerid, -1, till*5);
			GiveBizMoney(i, till*5, 5);
			pInfo[playerid][cColor][0] = color[0];
			pInfo[playerid][cColor][1] = color[1];
			ChangeVehicleColor(c, color[0], color[1]);
			SendClientMessage(playerid,COLOR_GREEN,"Вы успешно перекрасили свое авто");
			ShowTuningDialog(playerid);
		}
	case dTuning+4: // CTO
		{
			if(!response) return ShowTuningDialog(playerid);
			new i = GetPVarInt(playerid,"TuningBizID");
			new till = BizInfo[i][bTill];
			switch(listitem)
			{
			case 0:
				{
					if(GetCash(playerid) < till*80) return SendClientMessage(playerid, COLOR_GREY, NoMoney),ShowTuningDialog(playerid);
					TransferMoney(playerid, -1, till*80);
					GiveBizMoney(i, till*80, 80);
					SendMes(playerid,COLOR_GREEN,"Вы поставили Nitro x2 за %d$", till*80);
					AddVehicleComponent(GetPVarInt(playerid,"VehicleEnters"),1009);
					SaveVehicleTuning(playerid);
				}
			case 1:
				{
					if(GetCash(playerid) < till*150) return SendClientMessage(playerid, COLOR_GREY, NoMoney),ShowTuningDialog(playerid);
					TransferMoney(playerid, -1, till*150);
					GiveBizMoney(i, till*150, 150);
					SendMes(playerid,COLOR_GREEN,"Вы поставили Nitro x5 за %d$", till*150);
					AddVehicleComponent(GetPVarInt(playerid,"VehicleEnters"),1008);
					SaveVehicleTuning(playerid);
				}
			case 2:
				{
					if(GetCash(playerid) < till*300) return SendClientMessage(playerid, COLOR_GREY, NoMoney),ShowTuningDialog(playerid);
					TransferMoney(playerid, -1, till*300);
					GiveBizMoney(i, till*300, 300);
					SendMes(playerid,COLOR_GREEN,"Вы поставили Nitro x10 за %d$", till*300);
					AddVehicleComponent(GetPVarInt(playerid,"VehicleEnters"),1010);
					SaveVehicleTuning(playerid);
				}
			}
			ShowTuningDialog(playerid);
		}
	case dTuning+5: // CTO
		{
			if(response)
			{
				new i = GetPVarInt(playerid,"TuningBizID");
				new till = BizInfo[i][bTill];
				new string[128];
				switch(listitem)
				{
				case 0:
					{
						if(GetCash(playerid) < till*60) return SendClientMessage(playerid, COLOR_GREY, NoMoney),ShowTuningDialog(playerid);
						SendMes(playerid,COLOR_GREEN,"Вы поставили диски Shadow, их стоимость %d$", till*60);
						AddVehicleComponent(GetPVarInt(playerid,"VehicleEnters"),1073);
						SetPVarInt(playerid,"PriceCTO",till*60);
						SetPVarInt(playerid,"ComponentCTO",1073);
						SetPVarInt(playerid,"ProductCTO",60);
						format(string,128,"{FFFFFF}Стоимость этой запчасти: %d\nВы надумали с покупкой?",till*60);
						ShowPlayerDialog(playerid,dTuning+7,DIALOG_STYLE_MSGBOX,"{FFCC00}Подтверждение покупки",string,"Купить","Отмена");
					}
				case 1:
					{
						if(GetCash(playerid) < till*79) return SendClientMessage(playerid, COLOR_GREY, NoMoney),ShowTuningDialog(playerid);
						SendMes(playerid,COLOR_GREEN,"Вы поставили диски Mega, их стоимость %d$", till*79);
						AddVehicleComponent(GetPVarInt(playerid,"VehicleEnters"),1074);
						SetPVarInt(playerid,"PriceCTO",till*79);
						SetPVarInt(playerid,"ComponentCTO",1074);
						SetPVarInt(playerid,"ProductCTO",79);
						format(string,128,"{FFFFFF}Стоимость этой запчасти: %d\nВы надумали с покупкой?",till*79);
						ShowPlayerDialog(playerid,dTuning+7,DIALOG_STYLE_MSGBOX,"{FFCC00}Подтверждение покупки",string,"Купить","Отмена");
					}
				case 2:
					{
						if(GetCash(playerid) < till*53) return SendClientMessage(playerid, COLOR_GREY, NoMoney),ShowTuningDialog(playerid);
						SendMes(playerid,COLOR_GREEN,"Вы поставили диски Wires, их стоимость %d$", till*53);
						AddVehicleComponent(GetPVarInt(playerid,"VehicleEnters"),1076);
						SetPVarInt(playerid,"PriceCTO",till*53);
						SetPVarInt(playerid,"ComponentCTO",1076);
						SetPVarInt(playerid,"ProductCTO",53);
						format(string,128,"{FFFFFF}Стоимость этой запчасти: %d\nВы надумали с покупкой?",till*53);
						ShowPlayerDialog(playerid,dTuning+7,DIALOG_STYLE_MSGBOX,"{FFCC00}Подтверждение покупки",string,"Купить","Отмена");
					}
				case 3:
					{
						if(GetCash(playerid) < till*73) return SendClientMessage(playerid, COLOR_GREY, NoMoney),ShowTuningDialog(playerid);
						SendMes(playerid,COLOR_GREEN,"Вы поставили диски Classic, их стоимость %d$", till*73);
						AddVehicleComponent(GetPVarInt(playerid,"VehicleEnters"),1077);
						SetPVarInt(playerid,"PriceCTO",till*73);
						SetPVarInt(playerid,"ComponentCTO",1077);
						SetPVarInt(playerid,"ProductCTO",73);
						format(string,128,"{FFFFFF}Стоимость этой запчасти: %d\nВы надумали с покупкой?",till*73);
						ShowPlayerDialog(playerid,dTuning+7,DIALOG_STYLE_MSGBOX,"{FFCC00}Подтверждение покупки",string,"Купить","Отмена");
					}
				case 4:
					{
						if(GetCash(playerid) < till*93) return SendClientMessage(playerid, COLOR_GREY, NoMoney),ShowTuningDialog(playerid);
						SendMes(playerid,COLOR_GREEN,"Вы поставили диски Twist, их стоимость %d$", till*93);
						AddVehicleComponent(GetPVarInt(playerid,"VehicleEnters"),1078);
						SetPVarInt(playerid,"PriceCTO",till*93);
						SetPVarInt(playerid,"ComponentCTO",1078);
						SetPVarInt(playerid,"ProductCTO",93);
						format(string,128,"{FFFFFF}Стоимость этой запчасти: %d\nВы надумали с покупкой?",till*93);
						ShowPlayerDialog(playerid,dTuning+7,DIALOG_STYLE_MSGBOX,"{FFCC00}Подтверждение покупки",string,"Купить","Отмена");
					}
				case 5:
					{
						if(GetCash(playerid) < till*80) return SendClientMessage(playerid, COLOR_GREY, NoMoney),ShowTuningDialog(playerid);
						SendMes(playerid,COLOR_GREEN,"Вы поставили диски Cutter, их стоимость %d$", till*80);
						AddVehicleComponent(GetPVarInt(playerid,"VehicleEnters"),1079);
						SetPVarInt(playerid,"PriceCTO",till*80);
						SetPVarInt(playerid,"ComponentCTO",1078);
						SetPVarInt(playerid,"ProductCTO",80);
						format(string,128,"{FFFFFF}Стоимость этой запчасти: %d\nВы надумали с покупкой?",till*80);
						ShowPlayerDialog(playerid,dTuning+7,DIALOG_STYLE_MSGBOX,"{FFCC00}Подтверждение покупки",string,"Купить","Отмена");
					}
				case 6:
					{
						if(GetCash(playerid) < till*42) return SendClientMessage(playerid, COLOR_GREY, NoMoney),ShowTuningDialog(playerid);
						SendMes(playerid,COLOR_GREEN,"Вы поставили диски Grove, их стоимость %d$", till*42);
						AddVehicleComponent(GetPVarInt(playerid,"VehicleEnters"),1081);
						SetPVarInt(playerid,"PriceCTO",till*42);
						SetPVarInt(playerid,"ComponentCTO",1081);
						SetPVarInt(playerid,"ProductCTO",42);
						format(string,128,"{FFFFFF}Стоимость этой запчасти: %d\nВы надумали с покупкой?",till*42);
						ShowPlayerDialog(playerid,dTuning+7,DIALOG_STYLE_MSGBOX,"{FFCC00}Подтверждение покупки",string,"Купить","Отмена");
					}
				case 7:
					{
						if(GetCash(playerid) < till*100) return SendClientMessage(playerid, COLOR_GREY, NoMoney),ShowTuningDialog(playerid);
						SendMes(playerid,COLOR_GREEN,"Вы поставили диски Atomic, их стоимость %d$", till*100);
						AddVehicleComponent(GetPVarInt(playerid,"VehicleEnters"),1085);
						SetPVarInt(playerid,"PriceCTO",till*100);
						SetPVarInt(playerid,"ComponentCTO",1085);
						SetPVarInt(playerid,"ProductCTO",100);
						format(string,128,"{FFFFFF}Стоимость этой запчасти: %d\nВы надумали с покупкой?",till*100);
						ShowPlayerDialog(playerid,dTuning+7,DIALOG_STYLE_MSGBOX,"{FFCC00}Подтверждение покупки",string,"Купить","Отмена");
					}
				case 8:
					{
						if(GetCash(playerid) < till*200) return SendClientMessage(playerid, COLOR_GREY, NoMoney),ShowTuningDialog(playerid);
						SendMes(playerid,COLOR_GREEN,"Вы поставили диски Dollar, их стоимость %d$", till*200);
						AddVehicleComponent(GetPVarInt(playerid,"VehicleEnters"),1083);
						SetPVarInt(playerid,"PriceCTO",till*200);
						SetPVarInt(playerid,"ComponentCTO",1083);
						SetPVarInt(playerid,"ProductCTO",200);
						format(string,128,"{FFFFFF}Стоимость этой запчасти: %d\nВы надумали с покупкой?",till*200);
						ShowPlayerDialog(playerid,dTuning+7,DIALOG_STYLE_MSGBOX,"{FFCC00}Подтверждение покупки",string,"Купить","Отмена");
					}
				case 9:
					{
						if(GetCash(playerid) < till*300) return SendClientMessage(playerid, COLOR_GREY, NoMoney),ShowTuningDialog(playerid);
						SendMes(playerid,COLOR_GREEN,"Вы поставили диски Switch, их стоимость %d$", till*300);
						AddVehicleComponent(GetPVarInt(playerid,"VehicleEnters"),1080);
						SetPVarInt(playerid,"PriceCTO",till*300);
						SetPVarInt(playerid,"ComponentCTO",1080);
						SetPVarInt(playerid,"ProductCTO",300);
						format(string,128,"{FFFFFF}Стоимость этой запчасти: %d\nВы надумали с покупкой?",till*300);
						ShowPlayerDialog(playerid,dTuning+7,DIALOG_STYLE_MSGBOX,"{FFCC00}Подтверждение покупки",string,"Купить","Отмена");
					}
				}
			}
			else ShowTuningDialog(playerid);
		}
	case dTuning+8:
		{
			new i = GetPVarInt(playerid,"TuningBizID");
			if(response)
			{
				TransferMoney(playerid, -1, GetPVarInt(playerid,"PriceCTO"));
				GiveBizMoney(i, GetPVarInt(playerid,"PriceCTO"), GetPVarInt(playerid,"ProductCTO"));
				SendMes(playerid,COLOR_GREEN,"Вы оплатили %d$ за покрасочную работу", GetPVarInt(playerid,"PriceCTO"));
				pInfo[playerid][cPaintjob] = GetPVarInt(playerid,"PaintjobCTO");
				SaveVehicleTuning(playerid);
				ShowTuningDialog(playerid);
			}
			else
			{
				if(pInfo[playerid][cPaintjob] != 3) ChangeVehiclePaintjob(GetPVarInt(playerid,"VehicleEnters"),pInfo[playerid][cPaintjob]);
				else
				{
					ChangeVehiclePaintjob(GetPVarInt(playerid,"VehicleEnters"),3);
					ChangeVehicleColor(GetPVarInt(playerid,"VehicleEnters"), pInfo[playerid][cColor][0], pInfo[playerid][cColor][1]);
				}
				SendClientMessage(playerid,COLOR_RED,"Вы отменили покупку");
				SaveVehicleTuning(playerid);
				ShowTuningDialog(playerid);
			}
		}
	case dTuning+6: // CTO
		{
			if(response)
			{
				new i = GetPVarInt(playerid,"TuningBizID");
				new till = BizInfo[i][bTill];
				new string[128];
				switch(listitem)
				{
				case 0:
					{
						if(GetCash(playerid) < till*30) return SendClientMessage(playerid, COLOR_GREY, NoMoney),ShowTuningDialog(playerid);
						ChangeVehiclePaintjob(GetPVarInt(playerid,"VehicleEnters"),0);
						SetPVarInt(playerid,"PriceCTO",till*30);
						SetPVarInt(playerid,"PaintjobCTO",0);
						SetPVarInt(playerid,"ProductCTO",30);
						format(string,128,"{FFFFFF}Стоимость этой покрасочной работы: %d\nВы надумали с покупкой?",till*30);
						ShowPlayerDialog(playerid,dTuning+8,DIALOG_STYLE_MSGBOX,"{FFCC00}Подтверждение покупки",string,"Купить","Отмена");

					}
				case 1:
					{
						if(GetCash(playerid) < till*35) return SendClientMessage(playerid, COLOR_GREY, NoMoney),ShowTuningDialog(playerid);
						ChangeVehiclePaintjob(GetPVarInt(playerid,"VehicleEnters"),1);
						SetPVarInt(playerid,"PriceCTO",till*35);
						SetPVarInt(playerid,"PaintjobCTO",1);
						SetPVarInt(playerid,"ProductCTO",35);
						format(string,128,"{FFFFFF}Стоимость этой покрасочной работы: %d\nВы надумали с покупкой?",till*35);
						ShowPlayerDialog(playerid,dTuning+8,DIALOG_STYLE_MSGBOX,"{FFCC00}Подтверждение покупки",string,"Купить","Отмена");
					}
				case 2:
					{
						if(GetCash(playerid) < till*40) return SendClientMessage(playerid, COLOR_GREY, NoMoney),ShowTuningDialog(playerid);
						ChangeVehiclePaintjob(GetPVarInt(playerid,"VehicleEnters"),2);
						SetPVarInt(playerid,"PriceCTO",till*40);
						SetPVarInt(playerid,"PaintjobCTO",2);
						SetPVarInt(playerid,"ProductCTO",40);
						format(string,128,"{FFFFFF}Стоимость этой покрасочной работы: %d\nВы надумали с покупкой?",till*40);
						ShowPlayerDialog(playerid,dTuning+8,DIALOG_STYLE_MSGBOX,"{FFCC00}Подтверждение покупки",string,"Купить","Отмена");
					}
				case 3:
					{
						ChangeVehiclePaintjob(GetPVarInt(playerid,"VehicleEnters"),3);
						ShowTuningDialog(playerid);
						SendClientMessage(playerid,COLOR_RED,"Вы удалили покрасочную работу на авто");
					}
				}
			}
			else ShowTuningDialog(playerid);
		}
	case dTuning+7: // CTO
		{
			new i = GetPVarInt(playerid,"TuningBizID");
			if(response)
			{
				TransferMoney(playerid, -1, GetPVarInt(playerid,"PriceCTO"));
				GiveBizMoney(i, GetPVarInt(playerid,"PriceCTO"), GetPVarInt(playerid,"ProductCTO"));
				ShowTuningDialog(playerid);
				SaveVehicleTuning(playerid);
				SendClientMessage(playerid,COLOR_GREEN,"Вы купили эту запчасть");
			}
			else
			{
				ShowTuningDialog(playerid);
				SendClientMessage(playerid, COLOR_RED, "Вы отменили покупку");
				RemoveVehicleComponent(GetPVarInt(playerid,"VehicleEnters"), GetPVarInt(playerid,"ComponentCTO"));
				for(new s; s < 14; s++) if(pInfo[playerid][cVehcoms][s] != 0) AddVehicleComponent(GetPVarInt(playerid,"VehicleEnters"), pInfo[playerid][cVehcoms][s]);
			}
		}
	case 6446:
		{
			if(!response) return 1;
			if(gym_cloakroom[playerid])
			{
			    gym_cloakroom[playerid] = false;
				if(pInfo[playerid][pMember]) SetPlayerSkin(playerid, pInfo[playerid][pMemberSkin]);
				else SetPlayerSkin(playerid, pInfo[playerid][pModel]);
				SendClientMessage(playerid, COLOR_RED, "Вы закончили тренировку!");
			}
			else
			{
			    if(GetCash(playerid) < 500) return SendClientMessage(playerid, COLOR_GREY, NoMoney);
				TransferMoney(playerid, -1, 500);
				gym_cloakroom[playerid] = true;
				SetPlayerSkin(playerid, 80);
				SendClientMessage(playerid, COLOR_GREEN, "Вы начали тренировку. Бейте по грушам!");
			}
		}
		case dMainMenu:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0: ShowPlayerStatsDialog(playerid, playerid);
				case 1: ShowPlayerDialog(playerid, dCommandServer, DIALOG_STYLE_LIST, "{FFCC00}Команды сервера", "Основные\nЧат\nДом\nБизнес\nТранспорт\nПо работе\nДля лидеров\nОрганизация", "Выбрать", "Назад");
            	case 2:
				{
				    if(pInfo[playerid][pMuted] > 0) return SendMuteMessage(playerid);
				    ShowPlayerDialog(playerid, 13212, DIALOG_STYLE_INPUT, "{FFCC00}Репорт", "{FFFFFF}Введите ID игрока и причину подачи на него в репорт:", "Отправить", "Назад");
				}
            	case 3: PlayerSettings(playerid);
				case 4: PlayerSecurity(playerid);
				case 5:
				{
				    stringer[0] = EOS;
					format(stringer, 300, "%s\n%s\n%s\n%s\n{FFFFFF}Помощь",
					(pInfo[playerid][pImprove][0] != 1) ? ("{FFFFFF}Выносливость\t\t| {F04245}Не имеется (5 уровень и 50.000$)") : ("{FFFFFF}Выносливость\t\t| {63BD4E}Куплено"),
					(pInfo[playerid][pImprove][1] != 1) ? ("{FFFFFF}Решительность\t| {F04245}Не имеется (8 уровень и 75.000$)") : ("{FFFFFF}Решительность\t| {63BD4E}Куплено (/leave)"),
					(pInfo[playerid][pImprove][2] != 1) ? ("{FFFFFF}Рюкзак\t\t\t| {F04245}Не имеется (11 уровень и 100.000$)") : ("{FFFFFF}Рюкзак\t\t\t| {63BD4E}Куплено"),
					(pInfo[playerid][pImprove][3] != 1) ? ("{FFFFFF}Мастер вождения\t| {F04245}Не имеется (15 уровень и 125.000$)") : ("{FFFFFF}Мастер вождения\t| {63BD4E}Куплено"));
					ShowPlayerDialog(playerid, dJob+30, DIALOG_STYLE_LIST, "{FFCC00}Улучшения персонажа", stringer, "Выбрать", "Назад");
				}
				case 6: ShowPlayerDialog(playerid, dJob+4, 1, "{FFCC00}Смена нонРП ника", "{FFFFFF}Введите будущий ник\n\nВозможно сменить только если Ваш ник не соответствует RP правилам.\nВо всех остальных случаях смена осуществляется в /menu > Донат услуги", "Принять", "Назад");
		    }
       	}
     	case dMainMenuAdd:
       	{
       	    if(!response) return cmd_menu(playerid);
       	    switch(listitem)
       	    {
       	        case 0: cmd_donate(playerid);

				case 1: ShowPlayerDialog(playerid, dUsePromocode, DIALOG_STYLE_INPUT, "{FFCC00}Промокод", "\
				            {FFFFFF}Использовать промокоды можно только {80CCFF}с 3 по 4 уровень\n\
							{FFFFFF}Если у Вас есть промокод, то укажите его в данном окне\n\n\
							О действующих промокодах Вы можете узнать из нашего паблика VK {FF9900}"SERVER_GROUP"{FFFFFF},\n\
							также их могут распространять {F04245}ютуберы {FFFFFF}которые снимают на нашем сервере", "Принять", "Назад");

				case 2: ShowPlayerDialog(playerid, dInfoFamily, DIALOG_STYLE_LIST, "{FFCC00}Меню семей", "\n\
							1. Создать семью {FFCC00}(500 кредитов){FFFFFF}\n\
							2. Список семей", "Выбрать", "Назад");
       	    }
       	}
		case dDonate:
		{
			if(!response) return ShowPlayerDialog(playerid, dMainMenuAdd, DIALOG_STYLE_LIST, "{FFCC00}Дополнительно", "1. Донат услуги\n2. Промокод\n3. Семьи", "Далее", "Назад");
			switch(listitem)
			{
			    case 0:
			    {
			        if(payment_system==1)
			        {
				        mysql_query_string[0] = EOS;
						format(mysql_query_string, 200, "SELECT * FROM "T_UNITPAY" WHERE account = '%s' AND status = 2 ORDER BY dateComplete DESC LIMIT 0,20;", GetName(playerid));
	 					mysql_tquery(dbHandle, mysql_query_string, "@unitpay_callback", "dd", playerid, 4);
 					}
					else SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Не удалось просмотреть информацию по Вашему донат счёту. Обратитесь к администрации");
			    }
			    case 1:
			    {
			        if(payment_system==1)
			        {
				        mysql_query_string[0] = EOS;
						format(mysql_query_string, 128, "SELECT * FROM "T_UNITPAY" WHERE account = '%s' AND status = 1", GetName(playerid));
	 					mysql_tquery(dbHandle, mysql_query_string, "@unitpay_callback", "dd", playerid, 1);
 					}
 					else
 					{
            			mysql_query_string[0] = EOS;
						format(mysql_query_string, 200, "SELECT amount,status,name FROM "T_MEGAKASSA" WHERE name = '%s' AND status = 'pay'", GetName(playerid));
	 					mysql_tquery(dbHandle, mysql_query_string, "@megakassa_callback", "dd", playerid, 1);
 					}
			    }
				case 2:
				{
				    if(doubling_donate) ShowPlayerDialog(playerid, dDonate+2, DIALOG_STYLE_INPUT, "{FFCC00}Получение игровой валюты", "{FFFFFF}Введите количество кредитов, которые хотите перевести в игровые деньги\nКурс обмена: 1 кредит = 3000$ {63BD4E}(с учётом акции)\n\n{AFAFAF}При обмене свыше чем на 3000 кредитов + 250 кредитов в подарок", "Далее", "Назад");
                    else ShowPlayerDialog(playerid, dDonate+2, DIALOG_STYLE_INPUT, "{FFCC00}Получение игровой валюты", "{FFFFFF}Введите количество кредитов, которые хотите перевести в игровые деньги\nКурс обмена: 1 кредит = 1500$\n\n{AFAFAF}При обмене свыше чем на 3000 кредитов + 250 кредитов в подарок", "Далее", "Назад");
				}
				case 3:
				{
				    stringer[0] = EOS;
					strcat(stringer, "{EAD86A}Преимущества VIP статуса:\n{FFFFFF}");
					strcat(stringer, "1) Ускоренное лечение в больнице\n");
					strcat(stringer, "2) Удаление тюнинга с личного транспорта (/removetuning)\n");
					strcat(stringer, "3) Возможность покинуть организацию самому (/leave)\n");
					strcat(stringer, "4) Каждую 4-ую зарплату +1 очко опыта\n");
					strcat(stringer, "5) Прокачка скиллов в 2 раза быстрей\n");
					strcat(stringer, "6) Проявление чувства голода у персонажа в 2 раза реже\n");
					strcat(stringer, "7) Уменьшенное время на отправку вопроса/репорта\n");
					strcat(stringer, "8) Возможность уволиться с работы не на месте устройства (/quitjob)\n");
					strcat(stringer, "9) Возможность общаться с остальными VIP игроками в VIP чате (/v)\n");
					strcat(stringer, "10) Время в игре для получения опыта в конце часа уменьшается в 2 раза\n\n");
					strcat(stringer, "{EAD86A}Примечание:\n{FFFFFF}");
					strcat(stringer, "- VIP статус выдаётся на 30 дней");
					ShowPlayerDialog(playerid, dJob+33, DIALOG_STYLE_MSGBOX, "{FFCC00}VIP статус", stringer, "Купить", "Назад");
				}
				case 4:
				{
				    if(pInfo[playerid][pWarn] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не имеете предупреждений!");
					if(pInfo[playerid][pCredits] < 70) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно кредитов!");
					pInfo[playerid][pCredits] -= 70;
					MysqlUpdatePlayerInt(playerid, "credits", pInfo[playerid][pCredits]);
                    pInfo[playerid][pWarn]--;
					SendClientMessage(playerid, COLOR_LIME, "Вы успешно сняли одно предупреждение");
				}
				case 5:
				{
				    if(pInfo[playerid][pCredits] < 20) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно кредитов!");
				    ShowPlayerDialog(playerid, dJob+32, 1, "{FFCC00}Смена ника", "{FFFFFF}Введите будущий ник", "Принять", "Назад");
				}
				case 6:
			    {
			        if(pInfo[playerid][pCredits] < 400) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно кредитов!");
			        pInfo[playerid][pCredits] -= 400;
			        MysqlUpdatePlayerInt(playerid, "credits", pInfo[playerid][pCredits]);
			        for(new i; i < 8; i++) pInfo[playerid][pGunSkill][i] = 100;
          	 		mysql_query_string[0] = EOS;
					format(mysql_query_string, 300, "UPDATE "T_ACCOUNTS" SET sdpistol = %i, deserteagle = %i, shotgun = %i, mp5 = %i, ak47 = %i, m4 = %i, pistol = %i, microuzi = %i WHERE id = %i",
					pInfo[playerid][pGunSkill][0], pInfo[playerid][pGunSkill][1], pInfo[playerid][pGunSkill][2], pInfo[playerid][pGunSkill][3], pInfo[playerid][pGunSkill][4], pInfo[playerid][pGunSkill][5], pInfo[playerid][pGunSkill][6], pInfo[playerid][pGunSkill][7], pInfo[playerid][pID]);
					mysql_tquery(dbHandle, mysql_query_string, "", "");
					SetPlayerSkills(playerid);
					SendClientMessage(playerid, COLOR_LIME, "Вы приобрели все навыки владения оружием");
			    }
				case 7:
			    {
			    	if(pInfo[playerid][pCredits] < 350) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно кредитов!");
					pInfo[playerid][pCredits] -= 350;
					MysqlUpdatePlayerInt(playerid, "credits", pInfo[playerid][pCredits]);
					GiveLicCar(playerid);
					GiveLicWater(playerid);
					GiveLicPlane(playerid);
					GiveLicWeapon(playerid);
			        MysqlUpdatePlayerInt(playerid, "licenses", pInfo[playerid][pLicenses]);
					SendClientMessage(playerid, COLOR_LIME, "Вы приобрели все лицензии");
			    }
			    case 8:
			    {
			        if(pInfo[playerid][pSportExp] >= 6000) return SendClientMessage(playerid, COLOR_GREY, "Вы уже владеете всеми стилями боя!");
			        if(pInfo[playerid][pCredits] < 250) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно кредитов!");
			        pInfo[playerid][pCredits] -= 250;
			        MysqlUpdatePlayerInt(playerid, "credits", pInfo[playerid][pCredits]);
			        pInfo[playerid][pSportExp] = 6000;
			        mysql_query_string[0] = EOS;
					format(mysql_query_string, 100, "UPDATE "T_ACCOUNTS" SET sportexp = %i WHERE id = %i", pInfo[playerid][pSportExp], pInfo[playerid][pID]);
					mysql_tquery(dbHandle, mysql_query_string, "", "");
					SendClientMessage(playerid, COLOR_LIME, "Вы приобрели все навыки стиля боя (/fstyle)");
				}
				case 9:
				{
				    if(pInfo[playerid][pFineUpgrade]) return SendClientMessage(playerid, COLOR_GREY, "У вас уже есть анти-радар!");
				    if(pInfo[playerid][pCredits] < 60) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно кредитов!");
			        pInfo[playerid][pCredits] -= 60;
			        MysqlUpdatePlayerInt(playerid, "credits", pInfo[playerid][pCredits]);
			        pInfo[playerid][pFineUpgrade] = 1;
			        MysqlUpdatePlayerInt(playerid, "fineupgrade", pInfo[playerid][pFineUpgrade]);
			        SendClientMessage(playerid, COLOR_LIME, "Вы приобрели анти-радар. Теперь радары не смогут обнаружить транспорт под Вашим управлением");
				}
				case 10:
				{
				    if(pInfo[playerid][pVoennik]) SendClientMessage(playerid, COLOR_GREY, "У вас уже есть военный билет!");
				    if(pInfo[playerid][pCredits] < 120) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно кредитов!");
			        pInfo[playerid][pCredits] -= 120;
			        MysqlUpdatePlayerInt(playerid, "credits", pInfo[playerid][pCredits]);
			        pInfo[playerid][pVoennik] = 1;
	    			MysqlUpdatePlayerInt(playerid, "Voennik", pInfo[playerid][pVoennik]);
	    			SendClientMessage(playerid, COLOR_LIME, "Вы приобрели военный билет. Теперь Вам нет необходимости служить в армии, чтобы работать в Полиции/ФСБ");
				}
				case 11:
				{
				    if(pInfo[playerid][pPhoneNumber] == 0) return SendClientMessage(playerid, COLOR_GREY, "У вас нет мобильного телефона!");
				    if(pInfo[playerid][pCredits] < 600) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно кредитов!");
				    ShowPlayerDialog(playerid, dBuySimDonate, DIALOG_STYLE_INPUT, "{FFCC00}Покупка SIM-карты", "{FFFFFF}Введите новый пятизначный номер", "Купить", "Назад");
				}
				case 12:
				{
				    if(pInfo[playerid][pCredits] < 10) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно кредитов!");
				    if((pInfo[playerid][pZakon]+10) <= 100) pInfo[playerid][pZakon] += 10;
			        else
			        {
			            SendClientMessage(playerid, COLOR_GREY, "Законопослушность не может быть выше 100 очков!");
			            return 0;
			        }
			        pInfo[playerid][pCredits] -= 10;
			        MysqlUpdatePlayerInt(playerid, "credits", pInfo[playerid][pCredits]);
			        MysqlUpdatePlayerInt(playerid, "zakon", pInfo[playerid][pZakon]);
			        SendClientMessage(playerid, COLOR_LIME, "Вы приобрели +10 к законопослушности");
				}
				case 13:
				{
				    if(pInfo[playerid][pCredits] < 100) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно кредитов!");
					pInfo[playerid][pCredits] -= 100;
					MysqlUpdatePlayerInt(playerid, "credits", pInfo[playerid][pCredits]);
					pInfo[playerid][pSex] = (pInfo[playerid][pSex] == 1) ? (2) : (1);
					MysqlUpdatePlayerInt(playerid, "sex", pInfo[playerid][pSex]);

					#if MYSQL_R41_2 == true

					if(strlen(IsValidPassport(playerid)))

					#else

					if(IsValidPassport(playerid))

					#endif
					{
					    mysql_query_string[0] = EOS;
				    	format(mysql_query_string, 128, "UPDATE "T_PASSPORTS" SET Sex = %i WHERE Name = '%s'", pInfo[playerid][pSex], GetName(playerid));
				    	mysql_tquery(dbHandle, mysql_query_string, "", "");
					}

					SendClientMessage(playerid, COLOR_LIME, "Вы успешно сменили пол");
				}
				case 14:
				{
				    if(pInfo[playerid][pCredits] < 100) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно кредитов!");
					ShowPlayerDialog(playerid, 1310, DIALOG_STYLE_INPUT, "{11D2B5}Покупка VIP номера","\
				    {FFFFFF}Теперь Вам необходимо придумать сам VIP номер..\n\n\
				    {339FD5}Номер должен состоять из 6 символов(3 цифры и 2 буквы)\n\
				    Пример: A123AA, X777AM","Далее","Отмена");
				}
			}
		}
		case 1310:
		{
		    if(!response) return false;
		    if(strlen(inputtext) < 1 || strlen(inputtext) > 6)
		    {
		        ShowPlayerDialog(playerid, 1310, DIALOG_STYLE_INPUT, "{11D2B5}Придумайте номер","\
			    {FFFFFF}Теперь Вам необходимо придумать сам VIP номер..\n\n\
			    {339FD5}Номер должен состоять не более чем 6 символов\n\
			    Пример: A123AA, X777AM","Далее","Отмена");
			    SendClientMessage(playerid,COLOR_GREEN,"Номер должен быть длинной в 6 символов!");
			    return 1;
		    }
		    SetPVarString(playerid,"NOMERS", inputtext);
		    ShowPlayerDialog(playerid, 1311, DIALOG_STYLE_INPUT, "{11D2B5}Укажите регион","\
		    {FFFFFF}В этом окне Вам необходимо указать код региона Вашего города..\n\
		    {339FD5}Пример: 152, 68, 63","Далее","Отмена");
		}
		case 1311:
		{
		    if(!response) return false;
		    if(strlen(inputtext) > 3)
		    {
		        ShowPlayerDialog(playerid, 1311, DIALOG_STYLE_INPUT, "{11D2B5}Укажите регион","\
			    {FFFFFF}В этом окне Вам необходимо указать код региона Вашего города..\n\
			    {339FD5}Пример: 152, 68, 63","Далее","Отмена");
			    SendClientMessage(playerid,COLOR_GREEN,"Регион не может быть в длину более 3-х символов");
			    return 1;
		    }
		    SetPVarString(playerid,"REGIONNOMER", inputtext);
		    ShowPlayerDialog(playerid, 1312, DIALOG_STYLE_MSGBOX, "{11D2B5}Подтверждение","{FFFFFF}Вы готовы приобрести номерной знак на авто?","Далее","Отмена");
		}
		case 1312:
		{
		    if(!response) return false;
		    new string[64], nomerssss[10], regionnn[5];
		    GetPVarString(playerid, "NOMERS", nomerssss, sizeof(nomerssss));
		    GetPVarString(playerid, "REGIONNOMER", regionnn, sizeof(regionnn));
            //Delete3DTextLabel(VehicleLabel[pTemp[playerid][pCarPlayerID]]);
            format(string, 64, "%s | %sRUS",nomerssss,regionnn);
   			if(VehicleLabel[pTemp[playerid][pCarPlayerID]] != Text3D:INVALID_3DTEXT_ID)
			{
			    UpdateDynamic3DTextLabelText(VehicleLabel[pTemp[playerid][pCarPlayerID]], 0xFFFFFFFF, string);
			}
			pInfo[playerid][pRegVehicle] = 1;
			mysql_query_string[0] = EOS;
			format(mysql_query_string, 200, "UPDATE "T_ACCOUNTS" SET veh_reg = %i, veh_number = '%s' WHERE id = %i", pInfo[playerid][pRegVehicle],string, pInfo[playerid][pID]);
			mysql_tquery(dbHandle, mysql_query_string, "", "");
		    pInfo[playerid][pCredits] -= 100;
		    SendClientMessage(playerid, COLOR_GREEN, "Номерной знак успешно установлен.");
		    SendClientMessage(playerid, COLOR_GREEN, "С Вашего счета были списаны 100 кредитов.");
		    SendClientMessage(playerid, COLOR_GREEN, "[Подсказка] {FFFFFF}Если пропадут номера после спавна машины, перезайдите в игру.");
		    DeletePVar(playerid, "NOMERS"); DeletePVar(playerid, "REGIONNOMER");
		}
		case dInfoFamily:
		{
		    if(!response)
		    	return ShowPlayerDialog(playerid, dMainMenuAdd, DIALOG_STYLE_LIST, "{FFCC00}Дополнительно", "1. Донат услуги\n2. Промокод\n3. Семьи", "Далее", "Назад");

		    switch(listitem)
		    {
		        case 0:
		        {
		            if(pInfo[playerid][pFamilyMember])
		            	return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы уже состоите в семье");

		            if(pInfo[playerid][pCredits] < 500)
		            	return SendClientMessage(playerid, COLOR_GREY, "Недостаточно кредитов!");

		            if(TOTALFAMILY > MAX_FAMILY)
		            	return SendClientMessage(playerid, COLOR_RED, "[Ошибка #2] Не удалось выполнить действие. Обратитесь к администрации.");

		            stringer[0] = EOS;
					format(stringer, 300, "\
						{FFFFFF}Всего семей: {FF9900}%d\n\
						{FFFFFF}Создание семьи стоит: {FFCC00}500 кредитов\n\n\
						{FFFFFF}Введите название семьи:\n\n\
						{AFAFAF}Допустимое значение количества символов от 3 до 20", TOTALFAMILY);
					ShowPlayerDialog(playerid, dCreateFamily, DIALOG_STYLE_INPUT, " ", stringer, "Принять", "Назад");
		        }
		        case 1:
				{
				    SetPVarInt(playerid, "family_page", 1);
					mysql_tquery(dbHandle, "SELECT * FROM "T_FAMILY"", "@ListFamily", "d", playerid);
				}
		    }
		}
		case dCreateFamily:
		{
		    stringer[0] = EOS;
		    if(!response)
				return ShowPlayerDialog(playerid, dInfoFamily, DIALOG_STYLE_LIST, "{FFCC00}Меню семей", "\n\
							1. Создать семью {FFCC00}(500 кредитов){FFFFFF}\n\
							2. Список семей", "Выбрать", "Назад");
            if(!strlen(inputtext))
			{
			    SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Допустимое значение количества символов от 3 до 20");
		        format(stringer, 300, "\
					{FFFFFF}Всего семей: {FF9900}%d\n\
					{FFFFFF}Создание семьи стоит: {FFCC00}500 кредитов\n\n\
					{FFFFFF}Введите название семьи:\n\n\
					{AFAFAF}Допустимое значение количества символов от 3 до 20", TOTALFAMILY);
				return ShowPlayerDialog(playerid, dCreateFamily, DIALOG_STYLE_INPUT, " ", stringer, "Принять", "Назад");
			}
            if(!(3 <= strlen(inputtext) <= 20))
            {
                SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Допустимое значение количества символов от 3 до 20");
		        format(stringer, 300, "\
					{FFFFFF}Всего семей: {FF9900}%d\n\
					{FFFFFF}Создание семьи стоит: {FFCC00}500 кредитов\n\n\
					{FFFFFF}Введите название семьи:\n\n\
					{AFAFAF}Допустимое значение количества символов от 3 до 20", TOTALFAMILY);
				return ShowPlayerDialog(playerid, dCreateFamily, DIALOG_STYLE_INPUT, " ", stringer, "Принять", "Назад");
			}
			mysql_query_string[0] = EOS;
			format(mysql_query_string, 200, "SELECT * FROM "T_FAMILY" WHERE name = '%s'", inputtext);
			mysql_tquery(dbHandle, mysql_query_string, "@CreateFamily", "ds", playerid, inputtext);
		}
		case dListFamily:
		{
		    if(!response)
		    {
		        DeletePVar(playerid, "family_page");
				DeletePVar(playerid, "family_rows");
				DeletePVar(playerid, "total_rows_one_page");
				DeletePVar(playerid, "show_back_page");

				return ShowPlayerDialog(playerid, dInfoFamily, DIALOG_STYLE_LIST, "{FFCC00}Меню семей", "\n\
							1. Создать семью {FFCC00}(500 кредитов){FFFFFF}\n\
							2. Список семей", "Выбрать", "Назад");
		    }

		    new rows_page = GetPVarInt(playerid, "family_page") - 1;
		    new total_rows = GetPVarInt(playerid, "total_rows_one_page");

	        if(GetPVarInt(playerid, "show_back_page") && listitem == total_rows)
	        {
				if(!rows_page)
					return mysql_tquery(dbHandle, "SELECT * FROM "T_FAMILY"", "@ListFamily", "d", playerid);

                DeletePVar(playerid, "show_back_page");
				SetPVarInt(playerid, "family_page", rows_page);
				mysql_tquery(dbHandle, "SELECT * FROM "T_FAMILY"", "@ListFamily", "d", playerid);
	        }
	        else if(!GetPVarInt(playerid, "show_back_page") ? (listitem == total_rows) : (listitem == total_rows + 1))
			{
				if((rows_page + 1) * 15 >= GetPVarInt(playerid, "family_rows"))
					return mysql_tquery(dbHandle, "SELECT * FROM "T_FAMILY"", "@ListFamily", "d", playerid);

				SetPVarInt(playerid, "family_page", rows_page + 2);
				mysql_tquery(dbHandle, "SELECT * FROM "T_FAMILY"", "@ListFamily", "d", playerid);
	        }
			else
			{
			    SendClientMessage(playerid, -1, "Семья выбрана");
				mysql_tquery(dbHandle, "SELECT * FROM "T_FAMILY"", "@ListFamily", "d", playerid);
			}
		}
		case dJob+33:
		{
		    if(!response)
		    	return DonateShow(playerid);

		    if(pInfo[playerid][pVip])
			{
			    new year, month, day;
				new current_date = getdate(year, month, day);
				new time_left = pInfo[playerid][pVipTime] - current_date;

				stringer[0] = EOS;
			    format(stringer, 256, "\n\n{F04245}\tУ Вас уже имеется VIP статус!\n\n{FFFFFF}Дней до окончания: {EAD86A}%d\n{FFFFFF}Желаете продлить на {EAD86A}30 дней{FFFFFF} за 500 кредитов?\n\n", time_left);
				ShowPlayerDialog(playerid, dJob+35, DIALOG_STYLE_MSGBOX, "{FFCC00}Подтверждение действия", stringer, "Да", "Нет");
				return 1;
			}

			if(pInfo[playerid][pCredits] < 500)
				return SendClientMessage(playerid, COLOR_GREY, "Недостаточно кредитов!");

			new year, month, day;
			new current_date = getdate(year, month, day);

			pInfo[playerid][pCredits] -= 500;
			MysqlUpdatePlayerInt(playerid, "credits", pInfo[playerid][pCredits]);

            pInfo[playerid][pVip] = 1;
            pInfo[playerid][pVipTime] = current_date + 30;

			SendClientMessage(playerid, COLOR_LIME, "Вы приобрели VIP статус на 30 дней (/viphelp)");
		}
		case dJob+35:
		{
		    if(!response)
		    	return DonateShow(playerid);

			if(pInfo[playerid][pCredits] < 500)
				return SendClientMessage(playerid, COLOR_GREY, "Недостаточно кредитов!");

			new year, month, day;
			new current_date = getdate(year, month, day);
			new time_left = pInfo[playerid][pVipTime] - current_date;

			pInfo[playerid][pCredits] -= 500;
			MysqlUpdatePlayerInt(playerid, "credits", pInfo[playerid][pCredits]);

            pInfo[playerid][pVipTime] = time_left + (current_date + 30);

			SendClientMessage(playerid, COLOR_LIME, "Вы продлили VIP статус на 30 дней (/viphelp)");
		}
		case dDonate+1:
		{
		    if(!response)
		    	return DonateShow(playerid);
		    else
		    	return 1;
		}
 		case dDonate+2:
		{
			if(!response) return DonateShow(playerid);
		    if(strval(inputtext) < 1) return SendClientMessage(playerid, COLOR_GREY, "Неверное количество кредитов!");
			if(pInfo[playerid][pCredits] < strval(inputtext)) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно кредитов!");
			pInfo[playerid][pCredits] -= strval(inputtext);
			new string[128];
			new summa = (!doubling_donate)?(1500):(3000);
			format(string, sizeof(string), "Вы получили {ffffff}%i${EAD86A} за {ffffff}%d{EAD86A} кредитов", strval(inputtext)*summa, strval(inputtext));
			SendClientMessage(playerid, COLOR_YELLOW, string);
			if(strval(inputtext) >= 3000)
			{
				SendClientMessage(playerid, COLOR_GREEN, "Вы получаете доп. бонус {ffffff}250 {63BD4E}кредитов за обмен который составляет выше {ffffff}3000 кредитов");
				pInfo[playerid][pCredits] += 250;
			}
			format(string, sizeof(string), "+%i$", strval(inputtext)*summa);
			GameTextForPlayer(playerid, string, 3000, 1);
			TransferMoney(-1, playerid, strval(inputtext)*summa, "Конвертировал донат в вирты", 1);
			MysqlUpdatePlayerInt(playerid, "credits", pInfo[playerid][pCredits]);
		}
	case dMakeGun:
	    {
	    	if(!response) return 1;
	        if(listitem < 9)
	        {
	        	SetPVarInt(playerid, "makegunid", listitem);
				new needgun = gGunAmount[listitem];
				new bool:noneedgun, weapid, ammot;
				SetPVarInt(playerid, "noneedgun", 0);
				for(new i; i < 13; i++)
				{
					GetPlayerWeaponData(playerid, i, weapid, ammot);
					if(weapid == gGunID[listitem]) { noneedgun = true; SetPVarInt(playerid, "noneedgun", 1); break; }
				}
				if(pInfo[playerid][pGunAmount] < needgun && !noneedgun)
				{
					new str[100];
				    format(str, sizeof(str),"Вам нужно %d ед. оружия для сборки этого оружия", needgun);
					SendClientMessage(playerid, COLOR_GREY, str);
					ShowMakeGunList(playerid);
					return 1;
				}
				ShowPlayerDialog(playerid, dMakeGun+1, 1, "{FFCC00}Сборка оружия", "{FFFFFF}Сколько патронов вы хотите использовать для этого оружия?", "Собрать", "Отмена");
	        }
	        if(listitem == 9)
	        {
	        	new list_weapons[] = "{FF9900}ID - Название - Ед. оружия{FFFFFF}\n\n\
	        		22 - Colt 45 - 60\n\
	        		23 - Silenced Pistol - 70\n\
	        		24 - Desert Eeagle - 170\n\
	        		28 - UZI - 190\n\
	        		29 - MP5 - 200\n\
	        		25 - Shotgun - 210\n\
	        		31 - M4 - 280\n\
	        		30 - AK47 - 300\n\
	        		33 - Rifle - 360\n\n\
	        		{FFFFFF}Для добавления патронов к созданному оружию\n\
	        		необходимо держать его в руках";
	        	ShowPlayerDialog(playerid, dMakeGun+2, DIALOG_STYLE_MSGBOX, "{63BD4E}Информация", list_weapons, "Назад", "");
	        }
	    }
	case dMakeGun+1:
	    {
	        if(!response) return 1;
			new ammo = strval(inputtext);
			if(!(1 <= ammo <= 500))
			{
				SendClientMessage(playerid, COLOR_GREY, "Неверное к-во патронов");
				ShowMakeGunList(playerid);
				return 1;
			}
			new gunid = GetPVarInt(playerid,"makegunid");
			new needgun = gGunAmount[gunid];
			new weaponid = gGunID[gunid];
			if(pInfo[playerid][pPatron] < ammo) return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно патронов");
			if(!GetPVarInt(playerid, "noneedgun")) pInfo[playerid][pGunAmount] -= needgun;
			SetPVarInt(playerid, "noneedgun", 0);
			pInfo[playerid][pPatron] -= ammo;
			mysql_query_string[0] = EOS;
			format(mysql_query_string, 128, "UPDATE "T_ACCOUNTS" SET gunamount = %d, patron = %d WHERE id = %d", pInfo[playerid][pGunAmount], pInfo[playerid][pPatron], pInfo[playerid][pID]);
			mysql_tquery(dbHandle, mysql_query_string, "", "");
			GivePlayerWeaponEx(playerid, weaponid, ammo);
			MeAction(playerid, "собрал оружие");
	    }
    case 9345:
		{
			if(!response) return 1;
			if(listitem == 10)
			{
				if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
				StopAudioStreamForPlayer(playerid);
			}
			else
			{
				static const Radio_List[10][128] = {
				    "http://178.33.138.231:8003/stream",
				    "http://radio02-cn03.akadostream.ru:8108/shanson128.mp3",
				    "http://radio02-cn03.akadostream.ru:8112/nashe128.mp3",
				    "http://online.radiorecord.ru:8101/rr_128",
				    "http://radio.zaycev.fm:9002/ZaycevFM(128).m3u",
				    "http://radio.zaycev.fm:9002/rnb/ZaycevFM(128).m3u",
				    "http://stream.trap.fm:6004/;stream.mp3",
				    "http://stream.variant.fm:8000/LOVE-192",
				    "http://stream01.emgsound.ru/europaplus128.mp3",
				    "http://misato.ru-hoster.com:8013/stream?nocache=0.4403485557327951"
				};
				if(!(IsPlayerAttachedObjectSlotUsed(playerid, 3)))
				{
				    ApplyAnimation(playerid, "GOGGLES", "goggles_put_on", 4.1, 0, 0, 0, 0, 0, 1);
					SetPlayerAttachedObject(playerid, 3, 19424, 2, 0.05, 0.0, 0.0, 90.0, 360.0, 270.0);
				}
				PlayAudioStreamForPlayer(playerid, Radio_List[listitem]);
			}
		}
	case 969:
		{
			if(!response) return 1;
			if(!b_Capture[listitem])
			{
				b_Capture[listitem] = 1;
				SendClientMessage(playerid, COLOR_RED, "Вы включили запрет на капт данной банде!");
			}
			else
			{
				b_Capture[listitem] = 0;
				SendClientMessage(playerid, COLOR_GREEN, "Вы отключили запрет на капт данной банде!");
			}
			mysql_query_string[0] = EOS;
			format(mysql_query_string, 150, "UPDATE "T_GANG" SET bcapt_g = %d, bcapt_b = %d, bcapt_r = %d, bcapt_a = %d, bcapt_v = %d", b_Capture[0], b_Capture[1], b_Capture[2], b_Capture[3], b_Capture[4]);
			mysql_tquery(dbHandle, mysql_query_string, "", "");
			ShowDialogGhetto(playerid);
			return 1;
		}
	case dCancelRent:
	    {
	        if(!response) return 1;
	        SendClientMessage(playerid, COLOR_WHITE, "Вы отказались от аренды транспорта");
	        new rc = GetPVarInt(playerid, "arendkey");
			ArendInfo[rc][aPlayerID] = INVALID_PLAYER_ID;
			SetVehicleToRespawn(ArendInfo[rc][aID]);
			ToggleLock(ArendInfo[rc][aID], 0);
			SetPVarInt(playerid, "arendkey", -1);
	    }
	case 1431:
		{
			if(!response) return 1;
			if(listitem < 3)
			{
				pInfo[playerid][pSkin][listitem] = pInfo[playerid][pModel];
				new string[10];
				format(string, sizeof(string), "skin%d", listitem+1);
				MysqlUpdatePlayerInt(playerid, string, pInfo[playerid][pSkin][listitem]);
				SendMes(playerid, COLOR_GREEN, "Вы выбрали %d полку для одежды. Переодеться можно дома (/hpanel)", listitem+1);
			}
			else SendClientMessage(playerid, COLOR_GREY, "Одежда будет на вас");
		}
	case 1212:
	    {
	        if(!response) return SendClientMessage(playerid, COLOR_GREY, "Шагай тогда отсюда и не возвращайся");
            if(!IsAGang(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Что-то ты не похож на своего. Забудь сюда дорогу! (( Вы должны состоять в банде, чтобы вырубить наркотики ))");
            SendClientMessage(playerid, COLOR_GREEN, "Отправляйся в соседнюю комнату, там ты найдёшь что ищешь.");
            SetPVarInt(playerid, "next_actor", 1);
		}
	case 1213:
		{
		    if(!response) return 1;
			new count;
			if(sscanf(inputtext, "d", count)) return ShowPlayerDialog(playerid,1213,DIALOG_STYLE_INPUT,"{FFCC00}Покупка травы","{FFFFFF}Введите количество грамм которое вы хотите купить.","Купить","Отмена");
			else if(pInfo[playerid][pDrugs]+count > 100 && !pInfo[playerid][pImprove][2]) return SendClientMessage(playerid, COLOR_GREY, "У Вас не может быть более 100 грамм наркотиков!");
			else if(pInfo[playerid][pDrugs]+count > 200 && pInfo[playerid][pImprove][2]) return SendClientMessage(playerid, COLOR_GREY, "У Вас не может быть более 200 грамм наркотиков!");
			else if(pInfo[playerid][pCash] < PriceNarko*count) return ShowPlayerDialog(playerid,1213,DIALOG_STYLE_INPUT,"{FFCC00}Покупка травы","{FFFFFF}Введите количество грамм которое вы хотите купить.\n\n{F04245}У вас недостаточно денег!","Купить","Отмена");
			else if(!(1 <= count <= 100) && !pInfo[playerid][pImprove][2]) return ShowPlayerDialog(playerid,1213,DIALOG_STYLE_INPUT,"{FFCC00}Покупка травы","{FFFFFF}Введите количество грамм которое вы хотите купить.\n\n{F04245}Количество не должно превышать 100 грамм!","Купить","Отмена");
			else if(!(1 <= count <= 200) && pInfo[playerid][pImprove][2]) return ShowPlayerDialog(playerid,1213,DIALOG_STYLE_INPUT,"{FFCC00}Покупка травы","{FFFFFF}Введите количество грамм которое вы хотите купить.\n\n{F04245}Количество не должно превышать 200 грамм!","Купить","Отмена");
			pInfo[playerid][pDrugs] += count;
			TransferMoney(playerid, -1, PriceNarko*count);
			BankNarko += PriceNarko*count;
			SendClientMessage(playerid, COLOR_YELLOW, "Вот, держи свой товар!");
			stringer[0] = EOS;
			format(stringer, 300, "Наркопритон\n\n{FFFFFF}На балансе: {63BD4E}%d$\n{FFFFFF}Стоимость наркотиков: {63BD4E}%d$", BankNarko, PriceNarko);
		    UpdateDynamic3DTextLabelText(NarkoText, COLOR_YELLOW, stringer);
		}
	case dRegister:
	    {
	        if(!response)
			{
				SendClientMessage(playerid, COLOR_RED, PlayerNeedToLoggedForToPlay);
				return Kick(playerid);
			}
			stringer[0] = EOS;
	 		format(stringer, 512, "\
			 	{FFFFFF}Для регистрации Вам следует придумать пароль и ввести его в поле ниже.\n\
	 			Старайтесь использовать более сложные комбинации символов в пароле.\n\
	 			Использовать можно только {FF9900}символы латинского алфавита {FFFFFF}и {FF9900}цифры{FFFFFF}.\n\
		 		Длина пароля может быть от {63BD4E}6 {FFFFFF}до {63BD4E}15 {FFFFFF}символов.\n\n\
	 			{EAD86A}Надёжность пароля - залог сохранности аккаунта!");
			ShowPlayerDialog(playerid, dRegisterPass, DIALOG_STYLE_INPUT, "{FFCC00}Создание пароля", stringer, "Далее", "Отмена");
	    }
  	case dRegisterPass:
	    {
			if(!response)
			{
				SendClientMessage(playerid, COLOR_RED, PlayerNeedToLoggedForToPlay);
				return Kick(playerid);
			}
		    for(new i = strlen(inputtext); i != 0; --i)
		    {
		    	switch(inputtext[i])
				{
				    case 'А'..'Я', 'а'..'я', ' ': return ShowPlayerDialog(playerid, dRegisterPass, DIALOG_STYLE_MSGBOX, "{F04245}Ошибка", "{FFFFFF}Пароль не должен содержать запрещённые символы!\nВозможно Вы вводите пароль не в той раскладке.", "Повторить", "");
				}
			}
			if(!strlen(inputtext) || strlen(inputtext) < 6 || strlen(inputtext) > 16 || IsTextRussian(inputtext))
			{
			    stringer[0] = EOS;
		 		format(stringer, 512, "\
				 	{FFFFFF}Для регистрации Вам следует придумать пароль и ввести его в поле ниже.\n\
		 			Старайтесь использовать более сложные комбинации символов в пароле.\n\
		 			Использовать можно только {FF9900}символы латинского алфавита {FFFFFF}и {FF9900}цифры{FFFFFF}.\n\
			 		Длина пароля может быть от {63BD4E}6 {FFFFFF}до {63BD4E}15 {FFFFFF}символов.\n\n\
		 			{EAD86A}Надёжность пароля - залог сохранности аккаунта!");
			    return ShowPlayerDialog(playerid, dRegisterPass, DIALOG_STYLE_INPUT, "{FFCC00}Создание пароля", stringer, "Далее", "Отмена");
	    	}
			strmid(pInfo[playerid][pPassword], inputtext, 0, strlen(inputtext), 32);
			ShowPlayerDialog(playerid, dJob+6, 1, "{FFCC00}Электронная почта", "{ffffff}Введите Ваш e-mail адрес, за которым будет закреплён данный аккаунт.\nЕсли вы потеряете доступ к аккаунту, то с помощью e-mail вы сможете восстановить его.", "Далее", "Отмена");
		}
	case dLogin:
	    {
	        if(!response)
			{
				SendClientMessage(playerid, COLOR_RED, PlayerNeedToLoggedForToPlay);
				return Kick(playerid);
			}
			for(new i = strlen(inputtext); i != 0; --i)
	    	switch(inputtext[i])
			{
				case 'А'..'Я', 'а'..'я', ' ': return ShowPlayerDialog(playerid, dErrorPassword, DIALOG_STYLE_MSGBOX, "{F04245}Ошибка", "{FFFFFF}Пароль не должен содержать запрещённые символы!\nВозможно Вы вводите пароль не в той раскладке.", "Повторить", "");
			}
	        if(!strlen(inputtext))
			{
			    stringer[0] = EOS;
		 		format(stringer, 512, "\
			    	{FFFFFF}Добро пожаловать на сервер проекта {FFCC00}"SERVER_NAME".\n\n\
			    	{FFFFFF}Аккаунт с логином {f0144e}%s {FFFFFF}уже зарегистрирован на этом сервере.\n\
			    	Введите пароль от аккаунта в поле ниже и нажмите 'Войти'.\n\n\
			    	У Вас есть 30 секунд на авторизацию.", GetName(playerid));
				return ShowPlayerDialog(playerid, dLogin, 3, "{FFCC00}Авторизация", stringer, "Войти", "Отмена");
			}
            new string[128];
			mysql_format(dbHandle, string, sizeof(string), "SELECT * FROM "T_ACCOUNTS" WHERE name = '%e' AND password = '%e'", GetName(playerid), inputtext);
			mysql_tquery(dbHandle, string, "@OnPlayerLogin", "d", playerid);
		}
	case dErrorPassword:
		{
		    if(!response)
			{
				SendClientMessage(playerid, COLOR_RED, PlayerNeedToLoggedForToPlay);
				return Kick(playerid);
			}
            stringer[0] = EOS;
	 		format(stringer, 512, "\
		    	{FFFFFF}Добро пожаловать на сервер проекта {FFCC00}"SERVER_NAME".\n\n\
		    	{FFFFFF}Аккаунт с логином {f0144e}%s {FFFFFF}уже зарегистрирован на этом сервере.\n\
		    	Введите пароль от аккаунта в поле ниже и нажмите 'Войти'.\n\n\
		    	У Вас есть 30 секунд на авторизацию.", GetName(playerid));
			ShowPlayerDialog(playerid, dLogin, 3, "{FFCC00}Авторизация", stringer, "Войти", "Отмена");
		}
	case dSex:
		{
			if(response) pInfo[playerid][pSex] = 1;
			else pInfo[playerid][pSex] = 2;
			ClothesRound[playerid] = 1;
			SendClientMessage(playerid, COLOR_LIME, "Выберите одежду для вашего будущего персонажа:");
			SetHealth(playerid, 100);
			SetHunger(playerid, 100);
			gPlayerLogged[playerid] = true;
			SpawnPlayerEx(playerid);
		}
	case 13212:
		{
			if(!response) return cmd_menu(playerid);
			if(pInfo[playerid][pMuted] > 0) return SendMuteMessage(playerid);
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid, 13212, DIALOG_STYLE_INPUT, "{FFCC00}Репорт", "{FFFFFF}Введите ID игрока и причину подачи на него в репорт:", "Отправить","Назад");
			new string[144];
			format(string, sizeof(string), "{FFAF4E}[A] Жалоба от %s[%i]: {FFFFFF}%s", GetName(playerid), playerid, inputtext);
			SendAdminMessage(COLOR_RED, string);
			format(string, sizeof(string), "{FFAF4E}Вы отправили жалобу: {FFFFFF}%s", inputtext);
			SendClientMessage(playerid, COLOR_RED, string);
			if(pInfo[playerid][pVip]) ReportTime[playerid]=gettime()+15;
			else ReportTime[playerid]=gettime()+30;
		}
	case 13213:
		{
			if(!response) return cmd_menu(playerid);
			if(pInfo[playerid][pMuted] > 0) return SendMuteMessage(playerid);
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid, 13213, DIALOG_STYLE_INPUT, "{FFCC00}Задать вопрос", "{FFFFFF}Введите чётко поставленный вопрос:", "Отправить","Назад");
            new string[144];
			format(string, sizeof(string), "[A] Вопрос от %s[%i]: {FFFFFF}%s", GetName(playerid), playerid, inputtext);
			SendAdminMessage(COLOR_BLUE, string);
			format(string, sizeof(string), "Вы отправили вопрос: {FFFFFF}%s", inputtext);
			SendClientMessage(playerid, COLOR_BLUE, string);
			if(pInfo[playerid][pVip]) ReportTime[playerid]=gettime()+15;
			else ReportTime[playerid]=gettime()+30;
		}
	case 15143:
		{
		    if(!response) return DeletePVar(playerid, "checkstats");
		    if(playerid != GetPVarInt(playerid, "checkstats")) ShowPlayerItemsDialog(playerid, GetPVarInt(playerid, "checkstats"));
		    else ShowPlayerItemsDialog(playerid, playerid);
		}
	case 15144:
		{
		    if(!response) return DeletePVar(playerid, "checkstats");
			if(playerid != GetPVarInt(playerid, "checkstats")) ShowPlayerStatsDialog(playerid, GetPVarInt(playerid, "checkstats"));
			else ShowPlayerStatsDialog(playerid, playerid);
		}
	case dCont_Two: {
	    if(!response) return true;
		new rands = random ( 12350 ) + random ( 12350 );
		new cont_format[256],
			rand_donate = random(40);
  		/* new prize[2] = {
		        12000,
				15000,
		    };
		new total_format[2][2][64] = {
		    {"Деньги", 10000},
		    {"Донат валюту", 15000}
		}
		if(rands == 0)
		{
			pInfo[playerid][pCash] += prize[0];
			TransferMoney(-1, playerid, prize[0]);
		}
		else if(rands <= 2)
		{
	 		 pInfo[playerid][pCash] += prize[1];
		     pInfo[playerid][pCredits] += 15;
			 TransferMoney(-1, playerid, prize[1]);
		}*/
		/* pInfo[playerid][pCash] += rand;
		   pInfo[playerid][pCredits] += rand_donate;
		TransferMoney(-1, playerid, rand); */

		// format(cont_format, sizeof(cont_format), "Вы успешно открыли контейнер, и получили: %d в размере %d", total_format[rands][rands]);
		format(cont_format, sizeof(cont_format), "Вы успешно открыли контейнер [V.I.P], и получили: %d $ + %d FCoins", rands, rand_donate);
		SendClientMessage(playerid, -1, cont_format);
		
		TransferMoney(-1, playerid, rands);
		pInfo[playerid][pCredits] += rand_donate;
		
		MysqlUpdatePlayerInt(playerid, "credits", pInfo[playerid][pCredits]);
		MysqlUpdatePlayerInt(playerid, "cash", pInfo[playerid][pCash]);
	}
	case dCommandServer:
		{
			if(!response) return cmd_menu(playerid);
			switch(listitem)
			{
				case 0:
				{
				    stringer[0] = EOS;
				    strcat(stringer, "{66CC00}/id {FFFFFF}- поиск игрока\n");
				    strcat(stringer, "{66CC00}/time {FFFFFF}- посмотреть на часы\n");
				    strcat(stringer, "{66CC00}/jailtime {FFFFFF}- посмотреть время заключения\n");
				    strcat(stringer, "{66CC00}/skill {FFFFFF}- показать свои навыки\n");
				    strcat(stringer, "{66CC00}/setspawn {FFFFFF}- место спавна\n");
				    strcat(stringer, "{66CC00}/smoke {FFFFFF}- курить\n");
				    strcat(stringer, "{66CC00}/sprunk {FFFFFF}- выпить газировку\n");
				    strcat(stringer, "{66CC00}/play {FFFFFF}- использовать mp3-плеер\n");
				    strcat(stringer, "{66CC00}/healme {FFFFFF}- использовать аптечку\n");
        			strcat(stringer, "{66CC00}/ad {FFFFFF}- подать объявление\n");
				    strcat(stringer, "{66CC00}/pay {FFFFFF}- передать деньги\n");
				    strcat(stringer, "{66CC00}/radio {FFFFFF}- переключить радиостанцию\n");
				    strcat(stringer, "{66CC00}/gps {FFFFFF}- навигатор\n");
				    strcat(stringer, "{66CC00}/leaders {FFFFFF}- лидеры онлайн\n");
				    strcat(stringer, "{66CC00}/instructors {FFFFFF}- инструкторы онлайн\n");
				    strcat(stringer, "{66CC00}/pass {FFFFFF}- показать паспорт\n");
				    strcat(stringer, "{66CC00}/lic {FFFFFF}- показать лицензии\n");
				    strcat(stringer, "{66CC00}/showmc {FFFFFF}- показать мед. карту\n");
				    strcat(stringer, "{66CC00}/anim {FFFFFF}- список анимаций\n");
				    strcat(stringer, "{66CC00}/usedrugs {FFFFFF}- использовать наркотик\n");
				    strcat(stringer, "{66CC00}/dropdrugs {FFFFFF}- выкинуть наркотики\n");
				    strcat(stringer, "{66CC00}/phonebook {FFFFFF}- телефонная книга\n");
				    strcat(stringer, "{66CC00}/call {FFFFFF}- позвонить\n");
				    strcat(stringer, "{66CC00}/sms {FFFFFF}- отправить сообщение\n");
				    strcat(stringer, "{66CC00}/togphone {FFFFFF}- выключить телефон\n");
				    strcat(stringer, "{66CC00}/number {FFFFFF}- узнать номер игрока\n");
				    strcat(stringer, "{66CC00}/charity {FFFFFF}- самые щедрые игроки\n");
				    strcat(stringer, "{66CC00}/fstyle {FFFFFF}- изменить стиль боя\n");
				    strcat(stringer, "{66CC00}/givepatr {FFFFFF}- передать патроны\n");
				    strcat(stringer, "{66CC00}/giveguns {FFFFFF}- передать ед. оружия\n");
				    strcat(stringer, "{66CC00}/givecig {FFFFFF}- передать сигареты\n");
				    strcat(stringer, "{66CC00}/giveflowers {FFFFFF}- передать цветы\n");
				    strcat(stringer, "{66CC00}/history {FFFFFF}- история ников\n");
				    strcat(stringer, "{66CC00}/sellsim {FFFFFF}- продать SIM-карту");
				    ShowPlayerDialog(playerid, dCommandShow, DIALOG_STYLE_MSGBOX, "{FFCC00}Основные", stringer, "Назад", "Закрыть");
				}
				case 1:
				{
				    stringer[0] = EOS;
				    strcat(stringer, "{66CC00}/me {FFFFFF}- действие от 1-го лица \n");
				    strcat(stringer, "{66CC00}/ame {FFFFFF}- действие от 1-го лица (над головой)\n");
				    strcat(stringer, "{66CC00}/do {FFFFFF}- действие от 3-го лица\n");
				    strcat(stringer, "{66CC00}/try {FFFFFF}- попытка действия\n");
				    strcat(stringer, "{66CC00}/s {FFFFFF}- крикнуть\n");
				    strcat(stringer, "{66CC00}/w {FFFFFF}- сказать шёпотом\n");
				    strcat(stringer, "{66CC00}/n {FFFFFF}- нонРП чат");
				    ShowPlayerDialog(playerid, dCommandShow, DIALOG_STYLE_MSGBOX, "{FFCC00}Чат", stringer, "Назад", "Закрыть");
				}
				case 2:
				{
				    stringer[0] = EOS;
				    strcat(stringer, "{66CC00}/hpanel {FFFFFF}- меню дома\n");
				    strcat(stringer, "{66CC00}/sellhouse {FFFFFF}- продать дом государству\n");
				    strcat(stringer, "{AFAFAF}Чтобы продать игроку укажите параметры [id игрока] [стоимость]\n");
				    strcat(stringer, "{66CC00}/fixcar {FFFFFF}- доставить транспорт к дому\n");
				    strcat(stringer, "{66CC00}/hheal {FFFFFF}- использовать домашнюю аптечку\n");
				    ShowPlayerDialog(playerid, dCommandShow, DIALOG_STYLE_MSGBOX, "{FFCC00}Дом", stringer, "Назад", "Закрыть");
				}
				case 3:
				{
				    stringer[0] = EOS;
				    strcat(stringer, "{66CC00}/buybiz {FFFFFF}- приобрести бизнес\n");
				    strcat(stringer, "{66CC00}/bpanel {FFFFFF}- меню бизнеса\n");
				    strcat(stringer, "{66CC00}/sellbiz {FFFFFF}- продать бизнес государству\n");
				    strcat(stringer, "{AFAFAF}Чтобы продать игроку укажите параметры [id игрока] [стоимость]");
				    ShowPlayerDialog(playerid, dCommandShow, DIALOG_STYLE_MSGBOX, "{FFCC00}Бизнес", stringer, "Назад", "Закрыть");
				}
				case 4:
				{
				    stringer[0] = EOS;
				    strcat(stringer, "{66CC00}/pts {FFFFFF}- паспорт т/с\n");
				    strcat(stringer, "{66CC00}/sellcar {FFFFFF}- продать транспорт государству\n");
				    strcat(stringer, "{AFAFAF}Чтобы продать игроку укажите параметры [id игрока] [стоимость]\n");
				    strcat(stringer, "{66CC00}/eject {FFFFFF}- выкинуть из транспорта\n");
				    strcat(stringer, "{66CC00}/lock {FFFFFF}- открыть/закрыть домашний транспорт\n");
				    strcat(stringer, "{66CC00}/lock 2 {FFFFFF}- открыть/закрыть рабочий транспорт\n");
				    strcat(stringer, "{66CC00}/lock 3 {FFFFFF}- открыть/закрыть доверенный или арендованный транспорт\n");
				    strcat(stringer, "{66CC00}/givevkey {FFFFFF}- дать ключи от авто\n");
				    strcat(stringer, "{66CC00}/takevkey {FFFFFF}- забрать ключи от авто\n");
				    strcat(stringer, "{66CC00}/dropvkey {FFFFFF}- выкинуть ключи от авто\n");
				    strcat(stringer, "{66CC00}/usecanister {FFFFFF}- использовать канистру\n");
				    strcat(stringer, "{66CC00}/usetools {FFFFFF}- использовать инструменты\n");
				    if(pInfo[playerid][pVip]) strcat(stringer, "{66CC00}/removetuning {FFFFFF}- удалить тюнинг с транспорта");
				    ShowPlayerDialog(playerid, dCommandShow, DIALOG_STYLE_MSGBOX, "{FFCC00}Транспорт", stringer, "Назад", "Закрыть");
				}
				case 5:
				{
					if(pInfo[playerid][pJob] == 0) return ShowPlayerDialog(playerid, dCommandShow, DIALOG_STYLE_MSGBOX, "{FFCC00}По работе", "{FFFFFF}Нет доступных команд", "Назад", "Закрыть");
                    stringer[0] = EOS;
					switch(pInfo[playerid][pJob])
					{
						case JOB_BUS:
						{
						    strcat(stringer, "{FFFFFF}Водитель автобуса:\n");
				    		strcat(stringer, "{66CC00}/end {FFFFFF}- закончить рабочий день");
						}
						case JOB_TAXI:
						{
						    strcat(stringer, "{FFFFFF}Водитель такси:\n");
				    		strcat(stringer, "{66CC00}/fare {FFFFFF}- начать работу");
						}
						case JOB_MECHANIC:
						{
						    strcat(stringer, "{FFFFFF}Автомеханик:\n");
				    		strcat(stringer, "{66CC00}/repair {FFFFFF}- починить транспорт\n");
				    		strcat(stringer, "{66CC00}/refill {FFFFFF}- заправить транспорт");
						}
						case JOB_TRUCKER:
						{
						    strcat(stringer, "{FFFFFF}Дальнобойщик:\n");
				    		strcat(stringer, "{66CC00}/end {FFFFFF}- закончить рабочий день");
						}
					}
				    ShowPlayerDialog(playerid, dCommandShow, DIALOG_STYLE_MSGBOX, "{FFCC00}По работе", stringer, "Назад", "Закрыть");
				}
				case 6:
				{
				    stringer[0] = EOS;
				    strcat(stringer, "{66CC00}/invite {FFFFFF}- принять игрока\n");
				    strcat(stringer, "{66CC00}/uninvite {FFFFFF}- уволить игрока\n");
				    strcat(stringer, "{66cc00}/uninviteoff {FFFFFF}- оффлайн уволить игрока\n");
				    strcat(stringer, "{66CC00}/rang {FFFFFF}- изменить ранг\n");
				    strcat(stringer, "{66CC00}/setskin {FFFFFF}- выбрать служебную одежду\n");
				    strcat(stringer, "{66CC00}/find {FFFFFF}- список всех игроков в Вашей организации\n");
				    strcat(stringer, "{66CC00}/fwarn {FFFFFF}- выдать выговор игроку\n");
				    strcat(stringer, "{66CC00}/funwarn {FFFFFF}- снять выговор игроку");
				    ShowPlayerDialog(playerid, dCommandShow, DIALOG_STYLE_MSGBOX, "{FFCC00}Для лидеров", stringer, "Назад", "Закрыть");
				}
				case 7:
				{
				    if(pInfo[playerid][pMember] == 0) return ShowPlayerDialog(playerid, dCommandShow, DIALOG_STYLE_MSGBOX, "{FFCC00}Организация", "{FFFFFF}Нет доступных команд", "Назад", "Закрыть");
				    stringer[0] = EOS;
				    if(IsAMayor(playerid))
				    {
				        strcat(stringer, "{66CC00}/r {FFFFFF}- рация\n");
				        strcat(stringer, "{66CC00}/rn {FFFFFF}- NonRP чат фракции\n");
				    	strcat(stringer, "{66CC00}/d {FFFFFF}- департамент\n");
				    	strcat(stringer, "{66CC00}/gov {FFFFFF}- гос. новости\n");
				    	strcat(stringer, "{66CC00}/find {FFFFFF}- онлайн фракции");
				    }
					else if(IsACop(playerid))
					{
					    strcat(stringer, "{66CC00}/r {FFFFFF}- рация\n");
					    strcat(stringer, "{66CC00}/rn {FFFFFF}- NonRP чат фракции\n");
				    	strcat(stringer, "{66CC00}/d {FFFFFF}- департамент\n");
				    	strcat(stringer, "{66CC00}/gov {FFFFFF}- гос. новости\n");
				    	strcat(stringer, "{66CC00}/m {FFFFFF}- служебный мегафон\n");
				    	strcat(stringer, "{66CC00}/frisk {FFFFFF}- обыскать\n");
				    	strcat(stringer, "{66CC00}/convoy {FFFFFF}- вести за собой\n");
				    	strcat(stringer, "{66CC00}/convoyoff {FFFFFF}- перестать вести за собой\n");
				    	strcat(stringer, "{66CC00}/takegun {FFFFFF}- изъять оружие\n");
				    	strcat(stringer, "{66CC00}/take {FFFFFF}- изъять лицензии\n");
				    	strcat(stringer, "{66CC00}/ticket {FFFFFF}- выписать штраф\n");
				    	strcat(stringer, "{66CC00}/ram {FFFFFF}- взломать дверь дома\n");
				    	strcat(stringer, "{66CC00}/break {FFFFFF}- дорожное ограждение\n");
				    	strcat(stringer, "{66CC00}/cput {FFFFFF}- затолкать игрока в авто\n");
				    	strcat(stringer, "{66CC00}/cout {FFFFFF}- высадить игрока в полицейский участок\n");
				    	strcat(stringer, "{66CC00}/cuff {FFFFFF}- надеть наручники\n");
				    	strcat(stringer, "{66CC00}/uncuff {FFFFFF}- снять наручники\n");
				    	strcat(stringer, "{66CC00}/find {FFFFFF}- онлайн фракции\n");
				    	strcat(stringer, "{66CC00}/clear {FFFFFF}- снять розыск\n");
				    	strcat(stringer, "{66CC00}/wanted {FFFFFF}- список разыскиваемых\n");
				    	strcat(stringer, "{66CC00}/su {FFFFFF}- подать в розыск\n");
				    	strcat(stringer, "{66CC00}/flight {FFFFFF}- фонарик\n");
				    	strcat(stringer, "{66CC00}/showall {FFFFFF}- список игроков во фракции\n");
				    	strcat(stringer, "{66CC00}/arrest {FFFFFF}- провести арест\n");
				    	strcat(stringer, "{66CC00}/unmask {FFFFFF}- снять маску с игрока\n");
				    	strcat(stringer, "{66CC00}/search {FFFFFF}- найти местоположение игрока");
					}
					else if(pInfo[playerid][pMember] == TEAM_NG)
					{
					    strcat(stringer, "{66CC00}/r {FFFFFF}- рация\n");
					    strcat(stringer, "{66CC00}/rn {FFFFFF}- NonRP чат фракции\n");
				    	strcat(stringer, "{66CC00}/d {FFFFFF}- департамент\n");
				    	strcat(stringer, "{66CC00}/gov {FFFFFF}- гос. новости\n");
				    	strcat(stringer, "{66CC00}/frisk {FFFFFF}- обыскать\n");
				    	strcat(stringer, "{66CC00}/makegun {FFFFFF}- сделать оружие\n");
				    	strcat(stringer, "{66CC00}/vb {FFFFFF}- выдать/забрать военный билет\n");
				    	strcat(stringer, "{66CC00}/find {FFFFFF}- онлайн фракции\n");
				    	strcat(stringer, "{66CC00}/load {FFFFFF}- загрузка ящиков\n");
				    	strcat(stringer, "{66CC00}/unload {FFFFFF}- разгрузка ящиков");
					}
					else if(pInfo[playerid][pMember] == TEAM_AUTOSCHOOL)
					{
					    strcat(stringer, "{66CC00}/r {FFFFFF}- рация\n");
					    strcat(stringer, "{66CC00}/rn {FFFFFF}- NonRP чат фракции\n");
				    	strcat(stringer, "{66CC00}/d {FFFFFF}- департамент\n");
				    	strcat(stringer, "{66CC00}/gov {FFFFFF}- гос. новости\n");
				    	strcat(stringer, "{66CC00}/salelic {FFFFFF}- продать лицензию\n");
				    	strcat(stringer, "{66CC00}/find {FFFFFF}- онлайн фракции\n");
				    	if(pInfo[playerid][pLeader]) strcat(stringer, "{66CC00}/fbank {FFFFFF}- банк организации");
					}
					else if(IsANews(playerid))
					{
					    strcat(stringer, "{66CC00}/r {FFFFFF}- чат фракции\n");
					    strcat(stringer, "{66CC00}/rn {FFFFFF}- NonRP чат фракции\n");
				    	strcat(stringer, "{66CC00}/dial {FFFFFF}- меню эфиров\n");
				    	strcat(stringer, "{66CC00}/edit {FFFFFF}- меню объявлений\n");
				    	strcat(stringer, "{66CC00}/find {FFFFFF}- онлайн фракции\n");
				    	if(pInfo[playerid][pLeader])
						{
						    strcat(stringer, "{66CC00}/fprice {FFFFFF}- управление ценами\n");
							strcat(stringer, "{66CC00}/fbank {FFFFFF}- банк организации");
						}
					}
					else if(IsAMedic(playerid))
					{
					    strcat(stringer, "{66CC00}/r {FFFFFF}- чат фракции\n");
					    strcat(stringer, "{66CC00}/rn {FFFFFF}- NonRP чат фракции\n");
					    strcat(stringer, "{66CC00}/d {FFFFFF}- департамент\n");
				    	strcat(stringer, "{66CC00}/heal {FFFFFF}- провести лечение\n");
				    	strcat(stringer, "{66CC00}/find {FFFFFF}- онлайн фракции\n");
				    	strcat(stringer, "{66CC00}/load {FFFFFF}- загрузка медикаментов\n");
				    	strcat(stringer, "{66CC00}/unload {FFFFFF}- разгрузка медикаментов\n");
				    	if(pInfo[playerid][pRank] > 3) strcat(stringer, "{66CC00}/medcard {FFFFFF}- выдать мед.карту");
					}
					else if(IsAGang(playerid))
					{
					    strcat(stringer, "{66CC00}/f {FFFFFF}- чат фракции\n");
					    strcat(stringer, "{66CC00}/fn {FFFFFF}- NonRP чат фракции\n");
					    strcat(stringer, "{66CC00}/robhouse {FFFFFF}- ограбить дом\n");
				    	strcat(stringer, "{66CC00}/selldrugs {FFFFFF}- продать наркотики\n");
				    	strcat(stringer, "{66CC00}/makegun {FFFFFF}- сделать оружие\n");
				    	strcat(stringer, "{66CC00}/sellgun {FFFFFF}- продать оружие\n");
				    	strcat(stringer, "{66CC00}/sellzone {FFFFFF}- продать территорию\n");
				    	strcat(stringer, "{66CC00}/capture {FFFFFF}- начать войну за территорию\n");
				    	strcat(stringer, "{66CC00}/find {FFFFFF}- онлайн фракции\n");
				    	if(pInfo[playerid][pRank] >= 9) strcat(stringer, "{66CC00}/close {FFFFFF}- открыть/закрыть склад");
					}
					else if(IsAMafia(playerid))
					{
					    strcat(stringer, "{66CC00}/f {FFFFFF}- чат фракции\n");
					    strcat(stringer, "{66CC00}/fn {FFFFFF}- NonRP чат фракции\n");
					    strcat(stringer, "{66CC00}/tie {FFFFFF}- связать игрока\n");
				    	strcat(stringer, "{66CC00}/untie {FFFFFF}- развязать игрока\n");
				    	strcat(stringer, "{66CC00}/bizwar {FFFFFF}- забить стрелу за бизнес\n");
				    	strcat(stringer, "{66CC00}/bizlist {FFFFFF}- список бизнесов\n");
				    	strcat(stringer, "{66CC00}/find {FFFFFF}- онлайн фракции\n");
				    	strcat(stringer, "{66CC00}/load {FFFFFF}- загрузка ящиков\n");
				    	strcat(stringer, "{66CC00}/unload {FFFFFF}- разгрузка ящиков\n");
				    	if(pInfo[playerid][pRank] >= 9) strcat(stringer, "{66CC00}/close {FFFFFF}- открыть/закрыть склад");
					}
					ShowPlayerDialog(playerid, dCommandShow, DIALOG_STYLE_MSGBOX, "{FFCC00}Организация", stringer, "Назад", "Закрыть");
				}
	        }
		}
		case dCommandShow:
		{
		    if(!response) return 1;
		    else ShowPlayerDialog(playerid, dCommandServer, DIALOG_STYLE_LIST, "{FFCC00}Команды сервера", "Основные\nЧат\nДом\nБизнес\nТранспорт\nПо работе\nДля лидеров\nОрганизация", "Выбрать", "Назад");
		}
		case dUcpAdmin:
		{
			if(!response) return 1;
   			new string[150];
			switch(listitem)
			{
				case 0:
				{
					format(string, sizeof(string), "{FFFFFF}Введите будущий ник для игрока: %s", GetName(edit_stats_ID[playerid]));
					ShowPlayerDialog(playerid, dUcpAdmin2, DIALOG_STYLE_INPUT, "{FFCC00}Ник", string, "Принять", "Отмена");
				}
				case 1:
				{
					format(string, sizeof(string), "{FFFFFF}Введите будущий уровень для игрока: %s", GetName(edit_stats_ID[playerid]));
					ShowPlayerDialog(playerid, dUcpAdmin2, DIALOG_STYLE_INPUT, "{FFCC00}Уровень", string, "Принять", "Отмена");
				}
				case 2:
				{
					format(string, sizeof(string), "{FFFFFF}Введите количество опыта для игрока: %s", GetName(edit_stats_ID[playerid]));
					ShowPlayerDialog(playerid, dUcpAdmin2, DIALOG_STYLE_INPUT, "{FFCC00}Опыт", string, "Принять", "Отмена");
				}
				case 3:
				{
					format(string, sizeof(string), "{FFFFFF}Введите будущий пол для игрока: %s\n\n{AFAFAF}1 - мужской\n2 - женский", GetName(edit_stats_ID[playerid]));
					ShowPlayerDialog(playerid, dUcpAdmin2, DIALOG_STYLE_INPUT, "{FFCC00}Пол", string, "Принять", "Отмена");
				}
				case 4:
				{
				    format(string, sizeof(string), "{FFFFFF}Введите количество фишек для игрока: %s", GetName(edit_stats_ID[playerid]));
					ShowPlayerDialog(playerid, dUcpAdmin2, DIALOG_STYLE_INPUT, "{FFCC00}Игральные фишки", string, "Принять", "Отмена");
				}
				case 5:
				{
					ShowPlayerDialog(playerid, dUcpAdmin2, DIALOG_STYLE_LIST, "{FFCC00}Работа", "Водитель автобуса\nВодитель такси\nАвтомеханик\nДальнобойщик\nУволить с работы", "Принять", "Отмена");
				}
			}
			player_stats[playerid] = listitem+1;
		}
		case dUcpAdmin2:
		{
			if(!response) return 1;
   			new string[150];
			switch(player_stats[playerid])
			{
				case 1:
				{
					if(!strlen(inputtext))
					{
						format(string, sizeof(string), "{FFFFFF}Введите будущий ник для игрока: %s", GetName(edit_stats_ID[playerid]));
						return ShowPlayerDialog(playerid, dUcpAdmin2, DIALOG_STYLE_INPUT, "{FFCC00}Ник", string, "Принять", "Отмена");
					}
					mysql_query_string[0] = EOS;
					format(mysql_query_string, sizeof(mysql_query_string), "SELECT * FROM "T_ACCOUNTS" WHERE name = '%s'", inputtext);
					mysql_tquery(dbHandle, mysql_query_string, "@OnPlayerSetName", "is", playerid, inputtext);
				}
				case 2:
				{
					if(!strlen(inputtext))
					{
						format(string, sizeof(string), "{FFFFFF}Введите будущий уровень для игрока: %s", GetName(edit_stats_ID[playerid]));
						return ShowPlayerDialog(playerid, dUcpAdmin2, DIALOG_STYLE_INPUT, "{FFCC00}Уровень", string, "Принять", "Отмена");
					}
					if(!(1 <= strval(inputtext) <= 100))
					{
						format(string, sizeof(string), "{FFFFFF}Введите будущий уровень для игрока: %s", GetName(edit_stats_ID[playerid]));
						return ShowPlayerDialog(playerid, dUcpAdmin2, DIALOG_STYLE_INPUT, "{FFCC00}Уровень", string, "Принять", "Отмена");
					}
					SendMes(playerid, COLOR_LIME,"Вы установили уровень игрока %s на %d",GetName(edit_stats_ID[playerid]), strval(inputtext));
					SendMes(edit_stats_ID[playerid], COLOR_LIME, "Администратор %s установил вам уровень игрока на %d", GetName(playerid), strval(inputtext));
					pInfo[edit_stats_ID[playerid]][pLevel] = strval(inputtext);
					SetPlayerScore(edit_stats_ID[playerid], pInfo[edit_stats_ID[playerid]][pLevel]);
					MysqlUpdatePlayerInt(edit_stats_ID[playerid], "level", pInfo[edit_stats_ID[playerid]][pLevel]);
					format(string, sizeof(string), "%s изменил уровень %s на %i", GetName(playerid), GetName(edit_stats_ID[playerid]), strval(inputtext));
				}
				case 3:
				{
					if(!strlen(inputtext))
					{
						format(string, sizeof(string), "{FFFFFF}Введите количество опыта для игрока: %s", GetName(edit_stats_ID[playerid]));
						return ShowPlayerDialog(playerid, dUcpAdmin2, DIALOG_STYLE_INPUT, "{FFCC00}Опыт", string, "Принять", "Отмена");
					}
					if(!(1 <= strval(inputtext) <= 1000))
					{
						format(string, sizeof(string), "{FFFFFF}Введите количество опыта для игрока: %s", GetName(edit_stats_ID[playerid]));
						return ShowPlayerDialog(playerid, dUcpAdmin2, DIALOG_STYLE_INPUT, "{FFCC00}Опыт", string, "Принять", "Отмена");
					}
					SendMes(playerid, COLOR_LIME, "Вы установили опыт %s на %d", GetName(edit_stats_ID[playerid]), strval(inputtext));
					SendMes(edit_stats_ID[playerid], COLOR_LIME, "Администратор %s установил вам опыт на %d", GetName(playerid), strval(inputtext));
					pInfo[edit_stats_ID[playerid]][pExp] = strval(inputtext);
					MysqlUpdatePlayerInt(edit_stats_ID[playerid], "exp", pInfo[edit_stats_ID[playerid]][pExp]);
					format(string, sizeof(string), "%s изменил опыт %s на %i", GetName(playerid), GetName(edit_stats_ID[playerid]), strval(inputtext));
				}
				case 4:
				{
					if(!strlen(inputtext))
					{
      					format(string, sizeof(string), "{FFFFFF}Введите будущий пол для игрока: %s\n\n{AFAFAF}1 - мужской\n2 - женский", GetName(edit_stats_ID[playerid]));
						return ShowPlayerDialog(playerid, dUcpAdmin2, DIALOG_STYLE_INPUT, "{FFCC00}Пол", string, "Принять", "Отмена");
					}
					if(!(1 <= strval(inputtext) <= 2))
					{
      					format(string, sizeof(string), "{FFFFFF}Введите будущий пол для игрока: %s\n\n{AFAFAF}1 - мужской\n2 - женский", GetName(edit_stats_ID[playerid]));
						return ShowPlayerDialog(playerid, dUcpAdmin2, DIALOG_STYLE_INPUT, "{FFCC00}Пол", string, "Принять", "Отмена");
					}
					SendMes(playerid, COLOR_LIME, "Вы изменили пол игроку %s на %s",GetName(edit_stats_ID[playerid]), (strval(inputtext)==1)?("мужской"):("женский"));
					SendMes(edit_stats_ID[playerid], COLOR_LIME, "Администратор %s изменил ваш пол на %s", GetName(playerid), (strval(inputtext)==1)?("мужской"):("женский"));
					pInfo[edit_stats_ID[playerid]][pSex] = strval(inputtext);
					MysqlUpdatePlayerInt(edit_stats_ID[playerid], "sex", pInfo[edit_stats_ID[playerid]][pSex]);

					#if MYSQL_R41_2 == true

					if(strlen(IsValidPassport(edit_stats_ID[playerid])))

					#else

					if(IsValidPassport(edit_stats_ID[playerid]))

					#endif
					{
					    mysql_query_string[0] = EOS;
				    	format(mysql_query_string, 128, "UPDATE "T_PASSPORTS" SET Sex = %i WHERE Name = '%s'", pInfo[edit_stats_ID[playerid]][pSex], GetName(edit_stats_ID[playerid]));
				    	mysql_tquery(dbHandle, mysql_query_string, "", "");
					}

					format(string, sizeof(string), "%s изменил пол %s на %s", GetName(playerid), GetName(edit_stats_ID[playerid]), (strval(inputtext)==1)?("мужской"):("женский"));
				}
				case 5:
			    {
			        if(!strlen(inputtext))
					{
						format(string, sizeof(string), "{FFFFFF}Введите количество фишек для игрока: %s", GetName(edit_stats_ID[playerid]));
						return ShowPlayerDialog(playerid, dUcpAdmin2, DIALOG_STYLE_INPUT, "{FFCC00}Игральные фишки", string, "Принять", "Отмена");
					}
					if(!(1 <= strval(inputtext) <= 10000))
					{
						format(string, sizeof(string), "{FFFFFF}Введите количество фишек для игрока: %s", GetName(edit_stats_ID[playerid]));
						return ShowPlayerDialog(playerid, dUcpAdmin2, DIALOG_STYLE_INPUT, "{FFCC00}Игральные фишки", string, "Принять", "Отмена");
					}
					SendMes(playerid, COLOR_LIME, "Вы изменили количество фишек игроку %s на %i",GetName(edit_stats_ID[playerid]), strval(inputtext));
					SendMes(edit_stats_ID[playerid], COLOR_LIME, "Администратор %s изменил вам количество фишек на %i", GetName(playerid), strval(inputtext));
					pInfo[edit_stats_ID[playerid]][pFishki] = strval(inputtext);
					MysqlUpdatePlayerInt(edit_stats_ID[playerid], "fishki", pInfo[edit_stats_ID[playerid]][pFishki]);
					format(string, sizeof(string), "%s изменил фишки %s на %i", GetName(playerid), GetName(edit_stats_ID[playerid]), strval(inputtext));
			    }
			    case 6:
			    {
					switch(listitem)
					{
						case 0:
						{
						    if(pInfo[edit_stats_ID[playerid]][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Игрок состоит в организации!");
						    else if(pInfo[edit_stats_ID[playerid]][pJob]==JOB_BUS) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже работает водителем автобуса!");
							pInfo[edit_stats_ID[playerid]][pJob] = JOB_BUS;
							MysqlUpdatePlayerInt(edit_stats_ID[playerid], "job", pInfo[edit_stats_ID[playerid]][pJob]);
							SendMes(playerid, COLOR_BLUE, "Вы устроили игрока %s на работу водителя автобуса", GetName(edit_stats_ID[playerid]));
							SendClientMessage(edit_stats_ID[playerid], COLOR_YELLOW, "Поздравляем");
							SendMes(edit_stats_ID[playerid], COLOR_WHITE, "Вы были приняты на работу водитель автобуса администратором %s", GetName(playerid));
							SendClientMessage(edit_stats_ID[playerid], COLOR_WHITE, "Помощь по командам: /menu - Команды сервера");
						}
						case 1:
						{
						    if(pInfo[edit_stats_ID[playerid]][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Игрок состоит в организации!");
							else if(pInfo[edit_stats_ID[playerid]][pJob]==JOB_TAXI) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже работает водителем такси!");
							pInfo[edit_stats_ID[playerid]][pJob] = JOB_TAXI;
							MysqlUpdatePlayerInt(edit_stats_ID[playerid], "job", pInfo[edit_stats_ID[playerid]][pJob]);
							SendMes(playerid, COLOR_BLUE, "Вы устроили игрока %s на работу водителя такси", GetName(edit_stats_ID[playerid]));
							SendClientMessage(edit_stats_ID[playerid], COLOR_YELLOW, "Поздравляем");
							SendMes(edit_stats_ID[playerid], COLOR_WHITE, "Вы были приняты на работу водитель такси администратором %s", GetName(playerid));
							SendClientMessage(edit_stats_ID[playerid], COLOR_WHITE, "Помощь по командам: /menu - Команды сервера");
						}
						case 2:
						{
						    if(pInfo[edit_stats_ID[playerid]][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Игрок состоит в организации!");
							else if(pInfo[edit_stats_ID[playerid]][pJob]==JOB_MECHANIC) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже работает автомехаником!");
							pInfo[edit_stats_ID[playerid]][pJob] = JOB_MECHANIC;
							MysqlUpdatePlayerInt(edit_stats_ID[playerid], "job", pInfo[edit_stats_ID[playerid]][pJob]);
							SendMes(playerid, COLOR_BLUE, "Вы устроили игрока %s на работу автомеханика", GetName(edit_stats_ID[playerid]));
							SendClientMessage(edit_stats_ID[playerid], COLOR_YELLOW, "Поздравляем");
							SendMes(edit_stats_ID[playerid], COLOR_WHITE, "Вы были приняты на работу автомеханика администратором %s", GetName(playerid));
							SendClientMessage(edit_stats_ID[playerid], COLOR_WHITE, "Помощь по командам: /menu - Команды сервера");
						}
						case 3:
						{
						    if(pInfo[edit_stats_ID[playerid]][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Игрок состоит в организации!");
							else if(pInfo[edit_stats_ID[playerid]][pJob]==JOB_TRUCKER) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже работает дальнобойщиком!");
							pInfo[edit_stats_ID[playerid]][pJob] = JOB_TRUCKER;
							MysqlUpdatePlayerInt(edit_stats_ID[playerid], "job", pInfo[edit_stats_ID[playerid]][pJob]);
							SendMes(playerid, COLOR_BLUE, "Вы устроили игрока %s на работу дальнобойщика", GetName(edit_stats_ID[playerid]));
							SendClientMessage(edit_stats_ID[playerid], COLOR_YELLOW, "Поздравляем");
							SendMes(edit_stats_ID[playerid], COLOR_WHITE, "Вы были приняты на работу дальнобойщика администратором %s", GetName(playerid));
							SendClientMessage(edit_stats_ID[playerid], COLOR_WHITE, "Помощь по командам: /menu - Команды сервера");
						}
						case 4:
						{
					        if(pInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Игрок состоит в организации!");
							else if(pInfo[playerid][pJob]==JOB_NONE) return SendClientMessage(playerid, COLOR_GREY, "Игрок нигде не работает!");
							pInfo[edit_stats_ID[playerid]][pJob] = JOB_NONE;
							MysqlUpdatePlayerInt(edit_stats_ID[playerid], "job", pInfo[edit_stats_ID[playerid]][pJob]);
							SendMes(edit_stats_ID[playerid], COLOR_BLUE, "Вы уволили игрока %s с работы", GetName(edit_stats_ID[playerid]));
							SendMes(playerid, COLOR_BLUE, "Администратор %s уволил%s Вас с работы", GetName(playerid), (pInfo[playerid][pSex]==1)?(""):("а"));
					    }
					}
				}
			}
			if(player_stats[playerid] != 1)
			{
			    WriteLog("EditStats", string);
				edit_stats_ID[playerid] = -1;
			}
			player_stats[playerid] = 0;
		}
	case dAddNed:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					new Float:X,Float:Y,Float:Z,Float:Angle;
					GetPlayerPos(playerid, X,Y,Z);
					GetPlayerFacingAngle(playerid,Angle);
					pTemp[playerid][hParkID] = CreateVehicle(426,X,Y,Z,Angle,-1,-1,-1);
					PutPlayerInVehicle(playerid, pTemp[playerid][hParkID], 0);
					VehicleInfo[pTemp[playerid][hParkID]][vFuel] = 50.0;
					SetVehicleParamsEx(pTemp[playerid][hParkID], false, false, false, false, false, false, false);
					SendClientMessage(playerid, COLOR_WHITE, "Припаркуйте авто около будущего дома, потом введите: /tpc");
					TPC[playerid] = false;
				}
				case 1: ShowPlayerDialog(playerid, dAddNed+2, 2, "{FFCC00}Бизнес", "Магазин 24/7\nЗаправка\nПиццерия\nЗакусочная (Burger Shot)\nЗакусочная (Cluckin Bell)\nКлуб (Alhambra)\nКлуб (Jizzy)\nКлуб (Pig Pen)\nБар (Misty)\nАммуниция\nНовый клуб\nСТО\nМагазин одежды\nКазино\nБар (Golden Railroad)", "Принять", "Отмена");
				case 2: ShowPlayerDialog(playerid, dAddNed+3, 0, "{FFCC00}Банкомат", "{FFFFFF}Вы хотите начать установку банкомата?", "Да", "Нет");
			}
		}
	case dAhelp:{
		if(!response) return true;
		switch(listitem){
			 case 0:{
			 	if(pInfo[playerid][pAdmin] >= 1) ShowPlayerDialog(playerid, dNull, DIALOG_M, "Команды Администратора 1 Уровня",
			 	"/apanel /a /agm /spec /specoff /hp /flpcar /ans /weap /stats /admins /settext", "Назад", !"");
			 }
			 case 1:{
				if(pInfo[playerid][pAdmin] >= 2) ShowPlayerDialog(playerid, dNull, DIALOG_M, "Команды Администратора 2 Уровня",
					"/gm /kick /spawn /freeze /unfreeze /mute /unmute /carhp /templeader /money /fly", "Назад", !"");
			 }
			 case 2:{
			 	if(pInfo[playerid][pAdmin] >= 3) ShowPlayerDialog(playerid, dNull, DIALOG_M, "Команды Администратора 3 Уровня",
			 		"/tp /setfuel /prison /unprison /jail /unjail /get /offget /clearchat /getip /lip /offmute /offprison /slap /sethp", "Назад", !"");
			 }
			 case 3:{
				if(pInfo[playerid][pAdmin] >= 4) ShowPlayerDialog(playerid, dNull, DIALOG_M, "Команды Администратора 4 Уровня",
					"/atake /adivorce /setam /cmd /say /amoney /fban /sethunger /ban /warn /unwarn /offunwarn /offwarn /goto /respv /okay /stopcapture /gotoveh /gethereveh /tphouse", "Назад", !"");
			 }
			 case 4:{
				if(pInfo[playerid][pAdmin] >= 5) ShowPlayerDialog(playerid, dNull, DIALOG_M, "Команды Администратора 5 Уровня",
					"/msg /skin /veh /delv /alldelv /alock /setleader /skick /sban /offban /gethere /object /auninvite /amusic /mp /ears", "Назад", !"");
			 }
			 case 5:{
				if(pInfo[playerid][pAdmin] >= 6) ShowPlayerDialog(playerid, dNull, DIALOG_M, "Команды Администратора 6 Уровня",
					"/unban /arang /agivelic /offcapture /setadmin /tempzone /banip /unbanip /deletegun", "Назад", !"");
			 }
			 case 6:{
				if(pInfo[playerid][pAdmin] >= 7) ShowPlayerDialog(playerid, dNull, DIALOG_M, "Команды Администратора 7 Уровня",
					"/fuelvehs /tpcoord(/tpcor) /delacc /admdown /admup /agun /doncheck /setvw /setinterior", "Назад", !"");
			 }
			 case 7:{
				if(pInfo[playerid][pAdmin] >= 8) ShowPlayerDialog(playerid, dNull, DIALOG_M, "Команды Администратора 8 Уровня",
					"/acredits\n/testweapon\n/weaponid\n/music", "Назад", !"");
			 }
		}
	}
	case dAddNed+1:
		{
			if(!response) return 1;
			new type,garage,tmpvar,Float:x,Float:y,Float:z;
			if(sscanf(inputtext,"iii",type,garage,tmpvar))
			{
				stringer[0] = EOS;
				strcat(stringer,"{FFFFFF}Интерьер, гараж, цена\n\nПример: 5 1 60000\n\n");
				strcat(stringer,"1. [Эконом]\n");
				strcat(stringer,"2. [Средний]\n");
				strcat(stringer,"3. [Высокий]\n");
				strcat(stringer,"4. [Элитный]");
				return ShowPlayerDialog(playerid,dAddNed+1,1," ",stringer,"Выбрать","Закрыть");
			}
			TOTALHOUSE++;
			GetPlayerPos(playerid,x,y,z);
			HouseInfo[TOTALHOUSE][hEntr][0] = x;
			HouseInfo[TOTALHOUSE][hEntr][1] = y;
			HouseInfo[TOTALHOUSE][hEntr][2] = z;
			switch(type)
			{
			    case 1: HouseInfo[TOTALHOUSE][hClass] = 0, HouseInfo[TOTALHOUSE][hInt] = 0;
			    case 2: HouseInfo[TOTALHOUSE][hClass] = 1, HouseInfo[TOTALHOUSE][hInt] = 0;
			    case 3: HouseInfo[TOTALHOUSE][hClass] = 2, HouseInfo[TOTALHOUSE][hInt] = 0;
				case 4: HouseInfo[TOTALHOUSE][hClass] = 3, HouseInfo[TOTALHOUSE][hInt] = 0;
			}
			sscanf(coordh,"p<,>ffff",
			HouseInfo[TOTALHOUSE][hCar][0], HouseInfo[TOTALHOUSE][hCar][1], HouseInfo[TOTALHOUSE][hCar][2], HouseInfo[TOTALHOUSE][hCar][3]);
			HouseInfo[TOTALHOUSE][hGarage] = garage;
			HouseInfo[TOTALHOUSE][hPrice] = tmpvar;
			HouseInfo[TOTALHOUSE][hPrice] = (HouseInfo[TOTALHOUSE][hGarage]>0)?(HouseInfo[TOTALHOUSE][hPrice]+((HouseInfo[TOTALHOUSE][hPrice]/100)*10)):(HouseInfo[TOTALHOUSE][hPrice]);
			HouseInfo[TOTALHOUSE][hDays] = 1;
			strmid(HouseInfo[TOTALHOUSE][hOwner], "None", 0, strlen("None"), MAX_PLAYER_NAME);
			HouseInfo[TOTALHOUSE][hMIcon] = CreateDynamicMapIcon(HouseInfo[TOTALHOUSE][hEntr][0], HouseInfo[TOTALHOUSE][hEntr][1], HouseInfo[TOTALHOUSE][hEntr][2], 31, 0, -1, -1, -1, 150.0);
			HouseInfo[TOTALHOUSE][hObjectEnter] = CreateDynamicObject(1317, HouseInfo[TOTALHOUSE][hEntr][0], HouseInfo[TOTALHOUSE][hEntr][1], HouseInfo[TOTALHOUSE][hEntr][2]-1.5, 0.0, 0.0, 0.0, -1, -1, -1, 50.0, 50.0);
            SetDynamicObjectMaterial(HouseInfo[TOTALHOUSE][hObjectEnter], 0, 18646, "matcolours", "green", 0xAA00FF00);
			HouseInfo[TOTALHOUSE][hAreaEnter] = CreateDynamicSphere(HouseInfo[TOTALHOUSE][hEntr][0], HouseInfo[TOTALHOUSE][hEntr][1], HouseInfo[TOTALHOUSE][hEntr][2], 1.3, 0, 0, -1);
			new texthouse[15];
			format(texthouse, sizeof(texthouse), "Дом №%i", TOTALHOUSE);
			HouseInfo[TOTALHOUSE][hTextEnter] = CreateDynamic3DTextLabel(texthouse, 0xFFFFFFFF, HouseInfo[TOTALHOUSE][hEntr][0], HouseInfo[TOTALHOUSE][hEntr][1], HouseInfo[TOTALHOUSE][hEntr][2]+0.3, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
			new _c = HouseInfo[TOTALHOUSE][hClass], _i = HouseInfo[TOTALHOUSE][hInt];
			HouseInfo[TOTALHOUSE][hTextExit] = CreateDynamic3DTextLabel("Выход - {EAD86A}'/exit'\n{FFFFFF}Управление домом - {EAD86A}'/hpanel'", 0xFFFFFFFF, HintsInfo[_c][_i][hiExitX], HintsInfo[_c][_i][hiExitY], HintsInfo[_c][_i][hiExitZ], 6.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, HouseInfo[TOTALHOUSE][hID], HouseInfo[TOTALHOUSE][hInt]);
            mysql_query_string[0] = EOS;
			format(mysql_query_string,sizeof(mysql_query_string),"INSERT INTO "T_HOUSE" (id,hEntrx,hEntry,hEntrz,carx,cary,carz,carfa,hClass,hPrice,hInt,hDays,hGarage)\
			VALUES (%d,'%f','%f','%f','%f','%f','%f','%f',%d,%d,%d,%d,%d)",TOTALHOUSE,
			HouseInfo[TOTALHOUSE][hEntr][0],HouseInfo[TOTALHOUSE][hEntr][1],HouseInfo[TOTALHOUSE][hEntr][2],
			HouseInfo[TOTALHOUSE][hCar][0],HouseInfo[TOTALHOUSE][hCar][1],HouseInfo[TOTALHOUSE][hCar][2],HouseInfo[TOTALHOUSE][hCar][3],
			HouseInfo[TOTALHOUSE][hClass],HouseInfo[TOTALHOUSE][hPrice],HouseInfo[TOTALHOUSE][hInt],HouseInfo[TOTALHOUSE][hDays],HouseInfo[TOTALHOUSE][hGarage]);
			mysql_tquery(dbHandle, mysql_query_string, "", "");
			SendMes(playerid,COLOR_GREEN,"Дом №%d успешно создан!",TOTALHOUSE);
			TPC[playerid] = false;
		}
    case dEditHouseInt:
		{
			if(!response) return 1;
			new hid,type;
			if(sscanf(inputtext,"<,>ii",hid,type))
			{
				stringer[0] = EOS;
				strcat(stringer,"{FFFFFF}Номер дома, интерьер\n\nПример: 311, 5\n\n");
				strcat(stringer,"1. [Эконом]\n");
				strcat(stringer,"2. [Средний]\n");
				strcat(stringer,"3. [Высокий]\n");
				strcat(stringer,"4. [Элитный]");
				return ShowPlayerDialog(playerid,dEditHouseInt,1," ",stringer,"Выбрать","Закрыть");
			}
			switch(type)
			{
			    case 1: HouseInfo[hid][hClass] = 0, HouseInfo[hid][hInt] = 0;
			    case 2: HouseInfo[hid][hClass] = 1, HouseInfo[hid][hInt] = 0;
			    case 3: HouseInfo[hid][hClass] = 2, HouseInfo[hid][hInt] = 0;
				case 4: HouseInfo[hid][hClass] = 3, HouseInfo[hid][hInt] = 0;
			}
			new _c = HouseInfo[hid][hClass], _i = HouseInfo[hid][hInt];
			HouseInfo[hid][hTextExit] = CreateDynamic3DTextLabel("Выход - {EAD86A}'/exit'\n{FFFFFF}Управление домом - {EAD86A}'/hpanel'", 0xFFFFFFFF, HintsInfo[_c][_i][hiExitX], HintsInfo[_c][_i][hiExitY], HintsInfo[_c][_i][hiExitZ], 6.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, HouseInfo[hid][hID], HintsInfo[_c][_i][hiInt]);
            mysql_query_string[0] = EOS;
			format(mysql_query_string, sizeof(mysql_query_string), "UPDATE "T_HOUSE" SET hClass = %d, hInt = %d WHERE id = %d", HouseInfo[hid][hClass], HintsInfo[_c][_i][hiInt], hid);
			mysql_tquery(dbHandle, mysql_query_string, "", "");
			SendMes(playerid,COLOR_GREEN,"Интерьер дому №%d успешно изменён",hid);
		}
	case dAddNed+2:
		{
			if(!response) return 1;
			switch(listitem) {
				case 0: format(boordh,sizeof(boordh),"-2352.1125,515.5441,1720.9399,-2355.8650,511.3846,1720.9399,6,56,1"); // 24/7
				case 1: format(boordh,sizeof(boordh),"0.0,0.0,0.0,0.0,0.0,0.0,0,47,2"); // FUEL
				case 2: format(boordh,sizeof(boordh),"473.4125,872.7618,-6.9272,471.9034,882.1931,-6.9272,5,29,3");// Пецария
				case 3: format(boordh,sizeof(boordh),"362.8425,-75.1392,1001.5078,377.3217,-67.8903,1001.5151,10,10,3");
				case 4: format(boordh,sizeof(boordh),"364.9063,-11.7721,1001.8516,369.6516,-6.3217,1001.8589,9,14,3");
				case 5: format(boordh,sizeof(boordh),"493.3561,-24.8449,1000.6797,499.2758,-20.7244,1000.6797,17,48,4");
				case 6: format(boordh,sizeof(boordh),"-2636.6792,1402.4634,906.4609,-2659.1587,1416.9315,906.2734,3,48,4");
				case 7: format(boordh,sizeof(boordh),"1204.7395,-13.8515,1000.9219,1214.1865,-12.9937,1000.9219,2,48,4");
				case 8: format(boordh,sizeof(boordh),"-1501.5026,-296.5838,1762.7900,-1498.6781,-301.7487,1762.7900,11,49,5");//Бар
				case 9: format(boordh,sizeof(boordh),"2186.9968,-1773.9117,837.3665,2193.1289,-1777.7671,837.3665,7,18,6"); // AMMO
				case 10: format(boordh,sizeof(boordh),"-187.1546,882.0660,2612.6516 , -186.2201,856.5774,2612.6399,5,10,4"); // НОВЫЙ КЛУБ
				case 11: format(boordh,sizeof(boordh),"0.0,0.0,0.0,0.0,0.0,0.0,0,27,7"); // CTO
				case 12: format(boordh,sizeof(boordh),"-1772.7148,1773.9807,2377.4160,-1779.5012,1774.6633,2377.4160,5,45,8"); // Магазин одежды
				case 13: format(boordh,sizeof(boordh),"134.0409,-235.2429,1002.3964,162.9272,-235.5302,1002.3000,1,25,9"); // Казино
				case 14: format(boordh,sizeof(boordh),"-1532.5026,-296.1238,1762.7900,-1498.6781,-301.3487,1762.7900,0,49,10"); // Бар Golden
			}
			ShowPlayerDialog(playerid, dHeal+6, 1, " ", "{FFFFFF}Название\n\nПример: Gas Station", "Принять", "Отмена");
		}
	case dAddNed+3:
		{
			if(!gPlayerLogged[playerid]) return 1;
			if(pInfo[playerid][pAdmin] < ADM_FOUNDER || !gAdminLogged[playerid]) return 1;
			if(TOTALATM >= MAX_ATM-2) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете больше устанавливать банкоматы!");
			if(GetPVarInt(playerid, "LoadATM") > 0) return SendClientMessage(playerid, COLOR_GREY, "Вы уже устанавливаете банкомат!");
			new Float:x, Float:y, Float:z, Float:angle;
			GetPlayerPos(playerid, x, y, z);
			GetPlayerFacingAngle(playerid, angle);
			x += floatsin(-angle, degrees);
			y += floatcos(-angle, degrees);
			SendClientMessage(playerid, COLOR_WHITE, "Чтобы выйти, нажмите: ESC и чтобы сохранить, нажмите курсором: СОХРАНИТЬ");
			new atm1 = CreateObject(2942, x, y, z-0.35, 0.0, 0.0, 0.0);
			SetPVarInt(playerid, "LoadATM", atm1+1);
			EditObject(playerid, atm1);
			return 1;
		}
	case dJoinHouse:
		{
			if(!response) return 1;
			new idx = GetPVarInt(playerid, "UseHouse");
			if(GetString(HouseInfo[idx][hOwner], "None"))
			{
				if(pInfo[playerid][pCash] < HouseInfo[idx][hPrice]) return SendClientMessage(playerid, COLOR_GREY, NoMoney);
				if(pInfo[playerid][pHouse] != 0) return SendClientMessage(playerid, COLOR_GREY, "У вас уже есть дом!");
				pInfo[playerid][pCash] -= HouseInfo[idx][hPrice];
				HouseInfo[idx][hBuyPrice] = (HouseInfo[idx][hPrice]/100)*75;
				new subsidia = floatround(HouseInfo[idx][hPrice] * 0.005);
				HouseInfo[idx][hLock] = HouseInfo[idx][hDays] = 1;
				new string[128];
				format(string, sizeof(string), "Вы приобрели дом №%i за %i$",idx,HouseInfo[idx][hPrice]);
				SendClientMessage(playerid, COLOR_GREEN, string);
				SendClientMessage(playerid, COLOR_YELLOW, "[Информация] {FFFFFF}Квартплата проплачена на 1 день, рекомендуем вам пополнить счет");
				format(string, sizeof(string), "[Информация] {FFFFFF}Стоимость кварплаты для вашего дома будет составлять %d$ в сутки",subsidia);
				SendClientMessage(playerid, COLOR_YELLOW, string);
				strmid(HouseInfo[idx][hOwner], GetName(playerid), 0, strlen(GetName(playerid)), MAX_PLAYER_NAME);
                pInfo[playerid][pHouse] = GetPVarInt(playerid, "UseHouse");
                mysql_query_string[0] = EOS;
				format(mysql_query_string,256,"UPDATE "T_HOUSE" SET hOwner = '%s', buyprice = %i, hLock = %i, hDays = %i WHERE id = %d LIMIT 1",HouseInfo[idx][hOwner],HouseInfo[idx][hBuyPrice],HouseInfo[idx][hLock],HouseInfo[idx][hDays],idx);
				mysql_tquery(dbHandle,mysql_query_string,"","");
				pInfo[playerid][pSpawnChange] = 1;
				SendClientMessage(playerid, COLOR_GREEN, "[Подсказка] {FFFFFF}Местом спавна автоматически назначен Ваш дом. Изменить место спавна {AFAFAF}/setspawn");
				LoadPlayerVehicle(playerid);
				UpdateHouse(idx);
			}
			else
			{
				if(HouseInfo[idx][hLock] == 1)
				{
					if(GetString(GetName(playerid), HouseInfo[idx][hOwner]))
					{
					    new _c = HouseInfo[idx][hClass], _i = HouseInfo[idx][hInt];
						SetPlayerPos(playerid, HintsInfo[_c][_i][hiExitX], HintsInfo[_c][_i][hiExitY], HintsInfo[_c][_i][hiExitZ], 1);
                        SetPlayerFacingAngle(playerid, HintsInfo[_c][_i][hiExitFA]);
						SetCameraBehindPlayer(playerid);
						SetPlayerInterior(playerid, HintsInfo[_c][_i][hiInt]);
						SetPlayerVirtualWorld(playerid, HouseInfo[idx][hID]);
						return 1;
					}
					GameTextForPlayer(playerid, "~r~Locked", 5000, 1);
				}
				else
				{
				    new _c = HouseInfo[idx][hClass], _i = HouseInfo[idx][hInt];
					SetPlayerPos(playerid, HintsInfo[_c][_i][hiExitX], HintsInfo[_c][_i][hiExitY], HintsInfo[_c][_i][hiExitZ], 1);
                    SetPlayerFacingAngle(playerid, HintsInfo[_c][_i][hiExitFA]);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, HintsInfo[_c][_i][hiInt]);
					SetPlayerVirtualWorld(playerid, HouseInfo[idx][hID]);
				}
			}
		}
	case dSellHouse:
		{
		    if(!response) return 1;
		    if(!pInfo[playerid][pHouse]) return 1;
			new i = pInfo[playerid][pHouse];
			pInfo[playerid][pSpawnChange] = 0;
			new string[128];
			format(string, sizeof(string), "Вы продали свой дом государству за %d$. Деньги переведены на Ваш счет в банке.",HouseInfo[i][hBuyPrice]);
			SendClientMessage(playerid, COLOR_RED, string);
			SendClientMessage(playerid, COLOR_GREEN, "[Подсказка] {FFFFFF}Местом спавна автоматически назначен вокзал. Изменить место спавна {AFAFAF}/setspawn");
			pInfo[playerid][pBank] += HouseInfo[i][hBuyPrice];
			ClearHouse(i);
			if(pTemp[playerid][pCarPlayerID] != INVALID_VEHICLE_ID)
			{
				DestroyVehicle(pTemp[playerid][pCarPlayerID]);
				pTemp[playerid][pCarPlayerID] = INVALID_VEHICLE_ID;
			}
			if(GetPlayerVirtualWorld(playerid) == HouseInfo[i][hID])
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPos(playerid, HouseInfo[i][hEntr][0], HouseInfo[i][hEntr][1], HouseInfo[i][hEntr][2]);
			}
			pInfo[playerid][pHouse] = 0;
		}
	case dSellBiz:
		{
		    if(!response) return 1;
		    if(!pInfo[playerid][pBiz]) return 1;
			new i = pInfo[playerid][pBiz];
			new string[128];
			format(string, sizeof(string), "Вы продали свой бизнес за %i$. Деньги переведены на Ваш счет в банке.",BizInfo[i][bBuyPrice]);
			SendClientMessage(playerid, COLOR_RED, string);
			pInfo[playerid][pBank] += BizInfo[i][bBuyPrice];
			pInfo[playerid][pBank] += BizInfo[i][bMoney];
			ClearBiz(i);
			pInfo[playerid][pBiz] = 0;
		}
	case dJoinCars:
		{
			if(!response) return 1;
			new string[64];
			if(!GetLicCar(playerid)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас нет водительских прав!");
			SendClientMessage(playerid, COLOR_GREEN, "Добро пожаловать в автосалон!");
			InShop[playerid] = 1;
			pPressed[playerid] = 0;
			pTemp[playerid][pCarShowroomID] = CreateVehicle(carsC[pPressed[playerid]][0],2355.3850, -1842.7719, 22.4348, 22.0000,colors[playerid][0]=random(10),colors[playerid][1]=random(10),10000);
			VehicleInfo[pTemp[playerid][pCarShowroomID]][vFuel] = VehStats[GetVehicleModel(pTemp[playerid][pCarShowroomID])-400][vMaxFuel];
			format(string,sizeof(string),"~w~%s",VehStats[carsC[pPressed[playerid]][0]-400][vName]);
			PlayerTextDrawSetString(playerid,car_showroom_TD[playerid][0],string);
			format(string,sizeof(string),"~g~%dRUB",carsC[pPressed[playerid]][1]);
			PlayerTextDrawSetString(playerid,car_showroom_TD[playerid][1],string);
			SetPosInShop(playerid);

			SetPlayerCameraPos(playerid, 2346.6577, -1835.4165, 25.5112);
			SetPlayerCameraLookAt(playerid, 2347.4270, -1836.0599, 25.2162);
		}
	case dJoinCars+1:
		{
			if(!response) return 1;
			new string[64];
			if(!GetLicCar(playerid)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас нет водительских прав!");
			SendClientMessage(playerid, COLOR_GREEN, "Добро пожаловать в автосалон!");
			InShop[playerid] = 2;
			pPressed[playerid] = 0;
			pTemp[playerid][pCarShowroomID] = CreateVehicle(carsB[pPressed[playerid]][0],2355.3850, -1842.7719, 22.4348, 22.0000,colors[playerid][0]=random(10),colors[playerid][1]=random(10),10000);
			VehicleInfo[pTemp[playerid][pCarShowroomID]][vFuel] = VehStats[GetVehicleModel(pTemp[playerid][pCarShowroomID])-400][vMaxFuel];
			format(string,sizeof(string),"~w~%s",VehStats[carsB[pPressed[playerid]][0]-400][vName]);
			PlayerTextDrawSetString(playerid,car_showroom_TD[playerid][0],string);
			format(string,sizeof(string),"~g~%dRUB",carsB[pPressed[playerid]][1]);
			PlayerTextDrawSetString(playerid,car_showroom_TD[playerid][1],string);
			SetPosInShop(playerid);
			SetPlayerCameraPos(playerid, 2346.6577, -1835.4165, 25.5112);
			SetPlayerCameraLookAt(playerid, 2347.4270, -1836.0599, 25.2162);
		}
	case dJoinCars+2:
		{
			if(!response) return 1;
			new string[64];
			if(!GetLicCar(playerid)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас нет водительских прав!");
			SendClientMessage(playerid, COLOR_GREEN, "Добро пожаловать в автосалон!");
			InShop[playerid] = 3;
			pPressed[playerid] = 0;
			pTemp[playerid][pCarShowroomID] = CreateVehicle(carsA[pPressed[playerid]][0],2355.3850, -1842.7719, 22.4348, 22.0000,colors[playerid][0]=random(10),colors[playerid][1]=random(10),10000);
			VehicleInfo[pTemp[playerid][pCarShowroomID]][vFuel] = VehStats[GetVehicleModel(pTemp[playerid][pCarShowroomID])-400][vMaxFuel];
			format(string,64,"~w~%s",VehStats[carsA[pPressed[playerid]][0]-400][vName]);
			PlayerTextDrawSetString(playerid,car_showroom_TD[playerid][0],string);
			format(string,32,"~g~%dRUB",carsA[pPressed[playerid]][1]);
			PlayerTextDrawSetString(playerid,car_showroom_TD[playerid][1],string);
			SetPosInShop(playerid);
			SetPlayerCameraPos(playerid, 2346.6577, -1835.4165, 25.5112);
			SetPlayerCameraLookAt(playerid, 2347.4270, -1836.0599, 25.2162);
		}
    case dJoinCars+3:
		{
			if(!response) return 1;
			new string[64];
			if(!GetLicCar(playerid)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас нет водительских прав!");
			SendClientMessage(playerid, COLOR_GREEN, "Добро пожаловать в мотосалон!");
			InShop[playerid] = 4;
			pPressed[playerid] = 0;
			pTemp[playerid][pCarShowroomID] = CreateVehicle(carsBike[pPressed[playerid]][0],2355.3850, -1842.7719, 22.4348, 22.0000,colors[playerid][0]=random(10),colors[playerid][1]=random(10),10000);
			VehicleInfo[pTemp[playerid][pCarShowroomID]][vFuel] = VehStats[GetVehicleModel(pTemp[playerid][pCarShowroomID])-400][vMaxFuel];
			format(string,64,"~w~%s",VehStats[carsBike[pPressed[playerid]][0]-400][vName]);
			PlayerTextDrawSetString(playerid,car_showroom_TD[playerid][0],string);
			format(string,32,"~g~%dRUB",carsBike[pPressed[playerid]][1]);
			PlayerTextDrawSetString(playerid,car_showroom_TD[playerid][1],string);
			SetPosInShop(playerid);
			SetPlayerCameraPos(playerid, 2346.6577, -1835.4165, 25.5112);
			SetPlayerCameraLookAt(playerid, 2347.4270, -1836.0599, 25.2162);
		}
	case dInviteFrac:
		{
		    if(!response)
			{
			    DeletePVar(playerid, "offerplayer");
				DeletePVar(playerid, "offerfractionid");
			    return 1;
			}
			new fractionid = GetPVarInt(playerid, "offerfractionid");
			new offer = GetPVarInt(playerid, "offerplayer");
			new mes[128];
			for(new i; i < 9; i++)
			{
				new skinid = Fraction_Skin[fractionid][i];
				if(!skinid) break;
				if(!i) format(mes, sizeof(mes), "Скин %d [%d]", i+1, skinid);
				else format(mes, sizeof(mes), "%s\nСкин %d [%d]", mes, i+1, skinid);
			}
			SendClientMessage(playerid, COLOR_BLUE, "Ждите, пока лидер выберет одежду для Вас");
			ShowPlayerDialog(offer, dInviteSkin, 2, "{FFCC00}Выбор скина", mes, "Принять", "");
		}
	case dInviteSkin:
	    {
	        if(!response) return 1;
	        new actplayerid = GetPVarInt(playerid, "actplayerid");
			new fractionid = GetPVarInt(actplayerid, "offerfractionid");
			new skinid = Fraction_Skin[fractionid][listitem];
			new string[128];
			format(string, sizeof(string), "Вы присоединились к организации \"%s\"", Fraction_Name[fractionid]);
			SendClientMessage(actplayerid, COLOR_BLUE, string);
			format(string, sizeof(string), "%s принял%s предложение присоединиться к \"%s\"", GetName(actplayerid), (pInfo[actplayerid][pSex]==1)?(""):("а"), Fraction_Name[fractionid]);
			SendClientMessage(playerid, COLOR_BLUE, string);
			format(string, sizeof(string), "%s пригласил%s %s в организацию", GetName(playerid), (pInfo[playerid][pSex]==1)?(""):("а"), GetName(actplayerid));
			SendFMes(pInfo[playerid][pMember], COLOR_YELLOW, string);
			format(string, sizeof(string), "%s новый член организации", GetName(actplayerid));
			SendFMes(pInfo[playerid][pMember], COLOR_ORANGE, string);
			pInfo[actplayerid][pMember] = fractionid;
			pInfo[actplayerid][pRank] = 1;
			pInfo[actplayerid][pMemberSkin] = skinid;
			SetPlayerSkin(actplayerid, skinid);
			pInfo[actplayerid][pJob] = JOB_NONE;
			mysql_query_string[0] = EOS;
			format(mysql_query_string, 300, "UPDATE "T_ACCOUNTS" SET member = %i, rank = 1, job = 0, memberskin = %i, spawnchange = %i WHERE id = %i", fractionid, pInfo[actplayerid][pMemberSkin], pInfo[actplayerid][pSpawnChange], pInfo[actplayerid][pID]);
			mysql_tquery(dbHandle, mysql_query_string, "", "");
			SendClientMessage(actplayerid, COLOR_GREEN, "[Подсказка] {FFFFFF}Местом спавна автоматически назначена база организации. Изменить место спавна {AFAFAF}/setspawn");
			SetPlayerColorEx(actplayerid, TeamColors[GetTeamID(actplayerid)]);
  			ResetPlayerWeaponsEx(actplayerid);
		}
	case dWeather:
		{
			if(!response) return 1;
			SetWeather(listitem+2);
			new string[100];
			format(string, sizeof(string), "[A] %s[%d] изменил погоду", GetName(playerid), playerid);
			SendAdminMessage(COLOR_FADE1, string);
		}
	case dFracMenu:
		{
            if(!response) return DeletePVar(playerid, "actplayerid");
            SetPVarInt(playerid, "actfraction", listitem+1);
            new fractionid = GetPVarInt(playerid, "actfraction");
            if(fractionid >= 13 && fractionid <= 14)
			{
				DeletePVar(playerid, "actplayerid");
				DeletePVar(playerid, "actfraction");
				return 1;
			}
			new mes[128];
			for(new i; i < 9; i++)
			{
				new skinid = Fraction_Skin[fractionid][i];
				if(!skinid) break;
				if(!i) format(mes, sizeof(mes), "Скин %d [%d]", i+1, skinid);
				else format(mes, sizeof(mes), "%s\nСкин %d [%d]", mes, i+1, skinid);
			}
			ShowPlayerDialog(playerid, dLeaderSkin, 2, "{FFCC00}Выбор скина", mes, "Принять", "Отмена");
		}
	case dLeaderSkin:
	    {
			if(!response)
			{
				DeletePVar(playerid, "actplayerid");
				DeletePVar(playerid, "actfraction");
				return 1;
			}
			new actplayerid = GetPVarInt(playerid, "actplayerid");
	        new fractionid = GetPVarInt(playerid, "actfraction");
	        new skinid = Fraction_Skin[fractionid][listitem];
	        if(actplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
			else if(!gPlayerLogged[actplayerid]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
			mysql_query_string[0] = EOS;
			format(mysql_query_string, sizeof(mysql_query_string), "SELECT id,name,online FROM "T_ACCOUNTS" WHERE leader = %i ORDER BY id DESC LIMIT 0,1", fractionid);
			mysql_tquery(dbHandle, mysql_query_string, "@MysqlCheckLeader", "dddd", playerid, actplayerid, fractionid, skinid);
	    }
	case dTempLeader:
		{
			if(!response) return 1;
			new fractionid = listitem+1;
			pInfo[playerid][pLeader] = pInfo[playerid][pTempLeader] = pInfo[playerid][pMember] = fractionid;
			pInfo[playerid][pRank] = Number_Fraction_Rang[fractionid];
			pInfo[playerid][pJob] = JOB_NONE;
			pInfo[playerid][pMemberSkin] = GetPlayerSkin(playerid);
			pInfo[playerid][pSpawnChange] = 2;
			mysql_query_string[0] = EOS;
			format(mysql_query_string, 300, "UPDATE "T_ACCOUNTS" SET leader = %i, templeader = %i, member = %i, rank = %i, job = 0, memberskin = %i, spawnchange = %i WHERE id = %i", fractionid, fractionid, fractionid, pInfo[playerid][pRank], pInfo[playerid][pMemberSkin], pInfo[playerid][pSpawnChange], pInfo[playerid][pID]);
			mysql_tquery(dbHandle, mysql_query_string, "", "");
			new string[128];
		    format(string, sizeof(string), "Вы назначили себя времеменным лидером организации \"%s\"", Fraction_Name[fractionid]);
			SendClientMessage(playerid, COLOR_LIME, string);
			format(string, sizeof(string), "[A] %s назначил себя времеменным лидером организации \"%s\"", GetName(playerid), Fraction_Name[fractionid]);
			SendAdminMessage(COLOR_GRAD1, string);
			WriteLog("SetTempLeader", string);
			ResetPlayerWeaponsEx(playerid);
	    }
	case dFracMenu+1:
		{
			new targetid = GetPVarInt(playerid, "PlayerRank");
			if(!response) return DeletePVar(playerid, "PlayerRank");
			if(targetid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
			if(!gPlayerLogged[targetid]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
			if(pInfo[targetid][pMember] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не состоит в организации!");
			if(pInfo[targetid][pLeader] > 0) return SendClientMessage(playerid, COLOR_GREY, "Лидеру нельзя изменять ранг!");
			if(pInfo[targetid][pMember] != pInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Игрок не состоит в Вашей организации!");
			DeletePVar(playerid, "PlayerRank");
			pInfo[targetid][pRank] = listitem+1;
			MysqlUpdatePlayerInt(targetid, "rank", pInfo[targetid][pRank]);
			SendMes(targetid,COLOR_BLUE,"%s %s повысил/понизил Вас до {FFFFFF}%s",Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]],GetName(playerid),Fraction_Rang[pInfo[targetid][pMember]][pInfo[targetid][pRank]]);
			SendMes(playerid,COLOR_BLUE,"Вы повысили/понизили %s до {FFFFFF}%s",GetName(targetid),Fraction_Rang[pInfo[targetid][pMember]][pInfo[targetid][pRank]]);
		}
	case dFracMenu+2:
		{
			new targetid = GetPVarInt(playerid, "PlayerRank");
			if(!response) return DeletePVar(playerid, "PlayerRank");
			if(targetid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
			if(!gPlayerLogged[targetid]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
			if(pInfo[targetid][pMember] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не состоит в организации!");
			if(pInfo[targetid][pLeader] > 0) return SendClientMessage(playerid, COLOR_GREY, "Лидеру нельзя изменять ранг!");
			DeletePVar(playerid, "PlayerRank");
			pInfo[targetid][pRank] = listitem+1;
			MysqlUpdatePlayerInt(targetid, "rank", pInfo[targetid][pRank]);
			SendMes(targetid,COLOR_BLUE,"Администратор %s повысил/понизил Вас до {FFFFFF}%s",GetName(playerid),Fraction_Rang[pInfo[targetid][pMember]][pInfo[targetid][pRank]]);
			SendMes(playerid,COLOR_BLUE,"Вы повысили/понизили %s до {FFFFFF}%s",GetName(targetid),Fraction_Rang[pInfo[targetid][pMember]][pInfo[targetid][pRank]]);
		}
	case dFracMenu+3:
	    {
	        if(!response) return 1;
	        new actplayerid = GetPVarInt(playerid, "actplayerid");
	        new fractionid = pInfo[actplayerid][pMember];
	        new skinid = Fraction_Skin[fractionid][listitem];
	        if(skinid == pInfo[actplayerid][pMemberSkin]) return 1;
	        new mes[128];
			format(mes,sizeof(mes), "%s выдал Вам новую фракционную одежду", GetName(playerid));
			SendClientMessage(actplayerid, COLOR_BLUE, mes);
			format(mes,sizeof(mes), "%s получил новую фракционную одежду", GetName(actplayerid));
			SendClientMessage(playerid, COLOR_BLUE, mes);
	        pInfo[actplayerid][pMemberSkin] = skinid;
	        SetPlayerSkin(actplayerid, skinid);
	        MysqlUpdatePlayerInt(actplayerid, "memberskin", pInfo[actplayerid][pMemberSkin]);
			DeletePVar(playerid, "actplayerid");
	    }
	case dATM+3:
		{
			if(!response) return 1;
			switch(listitem)
			{
			    case 0:
				{
					mysql_query_string[0] = EOS;
					format(mysql_query_string, 200, "SELECT * FROM "T_BANK" WHERE Owner = '%s'", GetName(playerid));
					mysql_tquery(dbHandle, mysql_query_string, "@ListAllBankAccounts", "i", playerid);
				}
			    case 1:
			    {
			        if(pInfo[playerid][pLevel] < 3) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Доступно с 3 уровня");
			        mysql_query_string[0] = EOS;
					format(mysql_query_string, 200, "SELECT * FROM "T_BANK" WHERE Owner = '%s'", GetName(playerid));
					mysql_tquery(dbHandle, mysql_query_string, "@CreateBankAccount", "i", playerid);
			    }
			    case 2: ShowPlayerDialog(playerid, dATM+9, DIALOG_STYLE_LIST, "{FFCC00}Недвижимость", "{63BD4E}Дом\n{FFFFFF}- Оплата квартплаты\n{FF9900}Бизнес\n{FFFFFF}- Оплата аренды\n{FFFFFF}- Вывод денег со счёта", "Выбрать", "Назад");
			}
		}
	case dHeal+3:
	    {
	        if(!response) return BankList(playerid);
	        switch(listitem)
	        {
	            case 0: ShowPlayerDialog(playerid, dMainBankAccount, 2, "{FFCC00}Управление счётом", "1. Баланс счета\n2. Пополнить счет\n3. Снять со счёта\n4. Перевод другому игроку", "Далее", "Назад");
	            case 1..4:
	            {
	                SetPVarInt(playerid, "selectedbslot", gBankAccount[playerid][listitem-1]);
			        ShowPlayerDialog(playerid, dLoginBankAccount, DIALOG_STYLE_INPUT, "{FFCC00}Доступ к счёту", "{FFFFFF}Чтобы войти в меню счётом введите защитный код", "Принять", "Назад");
	            }
	        }
	    }
	case dMainBankAccount:
	    {
	        if(!response)
	        {
	            mysql_query_string[0] = EOS;
				format(mysql_query_string, 200, "SELECT * FROM "T_BANK" WHERE Owner = '%s'", GetName(playerid));
				return mysql_tquery(dbHandle, mysql_query_string, "@ListAllBankAccounts", "i", playerid);
	        }
	        switch(listitem)
	        {
		        case 0:
				{
				    new string[90];
					format(string, sizeof(string), "{ffffff}Баланс банковского счёта: {63BD4E}%i$", pInfo[playerid][pBank]);
					ShowPlayerDialog(playerid, dHeal+17, 0, "{FFCC00}Баланс", string, "Назад", "");
				}
				case 1: ShowPlayerDialog(playerid, dATM+5, 1, "{FFCC00}Пополнение", "{FFFFFF}Введите количество денег\nна которое хотите пополнить банковский счёт", "Принять", "Назад");
				case 2: ShowPlayerDialog(playerid, dATM+6, 1, "{FFCC00}Снять со счета", "{FFFFFF}Введите количество денег\nкоторое хотите снять с банковского счёта", "Принять", "Назад");
				case 3:
				{
				    if(!TransferReset[playerid])
					{
						if(pInfo[playerid][pLevel] >= 3) ShowPlayerDialog(playerid, dLic+4, 1, "{FFCC00}Перевод", "{FFFFFF}Введите ID или имя игрока и количество денег через запятую", "Принять", "Назад");
						else SendClientMessage(playerid, COLOR_GREY, "Переводить деньги можно только с 3-го уровня");
					}
					else
					{
                        ShowPlayerDialog(playerid, dMainBankAccount, 2, "{FFCC00}Управление счётом", "1. Баланс счета\n2. Пополнить счет\n3. Снять со счёта\n4. Перевод другому игроку", "Далее", "Назад");
					    SendClientMessage(playerid, COLOR_GREY, "Переводить деньги можно только раз в минуту.");
					}
				}
			}
	    }
	case dCreateBankAccount:
	    {
	        if(!response) return BankList(playerid);
	        if(!strlen(inputtext)) return ShowPlayerDialog(playerid, dCreateBankAccount, DIALOG_STYLE_INPUT, "{FFCC00}Создание счёта", "{FFFFFF}Введите название счёта\n\n{AFAFAF}Можно использовать только русские и английские буквы, также цифры\nНазвание должно содержать не менее 3 и не более 15 символов", "Принять", "Назад");
			if(!(3 <= strlen(inputtext) <= 15)) return ShowPlayerDialog(playerid, dCreateBankAccount, DIALOG_STYLE_INPUT, "{FFCC00}Создание счёта", "{FFFFFF}Введите название счёта\n\n{AFAFAF}Можно использовать только русские и английские буквы, также цифры\nНазвание должно содержать не менее 3 и более не 15 символов", "Принять", "Назад");
			new check;
			for(new i = 0; i < strlen(inputtext); i++)
			{
			    switch(inputtext[i])
			    {
			        case 'A'..'Z', 'a'..'z', 'А'..'Я', 'а'..'я', '0'..'9', ' ': { }
					default:
					{
	    				ShowPlayerDialog(playerid, dCreateBankAccount, DIALOG_STYLE_INPUT, "{FFCC00}Создание счёта", "{FFFFFF}Введите название счёта\n\n{AFAFAF}Можно использовать только русские и английские буквы, также цифры\nНазвание должно содержать не менее 3 и не более 15 символов", "Принять", "Назад");
	    				check = 1;
						break;
					}
			    }
			}
			if(!check)
			{
				mysql_query_string[0] = EOS;
				format(mysql_query_string, 200, "SELECT * FROM "T_BANK" WHERE Owner = '%s' AND Name = '%s'", GetName(playerid), inputtext);
				mysql_tquery(dbHandle, mysql_query_string, "@CheckCreateBank", "is", playerid, inputtext);
			}
	    }
    case dLoginBankAccount:
		{
		    if(!response)
		    {
				DeletePVar(playerid, "selectedbslot");
		        mysql_query_string[0] = EOS;
				format(mysql_query_string, 200, "SELECT * FROM "T_BANK" WHERE Owner = '%s'", GetName(playerid));
				return mysql_tquery(dbHandle, mysql_query_string, "@ListAllBankAccounts", "i", playerid);
		    }
		    if(!strlen(inputtext)) return ShowPlayerDialog(playerid, dLoginBankAccount, DIALOG_STYLE_INPUT, "{FFCC00}Доступ к счёту", "{FFFFFF}Чтобы войти в меню счётом введите защитный код", "Принять", "Назад");
		    if(!(1 <= strlen(inputtext) <= 8)) return ShowPlayerDialog(playerid, dLoginBankAccount, DIALOG_STYLE_INPUT, "{FFCC00}Доступ к счёту", "{FFFFFF}Чтобы войти в меню счётом введите защитный код", "Принять", "Назад");
		    mysql_query_string[0] = EOS;
		    format(mysql_query_string, 200, "SELECT * FROM "T_BANK" WHERE ID = %d", GetPVarInt(playerid, "selectedbslot"));
			mysql_tquery(dbHandle, mysql_query_string, "@CheckBankAccount", "ds", playerid, inputtext);
		}
	case dOperBankAccount:
	    {
	        if(!response)
		    {
				DeletePVar(playerid, "selectedbslot");
		        mysql_query_string[0] = EOS;
				format(mysql_query_string, 200, "SELECT * FROM "T_BANK" WHERE Owner = '%s'", GetName(playerid));
				return mysql_tquery(dbHandle, mysql_query_string, "@ListAllBankAccounts", "i", playerid);
		    }
	        switch(listitem)
	    	{
	    	    case 0: ShowBankAccount(playerid);
				case 1: ShowPlayerDialog(playerid, dOperBankAccount+1, 1, "{FFCC00}Пополнение", "{FFFFFF}Введите количество денег\nна которое хотите пополнить банковский счёт", "Принять", "Назад");
				case 2: ShowPlayerDialog(playerid, dOperBankAccount+2, 1, "{FFCC00}Снять со счета", "{FFFFFF}Введите количество денег\nкоторое хотите снять с банковского счёта", "Принять", "Назад");
				case 3:
				{
				    if(!TransferReset[playerid]) ShowPlayerDialog(playerid, dOperBankAccount+3, 1, "{FFCC00}Перевод", "{FFFFFF}Введите номер счёта на который хотите совершить перевод", "Принять", "Назад");
					else
					{
                        ShowBankAccount(playerid);
					    SendClientMessage(playerid, COLOR_GREY, "Переводить деньги можно только раз в минуту.");
					}
				}
				case 4: ShowPlayerDialog(playerid, dOperBankAccount+5, DIALOG_STYLE_INPUT, "{ffcd00}Изменение защитного кода", "{FFFFFF}Введите новый защитный код\n\n{AFAFAF}Длина от 4 до 8 цифр", "Принять", "Назад");
				case 5: ShowPlayerDialog(playerid, dOperBankAccount+6, DIALOG_STYLE_INPUT, "{ffcd00}Переименование счёта", "{FFFFFF}Введите новое название счёта\n\n{AFAFAF}Можно использовать только русские и английские буквы, также цифры\nНазвание должно содержать не менее 3 и не более 15 символов", "Принять", "Назад");
			}
	    }
	case dOperBankAccount+1:
	    {
	        if(!response) return ShowBankAccount(playerid);
			new price;
			if(sscanf(inputtext, "i", price)) return ShowPlayerDialog(playerid, dOperBankAccount+1, 1, "{FFCC00}Пополнение", "{FFFFFF}Введите количество денег\nна которое хотите пополнить банковский счёт", "Принять", "Назад");
			if(price < 1) return ShowPlayerDialog(playerid, dOperBankAccount+1, 1, "{FFCC00}Пополнение", "{FFFFFF}Введите количество денег\nна которое хотите пополнить банковский счёт", "Принять", "Назад");
			if(GetCash(playerid) < price)
			{
			    SendClientMessage(playerid, COLOR_GREY, NoMoney);
				return ShowPlayerDialog(playerid, dOperBankAccount+1, 1, "{FFCC00}Пополнение", "{FFFFFF}Введите количество денег\nна которое хотите пополнить банковский счёт", "Принять", "Назад");
			}
			BankInfo[playerid][bMoney] += price;
			mysql_query_string[0] = EOS;
			format(mysql_query_string, 200, "UPDATE "T_BANK" SET Money = %d WHERE ID = %d", BankInfo[playerid][bMoney], BankInfo[playerid][bID]);
			mysql_tquery(dbHandle, mysql_query_string, "", "");
			new temp[32];
			format(temp, sizeof(temp), "Положил на банк. счёт %s (№%d)", BankInfo[playerid][bName], BankInfo[playerid][bID]);
			TransferMoney(playerid, -1, price, temp, 1);
			SendClientMessage(playerid, COLOR_GREEN, "Деньги зачислены на счёт");
	    }
    case dOperBankAccount+2:
	    {
	        if(!response) return ShowBankAccount(playerid);
			new price;
			if(sscanf(inputtext, "i", price)) return ShowPlayerDialog(playerid, dOperBankAccount+2, 1, "{FFCC00}Снять со счета", "{FFFFFF}Введите количество денег\nкоторое хотите снять с банковского счёта", "Принять", "Назад");
			if(price < 1) return ShowPlayerDialog(playerid, dOperBankAccount+2, 1, "{FFCC00}Снять со счета", "{FFFFFF}Введите количество денег\nкоторое хотите снять с банковского счёта", "Принять", "Назад");
			if(BankInfo[playerid][bMoney] < price)
			{
				SendClientMessage(playerid, COLOR_GREY, "На данном счету не хватает денег!");
				return ShowPlayerDialog(playerid, dOperBankAccount+2, 1, "{FFCC00}Снять со счета", "{FFFFFF}Введите количество денег\nкоторое хотите снять с банковского счёта", "Принять", "Назад");
			}
			BankInfo[playerid][bMoney] -= price;
			mysql_query_string[0] = EOS;
			format(mysql_query_string, 200, "UPDATE "T_BANK" SET Money = %d WHERE ID = %d", BankInfo[playerid][bMoney], BankInfo[playerid][bID]);
			mysql_tquery(dbHandle, mysql_query_string, "", "");
			new temp[32];
			format(temp, sizeof(temp), "Снял с банк. счёта %s (№%d)", BankInfo[playerid][bName], BankInfo[playerid][bID]);
			TransferMoney(-1, playerid, price, temp, 1);
			SendClientMessage(playerid, COLOR_GREEN, "Деньги сняты со счёта");
	    }
	case dOperBankAccount+3:
	    {
	        if(!response) return ShowBankAccount(playerid);
			new transfer;
			if(sscanf(inputtext, "i", transfer)) return ShowPlayerDialog(playerid, dOperBankAccount+3, 1, "{FFCC00}Перевод", "{FFFFFF}Введите номер счёта на который хотите совершить перевод", "Принять", "Назад");
            if(!(1 <= transfer <= 99999999)) return ShowPlayerDialog(playerid, dOperBankAccount+3, 1, "{FFCC00}Перевод", "{FFFFFF}Введите номер счёта на который хотите совершить перевод", "Принять", "Назад");
            new check;
		    for(new i = 0; i < 4; i++)
		    {
		        if(gBankAccount[playerid][i] == transfer)
		        {
                    check = 1;
                    break;
		        }
		    }
		    if(check)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "Вы не можете перевести деньги самому себе!");
		        return ShowPlayerDialog(playerid, dOperBankAccount+3, 1, "{FFCC00}Перевод", "{FFFFFF}Введите номер счёта на который хотите совершить перевод", "Принять", "Назад");
		    }
			mysql_query_string[0] = EOS;
		    format(mysql_query_string, 200, "SELECT * FROM "T_BANK" WHERE ID = %d", transfer);
			mysql_tquery(dbHandle, mysql_query_string, "@CheckModdedTransfer", "dd", playerid, transfer);
	    }
    case dOperBankAccount+4:
	    {
	        if(!response)
			{
				DeletePVar(playerid, "moddedtransfername");
				DeletePVar(playerid, "moddedtransfer");
				return ShowBankAccount(playerid);
			}
			new name[20], money;
		    GetPVarString(playerid, "moddedtransfername", name, sizeof(name));
		    new transfer = GetPVarInt(playerid, "moddedtransfer");
		    sscanf(inputtext, "d", money);
		    if(money < 1)
		    {
			    stringer[0] = EOS;
			    format(stringer, 300, "{FFFFFF}Вы выполняете перевод на счёт {80CCFF}%s (№%d)\n\n{EAD86A}Если данные правильные, введите сумму, которую Вы хотите перевести на этот банковский счёт", name, transfer, BankInfo[playerid][bName], BankInfo[playerid][bID]);
			    return ShowPlayerDialog(playerid, dOperBankAccount+4, 1, "{FFCC00}Перевод", stringer, "Принять", "Назад");
		    }
		    if(BankInfo[playerid][bMoney] < money)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "На данном счету не хватает денег!");
   				stringer[0] = EOS;
			    format(stringer, 300, "{FFFFFF}Вы выполняете перевод на счёт {80CCFF}%s (№%d)\n\n{EAD86A}Если данные правильные, введите сумму, которую Вы хотите перевести на этот банковский счёт", name, transfer, BankInfo[playerid][bName], BankInfo[playerid][bID]);
			    return ShowPlayerDialog(playerid, dOperBankAccount+4, 1, "{FFCC00}Перевод", stringer, "Принять", "Назад");
		    }
		    BankInfo[playerid][bMoney] -= money;
			mysql_query_string[0] = EOS;
			format(mysql_query_string, 200, "UPDATE "T_BANK" SET Money = %d WHERE ID = %d", BankInfo[playerid][bMoney], BankInfo[playerid][bID]);
			mysql_tquery(dbHandle, mysql_query_string, "", "");
			mysql_query_string[0] = EOS;
			format(mysql_query_string, 200, "UPDATE "T_BANK" SET Money = Money + %d WHERE ID = %d", money, transfer);
			mysql_tquery(dbHandle, mysql_query_string, "", "");
			new string[200];
			format(string,sizeof(string),"Игрок %s [IP: %s] перевел %d$ со счёта %s (№%d) на счёт %s (№%d)", GetName(playerid), pInfo[playerid][pIP], money, BankInfo[playerid][bName], BankInfo[playerid][bID], name, transfer);
			WriteLog("Transfer",string);
			SendClientMessage(playerid, COLOR_GREEN, "Вы перевели деньги на другой счёт");

			#if MYSQL_R41_2 == true

		    mysql_query_string[0] = EOS;
			format(mysql_query_string, 150, "SELECT * FROM "T_BANK" WHERE Name = '%s'", name);
			new Cache:result = mysql_query(dbHandle, mysql_query_string);
			new rows1 = cache_num_rows();
			if(rows1)
			{
			    new owner[MAX_PLAYER_NAME];
			    cache_get_value_index(0, 2, owner, MAX_PLAYER_NAME);
			    mysql_query_string[0] = EOS;
				new targetid = GetPlayerID(owner);
		        if(targetid != INVALID_PLAYER_ID)
				{
				    new str[128];
				    format(str, sizeof(str), "Вам поступил перевод на счет %s (№%d) в размере %d$ от игрока %s[%d]", name, transfer, money, GetName(playerid), playerid);
					SendClientMessage(targetid, COLOR_WHITE, str);
				}
			}
			cache_delete(result);

			#else

			mysql_query_string[0] = EOS;
			format(mysql_query_string, 150, "SELECT * FROM "T_BANK" WHERE Name = '%s'", name);
			new Cache:result = mysql_query(dbHandle, mysql_query_string);
			new rows2 = cache_get_row_count(dbHandle);
			if(rows2)
			{
		  		new owner[MAX_PLAYER_NAME];
			    cache_get_row(0, 2, owner, dbHandle, MAX_PLAYER_NAME);
			    mysql_query_string[0] = EOS;
				new targetid = GetPlayerID(owner);
		        if(targetid != INVALID_PLAYER_ID)
				{
				    new str[128];
				    format(str, sizeof(str), "Вам поступил перевод на счет %s (№%d) в размере %d$ от игрока %s[%d]", name, transfer, money, GetName(playerid), playerid);
					SendClientMessage(targetid, COLOR_WHITE, str);
				}
			}
		    cache_delete(result, dbHandle);

			#endif

			TransferReset[playerid] = 60;
			DeletePVar(playerid, "moddedtransfername");
			DeletePVar(playerid, "moddedtransfer");
		}
	case dOperBankAccount+5:
	    {
	        if(!response) return ShowBankAccount(playerid);
	        if(!(4 <= strlen(inputtext) <= 8)) return ShowPlayerDialog(playerid, dOperBankAccount+5, DIALOG_STYLE_INPUT, "{ffcd00}Изменение защитного кода", "{FFFFFF}Введите новый защитный код\n\n{AFAFAF}Длина от 4 до 8 цифр", "Принять", "Назад");
		    new check;
		    for(new i = 0; i < strlen(inputtext); i++)
			{
			    switch(inputtext[i])
			    {
			        case '0'..'9': { }
			        default:
			        {
			            ShowPlayerDialog(playerid, dOperBankAccount+5, DIALOG_STYLE_INPUT, "{ffcd00}Изменение защитного кода", "{FFFFFF}Введите новый защитный код\n\n{AFAFAF}Длина от 4 до 8 цифр", "Принять", "Назад");
			            check = 1;
			        }
			    }
			}
			if(!check)
			{
			    mysql_query_string[0] = EOS;
				format(mysql_query_string, 200, "UPDATE "T_BANK" SET Pin = '%s' WHERE ID = %d", inputtext, BankInfo[playerid][bID]);
				mysql_tquery(dbHandle, mysql_query_string, "", "");
				new string[128];
				format(string, sizeof(string), "- Секретный пин-код для доступа: {FFFFFF}%s", inputtext);
				SendClientMessage(playerid, COLOR_GREEN, string);
				SendClientMessage(playerid, COLOR_RED, "[Внимание] {FFFFFF}Не забудьте запомнить пин-код. При его утере Вы не сможете получить доступ к счёту");
			}
	    }
	case dOperBankAccount+6:
	    {
	        if(!response) return ShowBankAccount(playerid);
	        if(!(3 <= strlen(inputtext) <= 15)) return ShowPlayerDialog(playerid, dOperBankAccount+6, DIALOG_STYLE_INPUT, "{ffcd00}Переименование счёта", "{FFFFFF}Введите новое название счёта\n\n{AFAFAF}Можно использовать только русские и английские буквы, также цифры\nНазвание должно содержать не менее 3 и не более 15 символов", "Принять", "Назад");
		    new check;
		    for(new i = 0; i < strlen(inputtext); i++)
			{
			    switch(inputtext[i])
			    {
			        case 'A'..'Z', 'a'..'z', 'А'..'Я', 'а'..'я', '0'..'9', ' ': { }
					default:
					{
	    				ShowPlayerDialog(playerid, dOperBankAccount+6, DIALOG_STYLE_INPUT, "{ffcd00}Переименование счёта", "{FFFFFF}Введите новое название счёта\n\n{AFAFAF}Можно использовать только русские и английские буквы, также цифры\nНазвание должно содержать не менее 3 и не более 15 символов", "Принять", "Назад");
	    				check = 1;
						break;
					}
			    }
			}
			if(!check)
			{
				mysql_query_string[0] = EOS;
				format(mysql_query_string, 200, "UPDATE "T_BANK" SET name = '%s' WHERE ID = %d", inputtext, BankInfo[playerid][bID]);
				mysql_tquery(dbHandle, mysql_query_string, "", "");
				strmid(BankInfo[playerid][bName], inputtext, 0, strlen(inputtext), 15);
				SendClientMessage(playerid, COLOR_GREEN, "Счёт успешно переименован");
			}
	    }
	case dATM+9:
	    {
	        if(!response) return BankList(playerid);
	        new string[128];
	        switch(listitem)
	        {
	            case 0: ShowPlayerDialog(playerid, dATM+9, DIALOG_STYLE_LIST, "{FFCC00}Недвижимость", "{63BD4E}Дом\n{FFFFFF}- Оплата квартплаты\n{FF9900}Бизнес\n{FFFFFF}- Оплата аренды\n{FFFFFF}- Вывод денег со счёта", "Выбрать", "Отмена");
	            case 1:
	            {
	                new h = pInfo[playerid][pHouse];
					if(!pInfo[playerid][pHouse]) return SendClientMessage(playerid, COLOR_GREY, "У вас нет дома!");
					format(string, sizeof(string), "{FFFFFF}Введите количество дней на которое\nжелаете оплатить квартплату за дом\n\nОплачено дней: {FF9900}%d", HouseInfo[h][hDays]);
					ShowPlayerDialog(playerid, dLic+5, 1, "{FFCC00}Оплата квартплаты", string, "Принять", "Назад");
	            }
	            case 2: ShowPlayerDialog(playerid, dATM+9, DIALOG_STYLE_LIST, "{FFCC00}Недвижимость", "{63BD4E}Дом\n{FFFFFF}- Оплата квартплаты\n{FF9900}Бизнес\n{FFFFFF}- Оплата аренды\n{FFFFFF}- Вывод денег со счёта", "Выбрать", "Отмена");
				case 3:
	            {
	                new b = pInfo[playerid][pBiz];
					if(!pInfo[playerid][pBiz]) return SendClientMessage(playerid, COLOR_GREY, "Вы не владеете бизнесом!");
					format(string, sizeof(string), "{FFFFFF}Введите количество дней на которое\nжелаете оплатить аренду бизнеса\n\nТекущий счет бизнеса: {FF9900}%d", BizInfo[b][bDays]);
					ShowPlayerDialog(playerid, dHeal+13, 1, "{FFCC00}Оплата аренды", string, "Принять", "Назад");
	            }
	            case 4:
	            {
	                new b = pInfo[playerid][pBiz];
					if(!pInfo[playerid][pBiz]) return SendClientMessage(playerid, COLOR_GREY, "Вы не владеете бизнесом!");
					format(string, sizeof(string), "{FFFFFF}Введите сумму, которую хотите получить\n\nТекущий счет бизнеса: {63BD4E}%d$", BizInfo[b][bMoney]);
					ShowPlayerDialog(playerid, dHeal+16, 1, "{FFCC00}Вывод денег со счёта", string, "Принять", "Назад");
	            }
	        }
	    }
	case dATM+8:
		{
			if(!response) return 1;
			new string[150];
			switch(listitem)
			{
				case 0:
				{
					format(string, sizeof(string), "{ffffff}Баланс банковского счета: {63BD4E}%i$", pInfo[playerid][pBank]);
					ShowPlayerDialog(playerid, dATM+4, 0, "{FFCC00}Баланс", string, "Назад", "");
				}
				case 1: ShowPlayerDialog(playerid, dATM+11, 1, "{FFCC00}Пополнение", "{FFFFFF}Введите количество денег\nна которое хотите пополнить банковский счёт", "Принять", "Назад");
				case 2: ShowPlayerDialog(playerid, dATM+10, 1, "{FFCC00}Снять со счета", "{FFFFFF}Введите количество денег\nкоторое хотите снять с банковского счёта", "Принять", "Назад");
				case 3:
				{
				    if(pInfo[playerid][pPhoneNumber] <= 1)
					{
						SendClientMessage(playerid, COLOR_GREY, "У вас нет телефона!");
						return ATMList(playerid);
					}
					format(string, sizeof(string), "{FFFFFF}Введите сумму пополнения\n\nКомиссия за операцию: {3399FF}0%%\n\n{FFFFFF}Текущее состояние счёта: {63BD4E}%d$", pInfo[playerid][pPhoneBalance]);
					ShowPlayerDialog(playerid, dATM+1, 1, "{FFCC00}Пополнение счета телефона", string, "Принять", "Назад");
				}
				case 4:
				{
				    format(string, sizeof(string), "{FFFFFF}Введите количество денег, которые хотите пожертвовать на благотворительность\n\nВы пожертвовали: {63BD4E}%d$", pInfo[playerid][pCharity]);
				    ShowPlayerDialog(playerid, dATM+2, 1, "{FFCC00}Благотворительность", string, "Принять", "Назад");
				}
			}
		}
	case dATM+4: return ATMList(playerid);
	case dHeal+17: return ShowPlayerDialog(playerid, dMainBankAccount, 2, "{FFCC00}Управление счётом", "1. Баланс счета\n2. Пополнить счет\n3. Снять со счёта\n4. Перевод другому игроку", "Далее", "Назад");
	case dATM+5:
		{
			if(!response) return ShowPlayerDialog(playerid, dMainBankAccount, 2, "{FFCC00}Управление счётом", "1. Баланс счета\n2. Пополнить счет\n3. Снять со счёта\n4. Перевод другому игроку", "Далее", "Назад");
			new price;
			if(sscanf(inputtext, "i", price)) return ShowPlayerDialog(playerid, dATM+5, 1, "{FFCC00}Пополнение", "{FFFFFF}Введите количество денег\nна которое хотите пополнить банковский счёт", "Принять", "Назад");
			if(price < 1) return ShowPlayerDialog(playerid, dATM+5, 1, "{FFCC00}Пополнение", "{FFFFFF}Введите количество денег\nна которое хотите пополнить банковский счёт", "Принять", "Назад");
			if(GetCash(playerid) < price) { ShowPlayerDialog(playerid, dATM+5, 1, "{FFCC00}Пополнение", "{FFFFFF}Введите количество денег\nна которое хотите пополнить банковский счёт", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, NoMoney); }
			GiveBankMoney(playerid, price, "PutMoney");
			TransferMoney(playerid, -1, price);
			SendClientMessage(playerid, COLOR_GREEN, "Деньги зачислены на счёт");
		}
	case dATM+6:
		{
			if(!response) return ShowPlayerDialog(playerid, dMainBankAccount, 2, "{FFCC00}Управление счётом", "1. Баланс счета\n2. Пополнить счет\n3. Снять со счёта\n4. Перевод другому игроку", "Далее", "Назад");
			new price;
			if(sscanf(inputtext, "i", price)) return ShowPlayerDialog(playerid, dATM+6, 1, "{FFCC00}Снять со счета", "{FFFFFF}Введите количество денег\nкоторое хотите снять с банковского счёта", "Принять", "Назад");
			if(price < 1) return ShowPlayerDialog(playerid, dATM+6, 1, "{FFCC00}Снять со счета", "{FFFFFF}Введите количество денег\nкоторое хотите снять с банковского счёта", "Принять", "Назад");
			if(pInfo[playerid][pBank] < price) { ShowPlayerDialog(playerid, dATM+6, 1, "{FFCC00}Снять со счета", "{FFFFFF}Введите количество денег\nкоторое хотите снять с банковского счёта", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, "На вашем счету в банке не хватает денег!"); }
			GiveBankMoney(playerid, -price, "TakeMoney");
			TransferMoney(-1, playerid, price);
			SendClientMessage(playerid, COLOR_GREEN, "Деньги сняты со счёта");
		}
    case dATM+11:
		{
			if(!response) return ATMList(playerid);
			new price;
			if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, dATM+11, 1, "{FFCC00}Пополнение", "{FFFFFF}Введите количество денег\nна которое хотите пополнить банковский счёт", "Принять", "Назад");
			if(price < 1) return ShowPlayerDialog(playerid, dATM+11, 1, "{FFCC00}Пополнение", "{FFFFFF}Введите количество денег\nна которое хотите пополнить банковский счёт", "Принять", "Назад");
			if(GetCash(playerid) < price) { ShowPlayerDialog(playerid, dATM+11, 1, "{FFCC00}Пополнение", "{FFFFFF}Введите количество денег\nна которое хотите пополнить банковский счёт", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, NoMoney); }
			GiveBankMoney(playerid, price, "PutMoney");
			TransferMoney(playerid, -1, price);
			SendClientMessage(playerid, COLOR_GREEN, "Деньги зачислены на счёт");
		}
	case dATM+10:
		{
			if(!response) return ATMList(playerid);
			new price;
			if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, dATM+6, 1, "{FFCC00}Снять со счета", "{FFFFFF}Введите количество денег\nкоторое хотите снять с банковского счёта", "Принять", "Назад");
			if(price < 1) return ShowPlayerDialog(playerid, dATM+6, 1, "{FFCC00}Снять со счета", "{FFFFFF}Введите количество денег\nкоторое хотите снять с банковского счёта", "Принять", "Назад");
			if(pInfo[playerid][pBank] < price) { ShowPlayerDialog(playerid, dATM+6, 1, "{FFCC00}Снять со счета", "{FFFFFF}Введите количество денег\nкоторое хотите снять с банковского счёта", "Принять", "Назад"); return SendClientMessage(playerid, COLOR_GREY, "На вашем счету в банке не хватает денег!"); }
			GiveBankMoney(playerid, -price, "TakeMoney");
			TransferMoney(-1, playerid, price);
			SendClientMessage(playerid, COLOR_GREEN, "Деньги сняты со счёта");
		}
	case dNewsMenu:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					new full = 0, CB[16];
					foreach(new i : Player)
					{
						if(!gPlayerLogged[i] || playerid == i) continue;
						if(Ether[i] && pInfo[i][pMember] == pInfo[playerid][pMember]) full++;
					}
					if(full > 0) return SendClientMessage(playerid, COLOR_GREY, "Эфир занят! В эфире находиться ваш коллега!");
					if(!Ether[playerid])
					{
						if(pInfo[playerid][pMember] == TEAM_LSNEWS && pInfo[playerid][pNews] != 1) pInfo[playerid][pNews] = 1;
						else if(pInfo[playerid][pMember] == TEAM_SFNEWS && pInfo[playerid][pNews] != 2) pInfo[playerid][pNews] = 2;
						else if(pInfo[playerid][pMember] == TEAM_LVNEWS && pInfo[playerid][pNews] != 3) pInfo[playerid][pNews] = 3;
						Ether[playerid] = true;
						new string[90];
						format(string, 90, "[R] %s вош%s в прямой эфир",GetName(playerid),(pInfo[playerid][pSex]==1)?("ел"):("ла"));
						SendFMes(pInfo[playerid][pMember], COLOR_BLUE, string);
					}
					else if(Ether[playerid])
					{
						Ether[playerid] = false;
						new string[90];
						Convert(pTemp[playerid][pLiveTime],CB);
						if(EtherSms[pInfo[playerid][pNews]-1]) { format(string, 90, "[R] %s выключил%s прием СМС",GetName(playerid),(pInfo[playerid][pSex]==1)?(""):("а")); SendFMes(pInfo[playerid][pMember], COLOR_BLUE, string); }
						if(EtherCall[pInfo[playerid][pNews]-1]) { format(string, 90, "[R] %s выключил%s прием звонков",GetName(playerid),(pInfo[playerid][pSex]==1)?(""):("а")); SendFMes(pInfo[playerid][pMember], COLOR_BLUE, string); }
						format(string, 90, "[R] %s выш%s из прямого эфира (Время в эфире: %s, звонков: %i, СМС: %i)",GetName(playerid), (pInfo[playerid][pSex]==1)?("ел"):("ла"), CB, CallNews[pInfo[playerid][pNews]-1], SmsNews[pInfo[playerid][pNews]-1]);
						SendFMes(pInfo[playerid][pMember], COLOR_BLUE, string);
						SmsNews[pInfo[playerid][pNews]-1] = CallNews[pInfo[playerid][pNews]-1] = pTemp[playerid][pLiveTime] = 0;
						EtherSms[pInfo[playerid][pNews]-1] = EtherCall[pInfo[playerid][pNews]-1] = false;
						if(Mobile[playerid] != -1) MobileCrash(playerid);
					}
				}
				case 1:
				{
					if(!Ether[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в прямом эфире!");
					ShowPlayerDialog(playerid, dNewsMenu+1, 1, "{FFCC00}Эфир", "{FFFFFF}Введите ID или имя игрока:", "Принять", "Отмена");
				}
				case 2:
				{
					if(!Ether[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в прямом эфире!");
					ShowPlayerDialog(playerid, dNewsMenu+2, 1, "{FFCC00}Эфир", "{FFFFFF}Введите ID или имя игрока:", "Принять", "Отмена");
				}
				case 3:
				{
					if(!Ether[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в прямом эфире!");
					new full = (pInfo[playerid][pMember] == TEAM_LSNEWS) ? (0) : (pInfo[playerid][pMember] == TEAM_SFNEWS) ? (1) : (2);
					new string[90];
					if(!EtherCall[full])
					{
						EtherCall[full] = true;
						format(string, 90, "[R] %s включил%s прием звонков",GetName(playerid),(pInfo[playerid][pSex]==1)?(""):("а"));
						SendFMes(pInfo[playerid][pMember], COLOR_BLUE, string);
					}
					else
					{
						EtherCall[full] = false;
						format(string, 90, "[R] %s выключил%s прием звонков",GetName(playerid),(pInfo[playerid][pSex]==1)?(""):("а"));
						SendFMes(pInfo[playerid][pMember], COLOR_BLUE, string);
					}
				}
				case 4:
				{
					if(!Ether[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в прямом эфире!");
					new full = (pInfo[playerid][pMember] == TEAM_LSNEWS) ? (0) : (pInfo[playerid][pMember] == TEAM_SFNEWS) ? (1) : (2);
					new string[90];
					if(!EtherSms[full])
					{
						EtherSms[full] = true;
						format(string, 90, "[R] %s включил%s прием СМС",GetName(playerid),(pInfo[playerid][pSex]==1)?(""):("а"));
						SendFMes(pInfo[playerid][pMember], COLOR_BLUE, string);
					}
					else
					{
						EtherSms[full] = false;
						format(string, 90, "[R] %s выключил%s прием СМС",GetName(playerid),(pInfo[playerid][pSex]==1)?(""):("а"));
						SendFMes(pInfo[playerid][pMember], COLOR_BLUE, string);
					}
				}
			}
		}
	case dNewsMenu+1:
		{
			if(!response) return 1;
			new targetid;
			if(sscanf(inputtext, "u",targetid)) ShowPlayerDialog(playerid, dNewsMenu+1, 1, "{FFCC00}Эфир", "{FFFFFF}Введите ID или имя игрока:", "Принять", "Отмена");
			else if(targetid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
			else if(!gPlayerLogged[targetid]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
			else if(targetid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете пригласить себя!");
			else if(IsPlayerInAnyVehicle(playerid)&&!IsPlayerInVehicle(targetid, GetPVarInt(playerid,"VehicleEnters")) || !IsPlayerInAnyVehicle(playerid) && !IsPlayerStream(10.0, playerid, targetid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен находиться с вами в транспорте!");
			else if(EtherLive[targetid]) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже в прямом эфире!");
			else if(pInfo[playerid][pMember] == TEAM_LSNEWS && pInfo[targetid][pNews] != 1)
			{
				SendMes(playerid, COLOR_GREY, "Игрок должен слушать радио: %s", Fraction_Name[TEAM_LSNEWS]);
				return 1;
			}
			else if(pInfo[playerid][pMember] == TEAM_SFNEWS && pInfo[targetid][pNews] != 2)
			{
				SendMes(playerid, COLOR_GREY, "Игрок должен слушать радио: %s", Fraction_Name[TEAM_SFNEWS]);
				return 1;
			}
			else if(pInfo[playerid][pMember] == TEAM_LVNEWS && pInfo[targetid][pNews] != 3)
			{
				SendMes(playerid, COLOR_GREY, "Игрок должен слушать радио: %s", Fraction_Name[TEAM_LVNEWS]);
				return 1;
			}
			EtherLive[targetid] = true;
			SetPVarInt(targetid, "Etherfrac", pInfo[playerid][pMember]);
			SendMes(playerid, COLOR_BLUE, "Вы пригласили в эфир: %s", GetName(targetid));
			SendMes(targetid, COLOR_BLUE, "%s пригласил вас в эфир", GetName(playerid));
		}
	case dNewsMenu+2:
		{
			if(!response) return 1;
			new targetid;
			if(sscanf(inputtext, "u",targetid)) ShowPlayerDialog(playerid, dNewsMenu+2, 1, "{FFCC00}Эфир", "{FFFFFF}Введите ID или имя игрока:", "Принять", "Отмена");
			else if(targetid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
			else if(!gPlayerLogged[targetid]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
			else if(targetid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете выпроводить себя!");
			else if(IsPlayerInAnyVehicle(playerid)&&!IsPlayerInVehicle(targetid, GetPVarInt(playerid,"VehicleEnters")) || !IsPlayerInAnyVehicle(playerid) && !IsPlayerStream(10.0, playerid, targetid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен находиться с вами в транспорте!");
			else if(!EtherLive[targetid]) return SendClientMessage(playerid, COLOR_GREY, "Игрок не находиться в прямом эфире!");
			EtherLive[targetid] = false;
			DeletePVar(targetid, "Etherfrac");
			SendMes(playerid, COLOR_RED, "Вы выпроводили из эфира: %s", GetName(targetid));
			SendMes(targetid, COLOR_RED, "%s выпроводил вас из эфира", GetName(playerid));
		}
	case dNewsMenu+3:
		{
			if(!response) return 1;
			if(listitem < 3)
			{
			    new string[100];
			    format(string, sizeof(string), "Вы переключились на волну {FFCC00}%s", (listitem == 0)?("СМИ г.Южный"):(listitem == 1)?("СМИ пгт.Батырево"):("Закрыто"));
				SendClientMessage(playerid, COLOR_BLUE, string);
				pInfo[playerid][pNews] = listitem+1;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_RED, "Вы выключили радио");
				pInfo[playerid][pNews] = 0;
			}
		}
	case dNewsMenu+4:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0: ShowPlayerDialog(playerid, dNewsMenu+9, 1, " ", "{FFFFFF}Введите цену за 1 секунду в эфире\n\n{AFAFAF}Цена может быть от 1$ до 3$", "Принять", "Отмена");
				case 1: ShowPlayerDialog(playerid, dNewsMenu+10, 1, " ", "{FFFFFF}Введите цену за СМС\n\n{AFAFAF}Цена может быть от 10$ до 20$", "Принять", "Отмена");
				case 2: ShowPlayerDialog(playerid, dNewsMenu+11, 1, " ", "{FFFFFF}Введите цену за 1 символ объявления\n\n{AFAFAF}Цена может быть от 5$ до 10$", "Принять", "Отмена");
			}
		}
	case dNewsMenu+5:
		{
			if(!response) return 1;
			foreach(new i:Player)
			{
			    if(pInfo[i][pMember] != pInfo[playerid][pMember]) continue;
			    if(GetPVarInt(i, "AdvertID") == listitem+1)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "Это объявление уже просматривает один из сотрудников");
			        DeletePVar(playerid, "AdvertID");
			        AdvertList(playerid);
			        return 1;
			    }
			}
			SetPVarInt(playerid, "AdvertID", listitem+1);
			ShowPlayerDialog(playerid, dNewsMenu+6, 2, " ", "Прочитать объявление\nРедактировать объявление\nУдалить объявление\nОтправить объявление\nОтправить администрации", "Принять", "Назад");
		}
	case dNewsMenu+6:
		{
			if(!response) { DeletePVar(playerid, "AdvertID"); return AdvertList(playerid); }
   			new full = (pInfo[playerid][pMember] == TEAM_LSNEWS) ? (0) : (pInfo[playerid][pMember] == TEAM_SFNEWS) ? (1) : (2);
			new string[150];
			switch(listitem)
			{
				case 0:
				{

					format(string, sizeof(string), "{FFFFFF}Текст: %s - Прислал: %s",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aText],AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aName]);
					ShowPlayerDialog(playerid, dNewsMenu+7, 0, " ", string, "Назад", "");
				}
				case 1:
				{
					format(string, sizeof(string), "{FFFFFF}Текст: %s - Прислал: %s",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aText],AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aName]);
					ShowPlayerDialog(playerid, dNewsMenu+8, 1, " ", string, "Принять", "Назад");
				}
				case 2:
				{
					for(new i = GetPVarInt(playerid, "AdvertID"); i <= TOTALADVERT[full] - 1; i++)
					{
					    AdvertInfo[i][full][aPhone] = AdvertInfo[i+1][full][aPhone];
					    strmid(AdvertInfo[i][full][aText],AdvertInfo[i+1][full][aText],0,strlen(AdvertInfo[i+1][full][aText]), 128);
					    strmid(AdvertInfo[i][full][aName],AdvertInfo[i+1][full][aName],0,strlen(AdvertInfo[i+1][full][aName]), MAX_PLAYER_NAME);
					}
					if(TOTALADVERT[full] > 0) TOTALADVERT[full]--;
					SendClientMessage(playerid, COLOR_RED, "Объявление удалено");
					DeletePVar(playerid, "AdvertID");
					AdvertList(playerid);
				}
				case 3:
				{
					if(AdvertTime > gettime())
					{
						DeletePVar(playerid, "AdvertID");
						SendClientMessage(playerid, COLOR_GREY, "Отправлять объявление можно раз в 30 секунд!");
						return AdvertList(playerid);
					}
					format(string, sizeof(string), "%s Отправитель: %s (тел.: %i)",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aText], AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aName], AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aPhone]);
					SendClientMessageToAll(COLOR_GREEN, string);
					format(string, sizeof(string), "   Проверил объявление %s: %s",Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid));
					SendClientMessageToAll(COLOR_GREEN, string);
					for(new i = GetPVarInt(playerid, "AdvertID"); i <= TOTALADVERT[full] - 1; i++)
					{
					    AdvertInfo[i][full][aPhone] = AdvertInfo[i+1][full][aPhone];
					    strmid(AdvertInfo[i][full][aText],AdvertInfo[i+1][full][aText],0,strlen(AdvertInfo[i+1][full][aText]), 128);
					    strmid(AdvertInfo[i][full][aName],AdvertInfo[i+1][full][aName],0,strlen(AdvertInfo[i+1][full][aName]), MAX_PLAYER_NAME);
					}
				 	if(TOTALADVERT[full] > 0) TOTALADVERT[full]--;
					AdvertTime = gettime() + 30;
					DeletePVar(playerid, "AdvertID");
					AdvertList(playerid);
				}
				case 4:
				{
					format(string, sizeof(string), "[AD] %s: %s Редактор: %s", AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aName], AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aText], GetName(playerid));
					SendAdminMessage(COLOR_YELLOW, string);
					for(new i = GetPVarInt(playerid, "AdvertID"); i <= TOTALADVERT[full] - 1; i++)
					{
					    AdvertInfo[i][full][aPhone] = AdvertInfo[i+1][full][aPhone];
					    strmid(AdvertInfo[i][full][aText],AdvertInfo[i+1][full][aText],0,strlen(AdvertInfo[i+1][full][aText]), 128);
					    strmid(AdvertInfo[i][full][aName],AdvertInfo[i+1][full][aName],0,strlen(AdvertInfo[i+1][full][aName]), MAX_PLAYER_NAME);
					}
					if(TOTALADVERT[full] > 0) TOTALADVERT[full]--;
					SendClientMessage(playerid, COLOR_RED, "Объявление отправлено администрации");
					DeletePVar(playerid, "AdvertID");
					AdvertList(playerid);
				}
			}

		}
	case dNewsMenu+7: ShowPlayerDialog(playerid, dNewsMenu+6, 2, " ", "Прочитать объявление\nРедактировать объявление\nУдалить объявление\nОтправить объявление\nОтправить администрации", "Принять", "Назад");
	case dNewsMenu+8:
		{
			if(!response) return ShowPlayerDialog(playerid, dNewsMenu+6, 2, " ", "Прочитать объявление\nРедактировать объявление\nУдалить объявление\nОтправить объявление\nОтправить администрации", "Принять", "Назад");
			new full = (pInfo[playerid][pMember] == TEAM_LSNEWS) ? (0) : (pInfo[playerid][pMember] == TEAM_SFNEWS) ? (1) : (2);
			new text[100];
			if(sscanf(inputtext, "s[100]",text))
			{
			    new string[200];
				format(string, 200, "{FFFFFF}Текст: %s - Прислал: %s",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aText],AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aName]);
				return ShowPlayerDialog(playerid, dNewsMenu+8, 1, " ", string, "Принять", "Назад");
			}
			strmid(AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aText],text,0,strlen(text),sizeof(text));
			SendClientMessage(playerid, COLOR_LIGHTGREEN, "Объявление отредактировано и сохранено");
			ShowPlayerDialog(playerid, dNewsMenu+6, 2, " ", "Прочитать объявление\nРедактировать объявление\nУдалить объявление\nОтправить объявление\nОтправить администрации", "Принять", "Назад");
		}
	case dNewsMenu+9:
		{
			if(!response) return cmd_fprice(playerid);
			new price;
			if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, dNewsMenu+9, 1, " ", "{FFFFFF}Введите цену за 1 секунду в эфире\n\n{AFAFAF}Цена может быть от 1$ до 3$", "Принять", "Назад");
			if(!(1 <= price <= 3)) return ShowPlayerDialog(playerid, dNewsMenu+9, 1, " ", "{FFFFFF}Введите цену за 1 секунду в эфире\n\n{AFAFAF}Цена может быть от 1$ до 3$", "Принять", "Назад");
			CallPrice[pInfo[playerid][pMember]-18] = price;
			SendClientMessage(playerid, COLOR_GREEN, "Цена успешно изменена");
		}
	case dNewsMenu+10:
		{
			if(!response) return cmd_fprice(playerid);
			new price;
			if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, dNewsMenu+10, 1, " ", "{FFFFFF}Введите цену за СМС\n\n{AFAFAF}Цена может быть от 10$ до 20$", "Принять", "Назад");
			if(!(10 <= price <= 20)) return ShowPlayerDialog(playerid, dNewsMenu+10, 1, " ", "{FFFFFF}Введите цену за СМС\n\n{AFAFAF}Цена может быть от 10$ до 20$", "Принять", "Назад");
			SmsPrice[pInfo[playerid][pMember]-18] = price;
			SendClientMessage(playerid, COLOR_GREEN, "Цена успешно изменена");
		}
	case dNewsMenu+11:
		{
			if(!response) return cmd_fprice(playerid);
			new price;
			if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, dNewsMenu+11, 1, " ", "{FFFFFF}Введите цену за 1 символ объявления\n\n{AFAFAF}Цена может быть от 5$ до 10$", "Принять", "Назад");
			if(!(5 <= price <= 10)) return ShowPlayerDialog(playerid, dNewsMenu+11, 1, " ", "{FFFFFF}Введите цену за 1 символ объявления\n\n{AFAFAF}Цена может быть от 5$ до 10$", "Принять", "Назад");
			AdvertPrice[pInfo[playerid][pMember]-18] = price;
			SendClientMessage(playerid, COLOR_GREEN, "Цена успешно изменена");
		}
	case dLic+1:
		{
			if(!response) return DeletePVar(playerid, "LicName");
			if(IsPlayerStream(15.0, playerid, GetPVarInt(playerid, "LicName")))
			{
				switch(listitem)
				{
					case 0:
					{
					    if(!GetLicCar(GetPVarInt(playerid, "LicName"))) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет этой лицензии");
						TakeLicCar(GetPVarInt(playerid, "LicName"));
						if(IsPlayerInAnyVehicle(GetPVarInt(playerid, "LicName"))) RemovePlayerFromVehicle(GetPVarInt(playerid, "LicName"));
						SendMes(playerid, COLOR_RED, "Вы изъяли водительские права у %s", GetName(GetPVarInt(playerid, "LicName")));
						SendMes(GetPVarInt(playerid, "LicName"), COLOR_RED, "%s %s забрал у Вас водительские права", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid));
					}
					case 1:
					{
					    if(!GetLicWater(GetPVarInt(playerid, "LicName"))) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет этой лицензии");
						TakeLicWater(GetPVarInt(playerid, "LicName"));
						if(IsPlayerInAnyVehicle(GetPVarInt(playerid, "LicName"))) RemovePlayerFromVehicle(GetPVarInt(playerid, "LicName"));
						SendMes(playerid, COLOR_RED, "Вы изъяли лицензию на судоходство у %s", GetName(GetPVarInt(playerid, "LicName")));
						SendMes(GetPVarInt(playerid, "LicName"), COLOR_RED, "%s %s изъял у Вас лицензию на судоходство", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid));
					}
					case 2:
					{
					    if(!GetLicPlane(GetPVarInt(playerid, "LicName"))) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет этой лицензии");
						TakeLicPlane(GetPVarInt(playerid, "LicName"));
						if(IsPlayerInAnyVehicle(GetPVarInt(playerid, "LicName"))) RemovePlayerFromVehicle(GetPVarInt(playerid, "LicName"));
						SendMes(playerid, COLOR_RED, "Вы изъяли лицензию на полёты у %s", GetName(GetPVarInt(playerid, "LicName")));
						SendMes(GetPVarInt(playerid, "LicName"), COLOR_RED, "%s %s изъял у Вас лицензию на полёты", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid));
					}
					case 3:
					{
					    if(!GetLicWeapon(GetPVarInt(playerid, "LicName"))) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет этой лицензии");
						TakeLicWeapon(GetPVarInt(playerid, "LicName"));
						SendMes(playerid, COLOR_RED, "Вы изъяли лицензию на оружие у %s", GetName(GetPVarInt(playerid, "LicName")));
						SendMes(GetPVarInt(playerid, "LicName"), COLOR_RED, "%s %s изъял у Вас лицензию на оружие", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid));
					}
					case 4:
					{
						if(!pInfo[GetPVarInt(playerid, "LicName")][pPatron]) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет патрон");
						pInfo[GetPVarInt(playerid, "LicName")][pPatron] = 0;
						SendMes(playerid, COLOR_RED, "Вы изъяли патроны у %s", GetName(GetPVarInt(playerid, "LicName")));
						SendMes(GetPVarInt(playerid, "LicName"), COLOR_RED, "%s %s изъял у Вас патроны", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid));
					}
					case 5:
					{
					    if(!pInfo[GetPVarInt(playerid, "LicName")][pGunAmount]) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет ед. оружия");
						pInfo[GetPVarInt(playerid, "LicName")][pGunAmount] = 0;
						SendMes(playerid, COLOR_RED, "Вы изъяли ед. оружия у %s", GetName(GetPVarInt(playerid, "LicName")));
						SendMes(GetPVarInt(playerid, "LicName"), COLOR_RED, "%s %s изъял у Вас ед. оружия", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid));
					}
					case 6:
					{
					    if(!pInfo[GetPVarInt(playerid, "LicName")][pDrugs]) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет наркотиков");
						pInfo[GetPVarInt(playerid, "LicName")][pDrugs] = 0;
						SendMes(playerid, COLOR_RED, "Вы изъяли наркотики у %s", GetName(GetPVarInt(playerid, "LicName")));
						SendMes(GetPVarInt(playerid, "LicName"), COLOR_RED, "%s %s изъял у Вас наркотики", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid));
					}
				}
			}
			else SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
			DeletePVar(playerid, "LicName");
		}
	case dLic+2:
		{
			if(!response) return DeletePVar(playerid, "LicName");
			switch(listitem)
			{
				case 0:
				{
				    SendMes(playerid, COLOR_GREEN, "Вы выдали %s водительские права", GetName(GetPVarInt(playerid, "LicName")));
					SendMes(GetPVarInt(playerid, "LicName"), COLOR_GREEN, "Администратор %s выдал Вам водительские права", GetName(playerid));
					GiveLicCar(GetPVarInt(playerid, "LicName"));
				}
				case 1:
				{
				    SendMes(playerid, COLOR_GREEN, "Вы выдали %s лицензию на судоходство", GetName(GetPVarInt(playerid, "LicName")));
					SendMes(GetPVarInt(playerid, "LicName"), COLOR_GREEN, "Администратор %s выдал Вам лицензию на судоходство", GetName(playerid));
				    GiveLicWater(GetPVarInt(playerid, "LicName"));
				}
				case 2:
				{
				    SendMes(playerid, COLOR_GREEN, "Вы выдали %s лицензию на полеты", GetName(GetPVarInt(playerid, "LicName")));
					SendMes(GetPVarInt(playerid, "LicName"), COLOR_GREEN, "Администратор %s выдал Вам лицензию на полеты", GetName(playerid));
				    GiveLicPlane(GetPVarInt(playerid, "LicName"));
				}
				case 3:
				{
				    SendMes(playerid, COLOR_GREEN, "Вы выдали %s лицензию на оружие", GetName(GetPVarInt(playerid, "LicName")));
					SendMes(GetPVarInt(playerid, "LicName"), COLOR_GREEN, "Администратор %s выдал Вам лицензию на оружие", GetName(playerid));
				    GiveLicWeapon(GetPVarInt(playerid, "LicName"));
				}
				case 4:
				{
				    if(!pInfo[GetPVarInt(playerid, "LicName")][pBiz]) return SendClientMessage(playerid, COLOR_GREY, "Игрок не имеет бизнеса!");
				    SendMes(playerid, COLOR_GREEN, "Вы выдали %s лицензию на бизнес", GetName(GetPVarInt(playerid, "LicName")));
					SendMes(GetPVarInt(playerid, "LicName"), COLOR_GREEN, "Администратор %s выдал Вам лицензию на бизнес", GetName(playerid));
				    new i = pInfo[GetPVarInt(playerid, "LicName")][pBiz];
					BizInfo[i][bLic] = 1;
					MysqlUpdateBizInt(i, "lic", BizInfo[i][bLic]);
				}
				case 5:{
					SendMes(playerid, COLOR_GREEN, "Вы выдали %s Пакет лицензий.", GetName(GetPVarInt(playerid, "LicName")));
					SendMes(GetPVarInt(playerid, "LicName"), COLOR_GREEN, "Администратор %s выдал Вам пакет лицензий.", GetName(playerid));
					GiveLicPlane(GetPVarInt(playerid, "LicName"));
					GiveLicWeapon(GetPVarInt(playerid, "LicName"));
					GiveLicWater(GetPVarInt(playerid, "LicName"));
					GiveLicCar(GetPVarInt(playerid, "LicName"));

				    new i = pInfo[GetPVarInt(playerid, "LicName")][pBiz];
					BizInfo[i][bLic] = 1;
					MysqlUpdateBizInt(i, "lic", BizInfo[i][bLic]);
				}
			}
			DeletePVar(playerid, "LicName");
		}
	case dLic+3:
		{
			if(!response) return DeletePVar(playerid, "LicName");
			if(IsPlayerStream(15.0, playerid, GetPVarInt(playerid, "LicName")))
			{
				switch(listitem)
				{
					case 0:
					{
					    if(!GetLicCar(GetPVarInt(playerid, "LicName"))) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет этой лицензии");
						TakeLicCar(GetPVarInt(playerid, "LicName"));
						if(IsPlayerInAnyVehicle(GetPVarInt(playerid, "LicName"))) RemovePlayerFromVehicle(GetPVarInt(playerid, "LicName"));
						SendMes(playerid, COLOR_RED, "Вы изъяли водительские права у %s", GetName(GetPVarInt(playerid, "LicName")));
						SendMes(GetPVarInt(playerid, "LicName"), COLOR_RED, "Администратор %s изъял у Вас водительские права", GetName(playerid));
					}
					case 1:
					{
					    if(!GetLicWater(GetPVarInt(playerid, "LicName"))) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет этой лицензии");
						TakeLicWater(GetPVarInt(playerid, "LicName"));
						if(IsPlayerInAnyVehicle(GetPVarInt(playerid, "LicName"))) RemovePlayerFromVehicle(GetPVarInt(playerid, "LicName"));
						SendMes(playerid, COLOR_RED, "Вы изъяли лицензию на судоходство у %s", GetName(GetPVarInt(playerid, "LicName")));
						SendMes(GetPVarInt(playerid, "LicName"), COLOR_RED, "Администратор %s изъял у Вас лицензию на судоходство", GetName(playerid));
					}
					case 2:
					{
					    if(!GetLicPlane(GetPVarInt(playerid, "LicName"))) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет этой лицензии");
						TakeLicPlane(GetPVarInt(playerid, "LicName"));
						if(IsPlayerInAnyVehicle(GetPVarInt(playerid, "LicName"))) RemovePlayerFromVehicle(GetPVarInt(playerid, "LicName"));
						SendMes(playerid, COLOR_RED, "Вы изъяли лицензию на полёты у %s", GetName(GetPVarInt(playerid, "LicName")));
						SendMes(GetPVarInt(playerid, "LicName"), COLOR_RED, "Администратор %s изъял у Вас лицензию на полёты", GetName(playerid));
					}
					case 3:
					{
					    if(!GetLicWeapon(GetPVarInt(playerid, "LicName"))) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет этой лицензии");
						TakeLicWeapon(GetPVarInt(playerid, "LicName"));
						SendMes(playerid, COLOR_RED, "Вы изъяли лицензию на оружие у %s", GetName(GetPVarInt(playerid, "LicName")));
						SendMes(GetPVarInt(playerid, "LicName"), COLOR_RED, "Администратор %s изъял у Вас лицензию на оружие", GetName(playerid));
					}
					case 4:
					{
						if(!pInfo[GetPVarInt(playerid, "LicName")][pPatron]) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет патрон");
						pInfo[GetPVarInt(playerid, "LicName")][pPatron] = 0;
						SendMes(playerid, COLOR_RED, "Вы изъяли патроны у %s", GetName(GetPVarInt(playerid, "LicName")));
						SendMes(GetPVarInt(playerid, "LicName"), COLOR_RED, "Администратор %s изъял у Вас патроны", GetName(playerid));
					}
					case 5:
					{
					    if(!pInfo[GetPVarInt(playerid, "LicName")][pGunAmount]) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет ед. оружия");
						pInfo[GetPVarInt(playerid, "LicName")][pGunAmount] = 0;
						SendMes(playerid, COLOR_RED, "Вы изъяли ед. оружия у %s", GetName(GetPVarInt(playerid, "LicName")));
						SendMes(GetPVarInt(playerid, "LicName"), COLOR_RED, "Администратор %s изъял у Вас ед. оружия", GetName(playerid));
					}
					case 6:
					{
					    if(!pInfo[GetPVarInt(playerid, "LicName")][pDrugs]) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет наркотиков");
						pInfo[GetPVarInt(playerid, "LicName")][pDrugs] = 0;
						SendMes(playerid, COLOR_RED, "Вы изъяли наркотики у %s", GetName(GetPVarInt(playerid, "LicName")));
						SendMes(GetPVarInt(playerid, "LicName"), COLOR_RED, "Администратор %s изъял у Вас наркотики", GetName(playerid));
					}
				}
			}
			else SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
			DeletePVar(playerid, "LicName");
		}
	case dLic+4:
		{
			if(!response) return ShowPlayerDialog(playerid, dMainBankAccount, 2, "{FFCC00}Управление счётом", "1. Баланс счета\n2. Пополнить счет\n3. Снять со счёта\n4. Перевод другому игроку", "Далее", "Назад");
			new targetid, price;
			if(sscanf(inputtext, "ui", targetid, price)) return ShowPlayerDialog(playerid, dLic+4, 1, "{FFCC00}Перевод", "{FFFFFF}Введите ID или имя игрока и количество денег через запятую", "Принять", "Назад");
			else if(targetid == INVALID_PLAYER_ID)
			{
				ShowPlayerDialog(playerid, dLic+4, 1, "{FFCC00}Перевод", "{FFFFFF}Введите ID или имя игрока и количество денег через запятую", "Принять", "Назад");
				return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
			}
			else if(!gPlayerLogged[targetid])
			{
				ShowPlayerDialog(playerid, dLic+4, 1, "{FFCC00}Перевод", "{FFFFFF}Введите ID или имя игрока и количество денег через запятую", "Принять", "Назад");
				return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
			}
			else if(targetid == playerid)
			{
			    ShowPlayerDialog(playerid, dLic+4, 1, "{FFCC00}Перевод", "{FFFFFF}Введите ID или имя игрока и количество денег через запятую", "Принять", "Назад");
				return SendClientMessage(playerid, COLOR_GREY, "Вы не можете перевести деньги самому себе!");
			}
			else if(pInfo[playerid][pBank] < price)
			{
				ShowPlayerDialog(playerid, dLic+4, 1, "{FFCC00}Перевод", "{FFFFFF}Введите ID или имя игрока и количество денег через запятую", "Принять", "Назад");
				return SendClientMessage(playerid, COLOR_GREY, "На вашем счету в банке не хватает денег!");
			}
			else if(price < 1) return ShowPlayerDialog(playerid, dLic+4, 1, "{FFCC00}Перевод", "{FFFFFF}Введите ID или имя игрока и количество денег через запятую", "Принять", "Назад");
			GiveBankMoney(playerid, -price, "Transfer-");
		    GiveBankMoney(targetid, price, "Transfer+");
			new string[128];
			format(string,sizeof(string),"Игрок %s [IP: %s] перевел игроку %s [IP: %s] на счет %d$ [%d$]", GetName(playerid), pInfo[playerid][pIP], GetName(targetid), pInfo[targetid][pIP], price, pInfo[targetid][pBank]);
			WriteLog("Transfer",string);
			if(price > 3000) SendAdminMessage(COLOR_RED, string);
			SendClientMessage(playerid, COLOR_GREEN, "Вы перевели деньги на другой счёт");
			format(string, sizeof(string), "Вам поступил перевод на основной счет в размере %d$ от игрока %s[%d]", price, GetName(playerid), playerid);
			SendClientMessage(targetid, COLOR_WHITE, string);
			TransferReset[playerid] = 60;
		}
	case dLic+5:
		{
			if(!response) return ShowPlayerDialog(playerid, dATM+9, DIALOG_STYLE_LIST, "{FFCC00}Недвижимость", "{63BD4E}Дом\n{FFFFFF}- Оплата квартплаты\n{FF9900}Бизнес\n{FFFFFF}- Оплата аренды\n{FFFFFF}- Вывод денег со счёта", "Выбрать", "Отмена");
			new odays, string[128];
			new h = pInfo[playerid][pHouse];
			if(sscanf(inputtext, "i", odays))
			{
				format(string, sizeof(string), "{FFFFFF}Введите количество дней на которое\nжелаете оплатить квартплату за дом\n\nОплачено дней: {FF9900}%d", HouseInfo[h][hDays]);
				return ShowPlayerDialog(playerid, dLic+5, 1, "{FFCC00}Оплата квартплаты", string, "Принять", "Назад");
			}
			if(!(1 <= odays <= 30))
			{
				format(string, sizeof(string), "{FFFFFF}Введите количество дней на которое\nжелаете оплатить квартплату за дом\n\nОплачено дней: {FF9900}%d", HouseInfo[h][hDays]);
				return ShowPlayerDialog(playerid, dLic+5, 1, "{FFCC00}Оплата квартплаты", string, "Принять", "Назад");
			}
			new subsidia = floatround(HouseInfo[h][hPrice] * 0.005);
			if(HouseInfo[h][hSubsidia]) subsidia = subsidia / 2;
			new oplata = subsidia * odays;
			if(pInfo[playerid][pBank] < oplata)
			{
			    SendClientMessage(playerid, COLOR_GREY, "На вашем счету в банке не хватает денег!");
				format(string, sizeof(string), "{FFFFFF}Введите количество дней на которое\nжелаете оплатить квартплату за дом\n\nОплачено дней: {FF9900}%d", HouseInfo[h][hDays]);
				return ShowPlayerDialog(playerid, dLic+5, 1, "{FFCC00}Оплата квартплаты", string, "Принять", "Назад");
			}
			if(HouseInfo[h][hDays]+odays > 30) return SendClientMessage(playerid, COLOR_GREY, "От 1 до 30 дней");
			pInfo[playerid][pBank] -= oplata;
			HouseInfo[h][hDays] += odays;
			MysqlUpdateHouseInt(h, "hDays", HouseInfo[h][hDays]);
			SendClientMessage(playerid, COLOR_BLUE, "Вы успешно оплатили квартплату дома");
		}
	case dHome:
		{
			if(!response) return 1;
			new a = pInfo[playerid][pHouse];
			switch(listitem)
			{
				case 0:
				{
					if(HouseInfo[a][hLock] == 1)
					{
						HouseInfo[a][hLock] = 0;
						GameTextForPlayer(playerid, "~g~unlock", 5000, 5);
						MeAction(playerid, "открывает замок дома");
					}
					else
					{
						HouseInfo[a][hLock] = 1;
						GameTextForPlayer(playerid, "~r~lock", 5000, 5);
						MeAction(playerid, "закрывает замок дома");
					}
					PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
					MysqlUpdateHouseInt(a, "hLock", HouseInfo[a][hLock]);
				}
				case 1:
				{
					new oneskin[14] = "{F04245}(нет)", twoskin[14] = "{F04245}(нет)", threeskin[14] = "{F04245}(нет)", mskin[14] = "{F04245}(нет)";
				    if(pInfo[playerid][pSkin][0]) format(oneskin, sizeof(oneskin), "{63BD4E}(%i)", pInfo[playerid][pSkin][0]);
				    if(pInfo[playerid][pSkin][1]) format(twoskin, sizeof(twoskin), "{63BD4E}(%i)", pInfo[playerid][pSkin][1]);
				    if(pInfo[playerid][pSkin][2]) format(threeskin, sizeof(threeskin), "{63BD4E}(%i)", pInfo[playerid][pSkin][2]);
				    if(pInfo[playerid][pMemberSkin]) format(mskin, sizeof(mskin), "{63BD4E}(%i)", pInfo[playerid][pMemberSkin]);
                    stringer[0] = EOS;
					format(stringer, 200, "\
						{FFFFFF}Полка №1 %s\n\
						{FFFFFF}Полка №2 %s\n\
						{FFFFFF}Полка №3 %s\n\
						{FFFFFF}Одежда организации %s",
						oneskin, twoskin, threeskin, mskin);
					ShowPlayerDialog(playerid, 1543, DIALOG_STYLE_LIST, "{FFCC00}Гардероб", stringer, "Выбрать", "Назад");
				}
				case 2,3: cmd_hpanel(playerid);
				case 4:
				{
				    stringer[0] = EOS;
				    format(stringer, sizeof(stringer), "%s\n%s\n{FFFFFF}Помощь",
				    (HouseInfo[a][hAutoDoors]) ? ("{FFFFFF}Автоматические двери\t| {63BD4E}Куплено\n") : ("{FFFFFF}Автоматические двери\t| {F04245}Не имеется (8.000$)"),
					(HouseInfo[a][hSubsidia]) ? ("{FFFFFF}Субсидия\t\t\t| {63BD4E}Куплено\n") : ("{FFFFFF}Субсидия\t\t\t| {F04245}Не имеется (55.000$)"));
					ShowPlayerDialog(playerid, dHomeUluch, DIALOG_STYLE_LIST, "{FFCC00}Улучшения дома", stringer, "Выбрать", "Назад");
				}
				case 5: cmd_fixcar(playerid);
			}
		}
	case dHome+1:
	    {
	        if(!response) return 1;
			{
			    new a = GetPVarInt(playerid, "UseHouse");
			    switch(listitem)
			    {
			        case 0:
			        {
			            new _c = HouseInfo[a][hClass], _i = HouseInfo[a][hInt];
						if(IsPlayerInRangeOfPoint(playerid, 6.0, HintsInfo[_c][_i][hiExitX], HintsInfo[_c][_i][hiExitY], HintsInfo[_c][_i][hiExitZ]) && GetPlayerVirtualWorld(playerid) == HouseInfo[a][hID])
						{
							SetPlayerInterior(playerid, 0);
							SetPlayerVirtualWorld(playerid, 0);
							SetPlayerPos(playerid, HouseInfo[a][hEntr][0], HouseInfo[a][hEntr][1], HouseInfo[a][hEntr][2]);
						}
			        }
			        case 1:
			        {
			            new _c = HouseInfo[a][hClass], _i = HouseInfo[a][hInt];
			            if(IsPlayerInRangeOfPoint(playerid, 6.0, HintsInfo[_c][_i][hiExitX], HintsInfo[_c][_i][hiExitY], HintsInfo[_c][_i][hiExitZ]))
			            {
							SetPlayerPos(playerid, -1658.8940,1541.3593,835.6316, 1);
							SetPlayerInterior(playerid, HintsInfo[_c][_i][hiInt]);
							SetPlayerVirtualWorld(playerid, HouseInfo[a][hID]);
							SetVehicleVirtualWorld(GetPVarInt(playerid,"VehicleEnters"), HouseInfo[a][hID]);
							SendClientMessage(playerid, COLOR_GREEN, "[Подсказка] {FFFFFF}Чтобы выехать из гаража, нажмите клавишу сигнала {AFAFAF}(Caps Lock / H) {FFFFFF}находясь за рулём");
							if(!HouseInfo[a][hAutoDoors]) SendClientMessage(playerid, COLOR_GREEN, "[Подсказка] {FFFFFF}Если Вы хотите выйти из гаража, введите /exit (рядом с дверью)");
							else SendClientMessage(playerid, COLOR_GREEN, "[Подсказка] {FFFFFF}Если Вы хотите выйти из гаража, нажмите Левый ALT {AFAFAF}(рядом с дверью)");
						}
			        }
      			}
   			}
	    }
	case dHome+2:
	    {
	        if(!response) return 1;
	        new a = GetPVarInt(playerid, "UseHouse");
	        new vehicleid = GetPVarInt(playerid,"VehicleEnters");
	        SetVehiclePos(vehicleid, -1646.7933, 1545.8517, 835.2591);
			PutPlayerInVehicle(playerid, vehicleid, 0);
			SetVehicleZAngle(vehicleid, 90.0000);
			SetCameraBehindPlayer(playerid);
			new _c = HouseInfo[a][hClass], _i = HouseInfo[a][hInt];
			LinkVehicleToInterior(vehicleid, HintsInfo[_c][_i][hiInt]);
			SetPlayerInterior(playerid, HintsInfo[_c][_i][hiInt]);
			SetPlayerVirtualWorld(playerid, HouseInfo[a][hID]);
			SetVehicleVirtualWorld(vehicleid, HouseInfo[a][hID]);
	    }
	case dHomeUluch:
	    {
	        if(!response) return cmd_hpanel(playerid);
	        switch(listitem)
	        {
	            case 0:
	            {
	                new a = pInfo[playerid][pHouse];
				    if(HouseInfo[a][hAutoDoors]) return SendClientMessage(playerid,COLOR_GREY,"У вас уже имеются автоматические двери в доме!");
					if(GetCash(playerid) < 8000) return SendClientMessage(playerid, COLOR_GREY, NoMoney);
					TransferMoney(playerid, -1, 8000);
					HouseInfo[a][hAutoDoors] = 1;
					MysqlUpdateHouseInt(a, "hAutoDoors", HouseInfo[a][hAutoDoors]);
					SendClientMessage(playerid, COLOR_LIME, "Теперь в Вашем доме имеются автоматические двери");
					UpdateDynamic3DTextLabelText(HouseInfo[a][hTextExit], 0xFFFFFFFF, "Выход - {EAD86A}'ALT'\n{FFFFFF}Управление домом - {EAD86A}'/hpanel'");
	            }
	            case 1:
	            {
	                new a = pInfo[playerid][pHouse];
				    if(HouseInfo[a][hSubsidia]) return SendClientMessage(playerid,COLOR_GREY,"У вас уже имеется субсидия в доме!");
					if(GetCash(playerid) < 55000) return SendClientMessage(playerid, COLOR_GREY, NoMoney);
					TransferMoney(playerid, -1, 55000);
					HouseInfo[a][hSubsidia] = 1;
					MysqlUpdateHouseInt(a, "hSubsidia", HouseInfo[a][hSubsidia]);
					SendClientMessage(playerid, COLOR_LIME, "Сумма оплаты за коммунальные услуги уменьшена в 2 раза");
	            }
	            case 2:
			    {
			        stringer[0] = EOS;
			        format(stringer, 400, "{FFFFFF}Автоматические двери - выход из дома или из гаража в дом станет доступным на клавишу {EAD86A}Левый ALT.\n\n");
					format(stringer, 400, "%s{FFFFFF}Субсидия - улучшение при котором сумма оплаты за коммунальные услуги уменьшиться в 2 раза.", stringer);
					ShowPlayerDialog(playerid, dHomeUluch+1, 0, "{FFCC00}Помощь", stringer, "Закрыть", "Назад");
			    }
	        }
	    }
    case dHomeUluch+1:
		{
		    if(!response)
		    {
		        new a = pInfo[playerid][pHouse];
		    	stringer[0] = EOS;
			    format(stringer, sizeof(stringer), "%s\n%s\n{FFFFFF}Помощь",
			    (HouseInfo[a][hAutoDoors]) ? ("{FFFFFF}Автоматические двери\t| {63BD4E}Куплено\n") : ("{FFFFFF}Автоматические двери\t| {F04245}Не имеется (8.000$)"),
				(HouseInfo[a][hSubsidia]) ? ("{FFFFFF}Субсидия\t\t\t| {63BD4E}Куплено\n") : ("{FFFFFF}Субсидия\t\t\t| {F04245}Не имеется (55.000$)"));
				ShowPlayerDialog(playerid, dHomeUluch, DIALOG_STYLE_LIST, "{FFCC00}Улучшения дома", stringer, "Выбрать", "Назад");
			}
		}
	case 15419:
		{
			if(!response) return 1;
			static const list_skins[3] = {287,179,255};
			SetPlayerSkin(playerid,list_skins[listitem]);
			SendClientMessage(playerid,COLOR_GREEN,
				(listitem == 0)?("Вы переоделись в постовую форму!"):
				(listitem == 1)?("Вы переоделись в спортивную форму!"):("Вы переоделись в парадную форму!"));
		}
	case 15420:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					if(!pInfo[playerid][pMemberSkin]) return SendClientMessage(playerid,COLOR_GREY,"Вы не состоите в организации");
					SetPlayerSkin(playerid, pInfo[playerid][pMemberSkin]);
					SendClientMessage(playerid,COLOR_YELLOW,"Вы надели форму организации");
					SetPlayerColorEx(playerid,TeamColors[GetTeamID(playerid)]);
				}
				case 1:
				{
					SetPlayerSkin(playerid, 109);
					SendClientMessage(playerid,COLOR_YELLOW,"Вы надели форму - ОПГ Ореховская");
					SetPlayerColorEx(playerid,VAGOS_COLOR);
			 	}
				case 2:
           	 	{
					SetPlayerSkin(playerid, 106);
					SendClientMessage(playerid,COLOR_YELLOW,"Вы надели форму - ОПГ Южная");
					SetPlayerColorEx(playerid,GROVE_COLOR);
			 	}
				case 3:
				{
				 	SetPlayerSkin(playerid, 102);
				    SendClientMessage(playerid,COLOR_YELLOW,"Вы надели форму - ОПГ Тамбовская");
				    SetPlayerColorEx(playerid,BALLAS_COLOR);
			 	}
				case 4:
			 	{
					SetPlayerSkin(playerid, 116);
					SendClientMessage(playerid,COLOR_YELLOW,"Вы надели форму - ОПГ Солнцевская");
					SetPlayerColorEx(playerid,AZTECAS_COLOR);
			 	}
				case 5:
		 	 	{
					SetPlayerSkin(playerid, 174);
					SendClientMessage(playerid,COLOR_YELLOW,"Вы надели форму - Южная братва");
					SetPlayerColorEx(playerid,RIFA_COLOR);
			 	}
			}
		}
	case 1543:
		{
			if(!response) return cmd_hpanel(playerid);
			if(listitem == 3)
			{
			    if(!pInfo[playerid][pMemberSkin]) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в организации");
				SetPlayerSkin(playerid, pInfo[playerid][pMemberSkin]);
				MysqlUpdatePlayerInt(playerid, "memberskin", pInfo[playerid][pMemberSkin]);
				SendClientMessage(playerid, COLOR_YELLOW, "Вы надели форму организации");
			}
			else
			{
			    if(!pInfo[playerid][pSkin][listitem]) return SendClientMessage(playerid, COLOR_GREY, "У вас нет одежды на этой полке");
				pInfo[playerid][pModel] = pInfo[playerid][pSkin][listitem];
				SetPlayerSkin(playerid, pInfo[playerid][pModel]);
				MysqlUpdatePlayerInt(playerid, "model", pInfo[playerid][pModel]);
				SendClientMessage(playerid, COLOR_YELLOW, "Вы надели одежду из шкафа");
			}
		}
	case dService+1:
		{
		    if(!response)
			{
			    if(pInfo[playerid][pJail] > 0) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас изъяли телефон!");
				return cmd_call(playerid);
			}
			if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, COLOR_GREY, "[Диспетчер] Не удалось определить Ваше местоположение. Выйдите из помещения.");
			if(GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, COLOR_GREY, "[Диспетчер] Не удалось определить Ваше местоположение. Выйдите из помещения.");
			if(GetPVarInt(playerid, "CallMech") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы недавно вызывали механика!");
			if(strlen(inputtext) < 6 || strlen(inputtext) > 20) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] В сообщении должно быть от 6 до 20 символов!");
			new full = 0;
			foreach(new i : Player)
			{
				if(!gPlayerLogged[i]) continue;
				if(pInfo[i][pJob] == JOB_MECHANIC && i != playerid) full++;
			}
			if(!full) SendClientMessage(playerid, COLOR_GREY, "В данный момент нет механиков на дежурстве!");
			else SendClientMessage(playerid, COLOR_BLUE, "Ваш запрос послан механикам. Ждите ответа");
			MechanicON[playerid] = true;
			new trr[3];
			if(IsPlayerToSquare(playerid,-891.3302,-2950.0190,2915.9917,560.3257)) trr = "LS";
			else if(IsPlayerToSquare(playerid,-2929.6589,-2889.1660,-1326.9077,1493.1770)) trr = "SF";
			else trr = "LV";
			foreach(new i : Player)
			{
				if(!gPlayerLogged[i]) continue;
				if(pInfo[i][pJob] == JOB_MECHANIC)
				{
					SendMes(i, COLOR_WHITE, "%s[%i] {EAD86A}с города {FFFFFF}%s{EAD86A}, вызывает механика, местоположение: {FFFFFF}%s", GetName(playerid), playerid, trr, inputtext);
					SendClientMessage(i, COLOR_YELLOW, "Чтобы принять вызов введите {FFFFFF}/gomechanic");
				}
			}
		}
    case dService+2:
		{
		    if(!response) {
			    if(pInfo[playerid][pJail] > 0) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас изъяли телефон!");
				return cmd_call(playerid);
			}
			if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, COLOR_GREY, "[Диспетчер] Не удалось определить Ваше местоположение. Выйдите из помещения.");
			if(GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, COLOR_GREY, "[Диспетчер] Не удалось определить Ваше местоположение. Выйдите из помещения.");
			if(GetPVarInt(playerid, "CallTaxi") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы недавно вызывали таксиста!");
			if(strlen(inputtext) < 6 || strlen(inputtext) > 20) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] В сообщении должно быть от 6 до 20 символов!");
			new full = 0;
			foreach(new i : Player)
			{
				if(!gPlayerLogged[i]) continue;
				if(pInfo[i][pJob] == JOB_TAXI && i != playerid) full++;
			}
			if(!full) SendClientMessage(playerid, COLOR_GREY, "В данный момент нет таксистов на дежурстве!");
			else SendClientMessage(playerid, COLOR_BLUE, "Ваш запрос послан таксистам. Ждите ответа.");
			TaxiON[playerid] = true;
			new trr[3];
			if(IsPlayerToSquare(playerid,-891.3302,-2950.0190,2915.9917,560.3257)) trr = "LS";
			else if(IsPlayerToSquare(playerid,-2929.6589,-2889.1660,-1326.9077,1493.1770)) trr = "SF";
			else trr = "LV";
			foreach(new i : Player)
			{
				if(!gPlayerLogged[i]) continue;
				if(pInfo[i][pJob] == JOB_TAXI)
				{
					SendMes(i, COLOR_WHITE, "%s[%i] {EAD86A}с города {FFFFFF}%s{EAD86A}, вызывает такси, местоположение: {FFFFFF}%s", GetName(playerid), playerid, trr, inputtext);
					SendClientMessage(i, COLOR_YELLOW, "Чтобы принять вызов введите {FFFFFF}/gotaxi");
				}
			}
		}
    case dService+3:
		{
		    if(!response)
			{
			    if(pInfo[playerid][pJail] > 0) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас изъяли телефон!");
				return cmd_call(playerid);
			}
			if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, COLOR_GREY, "[Диспетчер] Не удалось определить Ваше местоположение. Выйдите из помещения.");
			if(GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, COLOR_GREY, "[Диспетчер] Не удалось определить Ваше местоположение. Выйдите из помещения.");
			if(GetPVarInt(playerid, "CallMedic") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы недавно вызывали скорую помощь!");
			if(strlen(inputtext) < 6 || strlen(inputtext) > 20) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] В сообщении должно быть от 6 до 20 символов!");
			new full = 0;
			foreach(new i : Player)
			{
				if(!gPlayerLogged[i]) continue;
				if(IsAMedic(i) && i != playerid) full++;
			}
			if(!full) SendClientMessage(playerid, COLOR_GREY, "В данный момент нет медиков на дежурстве!");
			else SendClientMessage(playerid, COLOR_BLUE, "Ваш запрос на медицинскую помощь послан. Ждите ответа");
			MedicON[playerid] = true;
			new trr[3];
			if(IsPlayerToSquare(playerid,-891.3302,-2950.0190,2915.9917,560.3257)) trr = "LS";
			else if(IsPlayerToSquare(playerid,-2929.6589,-2889.1660,-1326.9077,1493.1770)) trr = "SF";
			else trr = "LV";
			foreach(new i : Player)
			{
				if(!gPlayerLogged[i]) continue;
				if(IsAMedic(i))
				{
					SendMes(i, COLOR_WHITE, "%s[%i] {EAD86A}с города {FFFFFF}%s{EAD86A}, вызывает скорую помощь, местоположение: {FFFFFF}%s", GetName(playerid), playerid, trr, inputtext);
					SendClientMessage(i, COLOR_YELLOW, "Чтобы принять вызов введите {FFFFFF}/gomedhelp");
				}
			}
		}
	case dService+4:
		{
		    if(!response)
			{
			    if(pInfo[playerid][pJail] > 0) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас изъяли телефон!");
				return cmd_call(playerid);
			}
			if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, COLOR_GREY, "[Диспетчер] Не удалось определить Ваше местоположение. Выйдите из помещения.");
			if(GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, COLOR_GREY, "[Диспетчер] Не удалось определить Ваше местоположение. Выйдите из помещения.");
			if(GetPVarInt(playerid, "CallPolice") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы недавно вызывали полицию!");
			if(strlen(inputtext) < 6 || strlen(inputtext) > 20) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] В сообщении должно быть от 6 до 20 символов!");
			new full = 0;
			foreach(new i : Player)
			{
				if(!gPlayerLogged[i]) continue;
				if(IsACop(i) && i != playerid) full++;
			}
			if(!full) SendClientMessage(playerid, COLOR_GREY, "В данный момент нет полицейских на дежурстве!");
			else SendClientMessage(playerid, COLOR_BLUE, "Ваш запрос был отправлен полиции. Ждите ответа");
			PoliceON[playerid] = true;
			new trr[3];
			if(IsPlayerToSquare(playerid,-891.3302,-2950.0190,2915.9917,560.3257)) trr = "LS";
			else if(IsPlayerToSquare(playerid,-2929.6589,-2889.1660,-1326.9077,1493.1770)) trr = "SF";
			else trr = "LV";
			foreach(new i : Player)
			{
				if(!gPlayerLogged[i]) continue;
				if(IsACop(i))
				{
					SendMes(i, COLOR_WHITE, "%s[%i] {EAD86A}с города {FFFFFF}%s{EAD86A}, вызывает полицию, местоположение: {FFFFFF}%s", GetName(playerid), playerid, trr, inputtext);
					SendClientMessage(i, COLOR_YELLOW, "Чтобы принять вызов введите {FFFFFF}/gopolice");
				}
			}
		}
	case dArmoury:
	    {
	        if(!response) return 1;
	        switch(listitem)
	        {
	            case 0:
				{
				    if(HaveWeapon(playerid, 23)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы уже взяли Silenced Pistol!");
					SetPVarInt(playerid, "TazerGun", 1);
					GivePlayerWeaponEx(playerid, 23, 50);
				}
	            case 1:
				{
				    if(HaveWeapon(playerid, 24)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы уже взяли Desert Eagle!");
					GivePlayerWeaponEx(playerid, 24, 35);
				}
	            case 2:
				{
				    if(HaveWeapon(playerid, 31)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы уже взяли M4!");
					GivePlayerWeaponEx(playerid, 31, 150);
				}
				case 3:
				{
				    if(HaveWeapon(playerid, 29)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы уже взяли MP5!");
					GivePlayerWeaponEx(playerid, 29, 100);
				}
	            case 4:
				{
				    if(HaveWeapon(playerid, 25)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы уже взяли Shotgun!");
					GivePlayerWeaponEx(playerid, 25, 50);
				}
	            case 5:
				{
				    if(HaveWeapon(playerid, 3)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы уже взяли дубинку!");
					GivePlayerWeaponEx(playerid, 3, 1);
				}
				case 6:
				{
				    if(PlayerArmour[playerid] > 99) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы уже взяли бронежилет!");
					SendClientMessage(playerid, COLOR_GREEN, "Вы надели бронежилет");
			        SetArmour(playerid, 100);
				}
				case 7:
				{
				    if(pInfo[playerid][pMask] >= 2 && !pInfo[playerid][pImprove][2]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы можете носить не более 2 масок!");
				    if(pInfo[playerid][pMask] >= 4 && pInfo[playerid][pImprove][2]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы можете носить не более 4 масок!");
				    pInfo[playerid][pMask]++;
					SendClientMessage(playerid, COLOR_GREEN, "Вы взяли маску (/mask)");
				}
	        }
		}
	case dArmoury+1:
	    {
	        if(!response) return 1;
	        switch(listitem)
	        {
	            case 0:
	            {
	                if(HaveWeapon(playerid, 23)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы уже взяли Silenced Pistol!");
					SetPVarInt(playerid, "TazerGun", 1);
					GivePlayerWeaponEx(playerid, 23, 50);
				}
	            case 1:
				{
				    if(HaveWeapon(playerid, 24)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы уже взяли Desert Eagle!");
					GivePlayerWeaponEx(playerid, 24, 35);
				}
				case 2:
				{
				    if(HaveWeapon(playerid, 29)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы уже взяли MP5!");
					GivePlayerWeaponEx(playerid, 29, 100);
				}
	            case 3:
				{
				    if(HaveWeapon(playerid, 3)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы уже взяли дубинку!");
					GivePlayerWeaponEx(playerid, 3, 1);
				}
				case 4:
				{
				    if(PlayerArmour[playerid] > 99) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы уже взяли бронежилет!");
					SendClientMessage(playerid, COLOR_GREEN, "Вы надели бронежилет");
			        SetArmour(playerid, 100);
				}
	        }
		}
	case dArmoury+2:
	    {
	        if(!response) return 1;
	        switch(listitem)
	        {
	            case 0:
				{
				    if(HaveWeapon(playerid, 23)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы уже взяли Silenced Pistol!");
					SetPVarInt(playerid, "TazerGun", 1);
					GivePlayerWeaponEx(playerid, 23, 50);
				}
	            case 1:
				{
				    if(HaveWeapon(playerid, 24)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы уже взяли Desert Eagle!");
					GivePlayerWeaponEx(playerid, 24, 35);
				}
	            case 2:
				{
				    if(HaveWeapon(playerid, 31)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы уже взяли M4!");
					GivePlayerWeaponEx(playerid, 31, 150);
				}
	            case 3:
				{
				    if(HaveWeapon(playerid, 29)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы уже взяли MP5!");
					GivePlayerWeaponEx(playerid, 29, 100);
				}
	            case 4:
				{
				    if(HaveWeapon(playerid, 34)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы уже взяли Sniper Rifle!");
					GivePlayerWeaponEx(playerid, 34, 25);
				}
	            case 5:
				{
				    if(HaveWeapon(playerid, 41)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы уже взяли Spray!");
					GivePlayerWeaponEx(playerid, 41, 100);
				}
	            case 6:
				{
				    if(HaveWeapon(playerid, 17)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы уже взяли слезоточивый газ!");
					GivePlayerWeaponEx(playerid, 17, 5);
				}
	            case 7:
				{
				    if(HaveWeapon(playerid, 3)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы уже взяли дубинку!");
					GivePlayerWeaponEx(playerid, 3, 1);
				}
				case 8:
				{
				    if(PlayerArmour[playerid] > 99) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы уже взяли бронежилет!");
					SendClientMessage(playerid, COLOR_GREEN, "Вы надели бронежилет");
			        SetArmour(playerid, 100);
				}
				case 9:
				{
				    if(pInfo[playerid][pMask] >= 2 && !pInfo[playerid][pImprove][2]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы можете носить не более 2 масок!");
				    if(pInfo[playerid][pMask] >= 4 && pInfo[playerid][pImprove][2]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы можете носить не более 4 масок!");
				    pInfo[playerid][pMask]++;
					SendClientMessage(playerid, COLOR_GREEN, "Вы взяли маску (/mask)");
				}
	        }
		}
	case dArmyJob:
		{
		    if(!response) return 1;
		    if(!pTemp[playerid][pArmyJob])
		    {
			    gCountArmyJob --;
			    pTemp[playerid][pArmyJob] = 1;
	       		SendClientMessage(playerid, COLOR_GREEN, "Вы начали охрану базы");
     		}
     		else
     		{
     		    gCountArmyJob ++;
			    pTemp[playerid][pArmyJob] = 0;
	       		SendClientMessage(playerid, COLOR_GREEN, "Вы закончили охрану базы");
     		}
		}
	case dStopLoad:
	    {
	        if(!response) return RemovePlayerFromVehicle(playerid);
			new vehicleid = GetPVarInt(playerid,"VehicleEnters");
			if(!vehicleid) return 1;
			if(!gVehicleGun[vehicleid][vGunLoading] && !gVehicleGun[vehicleid][vGunUnloading]) return 1;
			gVehicleGun[vehicleid][vGunLoading] = false;
			gVehicleGun[vehicleid][vGunUnloading] = false;
			if(IsValidDynamic3DTextLabel(gVehicleGun[vehicleid][vGunText]))
			{
				DestroyDynamic3DTextLabel(gVehicleGun[vehicleid][vGunText]);
				gVehicleGun[vehicleid][vGunText] = Text3D:INVALID_3DTEXT_ID;
			}
			DestroyDynamicArea(gVehicleGun[vehicleid][vGunArea]);
			DestroyDynamicPickup(gVehicleGun[vehicleid][vGunPickup]);
			gVehicleGun[vehicleid][vGunArea] = 0;
			gVehicleGun[vehicleid][vGunPickup] = 0;
			SendClientMessage(playerid, COLOR_GREEN, "Загрузка / разгрузка завершена");
			Iter_Remove(VehicleGun, vehicleid);
	    }
    case dMedStopLoad:
	    {
	        if(!response) return RemovePlayerFromVehicle(playerid);
			new vehicleid = GetPVarInt(playerid,"VehicleEnters");
			if(!vehicleid) return 1;
			if(gVehicleMed[vehicleid][vMedLoading])
			{
		    	gVehicleMed[vehicleid][vMedLoading] = false;
		    	UseGPS[playerid] = true;
	            for(new i; i < 2; i++) TextDrawShowForPlayer(playerid, enable_gps_TD[i]);
	    		DisablePlayerRaceCheckpoint(playerid);
	    		new Float:gps_x,Float:gps_y,Float:gps_z;
	    		switch(pInfo[playerid][pMember])
	    		{
					case TEAM_LSHOSPITAL: gps_x = 1531.3206, gps_y = -1578.2285, gps_z = 13.7337;
					case TEAM_SFHOSPITAL: gps_x = -2585.1184, gps_y = 630.2523, gps_z = 14.5303;
					case TEAM_LVHOSPITAL: gps_x = 1613.4320, gps_y = 1718.7191, gps_z = 10.8112;
				}
				SetPlayerRaceCheckpoint(playerid,1,gps_x,gps_y,gps_z,0.0,0.0,0.0,5.0);
  			}
			if(gVehicleMed[vehicleid][vMedUnloading]) gVehicleMed[vehicleid][vMedUnloading] = false;
			if(IsValidDynamic3DTextLabel(gVehicleMed[vehicleid][vMedText]))
			{
				DestroyDynamic3DTextLabel(gVehicleMed[vehicleid][vMedText]);
				gVehicleMed[vehicleid][vMedText] = Text3D:INVALID_3DTEXT_ID;
			}
			DestroyDynamicArea(gVehicleMed[vehicleid][vMedArea]);
			DestroyDynamicPickup(gVehicleMed[vehicleid][vMedPickup]);
			gVehicleMed[vehicleid][vMedArea] = 0;
			gVehicleMed[vehicleid][vMedPickup] = 0;
			SendClientMessage(playerid, COLOR_GREEN, "Загрузка / разгрузка завершена");
			Iter_Remove(VehicleMed, vehicleid);
	    }
	case dHeal+6:
		{
			if(!response) return 1;
			new name[32];
			if(sscanf(inputtext,"s[32]",name)) return ShowPlayerDialog(playerid, dHeal+6, 1, " ", "{FFFFFF}Название\n\nПример: Gas Station", "Принять", "Отмена");
			TOTALBIZ++;
			sscanf(boordh,"p<,>ffffffiii",
			BizInfo[TOTALBIZ][bExit][0],BizInfo[TOTALBIZ][bExit][1],BizInfo[TOTALBIZ][bExit][2],
			BizInfo[TOTALBIZ][bMenu][0],BizInfo[TOTALBIZ][bMenu][1],BizInfo[TOTALBIZ][bMenu][2],
			BizInfo[TOTALBIZ][bInt],BizInfo[TOTALBIZ][bMIcon], BizInfo[TOTALBIZ][bType]);
			GetPlayerPos(playerid,BizInfo[TOTALBIZ][bEntr][0],BizInfo[TOTALBIZ][bEntr][1],BizInfo[TOTALBIZ][bEntr][2]);
			strmid(BizInfo[TOTALBIZ][bOwner], "None", 0, strlen("None"), MAX_PLAYER_NAME);
			strmid(BizInfo[TOTALBIZ][bName], name, 0, strlen(name), 32);
			if(BizInfo[TOTALBIZ][bType] == 10) BizInfo[TOTALBIZ][bVirtual] = 0;
			else BizInfo[TOTALBIZ][bVirtual] = TOTALBIZ;
			BizInfo[TOTALBIZ][bEnter] = BizInfo[TOTALBIZ][bHeal] = BizInfo[TOTALBIZ][bSound] = 0;
			BizInfo[TOTALBIZ][bTill] = 50;
			BizInfo[TOTALBIZ][bDays] = 1;

			new tmpvar, tmpvar2;
			switch(BizInfo[TOTALBIZ][bType])
			{
			    case 1: tmpvar = 540000, tmpvar2 = 5000;
			    case 2: tmpvar = 500000, tmpvar2 = 20000;
			    case 3: tmpvar = 340000, tmpvar2 = 3000;
			    case 4: tmpvar = 460000, tmpvar2 = 7000;
			    case 5: tmpvar = 240000, tmpvar2 = 7000;
			    case 6: tmpvar = 800000, tmpvar2 = 20000;
			    case 7: tmpvar = 450000, tmpvar2 = 100000;
			    case 8: tmpvar = 410000, tmpvar2 = 50000;
			    case 9: tmpvar = 1000000, tmpvar2 = 100000;
			    case 10: tmpvar = 820000, tmpvar2 = 7000;
			}
			BizInfo[TOTALBIZ][bPrice] = tmpvar;
			BizInfo[TOTALBIZ][bProduct] = tmpvar2;

			BizInfo[TOTALBIZ][bIcon] = CreateDynamicMapIcon(BizInfo[TOTALBIZ][bEntr][0],BizInfo[TOTALBIZ][bEntr][1],BizInfo[TOTALBIZ][bEntr][2], BizInfo[TOTALBIZ][bMIcon], 0,-1,-1,-1,200.0);

            new fee[32] = "Вход свободный";
	        if(BizInfo[TOTALBIZ][bEnter] != 0) format(fee, sizeof(fee), "Стоимость входа: {FFFFFF}%d$", BizInfo[TOTALBIZ][bEnter]);
			if(BizInfo[TOTALBIZ][bType] != 2 && BizInfo[TOTALBIZ][bType] != 7)
			{
			    new string[200];
			    BizInfo[TOTALBIZ][bPickup] = CreateDynamicPickup(19132,1,BizInfo[TOTALBIZ][bEntr][0],BizInfo[TOTALBIZ][bEntr][1],BizInfo[TOTALBIZ][bEntr][2]);
			    BizInfo[TOTALBIZ][bAreaEnter] = CreateDynamicSphere(BizInfo[TOTALBIZ][bEntr][0],BizInfo[TOTALBIZ][bEntr][1],BizInfo[TOTALBIZ][bEntr][2],1.0,0,0);
				BizInfo[TOTALBIZ][bTextExit] = CreateDynamic3DTextLabel("Выход - {EAD86A}'ALT'",0xFFFFFFFF,BizInfo[TOTALBIZ][bExit][0],BizInfo[TOTALBIZ][bExit][1],BizInfo[TOTALBIZ][bExit][2],10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,BizInfo[TOTALBIZ][bVirtual],BizInfo[TOTALBIZ][bInt]);
				BizInfo[TOTALBIZ][bAreaExit] = CreateDynamicSphere(BizInfo[TOTALBIZ][bExit][0],BizInfo[TOTALBIZ][bExit][1],BizInfo[TOTALBIZ][bExit][2],2.0,BizInfo[TOTALBIZ][bVirtual],BizInfo[TOTALBIZ][bInt]);
				BizInfo[TOTALBIZ][bAreaMenu] = CreateDynamicSphere(BizInfo[TOTALBIZ][bMenu][0],BizInfo[TOTALBIZ][bMenu][1],BizInfo[TOTALBIZ][bMenu][2],1.0,BizInfo[TOTALBIZ][bVirtual],BizInfo[TOTALBIZ][bInt]);
				if(BizInfo[TOTALBIZ][bType] == 8) BizInfo[TOTALBIZ][bTextMenu] = CreateDynamic3DTextLabel("Взаимодействие - {EAD86A}'ALT'",0xFFFFFFFF,BizInfo[TOTALBIZ][bMenu][0],BizInfo[TOTALBIZ][bMenu][1],BizInfo[TOTALBIZ][bMenu][2],40.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,BizInfo[TOTALBIZ][bVirtual],BizInfo[TOTALBIZ][bInt]);
				else if(BizInfo[TOTALBIZ][bType] == 2) BizInfo[TOTALBIZ][bTextMenu] = CreateDynamic3DTextLabel("Взаимодействие - {EAD86A}'ALT'",0xFFFFFFFF,BizInfo[TOTALBIZ][bMenu][0],BizInfo[TOTALBIZ][bMenu][1],BizInfo[TOTALBIZ][bMenu][2],15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,BizInfo[TOTALBIZ][bVirtual],BizInfo[TOTALBIZ][bInt]);
				else BizInfo[TOTALBIZ][bTextMenu] = CreateDynamic3DTextLabel("Взаимодействие - {EAD86A}'ALT'",0xFFFFFFFF,BizInfo[TOTALBIZ][bMenu][0],BizInfo[TOTALBIZ][bMenu][1],BizInfo[TOTALBIZ][bMenu][2],40.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,BizInfo[TOTALBIZ][bVirtual],BizInfo[TOTALBIZ][bInt]);
				if(GetString(BizInfo[TOTALBIZ][bOwner],"None"))
				{
					format(string, sizeof(string), "{63BD4E}Название: {FFFFFF}%s (№%i)\n{63BD4E}Бизнес продаётся\n{63BD4E}Цена: {FFFFFF}%d$", BizInfo[TOTALBIZ][bName], TOTALBIZ, BizInfo[TOTALBIZ][bPrice]);
					LABELBIZ[TOTALBIZ] = CreateDynamic3DTextLabel(string,-1,BizInfo[TOTALBIZ][bEntr][0], BizInfo[TOTALBIZ][bEntr][1], BizInfo[TOTALBIZ][bEntr][2],20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
				}
				else
				{
					format(string, sizeof(string), "{63BD4E}Название: {FFFFFF}%s (№%i)\n{63BD4E}Владелец: {FFFFFF}%s\n{63BD4E}%s", BizInfo[TOTALBIZ][bName], TOTALBIZ, BizInfo[TOTALBIZ][bOwner], fee);
					LABELBIZ[TOTALBIZ] = CreateDynamic3DTextLabel(string,-1,BizInfo[TOTALBIZ][bEntr][0], BizInfo[TOTALBIZ][bEntr][1], BizInfo[TOTALBIZ][bEntr][2],20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
				}
			}
			else if(BizInfo[TOTALBIZ][bType] == 2)
			{
			    new string[200];
				if(GetString(BizInfo[TOTALBIZ][bOwner],"None"))
				{
					format(string, sizeof(string), "{63BD4E}Название: {FFFFFF}%s (№%i)\n{63BD4E}Заправка продаётся\n{63BD4E}Цена: {FFFFFF}%d$\n{63BD4E}Цена за 1 литр - {FFFFFF}%i$\nИспользуйте сигнал {AFAFAF}(Caps Lock / H)", BizInfo[TOTALBIZ][bName], TOTALBIZ, BizInfo[TOTALBIZ][bPrice], BizInfo[TOTALBIZ][bTill]);
					LABELBIZ[TOTALBIZ] = CreateDynamic3DTextLabel(string,-1,BizInfo[TOTALBIZ][bEntr][0], BizInfo[TOTALBIZ][bEntr][1], BizInfo[TOTALBIZ][bEntr][2]+1,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
				}
				else
				{
					format(string, sizeof(string), "{63BD4E}Название: {FFFFFF}%s (№%i)\n{63BD4E}Владелец: {3399FF}%s\n{63BD4E}Цена за 1 литр - {FFFFFF}%i$\nИспользуйте сигнал {AFAFAF}(Caps Lock / H)", BizInfo[TOTALBIZ][bName], BizInfo[TOTALBIZ][bOwner], TOTALBIZ, BizInfo[TOTALBIZ][bTill]);
					LABELBIZ[TOTALBIZ] = CreateDynamic3DTextLabel(string,-1,BizInfo[TOTALBIZ][bEntr][0], BizInfo[TOTALBIZ][bEntr][1], BizInfo[TOTALBIZ][bEntr][2]+1,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
				}
			}
			else if(BizInfo[TOTALBIZ][bType] == 7)
			{
			    new string[200];
				if(GetString(BizInfo[TOTALBIZ][bOwner],"None"))
				{
					format(string, sizeof(string), "{63BD4E}Название: {FFFFFF}%s (№%i)\n{63BD4E}СТО продаётся\n{63BD4E}Цена: {FFFFFF}%d$\n{63BD4E}Цена за 1 запчасть - {FFFFFF}%i$\nИспользуйте сигнал {AFAFAF}(Caps Lock / H)", BizInfo[TOTALBIZ][bName], TOTALBIZ, BizInfo[TOTALBIZ][bPrice], BizInfo[TOTALBIZ][bTill]);
					LABELBIZ[TOTALBIZ] = CreateDynamic3DTextLabel(string,-1,BizInfo[TOTALBIZ][bEntr][0], BizInfo[TOTALBIZ][bEntr][1], BizInfo[TOTALBIZ][bEntr][2],20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
				}
				else
				{
					format(string, sizeof(string), "{63BD4E}Название: {FFFFFF}%s (№%i)\n{63BD4E}Владелец: {3399FF}%s\n{63BD4E}Цена за 1 запчасть - {FFFFFF}%i$\nИспользуйте сигнал {AFAFAF}(Caps Lock / H)", BizInfo[TOTALBIZ][bName], TOTALBIZ, BizInfo[TOTALBIZ][bOwner], BizInfo[TOTALBIZ][bTill]);
					LABELBIZ[TOTALBIZ] = CreateDynamic3DTextLabel(string,COLOR_GREEN,BizInfo[TOTALBIZ][bEntr][0], BizInfo[TOTALBIZ][bEntr][1], BizInfo[TOTALBIZ][bEntr][2],20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
				}
			}
			mysql_query_string[0] = EOS;
			format(mysql_query_string,sizeof(mysql_query_string),"INSERT INTO "T_BIZ" (id,x,y,z,xt,yt,zt,menux,menuy,menuz,vint,virt,owner,name,price,product,type,icon,bDays) VALUES (%i,'%f','%f','%f','%f','%f','%f','%f','%f','%f',%i,%i,'%s','%s',%i,%i,%i,%i,%i)",
			TOTALBIZ,BizInfo[TOTALBIZ][bEntr][0],BizInfo[TOTALBIZ][bEntr][1],BizInfo[TOTALBIZ][bEntr][2],BizInfo[TOTALBIZ][bExit][0],BizInfo[TOTALBIZ][bExit][1],BizInfo[TOTALBIZ][bExit][2], BizInfo[TOTALBIZ][bMenu][0],BizInfo[TOTALBIZ][bMenu][1],BizInfo[TOTALBIZ][bMenu][2],
			BizInfo[TOTALBIZ][bInt],BizInfo[TOTALBIZ][bVirtual],BizInfo[TOTALBIZ][bOwner],BizInfo[TOTALBIZ][bName], BizInfo[TOTALBIZ][bPrice], BizInfo[TOTALBIZ][bProduct], BizInfo[TOTALBIZ][bType], BizInfo[TOTALBIZ][bMIcon], BizInfo[TOTALBIZ][bDays]);
			mysql_tquery(dbHandle, mysql_query_string,"","");
			SendMes(playerid,COLOR_LIME,"Бизнес номер %d создан",TOTALBIZ);
		}
	case dExitFly:
	    {
	        if(!response) return 1;
	        switch(listitem)
	        {
	            case 0:
	            {
	                SetPVarInt(playerid, "Fly_CurrentPlace", 1);
	                SetPlayerCamera(playerid, 0);
	            }
	            case 1:
	            {
	                SetPVarInt(playerid, "Fly_PlaceLaunch", 1);
	                SetPlayerCamera(playerid, 0);
	            }
	        }
	    }
	case dHeal+9:
		{
			if(!response) return 1;
			new idx = GetPVarInt(playerid, "UseBiz");
			SetPlayerPos(playerid,BizInfo[idx][bExit][0],BizInfo[idx][bExit][1],BizInfo[idx][bExit][2], 1);
			SetPlayerInterior(playerid,BizInfo[idx][bInt]);
			SetPlayerVirtualWorld(playerid,BizInfo[idx][bVirtual]);
			SetCameraBehindPlayer(playerid);
			SetTimerEx("@PickupBack",3000,0,"i",playerid);
	        pickupentered[playerid] = 1;
		}
	case dHeal+1:
		{
			if(!response) return 1;
			new i = pInfo[playerid][pBiz];
			switch(listitem)
			{
				case 0: BizStats(playerid, i);
				case 1:
				{
					if(BizInfo[i][bLock] == 0) return SendClientMessage(playerid, COLOR_GREY, "Бизнес уже открыт!");
					if(BizInfo[i][bProduct] <= 0 || BizInfo[i][bLic] == 0) return SendClientMessage(playerid, COLOR_GREY, "В бизнесе нет продуктов или нет лицензии!");
					BizInfo[i][bLock] = BizInfo[i][bLockTime] = 0;
					MysqlUpdateBizInt(i, "block", BizInfo[i][bLock]);
					MysqlUpdateBizInt(i, "locktime", BizInfo[i][bLockTime]);
					SendClientMessage(playerid, COLOR_GREEN, "Вы открыли бизнес. Всегда следите за состоянием продуктов и лицензией");
					SendClientMessage(playerid, COLOR_GREEN, "В противном случае вы можете потерять бизнес");
				}
				case 2:
				{
				    switch(BizInfo[i][bType])
				    {
				        case 1,6..8: SendClientMessage(playerid, COLOR_GREY, "В данном типе бизнеса нельзя управлять ценой на товар!");
				        default: ShowPlayerDialog(playerid, dHeal+2, 1, "{FFCC00}Цена", "{ffffff}Введите цену за товар:", "Принять", "Отмена");
				    }
				}
				case 3:
				{
				    switch(BizInfo[i][bType])
				    {
				        case 2,7: SendClientMessage(playerid, COLOR_GREY, "В данном типе бизнеса нельзя управлять ценой за вход!");
				        default: ShowPlayerDialog(playerid, dHeal+4, 1, "{FFCC00}Цена", "{ffffff}Введите цену за вход:", "Принять", "Отмена");
				    }
				}
				case 4: ShowPlayerDialog(playerid, dHeal+15, 1, "{FFCC00}Заказать продукты", "{ffffff}Введите количество товара, которое хотите заказать {EAD86A}(1ед. = 1$):", "Принять", "Отмена");
				case 5:
				{
                    stringer[0] = EOS;
				    format(stringer, 500, "%s\n%s\n{FFFFFF}Помощь",
				    (BizInfo[i][bHeal]) ? ("{FFFFFF}Медицинское обслуживание\t| {63BD4E}Куплено\n") : ("{FFFFFF}Медицинское обслуживание\t| {F04245}Не имеется (30.000$)"),
				    (BizInfo[i][bSound]) ? ("{FFFFFF}Звуковые эффекты при входе\t| {63BD4E}Куплено\n") : ("{FFFFFF}Звуковые эффекты при входе\t| {F04245}Не имеется (150.000$)"));
					ShowPlayerDialog(playerid, dBizUluch, DIALOG_STYLE_LIST, "{FFCC00}Улучшения бизнеса", stringer, "Выбрать", "Назад");
				}
			}
		}
	case dBizUluch:
	    {
	        if(!response) return cmd_bpanel(playerid);
	        new i = pInfo[playerid][pBiz];
	        switch(listitem)
	        {
	            case 0:
	            {
				    if(BizInfo[i][bType] == 2 || BizInfo[i][bType] == 7) SendClientMessage(playerid, COLOR_GREY, "Данное улучшение недоступно для Вашего типа бизнеса!");
					else
					{
						if(BizInfo[i][bHeal]) return SendClientMessage(playerid, COLOR_GREY, "У вас уже имеется аптечка в бизнесе!");
						if(GetCash(playerid) < 30000) return SendClientMessage(playerid, COLOR_GREY, NoMoney);
						TransferMoney(playerid, -1, 30000);
						BizInfo[i][bHeal] = 1;
						MysqlUpdateBizInt(i, "bHeal", BizInfo[i][bHeal]);
						SendClientMessage(playerid, COLOR_LIME, "Теперь в Вашем бизнесе имеется аптечка");
					}
	            }
	            case 1:
	            {
				    if(BizInfo[i][bType] == 2 || BizInfo[i][bType] == 7) SendClientMessage(playerid, COLOR_GREY, "Данное улучшение недоступно для Вашего типа бизнеса!");
					else
					{
						if(BizInfo[i][bSound]) return SendClientMessage(playerid, COLOR_GREY, "У вас уже имеются звуковые эффекты при входе!");
						if(GetCash(playerid) < 150000) return SendClientMessage(playerid, COLOR_GREY, NoMoney);
						TransferMoney(playerid, -1, 150000);
						BizInfo[i][bSound] = 1;
						MysqlUpdateBizInt(i, "bSound", BizInfo[i][bSound]);
						SendClientMessage(playerid, COLOR_LIME, "Теперь в Вашем бизнесе имеются звуковые эффекты при входе");
					}
	            }
	            case 2:
	            {
	            	stringer[0] = EOS;
			        format(stringer, 500, "{FFFFFF}Медицинское обслуживание - добавляет в Ваш бизнес возможность вылечиться с помощью команды {EAD86A}/bheal\n{FFFFFF}Стоимость лечения: {63BD4E}150$\n\n");
					format(stringer, 500, "%s{FFFFFF}Звуковые эффекты при входе - добавляет в Ваш бизнес дополнительные звуковые эффекты при входе в него", stringer);
					ShowPlayerDialog(playerid, dBizUluch+1, 0, "{FFCC00}Помощь", stringer, "Закрыть", "Назад");
				}
	        }
	    }
	case dBizUluch+1:
		{
		    new i = pInfo[playerid][pBiz];
		    stringer[0] = EOS;
		    format(stringer, 500, "%s\n%s\n{FFFFFF}Помощь",
		    (BizInfo[i][bHeal]) ? ("{FFFFFF}Медицинское обслуживание\t| {63BD4E}Куплено\n") : ("{FFFFFF}Медицинское обслуживание\t| {F04245}Не имеется (30.000$)"),
		    (BizInfo[i][bSound]) ? ("{FFFFFF}Звуковые эффекты при входе\t| {63BD4E}Куплено\n") : ("{FFFFFF}Звуковые эффекты при входе\t| {F04245}Не имеется (150.000$)"));
			ShowPlayerDialog(playerid, dBizUluch, DIALOG_STYLE_LIST, "{FFCC00}Улучшения бизнеса", stringer, "Выбрать", "Назад");
		}
	case dHeal+15:
		{
		    if(!response) return cmd_bpanel(playerid);
		    new idx = pInfo[playerid][pBiz];
		    new prod = strval(inputtext);
		    new price = prod;
		    new string[128];
		    if(BizInfo[idx][bType] == 1)
		    {
		        if(prod < 0 || prod > 5000-BizInfo[idx][bProduct]) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете хранить больше 5 тыс. ед. товара");
		        if(GetCash(playerid) < price)
				{
			        format(string, sizeof(string), "Вам нужно %d$ для того чтобы заказать %d ед. товара", price, prod);
					SendClientMessage(playerid, COLOR_GREY, string);
					return 1;
				}
				SetPVarInt(playerid, "orderprod", prod);
				format(string, sizeof(string), "{FFFFFF}Вы действительно хотите заказать %d ед. товара за %d$?", prod, price);
				ShowPlayerDialog(playerid, dHeal+18, 0, " ", string, "Да", "Нет");
		    }
		    if(BizInfo[idx][bType] == 2)
		    {
		        if(prod < 0 || prod > 20000-BizInfo[idx][bProduct]) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете хранить больше 20000 л. бензина");
		        if(GetCash(playerid) < price)
				{
			        format(string, sizeof(string), "Вам нужно %d$ для того чтобы заказать %d л. бензина", price, prod);
					SendClientMessage(playerid, COLOR_GREY, string);
					return 1;
				}
				SetPVarInt(playerid, "orderprod", prod);
				format(string, sizeof(string), "{FFFFFF}Вы действительно хотите заказать %d л. бензина за %d$?", prod, price);
				ShowPlayerDialog(playerid, dHeal+18, 0, " ", string, "Да", "Нет");
		    }
		    if(BizInfo[idx][bType] == 3)
		    {
		        if(prod < 0 || prod > 3000-BizInfo[idx][bProduct]) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете хранить больше 3 тыс. ед. товара");
		        if(GetCash(playerid) < price)
				{
			        format(string, sizeof(string), "Вам нужно %d$ для того чтобы заказать %d ед. товара", price, prod);
					SendClientMessage(playerid, COLOR_GREY, string);
					return 1;
				}
				SetPVarInt(playerid, "orderprod", prod);
				format(string, sizeof(string), "{FFFFFF}Вы действительно хотите заказать %d ед. товара за %d$?", prod, price);
				ShowPlayerDialog(playerid, dHeal+18, 0, " ", string, "Да", "Нет");
		    }
		    if(BizInfo[idx][bType] == 4 || BizInfo[idx][bType] == 5 || BizInfo[idx][bType] == 10)
		    {
		        if(prod < 0 || prod > 7000-BizInfo[idx][bProduct]) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете хранить больше 7 тыс. ед. товара");
		        if(GetCash(playerid) < price)
				{
			        format(string, sizeof(string), "Вам нужно %d$ для того чтобы заказать %d ед. товара", price, prod);
					SendClientMessage(playerid, COLOR_GREY, string);
					return 1;
				}
				SetPVarInt(playerid, "orderprod", prod);
				format(string, sizeof(string), "{FFFFFF}Вы действительно хотите заказать %d ед. товара за %d$?", prod, price);
				ShowPlayerDialog(playerid, dHeal+18, 0, " ", string, "Да", "Нет");
		    }
		    if(BizInfo[idx][bType] == 6)
		    {
		        if(prod < 0 || prod > 20000-BizInfo[idx][bProduct]) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете хранить больше 20 тыс. ед. товара");
		        if(GetCash(playerid) < price)
				{
			        format(string, sizeof(string), "Вам нужно %d$ для того чтобы заказать %d ед. товара", price, prod);
					SendClientMessage(playerid, COLOR_GREY, string);
					return 1;
				}
				SetPVarInt(playerid, "orderprod", prod);
				format(string, sizeof(string), "{FFFFFF}Вы действительно хотите заказать %d ед. товара за %d$?", prod, price);
				ShowPlayerDialog(playerid, dHeal+18, 0, " ", string, "Да", "Нет");
			}
			if(BizInfo[idx][bType] == 7)
			{
			    if(prod < 0 || prod > 100000-BizInfo[idx][bProduct]) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете хранить больше 100 тыс. ед. товара");
			    if(GetCash(playerid) < price)
				{
			        format(string, sizeof(string), "Вам нужно %d$ для того чтобы заказать %d ед. товара", price, prod);
					SendClientMessage(playerid, COLOR_GREY, string);
					return 1;
				}
				SetPVarInt(playerid, "orderprod", prod);
				format(string, sizeof(string), "{FFFFFF}Вы действительно хотите заказать %d ед. товара за %d$?", prod, price);
				ShowPlayerDialog(playerid, dHeal+18, 0, " ", string, "Да", "Нет");
			}
			if(BizInfo[idx][bType] == 8)
			{
			    if(prod < 0 || prod > 50000-BizInfo[idx][bProduct]) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете хранить больше 50 тыс. ед. товара");
			    if(GetCash(playerid) < price)
				{
			        format(string, sizeof(string), "Вам нужно %d$ для того чтобы заказать %d ед. товара", price, prod);
					SendClientMessage(playerid, COLOR_GREY, string);
					return 1;
				}
				SetPVarInt(playerid, "orderprod", prod);
				format(string, sizeof(string), "{FFFFFF}Вы действительно хотите заказать %d ед. товара за %d$?", prod, price);
				ShowPlayerDialog(playerid, dHeal+18, 0, " ", string, "Да", "Нет");
			}
			if(BizInfo[idx][bType] == 9)
			{
			    if(prod < 0 || prod > 100000-BizInfo[idx][bProduct]) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете хранить больше 100 тыс. ед. товара");
			    if(GetCash(playerid) < price)
				{
			        format(string, sizeof(string), "Вам нужно %d$ для того чтобы заказать %d ед. товара", price, prod);
					SendClientMessage(playerid, COLOR_GREY, string);
					return 1;
				}
				SetPVarInt(playerid, "orderprod", prod);
				format(string, sizeof(string), "{FFFFFF}Вы действительно хотите заказать %d ед. товара за %d$?", prod, price);
				ShowPlayerDialog(playerid, dHeal+18, 0, " ", string, "Да", "Нет");
			}
		}
	case dHeal+18:
	    {
	        if(!response) return cmd_bpanel(playerid);
	        new idx = pInfo[playerid][pBiz];
	        new prod = GetPVarInt(playerid, "orderprod");
	        new price = prod;
	        TransferMoney(playerid, -1, price);
			BizInfo[idx][bProduct] += prod;
			MysqlUpdateBizInt(idx, "product", BizInfo[idx][bProduct]);
			SendClientMessage(playerid, COLOR_GREEN, "Товар был доставлен в ваш бизнес");
			SendClientMessage(playerid, COLOR_GREY, "- Временная возможность. Скоро появятся развозчики товаров");
	    }
	case dHeal+2:
		{
			if(!response) return 1;
			new price, i = pInfo[playerid][pBiz];
			if(sscanf(inputtext, "i", price)) return ShowPlayerDialog(playerid, dHeal+2, 1, "{FFCC00}Цена", "{ffffff}Введите цену за товар:", "Принять", "Отмена");
			if(BizInfo[i][bType] == 2)
			{
				if(!(25 <= price <= 100)) return SendClientMessage(playerid, COLOR_GREY, "Неверная цена. Возможно от 25$ до 100$");
			}
			else
			{
			    if(!(1 <= price <= 500)) return SendClientMessage(playerid, COLOR_GREY, "Неверная цена. Возможно от 1$ до 500$");
			}
			BizInfo[i][bTill] = price;
			MysqlUpdateBizInt(i, "till", price);
			SendClientMessage(playerid, COLOR_BLUE, "Новая цена товара установлена");
			UpdateBizStats(i);
			return 1;
		}
		case dHeal+4:
		{
			if(!response) return 1;
			new price, i = pInfo[playerid][pBiz];
			if(sscanf(inputtext, "i", price)) return ShowPlayerDialog(playerid, dHeal+4, 1, "{FFCC00}Цена", "{ffffff}Введите цену за вход:", "Принять", "Отмена");
			if(BizInfo[i][bType] == 9)
			{
				if(!(0 <= price <= 5000)) return SendClientMessage(playerid, COLOR_GREY, "Неверная цена. Возможно от 0$ до 5000$");
			}
			else
			{
			    if(!(0 <= price <= 1000)) return SendClientMessage(playerid, COLOR_GREY, "Неверная цена. Возможно от 0$ до 1000$");
			}
			BizInfo[i][bEnter] = price;
			MysqlUpdateBizInt(i, "penter", price);
			SendClientMessage(playerid, COLOR_BLUE, "Цена за вход успешно установлена");
			UpdateBizStats(i);
			return 1;
		}
	case 1374:
		{
			if(!response) return 1;
			new i = GetPVarInt(playerid, "UseBiz"), string[128];
			switch(listitem)
			{
			case 0:
				{
				    new price = gGunCosts[0];
					if(GetCash(playerid) < price) return SendClientMessage(playerid, COLOR_GREY, NoMoney);
					TransferMoney(playerid, -1, price);
					GiveBizMoney(i, price, price / 3);
					GivePlayerWeaponEx(playerid, 1, 1);
					format(string, sizeof(string), "Вы купили кастет за %d$", price);
					SendClientMessage(playerid, COLOR_BLUE, string);
					format(string, sizeof(string), "%s купил кастет", GetName(playerid));
					WriteLog("AmmoLog", string);
					GunShopList(playerid);
				}
			case 1:
				{
				    new price = gGunCosts[1];
					if(GetCash(playerid) < price) return SendClientMessage(playerid, COLOR_GREY, NoMoney);
					TransferMoney(playerid, -1, price);
					GiveBizMoney(i, price, price / 3);
					GivePlayerWeaponEx(playerid, 5, 1);
					format(string, sizeof(string), "Вы купили бейсбольную биту с за %d$", price);
					SendClientMessage(playerid, COLOR_BLUE, string);
					format(string, sizeof(string), "%s купил бейсбольную биту", GetName(playerid));
					WriteLog("AmmoLog", string);
					GunShopList(playerid);
				}
			case 2: ShowPlayerDialog(playerid, 1375, 1, "{FFCC00}Покупка оружия", "{FFFFFF}Укажите количество патрон для дробовика\nЦена одного патрона - 70$", "Купить", "Назад");
            case 3: ShowPlayerDialog(playerid, 1381, 1, "{FFCC00}Покупка оружия", "{FFFFFF}Укажите количество патрон для пистолета 9mm\nЦена одного патрона - 30$", "Купить", "Назад");
			case 4: ShowPlayerDialog(playerid, 1376, 1, "{FFCC00}Покупка оружия", "{FFFFFF}Укажите количество патрон для пустынного орла\nЦена одного патрона - 60$", "Купить", "Назад");
			case 5: ShowPlayerDialog(playerid, 1377, 1, "{FFCC00}Покупка оружия", "{FFFFFF}Укажите количество патрон для полуавтомата MP5\nЦена одного патрона - 40$", "Купить", "Назад");
            case 6: ShowPlayerDialog(playerid, 1382, 1, "{FFCC00}Покупка оружия", "{FFFFFF}Укажите количество патрон для пистолета-пулемёта UZI\nЦена одного патрона - 40$", "Купить", "Назад");
			case 7: ShowPlayerDialog(playerid, 1378, 1, "{FFCC00}Покупка оружия", "{FFFFFF}Укажите количество патрон для автомата AK47\nЦена одного патрона - 60$", "Купить", "Назад");
			case 8: ShowPlayerDialog(playerid, 1379, 1, "{FFCC00}Покупка оружия", "{FFFFFF}Укажите количество патрон для винтовки\nЦена одного патрона - 70$", "Купить", "Назад");
			case 9: ShowPlayerDialog(playerid, 1380, 1, "{FFCC00}Покупка оружия", "{FFFFFF}Укажите количество патрон для автомата M4\nЦена одного патрона - 60$", "Купить", "Назад");
			}
		}
	case 1375:
	    {
	        new i = GetPVarInt(playerid, "UseBiz");
			if(!response) return GunShopList(playerid);
			new ammo = strval(inputtext);
			new price = ammo * gGunCosts[2];
			if(!(1 <= ammo <= 100))
			{
			    SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Укажите значение патронов от 1 до 100");
    			ShowPlayerDialog(playerid, 1375, 1, "{FFCC00}Покупка оружия", "{FFFFFF}Укажите количество патрон для дробовика\nЦена одного патрона - 70$", "Купить", "Назад");
				return 1;
			}
	        if(GetCash(playerid) < price)
			{
				SendClientMessage(playerid, COLOR_GREY, NoMoney);
				ShowPlayerDialog(playerid, 1375, 1, "{FFCC00}Покупка оружия", "{FFFFFF}Укажите количество патрон для дробовика\nЦена одного патрона - 70$", "Купить", "Назад");
				return 1;
			}
			TransferMoney(playerid, -1, price);
			GiveBizMoney(i, price, price / 3);
			GivePlayerWeaponEx(playerid, 25, ammo);
			new string[128];
			format(string, sizeof(string), "Вы купили дробовик с %d патронами за %d$", ammo, price);
			SendClientMessage(playerid, COLOR_BLUE, string);
			format(string, sizeof(string), "%s купил дробовик (+%d патр.)", GetName(playerid), ammo);
			WriteLog("AmmoLog", string);
			GunShopList(playerid);
			return 1;
	    }
	case 1381:
	    {
	        new i = GetPVarInt(playerid, "UseBiz");
			if(!response) return GunShopList(playerid);
			new ammo = strval(inputtext);
			new price = ammo * gGunCosts[3];
			if(!(1 <= ammo <= 100))
			{
			    SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Укажите значение патронов от 1 до 100");
    			ShowPlayerDialog(playerid, 1381, 1, "{FFCC00}Покупка оружия", "{FFFFFF}Укажите количество патрон для пистолета 9mm\nЦена одного патрона - 30$", "Купить", "Назад");
				return 1;
			}
	        if(GetCash(playerid) < price)
			{
				SendClientMessage(playerid, COLOR_GREY, NoMoney);
				ShowPlayerDialog(playerid, 1381, 1, "{FFCC00}Покупка оружия", "{FFFFFF}Укажите количество патрон для пистолета 9mm\nЦена одного патрона - 30$", "Купить", "Назад");
				return 1;
			}
			TransferMoney(playerid, -1, price);
			GiveBizMoney(i, price, price / 3);
			GivePlayerWeaponEx(playerid, 22, ammo);
			new string[128];
			format(string, sizeof(string), "Вы купили пистолет 9mm с %d патронами за %d$", ammo, price);
			SendClientMessage(playerid, COLOR_BLUE, string);
			format(string, sizeof(string), "%s купил пистолет 9mm (+%d патр.)", GetName(playerid), ammo);
			WriteLog("AmmoLog", string);
			GunShopList(playerid);
			return 1;
	    }
	case 1376:
	    {
	        new i = GetPVarInt(playerid, "UseBiz");
			if(!response) return GunShopList(playerid);
			new ammo = strval(inputtext);
			new price = ammo * gGunCosts[4];
			if(!(1 <= ammo <= 100))
			{
			    SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Укажите значение патронов от 1 до 100");
    			ShowPlayerDialog(playerid, 1376, 1, "{FFCC00}Покупка оружия", "{FFFFFF}Укажите количество патрон для пустынного орла\nЦена одного патрона - 60$", "Купить", "Назад");
				return 1;
			}
	        if(GetCash(playerid) < price)
			{
				SendClientMessage(playerid, COLOR_GREY, NoMoney);
				ShowPlayerDialog(playerid, 1376, 1, "{FFCC00}Покупка оружия", "{FFFFFF}Укажите количество патрон для пустынного орла\nЦена одного патрона - 60$", "Купить", "Назад");
				return 1;
			}
			TransferMoney(playerid, -1, price);
			GiveBizMoney(i, price, price / 3);
			GivePlayerWeaponEx(playerid, 24, ammo);
			new string[128];
			format(string, sizeof(string), "Вы купили пустынный орел с %d патронами за %d$", ammo, price);
			SendClientMessage(playerid, COLOR_GRAD1, string);
			format(string, sizeof(string), "%s купил пустынный орёл (+%d патр.)", GetName(playerid), ammo);
			WriteLog("AmmoLog", string);
			GunShopList(playerid);
			return 1;
	    }
    case 1377:
	    {
	        new i = GetPVarInt(playerid, "UseBiz");
			if(!response) return GunShopList(playerid);
			new ammo = strval(inputtext);
			new price = ammo * gGunCosts[5];
			if(!(1 <= ammo <= 200))
			{
			    SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Укажите значение патронов от 1 до 200");
    			ShowPlayerDialog(playerid, 1377, 1, "{FFCC00}Покупка оружия", "{FFFFFF}Укажите количество патрон для полуавтомата MP5\nЦена одного патрона - 30$", "Купить", "Назад");
				return 1;
			}
	        if(GetCash(playerid) < price)
			{
				SendClientMessage(playerid, COLOR_GREY, NoMoney);
				ShowPlayerDialog(playerid, 1377, 1, "{FFCC00}Покупка оружия", "{FFFFFF}Укажите количество патрон для полуавтомата MP5\nЦена одного патрона - 30$", "Купить", "Назад");
				return 1;
			}
			TransferMoney(playerid, -1, price);
			GiveBizMoney(i, price, price / 3);
			GivePlayerWeaponEx(playerid, 29, ammo);
			new string[128];
			format(string, sizeof(string), "Вы купили полуавтомат МР5 с %d патронами за %d$", ammo, price);
			SendClientMessage(playerid, COLOR_GRAD1, string);
			format(string, sizeof(string), "%s купил полуавтомат МР5 (+%d патр.)", GetName(playerid), ammo);
			WriteLog("AmmoLog", string);
			GunShopList(playerid);
			return 1;
	    }
    case 1382:
	    {
	        new i = GetPVarInt(playerid, "UseBiz");
			if(!response) return GunShopList(playerid);
			new ammo = strval(inputtext);
			new price = ammo * gGunCosts[6];
			if(!(1 <= ammo <= 100))
			{
			    SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Укажите значение патронов от 1 до 100");
    			ShowPlayerDialog(playerid, 1382, 1, "{FFCC00}Покупка оружия", "{FFFFFF}Укажите количество патрон для пистолета-пулемёта UZI\nЦена одного патрона - 40$", "Купить", "Назад");
				return 1;
			}
	        if(GetCash(playerid) < price)
			{
				SendClientMessage(playerid, COLOR_GREY, NoMoney);
				ShowPlayerDialog(playerid, 1382, 1, "{FFCC00}Покупка оружия", "{FFFFFF}Укажите количество патрон для пистолета-пулемёта UZI\nЦена одного патрона - 40$", "Купить", "Назад");
				return 1;
			}
			TransferMoney(playerid, -1, price);
			GiveBizMoney(i, price, price / 3);
			GivePlayerWeaponEx(playerid, 28, ammo);
			new string[128];
			format(string, sizeof(string), "Вы купили пистолет-пулемёт UZI с %d патронами за %d$", ammo, price);
			SendClientMessage(playerid, COLOR_BLUE, string);
			format(string, sizeof(string), "%s купил пистолет-пулемёт UZI (+%d патр.)", GetName(playerid), ammo);
			WriteLog("AmmoLog", string);
			GunShopList(playerid);
			return 1;
	    }
    case 1378:
	    {
	        new i = GetPVarInt(playerid, "UseBiz");
			if(!response) return GunShopList(playerid);
			new ammo = strval(inputtext);
			new price = ammo * gGunCosts[7];
			if(!(1 <= ammo <= 100))
			{
			    SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Укажите значение патронов от 1 до 100");
    			ShowPlayerDialog(playerid, 1378, 1, "{FFCC00}Покупка оружия", "{FFFFFF}Укажите количество патрон для автомата AK47\nЦена одного патрона - 60$", "Купить", "Назад");
				return 1;
			}
	        if(GetCash(playerid) < price)
			{
				SendClientMessage(playerid, COLOR_GREY, NoMoney);
				ShowPlayerDialog(playerid, 1378, 1, "{FFCC00}Покупка оружия", "{FFFFFF}Укажите количество патрон для автомата AK47\nЦена одного патрона - 60$", "Купить", "Назад");
				return 1;
			}
			TransferMoney(playerid, -1, price);
			GiveBizMoney(i, price, price / 3);
			GivePlayerWeaponEx(playerid, 30, ammo);
			new string[128];
			format(string, sizeof(string), "Вы купили автомат АК47 с %d патронами за %d$", ammo, price);
			SendClientMessage(playerid, COLOR_GRAD1, string);
			format(string, sizeof(string), "%s купил автомат АК47 (+%d патр.)", GetName(playerid), ammo);
			WriteLog("AmmoLog", string);
			GunShopList(playerid);
			return 1;
	    }
    case 1379:
	    {
	        new i = GetPVarInt(playerid, "UseBiz");
			if(!response) return GunShopList(playerid);
			new ammo = strval(inputtext);
			new price = ammo * gGunCosts[8];
			if(!(1 <= ammo <= 100))
			{
			    SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Укажите значение патронов от 1 до 100");
    			ShowPlayerDialog(playerid, 1379, 1, "{FFCC00}Покупка оружия", "{FFFFFF}Укажите количество патрон для винтовки\nЦена одного патрона - 70$", "Купить", "Назад");
				return 1;
			}
	        if(GetCash(playerid) < price)
			{
				SendClientMessage(playerid, COLOR_GREY, NoMoney);
				ShowPlayerDialog(playerid, 1379, 1, "{FFCC00}Покупка оружия", "{FFFFFF}Укажите количество патрон для винтовки\nЦена одного патрона - 70$", "Купить", "Назад");
				return 1;
			}
			TransferMoney(playerid, -1, price);
			GiveBizMoney(i, price, price / 3);
			GivePlayerWeaponEx(playerid, 33, ammo);
			new string[128];
			format(string, sizeof(string), "Вы купили винтовку с %d патронами за %d$", ammo, price);
			SendClientMessage(playerid, COLOR_GRAD1, string);
			format(string, sizeof(string), "%s купил винтовку (+%d патр.)", GetName(playerid), ammo);
			WriteLog("AmmoLog", string);
			GunShopList(playerid);
			return 1;
	    }
    case 1380:
	    {
	        new i = GetPVarInt(playerid, "UseBiz");
			if(!response) return GunShopList(playerid);
			new ammo = strval(inputtext);
			new price = ammo * gGunCosts[9];
			if(!(1 <= ammo <= 100))
			{
			    SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Укажите значение патронов от 1 до 100");
    			ShowPlayerDialog(playerid, 1380, 1, "{FFCC00}Покупка оружия", "{FFFFFF}Укажите количество патрон для автомата M4\nЦена одного патрона - 60$", "Купить", "Назад");
				return 1;
			}
	        if(GetCash(playerid) < price)
			{
				SendClientMessage(playerid, COLOR_GREY, NoMoney);
				ShowPlayerDialog(playerid, 1380, 1, "{FFCC00}Покупка оружия", "{FFFFFF}Укажите количество патрон для автомата M4\nЦена одного патрона - 60$", "Купить", "Назад");
				return 1;
			}
			TransferMoney(playerid, -1, price);
			GiveBizMoney(i, price, price / 3);
			GivePlayerWeaponEx(playerid, 31, ammo);
			new string[128];
			format(string, sizeof(string), "Вы купили автомат M4 с %d патронами за %d$", ammo, price);
			SendClientMessage(playerid, COLOR_GRAD1, string);
			format(string, sizeof(string), "%s купил автомат M4 (+%d патр.)", GetName(playerid), ammo);
			WriteLog("AmmoLog", string);
			GunShopList(playerid);
			return 1;
	    }
	case dHeal+5:
		{
			if(!response) return 1;
			new i = GetPVarInt(playerid, "UseBiz");
			new price = gShopCosts[listitem];
			if(GetCash(playerid) < price) return SendClientMessage(playerid, COLOR_GREY, NoMoney);
			if(listitem > 1)
			{
			    switch(listitem)
			    {
				case 2:
					{
						SendClientMessage(playerid, COLOR_BLUE, "Вы купили фотоаппарат");
						GivePlayerWeaponEx(playerid, 43, 30);
					}
				case 3:
					{
						if(!pInfo[playerid][pHouse]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы не владеете домом!");
						new p = pInfo[playerid][pHouse];
						HouseInfo[p][hHeal] += 10;
						MysqlUpdateHouseInt(p, "hHeal", HouseInfo[p][hHeal]);
						SendClientMessage(playerid, COLOR_BLUE, "Вы купили 10 аптечек для вашего дома (/hheal)");
					}
				case 4:
					{
	                    if(HaveWeapon(playerid, 14)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас уже есть цветы!");
						SendClientMessage(playerid, COLOR_BLUE, "Вы купили цветы");
						GivePlayerWeaponEx(playerid, 14, 1);
					}
				case 5:
					{
					    if(pInfo[playerid][pWatch] == 1) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас уже есть часы!");
						SendClientMessage(playerid, COLOR_BLUE, "Вы купили часы (/time)");
						pInfo[playerid][pWatch] = 1;
						MysqlUpdatePlayerInt(playerid, "watch", pInfo[playerid][pWatch]);
					}
				case 6:
					{
					    if(pInfo[playerid][pMask] >= 2 && !pInfo[playerid][pImprove][2]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы можете носить не более 2 масок!");
					    if(pInfo[playerid][pMask] >= 4 && pInfo[playerid][pImprove][2]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы можете носить не более 4 масок!");
						pInfo[playerid][pMask]++;
						MysqlUpdatePlayerInt(playerid, "mask", pInfo[playerid][pMask]);
						SendClientMessage(playerid, COLOR_BLUE, "Вы купили маску (/mask)");
					}
				case 7:
					{
					    if(pInfo[playerid][pCiggare] >= 2 && !pInfo[playerid][pImprove][2]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы можете носить не более 2 сигарет!");
					    if(pInfo[playerid][pCiggare] >= 4 && pInfo[playerid][pImprove][2]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы можете носить не более 4 сигарет!");
						pInfo[playerid][pCiggare]++;
						MysqlUpdatePlayerInt(playerid, "ciggare", pInfo[playerid][pCiggare]);
						SendClientMessage(playerid, COLOR_BLUE, "Вы купили сигарету (/smoke)");
					}
				case 8:
					{
					    if(pInfo[playerid][pSprunk] >= 2 && !pInfo[playerid][pImprove][2]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы можете носить не более 2 банок!");
					    if(pInfo[playerid][pSprunk] >= 4 && pInfo[playerid][pImprove][2]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы можете носить не более 4 банок!");
						pInfo[playerid][pSprunk]++;
						MysqlUpdatePlayerInt(playerid, "sprunk", pInfo[playerid][pSprunk]);
						SendClientMessage(playerid, COLOR_BLUE, "Вы купили банку газировки (/sprunk)");
					}
				case 9:
					{
					    if(pInfo[playerid][pAptechka] >= 2 && !pInfo[playerid][pImprove][2]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы можете носить не более 2 аптечек!");
					    if(pInfo[playerid][pAptechka] >= 4 && pInfo[playerid][pImprove][2]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы можете носить не более 4 аптечек!");
						pInfo[playerid][pAptechka]++;
						MysqlUpdatePlayerInt(playerid, "aptechka", pInfo[playerid][pAptechka]);
						SendClientMessage(playerid, COLOR_BLUE, "Вы купили аптечку (/healme)");
					}
				case 10:
					{
					    if(pInfo[playerid][pMusic] == 1) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас уже имеется плеер!");
						pInfo[playerid][pMusic] = 1;
						MysqlUpdatePlayerInt(playerid, "music", pInfo[playerid][pMusic]);
						SendClientMessage(playerid, COLOR_BLUE, "Вы купили MP3-плеер (/play)");
					}
			    }
			    TransferMoney(playerid, -1, price);
			    GiveBizMoney(i, price, gShopProd[listitem]);
			    MagazineList(playerid);
			}
			else
			{
			    switch(listitem)
			    {
			        case 0:
			        {
						if(pInfo[playerid][pPhoneNumber]) return SendClientMessage(playerid, COLOR_GREY, "У вас уже есть мобильный телефон!");
						new telephone = 1000000 + random(8999999);
						mysql_query_string[0] = EOS;
						format(mysql_query_string, 256, "SELECT name FROM "T_ACCOUNTS" WHERE phonenumber = %i;", telephone);
						mysql_tquery(dbHandle, mysql_query_string, "@MysqlCheckPhoneNumber", "dd", playerid, telephone);
			        }
			        case 1:
			        {
			            if(pInfo[playerid][pPhoneNumber] == 0) return SendClientMessage(playerid, COLOR_GREY, "У вас нет мобильного телефона!");
						ShowPlayerDialog(playerid, dBuySim, DIALOG_STYLE_INPUT, "{FFCC00}Покупка SIM-карты", "{FFFFFF}Введите новый шестизначный номер", "Купить", "Закрыть");
			        }
			    }
			}
		}
		case dHeal+7:
		{
			if(!response) return 1;
			new i = GetPVarInt(playerid, "UseBiz"), till = BizInfo[i][bTill], interiorid = GetPlayerInterior(playerid);
			if(pInfo[playerid][pHunger] >= 100) return SendClientMessage(playerid, COLOR_GREY, "Вы не голодны!");
		    new price = gEateryCosts[listitem];
			if(GetCash(playerid) < till * price) return SendClientMessage(playerid, COLOR_GREY, NoMoney);
			switch(listitem)
			{
			case 0:
				{
				    if(pInfo[playerid][pSex] == 1)
				    {
						if(interiorid == 5) MeAction(playerid, "съел маленькую пиццу");
						else if(interiorid == 10) MeAction(playerid, "съел бургер");
						else if(interiorid == 9) MeAction(playerid, "съел кусочки курицы");
					}
					else
					{
					    if(interiorid == 5) MeAction(playerid, "съела маленькую пиццу");
						else if(interiorid == 10) MeAction(playerid, "съела бургер");
						else if(interiorid == 9) MeAction(playerid, "съела кусочки курицы");
					}
					if(pInfo[playerid][pHunger]+10 > 100)
					{
						SetHunger(playerid, 100);
						SendClientMessage(playerid, COLOR_WHITE, "Вы больше не голодны!");
					}
					else GiveHunger(playerid, 10);
				}
			case 1:
				{
				    if(pInfo[playerid][pSex] == 1)
				    {
						if(interiorid == 5) MeAction(playerid, "съел среднюю пиццу");
						else if(interiorid == 10) MeAction(playerid, "съел большой бургер");
						else if(interiorid == 9) MeAction(playerid, "съел кусок куринной ножки");
					}
					else
					{
					    if(interiorid == 5) MeAction(playerid, "съела среднюю пиццу");
						else if(interiorid == 10) MeAction(playerid, "съела большой бургер");
						else if(interiorid == 9) MeAction(playerid, "съела кусок куринной ножки");
					}
					if(pInfo[playerid][pHunger]+20 > 100)
					{
						SetHunger(playerid, 100);
						SendClientMessage(playerid, COLOR_WHITE, "Вы больше не голодны!");
					}
					else GiveHunger(playerid, 20);
				}
			case 2:
				{
				    if(pInfo[playerid][pSex] == 1)
				    {
						if(interiorid == 5) MeAction(playerid, "съел большую пиццу");
						else if(interiorid == 10) MeAction(playerid, "съел гамбургер");
						else if(interiorid == 9) MeAction(playerid, "съел куринную ножку");
					}
					else
					{
					    if(interiorid == 5) MeAction(playerid, "съела большую пиццу");
						else if(interiorid == 10) MeAction(playerid, "съела гамбургер");
						else if(interiorid == 9) MeAction(playerid, "съела куринную ножку");
					}
					if(pInfo[playerid][pHunger]+40 > 100)
					{
						SetHunger(playerid, 100);
						SendClientMessage(playerid, COLOR_WHITE, "Вы больше не голодны!");
					}
					else GiveHunger(playerid, 40);
				}
			case 3:
				{
				    if(pInfo[playerid][pSex] == 1)
				    {
						if(interiorid == 5) MeAction(playerid, "съел пиццу в коробке");
						else if(interiorid == 10) MeAction(playerid, "съел гамбургер в упаковке");
						else if(interiorid == 9) MeAction(playerid, "съел курицу в коробке");
					}
					else
					{
					    if(interiorid == 5) MeAction(playerid, "съела пиццу в коробке");
						else if(interiorid == 10) MeAction(playerid, "съела гамбургер в упаковке");
						else if(interiorid == 9) MeAction(playerid, "съела курицу в коробке");
					}
					if(pInfo[playerid][pHunger]+20 > 100)
					{
						SetHunger(playerid, 100);
						SendClientMessage(playerid, COLOR_WHITE, "Вы больше не голодны!");
					}
					else GiveHunger(playerid, 20);
				}
			}
			TransferMoney(playerid, -1, till * price);
			GiveBizMoney(i, till * price, gEateryProd[listitem]);
			PlayerPlaySound(playerid, 32200, 0.0, 0.0, 0.0);
			ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0,1);
			EatList(playerid, i);
		}
	case dHeal+8:
		{
			if(!response) return 1;
			new i = GetPVarInt(playerid, "UseBiz"), till = BizInfo[i][bTill];
			if(pInfo[playerid][pHunger] >= 100) return SendClientMessage(playerid, COLOR_GREY, "Вы не хотите пить!");
			new price = gBarCost[listitem];
			if(GetCash(playerid) < till * price) return SendClientMessage(playerid, COLOR_GREY, NoMoney);
			switch(listitem)
			{
			case 0:
				{
					if(pInfo[playerid][pSex] == 1) MeAction(playerid, "выпил воды");
					else MeAction(playerid, "выпила воды");
					if(pInfo[playerid][pHunger]+10 > 100)
					{
						SetHunger(playerid, 100);
						SendClientMessage(playerid, COLOR_WHITE, "Вы больше не хотите пить!");
					}
					else GiveHunger(playerid, 10);
				}
			case 1:
				{
					if(pInfo[playerid][pSex] == 1) MeAction(playerid, "выпил соды");
					else MeAction(playerid, "выпила соды");
					if(pInfo[playerid][pHunger]+10 > 100)
					{
						SetHunger(playerid, 100);
						SendClientMessage(playerid, COLOR_WHITE, "Вы больше не хотите пить!");
					}
					else GiveHunger(playerid, 10);
				}
			case 2:
				{
					if(pInfo[playerid][pSex] == 1) MeAction(playerid, "выпил кока-колы");
					else MeAction(playerid, "выпила кока-колы");
					if(pInfo[playerid][pHunger]+10 > 100)
					{
						SetHunger(playerid, 100);
						SendClientMessage(playerid, COLOR_WHITE, "Вы больше не хотите пить!");
					}
					else GiveHunger(playerid, 10);
				}
			case 3:
				{
					if(pInfo[playerid][pSex] == 1) MeAction(playerid, "выпил пиво");
					else MeAction(playerid, "выпила пиво");
					if(pInfo[playerid][pHunger]+20 > 100)
					{
						SetHunger(playerid, 100);
						SendClientMessage(playerid, COLOR_WHITE, "Вы больше не хотите пить!");
					}
					else GiveHunger(playerid, 20);
					if(GetPlayerDrunkLevel(playerid) < 20000) SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+2000);
				}
			case 4:
				{
					if(pInfo[playerid][pSex] == 1) MeAction(playerid, "выпил водки");
					else MeAction(playerid, "выпила водки");
					if(pInfo[playerid][pHunger]+30 > 100)
					{
						SetHunger(playerid, 100);
						SendClientMessage(playerid, COLOR_WHITE, "Вы больше не хотите пить!");
					}
					else GiveHunger(playerid, 30);
					if(GetPlayerDrunkLevel(playerid) < 20000) SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+5000);
				}
			case 5:
				{
					if(pInfo[playerid][pSex] == 1) MeAction(playerid, "выпил коньяк");
					else MeAction(playerid, "выпила коньяк");
					if(pInfo[playerid][pHunger]+30 > 100)
					{
						SetHunger(playerid, 100);
						SendClientMessage(playerid, COLOR_WHITE, "Вы больше не хотите пить!");
					}
					else GiveHunger(playerid, 30);
					if(GetPlayerDrunkLevel(playerid) < 20000) SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+5000);
				}
			case 6:
				{
				    if(pInfo[playerid][pSex] == 1) MeAction(playerid, "выпил абсент");
				    else MeAction(playerid, "выпила абсент");
					if(pInfo[playerid][pHunger]+30 > 100)
					{
						SetHunger(playerid, 100);
						SendClientMessage(playerid, COLOR_WHITE, "Вы больше не хотите пить!");
					}
					else GiveHunger(playerid, 30);
					if(GetPlayerDrunkLevel(playerid) < 20000) SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+5000);
				}
			}
			TransferMoney(playerid, -1, till * price);
			GiveBizMoney(i, till * price, gBarProd[listitem]);
			ApplyAnimation(playerid, "BAR", "dnk_stndF_loop", 4.1, 0, 0, 0, 0, 0, 1);
			if(GetPlayerDrunkLevel(playerid) > 20000) SetPlayerDrunkLevel(playerid, 20000);
			BarList(playerid, i);
		}
	case dHeal+10:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
				    if(pInfo[playerid][pJob]) return SendClientMessage(playerid, COLOR_GREY, "Сначала увольтесь с прежней работы!");
					else if(pInfo[playerid][pLevel] < 2) return SendClientMessage(playerid, COLOR_GREY, "Работа доступна со 2-го уровня!");
					pInfo[playerid][pJob] = JOB_BUS;
					MysqlUpdatePlayerInt(playerid, "job", pInfo[playerid][pJob]);
					SendClientMessage(playerid, COLOR_YELLOW, "Поздравляем");
					SendClientMessage(playerid, COLOR_WHITE, "Вы были приняты на работу водитель автобуса");
					SendClientMessage(playerid, COLOR_WHITE, "Помощь по командам: /menu - Команды сервера");
				}
				case 1:
				{
					if(pInfo[playerid][pJob]) return SendClientMessage(playerid, COLOR_GREY, "Сначала увольтесь с прежней работы!");
					else if(pInfo[playerid][pLevel] < 2) return SendClientMessage(playerid, COLOR_GREY, "Работа доступна со 2-го уровня!");
					pInfo[playerid][pJob] = JOB_TAXI;
					MysqlUpdatePlayerInt(playerid, "job", pInfo[playerid][pJob]);
					SendClientMessage(playerid, COLOR_YELLOW, "Поздравляем");
					SendClientMessage(playerid, COLOR_WHITE, "Вы были приняты на работу водитель такси");
					SendClientMessage(playerid, COLOR_WHITE, "Помощь по командам: /menu - Команды сервера");
				}
				case 2:
				{
					if(pInfo[playerid][pJob]) return SendClientMessage(playerid, COLOR_GREY, "Сначала увольтесь с прежней работы!");
					else if(pInfo[playerid][pLevel] < 3) return SendClientMessage(playerid, COLOR_GREY, "Работа доступна с 3-го уровня!");
					pInfo[playerid][pJob] = JOB_MECHANIC;
					MysqlUpdatePlayerInt(playerid, "job", pInfo[playerid][pJob]);
					SendClientMessage(playerid, COLOR_YELLOW, "Поздравляем");
					SendClientMessage(playerid, COLOR_WHITE, "Вы были приняты на работу автомеханика");
					SendClientMessage(playerid, COLOR_WHITE, "Помощь по командам: /menu - Команды сервера");
				}
				case 3:
				{
					if(pInfo[playerid][pJob]) return SendClientMessage(playerid, COLOR_GREY, "Сначала увольтесь с прежней работы!");
					else if(pInfo[playerid][pLevel] < 4) return SendClientMessage(playerid, COLOR_GREY, "Работа доступна с 4-го уровня!");
					pInfo[playerid][pJob] = JOB_TRUCKER;
					MysqlUpdatePlayerInt(playerid, "job", pInfo[playerid][pJob]);
					SendClientMessage(playerid, COLOR_YELLOW, "Поздравляем");
					SendClientMessage(playerid, COLOR_WHITE, "Вы были приняты на работу дальнобойщика");
					SendClientMessage(playerid, COLOR_WHITE, "Помощь по командам: /menu - Команды сервера");
				}
				case 4:
				{
			        if(!pInfo[playerid][pJob]) return SendClientMessage(playerid, COLOR_GREY, "Вы нигде не работаете!");
					pInfo[playerid][pJob] = JOB_NONE;
					MysqlUpdatePlayerInt(playerid, "job", pInfo[playerid][pJob]);
					SendClientMessage(playerid, COLOR_BLUE, "Вы уволились с работы");
			    }
			}
		}
	case dHeal+11:
		{
			new targetid = GetPVarInt(playerid, "PlayerMarriage");
			if(response)
			{
			    new string[128];
				format(string, sizeof(string), "%s и %s вступили в брак", GetName(targetid), GetName(playerid));
				SendClientMessageToAll(COLOR_PURPLE, string);
				strmid(pInfo[playerid][pWhoMarried], GetName(targetid), 0, strlen(GetName(targetid)), MAX_PLAYER_NAME);
				strmid(pInfo[targetid][pWhoMarried], GetName(playerid), 0, strlen(GetName(playerid)), MAX_PLAYER_NAME);
				pInfo[playerid][pMarried] = pInfo[targetid][pMarried] = 1;
				SendMes(playerid, COLOR_YELLOW, "Вы приняли предложение связать судьбу с %s", GetName(targetid));
				SendMes(targetid, COLOR_GREEN, "%s принял%s предложение связать судьбу с вами", GetName(playerid), (pInfo[playerid][pSex]==1)?(""):("а"));
			}
			else
			{
				SendMes(targetid, COLOR_RED, "%s отклонил%s предложение связать судьбу с вами", GetName(playerid), (pInfo[playerid][pSex]==1)?(""):("а"));

			}
			DeletePVar(playerid, "PlayerMarriage");
		}
	case dHeal+12:
		{
			new targetid = GetPVarInt(playerid, "PlayerMarriage");
			if(response)
			{
				strmid(pInfo[playerid][pWhoMarried], "None", 0, strlen("None"), MAX_PLAYER_NAME);
				strmid(pInfo[targetid][pWhoMarried], "None", 0, strlen("None"), MAX_PLAYER_NAME);
				pInfo[playerid][pMarried] = pInfo[targetid][pMarried] = 0;
				SendMes(playerid, COLOR_YELLOW, "Вы приняли предложение развестись %s", GetName(targetid));
				SendMes(targetid, COLOR_GREEN, "%s принял%s предложение развестись с вами", GetName(playerid), (pInfo[playerid][pSex]==1)?(""):("а"));
			}
			else
			{
				SendMes(targetid, COLOR_RED, "%s отклонил%s предложение развестись с вами", GetName(playerid), (pInfo[playerid][pSex]==1)?(""):("а"));
			}
			DeletePVar(playerid, "PlayerMarriage");
		}
	case dHeal+13:
		{
			if(!response) return ShowPlayerDialog(playerid, dATM+9, DIALOG_STYLE_LIST, "{FFCC00}Недвижимость", "{63BD4E}Дом\n{FFFFFF}- Оплата квартплаты\n{FF9900}Бизнес\n{FFFFFF}- Оплата аренды\n{FFFFFF}- Вывод денег со счёта", "Выбрать", "Отмена");
			new odays, string[128], b = pInfo[playerid][pBiz];
			if(sscanf(inputtext, "i", odays))
			{
				format(string, sizeof(string), "{FFFFFF}Введите количество дней на которое\nжелаете оплатить аренду бизнеса\n\nТекущий счет бизнеса: {FF9900}%d", BizInfo[b][bDays]);
				return ShowPlayerDialog(playerid, dHeal+13, 1, "{FFCC00}Оплата аренды", string, "Принять", "Назад");
			}
			if(!(1 <= odays <= 30))
			{
				format(string, sizeof(string), "{FFFFFF}Введите количество дней на которое\nжелаете оплатить аренду бизнеса\n\nТекущий счет бизнеса: {FF9900}%d", BizInfo[b][bDays]);
				return ShowPlayerDialog(playerid, dHeal+13, 1, "{FFCC00}Оплата аренды", string, "Принять", "Назад");
			}
			new oplata = (BizInfo[b][bTill]*10) * odays;
			if(pInfo[playerid][pBank] < oplata)
			{
				SendClientMessage(playerid, COLOR_GREY, "На вашем счету в банке не хватает денег!");
				format(string, sizeof(string), "{FFFFFF}Введите количество дней на которое\nжелаете оплатить аренду бизнеса\n\nТекущий счет бизнеса: {FF9900}%d", BizInfo[b][bDays]);
				return ShowPlayerDialog(playerid, dHeal+13, 1, "{FFCC00}Оплата аренды", string, "Принять", "Назад");
			}
			if(BizInfo[b][bDays]+odays > 30) return SendClientMessage(playerid, COLOR_GREY, "От 1 до 30 дней");
			pInfo[playerid][pBank] -= oplata;
			BizInfo[b][bDays] += odays;
			MysqlUpdateBizInt(b, "bDays", BizInfo[b][bDays]);
			SendClientMessage(playerid, COLOR_BLUE, "Вы успешно продлили аренду бизнеса");
		}
 	case dHeal+16:
		{
			if(!response) return ShowPlayerDialog(playerid, dATM+9, DIALOG_STYLE_LIST, "{FFCC00}Недвижимость", "{63BD4E}Дом\n{FFFFFF}- Оплата квартплаты\n{FF9900}Бизнес\n{FFFFFF}- Оплата аренды\n{FFFFFF}- Вывод денег со счёта", "Выбрать", "Отмена");
			new price, string[128], b = pInfo[playerid][pBiz];
			if(sscanf(inputtext, "i", price))
			{
				format(string, sizeof(string), "{FFFFFF}Введите сумму, которую хотите получить\n\nТекущий счет бизнеса: {63BD4E}%d$", BizInfo[b][bMoney]);
				return ShowPlayerDialog(playerid, dHeal+16, 1, "{FFCC00}Вывод денег со счёта", string, "Принять", "Назад");
			}
			if(price < 1)
			{
				format(string, sizeof(string), "{FFFFFF}Введите сумму, которую хотите получить\n\nТекущий счет бизнеса: {63BD4E}%d$", BizInfo[b][bMoney]);
				return ShowPlayerDialog(playerid, dHeal+16, 1, "{FFCC00}Вывод денег со счёта", string, "Принять", "Назад");
			}
			if(BizInfo[b][bMoney] < price)
			{
				SendClientMessage(playerid, COLOR_GREY, "На вашем счету в бизнесе не хватает денег!");
				format(string, sizeof(string), "{FFFFFF}Введите сумму, которую хотите получить\n\nТекущий счет бизнеса: {63BD4E}%d$", BizInfo[b][bMoney]);
				return ShowPlayerDialog(playerid, dHeal+16, 1, "{FFCC00}Вывод денег со счёта", string, "Принять", "Назад");
			}
			BizInfo[b][bMoney] -= price;
			TransferMoney(-1, playerid, price);
			MysqlUpdateBizInt(b, "money", BizInfo[b][bMoney]);
			SendMes(playerid, COLOR_BLUE, "Вы вывели со счета бизнеса: %i$. На счету бизнеса: %i$", price, BizInfo[b][bMoney]);
		}
	case dATM+1:
		{
			if(!response) return ATMList(playerid);
			new price, string[150];
			if(sscanf(inputtext, "i", price))
			{
				format(string, sizeof(string), "{FFFFFF}Введите сумму пополнения\n\nКомиссия за операцию: {3399FF}0%%\n\n{FFFFFF}Текущее состояние счёта: {63BD4E}%d$", pInfo[playerid][pPhoneBalance]);
				return ShowPlayerDialog(playerid, dATM+1, 1, "{FFCC00}Пополнение счета телефона", string, "Принять", "Назад");
			}
			if(price < 1)
			{
				format(string, sizeof(string), "{FFFFFF}Введите сумму пополнения\n\nКомиссия за операцию: {3399FF}0%%\n\n{FFFFFF}Текущее состояние счёта: {63BD4E}%d$", pInfo[playerid][pPhoneBalance]);
				return ShowPlayerDialog(playerid, dATM+1, 1, "{FFCC00}Пополнение счета телефона", string, "Принять", "Назад");
			}
			if(GetCash(playerid) < price)
			{
			    SendClientMessage(playerid, COLOR_GREY, NoMoney);
				format(string, sizeof(string), "{FFFFFF}Введите сумму пополнения\n\nКомиссия за операцию: {3399FF}0%%\n\n{FFFFFF}Текущее состояние счёта: {63BD4E}%d$", pInfo[playerid][pPhoneBalance]);
				return ShowPlayerDialog(playerid, dATM+1, 1, "{FFCC00}Пополнение счета телефона", string, "Принять", "Назад");
			}
			if(pInfo[playerid][pPhoneBalance] + price > 15000) return SendClientMessage(playerid, COLOR_GREY, "Нельзя положить на баланс телефона более 15000$");
			pInfo[playerid][pPhoneBalance] += price;
			TransferMoney(playerid, -1, price);
			SendMes(playerid, COLOR_YELLOW, "SMS: Поступление платежа: %i$. Текущее состояние счёта: %i$. Отправитель: Оператор связи", price, pInfo[playerid][pPhoneBalance]);
			ATMList(playerid);
			return 1;
		}
	case dATM+2:
	    {
	        if(!response) return ATMList(playerid);
			new price, string[150];
			if(sscanf(inputtext, "i", price))
			{
				format(string, sizeof(string), "{FFFFFF}Введите количество денег, которые хотите пожертвовать на благотворительность\n\nВы пожертвовали: {63BD4E}%d$", pInfo[playerid][pCharity]);
				return ShowPlayerDialog(playerid, dATM+2, 1, "{FFCC00}Благотворительность", string, "Принять", "Назад");
			}
			if(price < 1)
			{
				format(string, sizeof(string), "{FFFFFF}Введите количество денег, которые хотите пожертвовать на благотворительность\n\nВы пожертвовали: {63BD4E}%d$", pInfo[playerid][pCharity]);
				return ShowPlayerDialog(playerid, dATM+2, 1, "{FFCC00}Благотворительность", string, "Принять", "Назад");
			}
			if(GetCash(playerid) < price)
			{
			    SendClientMessage(playerid, COLOR_GREY, NoMoney);
				format(string, sizeof(string), "{FFFFFF}Введите количество денег, которые хотите пожертвовать на благотворительность\n\nВы пожертвовали: {63BD4E}%d$", pInfo[playerid][pCharity]);
				return ShowPlayerDialog(playerid, dATM+2, 1, "{FFCC00}Благотворительность", string, "Принять", "Назад");
			}
			pInfo[playerid][pCharity] += price;
			MysqlUpdatePlayerInt(playerid, "charity", pInfo[playerid][pCharity]);
			TransferMoney(playerid, -1, price);
			SendMes(playerid, COLOR_YELLOW, "Вы пожертвовали на благотворительность {FFFFFF}%d${EAD86A}. Список самых щедрых: {FFFFFF}/charity", price);
			ATMList(playerid);
			return 1;
	    }
	case dHeal+14:
		{
			if(!response) return 1;
			new idx = GetPVarInt(playerid, "UseBiz");
			if(GetCash(playerid) < BizInfo[idx][bEnter]) return SendClientMessage(playerid, COLOR_GREY, NoMoney);
			SetPlayerPos(playerid, BizInfo[idx][bExit][0], BizInfo[idx][bExit][1], BizInfo[idx][bExit][2], 1);
			SetPlayerInterior(playerid,BizInfo[idx][bInt]);
			SetPlayerVirtualWorld(playerid,BizInfo[idx][bVirtual]);
			SetCameraBehindPlayer(playerid);
			if(BizInfo[idx][bHeal] == 1) SendClientMessage(playerid, COLOR_BLUE, "В этом бизнесе имеется аптечка. Чтобы восстановить здоровье используйте {FFFFFF}/bheal ({63BD4E}150${FFFFFF})");
			if(BizInfo[idx][bSound] == 1) PlayerPlaySound(playerid, 6401, 0.0, 0.0, 0.0);
			BizInfo[idx][bVisitors]++;
			SetTimerEx("@PickupBack",3000,0,"i",playerid);
	        pickupentered[playerid] = 1;
	        TransferMoney(playerid, -1, BizInfo[idx][bEnter]);
	        new prod;
		    switch(BizInfo[idx][bEnter])
		    {
		        case 0..149: prod=1;
		        case 150..499: prod=2;
		        case 500..1000: prod=3;
		    }
		    GiveBizMoney(idx, BizInfo[idx][bEnter], prod);
			return 1;
		}
	case dLeave:
		{
		    if(!response) return 1;
		    new str[144];
		    format(str, sizeof(str), "[Внимание] {FFFFFF}%s покинул организацию по собственному желанию (/leave)", GetName(playerid));
			SendFMes(pInfo[playerid][pMember], COLOR_RED, str);
	        LeaveFractionPlayer(playerid);
	        SendClientMessage(playerid, COLOR_GREEN, "[Подсказка] {FFFFFF}Местом спавна автоматически назначен вокзал. Изменить место спавна {AFAFAF}/setspawn");
	        return 1;
		}
	case dBuySim:
	    {
	        if(!response) return 1;
	        for(new i; i < strlen(inputtext); i++)
			{
				if(inputtext[i] < '0' || inputtext[i] > '9')
				{
					SendClientMessage(playerid, COLOR_GREY, "Номер должен состоять из 6 цифр. Первая цифра не должны быть \"ноль\"");
					return ShowPlayerDialog(playerid, dBuySim, DIALOG_STYLE_INPUT, "{FFCC00}Покупка SIM-карты", "{FFFFFF}Введите новый шестизначный номер", "Купить", "Закрыть");
				}
			}
	        if(strlen(inputtext) != 6 || inputtext[0] == '0')
 			{
	            SendClientMessage(playerid, COLOR_GREY, "Номер должен состоять из 6 цифр. Первая цифра не должны быть \"ноль\"");
				return ShowPlayerDialog(playerid, dBuySim, DIALOG_STYLE_INPUT, "{FFCC00}Покупка SIM-карты", "{FFFFFF}Введите новый шестизначный номер", "Купить", "Закрыть");
	        }
	        new str[60];
	        format(str, sizeof(str), "SELECT * FROM "T_ACCOUNTS" WHERE phonenumber = %i", strval(inputtext));
	        mysql_tquery(dbHandle, str, "@OnPlayerSetPhoneNumber", "i", playerid);
	        SetPVarInt(playerid, "CheckNumber", strval(inputtext));
	    }
     case dBuySimDonate:
	    {
	        if(!response) return DonateShow(playerid);
			for(new i; i < strlen(inputtext); i++)
			{
				if(inputtext[i] < '0' || inputtext[i] > '9')
				{
					SendClientMessage(playerid, COLOR_GREY, "Номер должен состоять из 4 цифр. Первая цифра не должны быть \"ноль\"");
					return ShowPlayerDialog(playerid, dBuySimDonate, DIALOG_STYLE_INPUT, "{FFCC00}Покупка SIM-карты", "{FFFFFF}Введите новый пятизначный номер", "Купить", "Назад");
				}
			}
	        if(strlen(inputtext) != 5 || inputtext[0] == '0')
 			{
	            SendClientMessage(playerid, COLOR_GREY, "Номер должен состоять из 5 цифр. Первая цифра не должны быть \"ноль\"");
				return ShowPlayerDialog(playerid, dBuySimDonate, DIALOG_STYLE_INPUT, "{FFCC00}Покупка SIM-карты", "{FFFFFF}Введите новый пятизначный номер", "Купить", "Назад");
	        }
	        new str[60];
	        format(str, sizeof(str), "SELECT * FROM "T_ACCOUNTS" WHERE phonenumber = %i", strval(inputtext));
	        mysql_tquery(dbHandle, str, "@OnPlayerSetPhoneNumberDonate", "i", playerid);
	        SetPVarInt(playerid, "CheckNumberDonate", strval(inputtext));
	    }
	case dPhone+1:
	    {
	        if(!response) return cmd_phonebook(playerid);
	        stringer[0] = EOS;
	        switch(listitem)
	        {
	            case 0:
		        {
				    strcat(stringer, "{EAD86A}Ник игрока\t\t{EAD86A}Номер\n");
					for(new i; i < 8; i++)
					{
						format(stringer, 1000, "%s{FFFFFF}%s\t\t%d\n", stringer, (pInfo[playerid][pPhoneNumbers][i]) ? GetNameWithNumber(pInfo[playerid][pPhoneNumbers][i]) : ("Offline/None"), pInfo[playerid][pPhoneNumbers][i]);
					}
					ShowPlayerDialog(playerid, dPhone+5, DIALOG_STYLE_LIST, "{FFCC00}Список контактов", stringer, "Принять", "Назад");
	            }
	            case 1:
				{
				    strcat(stringer, "{EAD86A}Ник игрока\t\t{EAD86A}Номер\n");
					for(new i; i < 8; i++)
					{
						format(stringer, 1000, "%s{FFFFFF}%s\t\t%d\n", stringer, (pInfo[playerid][pPhoneNumbers][i]) ? GetNameWithNumber(pInfo[playerid][pPhoneNumbers][i]) : ("Offline/None"), pInfo[playerid][pPhoneNumbers][i]);
					}
					ShowPlayerDialog(playerid, dPhone+4, DIALOG_STYLE_LIST, "{FFCC00}Добавить контакт", stringer, "Выбрать", "Назад");
				}
				case 2:
				{
				    strcat(stringer, "{EAD86A}Ник игрока\t\t{EAD86A}Номер\n");
					for(new i; i < 8; i++)
					{
						format(stringer, 1000, "%s{FFFFFF}%s\t\t%d\n", stringer, (pInfo[playerid][pPhoneNumbers][i]) ? GetNameWithNumber(pInfo[playerid][pPhoneNumbers][i]) : ("Offline/None"), pInfo[playerid][pPhoneNumbers][i]);
					}
					ShowPlayerDialog(playerid, dPhone+3, DIALOG_STYLE_LIST, "{FFCC00}Удалить контакт", stringer, "Выбрать", "Назад");
				}
	        }
			return 1;
	    }
	case dPhone+3:
	    {
	        if(!response) return ShowPlayerDialog(playerid, dPhone+1, DIALOG_STYLE_LIST, "{FFCC00}Контакты", "1. Список контактов\n2. Добавить контакт\n3. Удалить контакт", "Выбрать", "Назад");
	        if(pInfo[playerid][pPhoneNumbers][listitem] == 0) return SendClientMessage(playerid, COLOR_GREY, "Слот для контакта пустой!");
			new str[128];
			format(str, sizeof(str), "Контакт %s | %d удален", GetNameWithNumber(pInfo[playerid][pPhoneNumbers][listitem]), pInfo[playerid][pPhoneNumbers][listitem]);
			SendClientMessage(playerid, COLOR_RED, str);
			pInfo[playerid][pPhoneNumbers][listitem] = 0;
			return 1;
	    }
	case dPhone+4:
		{
		    if(!response) return ShowPlayerDialog(playerid, dPhone+1, DIALOG_STYLE_LIST, "{FFCC00}Контакты", "1. Список контактов\n2. Добавить контакт\n3. Удалить контакт", "Выбрать", "Назад"), DeletePVar(playerid, "selectedpslot");
		    SetPVarInt(playerid, "selectedpslot", listitem);
			ShowPlayerDialog(playerid, dPhone+6, DIALOG_STYLE_INPUT, "{FFCC00}Добавление контакта", "{ffffff}Введите номер контакта:", "Добавить", "Назад");
			return 0;
		}
	case dPhone+5:
	    {
	        if(!response) return ShowPlayerDialog(playerid, dPhone+1, DIALOG_STYLE_LIST, "{FFCC00}Контакты", "1. Список контактов\n2. Добавить контакт\n3. Удалить контакт", "Выбрать", "Назад");
	        else return 1;
	    }
	case dPhone+6:
	    {
	        if(!response) return 0;
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid, dPhone+6, DIALOG_STYLE_INPUT, "{FFCC00}Добавление контакта", "{ffffff}Введите номер контакта:", "Добавить", "Назад");
			new str[128], slot = GetPVarInt(playerid, "selectedpslot");
			format(str, sizeof(str), "Номер %d добавлен в слот %d", strval(inputtext), slot);
			SendClientMessage(playerid, COLOR_GREEN, str);
			pInfo[playerid][pPhoneNumbers][slot] = strval(inputtext);
			return 1;
	    }
	case dPhone+2:
	    {
	        if(!response) return 1;
		    new params;
		    if(sscanf(inputtext, "d", params)) return cmd_call(playerid);
		    else if(!(100 <= params <= 9999999)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Неверный номер телефона!");
		    else if(params == pInfo[playerid][pPhoneNumber]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Ты не можешь позвонить самому себе!");
		    else if(pInfo[playerid][pPhoneBalance] < 1) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Недостаточно средств на мобильном счету!");
			else if(params == 111) return ShowPlayerDialog(playerid, dService+1, 1, "{FFCC00}Вызвать механика", "{FFFFFF}Опишите место где вы находитесь\n{AFAFAF}Сообщение должно состоять из 6 до 20 символов!", "Принять", "Отмена");
	        else if(params == 222) return ShowPlayerDialog(playerid, dService+2, 1, "{FFCC00}Вызвать такси", "{FFFFFF}Опишите место где вы находитесь\n{AFAFAF}Сообщение должно состоять из 6 до 20 символов!", "Принять", "Отмена");
	        else if(params == 103) return ShowPlayerDialog(playerid, dService+3, 1, "{FFCC00}Вызвать скорую помощь", "{FFFFFF}Опишите место где вы находитесь\n{AFAFAF}Сообщение должно состоять из 6 до 20 символов!", "Принять", "Отмена");
	        else if(params == 102) return ShowPlayerDialog(playerid, dService+4, 1, "{FFCC00}Вызвать полицию", "{FFFFFF}Опишите место где вы находитесь\n{AFAFAF}Сообщение должно состоять из 6 до 20 символов!", "Принять", "Отмена");
			new nidx = -1, plidx = -1;
            for(new i; i < MAX_PLAYERS; i++)
			{
				if(!IsPlayerConnected(i) || !gPlayerLogged[i]) continue;
		        if(params == LSNEWS_NUMBER || params == SFNEWS_NUMBER || params == LVNEWS_NUMBER)
				{
					nidx = i;
					break;
				}
				else if(params == pInfo[i][pPhoneNumber])
				{
				    plidx = i;
				    break;
				}
			}
			if(nidx > -1)
			{
			    new select_radio = (params == LSNEWS_NUMBER)?(1):(params == SFNEWS_NUMBER)?(2):(3);
			    if(pInfo[playerid][pNews] != select_radio) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы должны переключиться на волну этой студии!");
			    else if(!Ether[nidx] && pInfo[nidx][pMember] == pInfo[playerid][pNews]+17) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Радио не принимает звонков!");
			    else if(Ether[playerid]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Действие невозможно!");
				else if(!EtherCall[pInfo[playerid][pNews]-1]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Радио не принимает звонков!");
		        else if(Mobile[nidx] != -1) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Игрок уже разговаривает по телефону!");
		  		else if(pInfo[nidx][pJail] > 0) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Абонент временно недоступен!");
				Mobile[playerid] = nidx;
			 	SendMes(nidx, COLOR_WHITE, "Ваc вызывает: %s (%i). Чтобы ответить, введите: /pickup (/p)", GetName(playerid), pInfo[playerid][pPhoneNumber]);
				DoAction(nidx, "Звонит мобильный телефон");
		  		PlayerPlaySound(nidx, 23000, 0.0, 0.0, 0.0);
		  		PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, COLOR_WHITE, "Чтобы повесить трубку, введите: /hangup (/h)");
				if(!IsPlayerInAnyVehicle(playerid)) SetPlayerSpecialAction(playerid, 11);
				CellTime[playerid] = 0;
			}
			else if(plidx > -1)
			{
			    if(!Phone[plidx]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Игрок выключил телефон!");
			    else if(Ether[plidx]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Игрок уже разговаривает по телефону!");
				else if(Mobile[plidx] != -1) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Игрок уже разговаривает по телефону!");
                else if(pInfo[plidx][pJail] > 0) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Абонент временно недоступен!");
                Mobile[playerid] = plidx;
				SendMes(plidx, COLOR_WHITE, "Ваc вызывает: %s (%i). Чтобы ответить, введите: /pickup (/p)", GetName(playerid), pInfo[playerid][pPhoneNumber]);
				DoAction(plidx, "Звонит мобильный телефон");
	            PlayerPlaySound(plidx, 23000, 0.0, 0.0, 0.0);
	            PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, COLOR_WHITE, "Чтобы повесить трубку, введите: /hangup (/h)");
				if(!IsPlayerInAnyVehicle(playerid)) SetPlayerSpecialAction(playerid, 11);
				CellTime[playerid] = 0;
			}
			else SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Указанный Вами номер не существует!");
			return 1;
	    }
	case dBreak:
	    {
	        if(!response) return 1;
		    new Float:X, Float:Y, Float:Z, Float:YZ;
			GetPlayerPos(playerid, X, Y, Z);
			GetPlayerFacingAngle(playerid, YZ);
			if(floatabs(Z) > 300 || GetPlayerInterior(playerid) != 0 ||  GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, COLOR_GREY, "Невозможно установить объект в данном месте");
			switch(listitem)
			{
				case 0:
				{
					SetPVarInt(playerid,"objectcop", CreateDynamicObject(2899, X, Y, Z-0.8, 0, 0, YZ));
			        Ships[playerid] = CreateDynamicSphere(X, Y, Z, 3.0, -1, -1, -1);
				}
				case 1: SetPVarInt(playerid,"objectcop", CreateDynamicObject(1228, X, Y, Z+0.8, 0, 0, YZ));
				case 2: SetPVarInt(playerid,"objectcop", CreateDynamicObject(1237, X, Y, Z-1.0, 0, 0, YZ));
				case 3: SetPVarInt(playerid,"objectcop", CreateDynamicObject(1422, X, Y, Z-0.8, 0, 0, YZ));
			}
			//EditObject(playerid, GetPVarInt(playerid, "objectcop"));
			SendClientMessage(playerid, COLOR_GREEN, "Вы установили объект");
	    }
	case dMafia:
	    {
	        if(!response) return 1;
	        switch(listitem)
			{
				case 0: ShowPlayerDialog(playerid, dMafia+1, 1, "{FFCC00}Положить патроны", "{FFFFFF}Введите количество патронов:", "Принять", "Отмена");
		  		case 1:	ShowPlayerDialog(playerid, dMafia+2, 1, "{FFCC00}Положить ед. оружия", "{FFFFFF}Введите количество ед. оружия:", "Принять", "Отмена");
		  		case 2: ShowPlayerDialog(playerid, dMafia+3, 1, "{FFCC00}Положить деньги", "{FFFFFF}Введите количество денег:", "Принять", "Отмена");
				case 3: ShowPlayerDialog(playerid, dMafia+4, 1, "{FFCC00}Положить наркотики", "{FFFFFF}Введите количество наркотиков:","Принять", "Отмена");
				case 4:
				{
				    if(pInfo[playerid][pRank] < 5) return SendClientMessage(playerid, COLOR_GREY, "Данная возможность доступна с 5 ранга!");
					ShowPlayerDialog(playerid, dMafia+5, 1, "{FFCC00}Взять патроны", "{FFFFFF}Введите количество патронов:", "Принять", "Отмена");
				}
				case 5:
				{
				    if(pInfo[playerid][pRank] < 5) return SendClientMessage(playerid, COLOR_GREY, "Данная возможность доступна с 5 ранга!");
					ShowPlayerDialog(playerid, dMafia+6, 1, "{FFCC00}Взять ед. оружия", "{FFFFFF}Введите количество ед. оружия:", "Принять", "Отмена");
				}
				case 6:
				{
				    if(!pInfo[playerid][pLeader]) return SendClientMessage(playerid, COLOR_GREY, "Данная возможность доступна только лидеру!");
					ShowPlayerDialog(playerid, dMafia+7, 1, "{FFCC00}Взять деньги", "{FFFFFF}Введите количество денег:", "Принять", "Отмена");
				}
				case 7:
				{
				    if(pInfo[playerid][pRank] < 5) return SendClientMessage(playerid, COLOR_GREY, "Данная возможность доступна с 5 ранга!");
					ShowPlayerDialog(playerid, dMafia+8, 1, "{FFCC00}Взять наркотики", "{FFFFFF}Введите количество грамм наркотиков:", "Принять", "Отмена");
				}
		  	}
	    }
	case dMafia+1:
	    {
	        if(!response) return 1;
			new till = 0;
			if(sscanf(inputtext, "i", till)) return ShowPlayerDialog(playerid, dMafia+1, 1, "{FFCC00}Положить патроны", "{FFFFFF}Введите количество патронов:", "Принять", "Отмена");
			if(till < 0) return ShowPlayerDialog(playerid, dMafia+1, 1, "{FFCC00}Положить патроны", "{FFFFFF}Введите количество патронов:", "Принять", "Отмена");
			if(pInfo[playerid][pPatron] < till) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько патронов!");
			new i = (pInfo[playerid][pMember] == TEAM_LCN) ? (0) : (pInfo[playerid][pMember] == TEAM_YAKUZA) ? (1) : (2);
			pInfo[playerid][pPatron] -= till;
			MysqlUpdatePlayerInt(playerid, "patron", pInfo[playerid][pPatron]);
			MafiaPatr[i] += till;
			mysql_query_string[0] = EOS;
			switch(i)
			{
			    case 0: format(mysql_query_string, 100, "UPDATE "T_MAFIA" SET lcnpat = %d", MafiaPatr[0]);
			    case 1: format(mysql_query_string, 100, "UPDATE "T_MAFIA" SET yakpat = %d", MafiaPatr[1]);
			    case 2: format(mysql_query_string, 100, "UPDATE "T_MAFIA" SET rmpat = %d", MafiaPatr[2]);
			}
			mysql_tquery(dbHandle, mysql_query_string, "", "");
			new string[90];
			format(string, 90, "Вы положили на склад мафии патроны (+%i)", till);
			SendClientMessage(playerid, COLOR_GREEN, string);
			format(string, 90, "%s[%d] положил%s на склад мафии %i патрон", GetName(playerid), playerid, (pInfo[playerid][pSex]==1)?(""):("а"), till);
			SendFMes(pInfo[playerid][pMember], COLOR_YELLOW, string);
	    }
	case dMafia+2:
	    {
	        if(!response) return 1;
			new till = 0;
			if(sscanf(inputtext, "i", till)) return ShowPlayerDialog(playerid, dMafia+2, 1, "{FFCC00}Положить ед. оружия", "{FFFFFF}Введите количество ед. оружия:", "Принять", "Отмена");
			if(till < 0) return ShowPlayerDialog(playerid, dMafia+2, 1, "{FFCC00}Положить ед. оружия", "{FFFFFF}Введите количество ед. оружия:", "Принять", "Отмена");
			if(pInfo[playerid][pGunAmount] < till) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько ед. оружия!");
			new i = (pInfo[playerid][pMember] == TEAM_LCN) ? (0) : (pInfo[playerid][pMember] == TEAM_YAKUZA) ? (1) : (2);
			pInfo[playerid][pGunAmount] -= till;
			MysqlUpdatePlayerInt(playerid, "gunamount", pInfo[playerid][pGunAmount]);
			MafiaEd[i] += till;
			mysql_query_string[0] = EOS;
			switch(i)
			{
			    case 0: format(mysql_query_string, 150, "UPDATE "T_MAFIA" SET lcned = %d", MafiaEd[0]);
			    case 1: format(mysql_query_string, 150, "UPDATE "T_MAFIA" SET yaked = %d", MafiaEd[1]);
			    case 2: format(mysql_query_string, 150, "UPDATE "T_MAFIA" SET rmed = %d", MafiaEd[2]);
			}
			mysql_tquery(dbHandle, mysql_query_string, "", "");
			new string[90];
			format(string, 90, "Вы положили на склад мафии ед. оружия (+%i)", till);
			SendClientMessage(playerid, COLOR_GREEN, string);
			format(string, 90, "%s[%d] положил%s на склад мафии %i ед. оружия", GetName(playerid), playerid, (pInfo[playerid][pSex]==1)?(""):("а"), till);
			SendFMes(pInfo[playerid][pMember], COLOR_YELLOW, string);
	    }
	case dMafia+3:
	    {
	        if(!response) return 1;
			new till = 0;
			if(sscanf(inputtext, "i", till)) return ShowPlayerDialog(playerid, dMafia+3, 1, "{FFCC00}Положить деньги", "{FFFFFF}Введите количество денег:", "Принять", "Отмена");
			if(till < 0) return ShowPlayerDialog(playerid, dMafia+3, 1, "{FFCC00}Положить деньги", "{FFFFFF}Введите количество денег:", "Принять", "Отмена");
			if(till > GetCash(playerid) || till < 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько денег!");
			new i = (pInfo[playerid][pMember] == TEAM_LCN) ? (6) : (pInfo[playerid][pMember] == TEAM_YAKUZA) ? (5) : (7);
            TransferMoney(playerid, -1, till);
			FracBank[i] += till;
			mysql_query_string[0] = EOS;
			switch(i)
			{
			    case 6: format(mysql_query_string, 100, "UPDATE "T_MAFIA" SET lcnbank = %d", FracBank[6]);
			    case 5: format(mysql_query_string, 100, "UPDATE "T_MAFIA" SET yakuzabank = %d", FracBank[5]);
			    case 7: format(mysql_query_string, 100, "UPDATE "T_MAFIA" SET rmbank = %d", FracBank[7]);
			}
			mysql_tquery(dbHandle, mysql_query_string, "", "");
			new string[90];
			format(string, 90, "Вы положили на склад мафии %d$", till);
			SendClientMessage(playerid, COLOR_GREEN, string);
			format(string, 90, "%s[%d] положил%s на склад мафии %i$", GetName(playerid), playerid, (pInfo[playerid][pSex]==1)?(""):("а"), till);
			SendFMes(pInfo[playerid][pMember], COLOR_YELLOW, string);
	    }
	case dMafia+4:
		{
	    	if(!response) return 1;
			new till = 0;
			if(sscanf(inputtext, "i", till)) return ShowPlayerDialog(playerid, dMafia+4, 1, "{FFCC00}Положить наркотики", "{FFFFFF}Введите количество наркотиков:","Принять", "Отмена");
			if(till < 0) return ShowPlayerDialog(playerid, dMafia+4, 1, "{FFCC00}Положить наркотики", "{FFFFFF}Введите количество наркотиков:","Принять", "Отмена");
			if(pInfo[playerid][pDrugs] < till) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько наркотиков!");
			new i = (pInfo[playerid][pMember] == TEAM_LCN) ? (15) : (pInfo[playerid][pMember] == TEAM_YAKUZA) ? (16) : (17);
			pInfo[playerid][pDrugs] -= till;
			MysqlUpdatePlayerInt(playerid, "drugs", pInfo[playerid][pDrugs]);
			DrugsBank[i] += till;
			mysql_query_string[0] = EOS;
			switch(i)
			{
			    case 16: format(mysql_query_string, 100, "UPDATE "T_MAFIA" SET yakuzadrugs = %d", DrugsBank[TEAM_YAKUZA]);
			    case 15: format(mysql_query_string, 100, "UPDATE "T_MAFIA" SET lcndrugs = %d", DrugsBank[TEAM_LCN]);
			    case 17: format(mysql_query_string, 100, "UPDATE "T_MAFIA" SET rmdrugs = %d", DrugsBank[TEAM_RM]);
			}
			mysql_tquery(dbHandle, mysql_query_string, "", "");
			new string[90];
			format(string, 90, "Вы положили на склад мафии наркотики (+%i)", till);
			SendClientMessage(playerid, COLOR_GREEN, string);
			format(string, 90, "%s[%d] положил%s на склад мафии %i грамм наркотиков", GetName(playerid), playerid, (pInfo[playerid][pSex]==1)?(""):("а"), till);
			SendFMes(pInfo[playerid][pMember], COLOR_YELLOW, string);
		}
	case dMafia+5:
	    {
	        if(!response) return 1;
			new till = 0;
			if(sscanf(inputtext, "i", till)) return ShowPlayerDialog(playerid, dMafia+5, 1, "{FFCC00}Взять патроны", "{FFFFFF}Введите количество патронов:", "Принять", "Отмена");
			new i = (pInfo[playerid][pMember] == TEAM_LCN) ? (0) : (pInfo[playerid][pMember] == TEAM_YAKUZA) ? (1) : (2);
			if(till < 0 || till > MafiaPatr[i]) return ShowPlayerDialog(playerid, dMafia+5, 1, "{FFCC00}Взять патроны", "{FFFFFF}Введите количество патронов:", "Принять", "Отмена");
			if(pInfo[playerid][pPatron]+till > 500 && !pInfo[playerid][pImprove][2]) return SendClientMessage(playerid, COLOR_GREY, "У Вас не может быть более 500 патрон!");
			if(pInfo[playerid][pPatron]+till > 1000 && pInfo[playerid][pImprove][2]) return SendClientMessage(playerid, COLOR_GREY, "У Вас не может быть более 1000 патрон!");
			pInfo[playerid][pPatron] += till;
			MysqlUpdatePlayerInt(playerid, "patron", pInfo[playerid][pPatron]);
			MafiaPatr[i] -= till;
			mysql_query_string[0] = EOS;
			switch(i)
			{
			    case 0: format(mysql_query_string, 100, "UPDATE "T_MAFIA" SET lcnpat = %d", MafiaPatr[0]);
			    case 1: format(mysql_query_string, 100, "UPDATE "T_MAFIA" SET yakpat = %d", MafiaPatr[1]);
			    case 2: format(mysql_query_string, 100, "UPDATE "T_MAFIA" SET rmpat = %d", MafiaPatr[2]);
			}
			mysql_tquery(dbHandle, mysql_query_string, "", "");
			new string[90];
			format(string, 90, "Вы взяли со склада мафии патроны (+%i)", till);
			SendClientMessage(playerid, COLOR_GREEN, string);
			format(string, 90, "%s[%d] взял%s со склада мафии %i патрон", GetName(playerid), playerid, (pInfo[playerid][pSex]==1)?(""):("а"), till);
			SendFMes(pInfo[playerid][pMember], COLOR_YELLOW, string);
	    }
	case dMafia+6:
	    {
	        if(!response) return 1;
			new till = 0;
			if(sscanf(inputtext, "i", till)) return ShowPlayerDialog(playerid, dMafia+6, 1, "{FFCC00}Взять ед. оружия", "{FFFFFF}Введите количество ед. оружия:", "Принять", "Отмена");
			new i = (pInfo[playerid][pMember] == TEAM_LCN) ? (0) : (pInfo[playerid][pMember] == TEAM_YAKUZA) ? (1) : (2);
			if(till < 0 || till > MafiaEd[i]) return ShowPlayerDialog(playerid, dMafia+6, 1, "{FFCC00}Взять ед. оружия", "{FFFFFF}Введите количество ед. оружия:", "Принять", "Отмена");
			if(pInfo[playerid][pGunAmount]+till > 500 && !pInfo[playerid][pImprove][2]) return SendClientMessage(playerid, COLOR_GREY, "У Вас не может быть более 500 ед. оружия!");
			if(pInfo[playerid][pGunAmount]+till > 1000 && pInfo[playerid][pImprove][2]) return SendClientMessage(playerid, COLOR_GREY, "У Вас не может быть более 1000 ед. оружия!");
			pInfo[playerid][pGunAmount] += till;
			MysqlUpdatePlayerInt(playerid, "gunamount", pInfo[playerid][pGunAmount]);
			MafiaEd[i] -= till;
			mysql_query_string[0] = EOS;
			switch(i)
			{
			    case 0: format(mysql_query_string, 100, "UPDATE "T_MAFIA" SET lcned = %d", MafiaEd[0]);
			    case 1: format(mysql_query_string, 100, "UPDATE "T_MAFIA" SET yaked = %d", MafiaEd[1]);
			    case 2: format(mysql_query_string, 100, "UPDATE "T_MAFIA" SET rmed = %d", MafiaEd[2]);
			}
			mysql_tquery(dbHandle, mysql_query_string, "", "");
			new string[90];
			format(string, 90, "Вы взяли со склада мафии ед. оружия (+%i)", till);
			SendClientMessage(playerid, COLOR_GREEN, string);
			format(string, 90, "%s[%d] взял%s со склада мафии %i ед. оружия", GetName(playerid), playerid, (pInfo[playerid][pSex]==1)?(""):("а"), till);
			SendFMes(pInfo[playerid][pMember], COLOR_YELLOW, string);
	    }
	case dMafia+7:
	    {
	        if(!response) return 1;
			new till = 0;
			if(sscanf(inputtext, "i", till)) return ShowPlayerDialog(playerid, dMafia+7, 1, "{FFCC00}Взять деньги", "{FFFFFF}Введите количество денег:", "Принять", "Отмена");
			if(till < 0) return ShowPlayerDialog(playerid, dMafia+7, 1, "{FFCC00}Взять деньги", "{FFFFFF}Введите количество денег:", "Принять", "Отмена");
			new i = (pInfo[playerid][pMember] == TEAM_LCN) ? (6) : (pInfo[playerid][pMember] == TEAM_YAKUZA) ? (5) : (7);
			if(till > FracBank[i] || till < 0) return SendClientMessage(playerid, COLOR_GREY, "На складе мафии нет столько денег!");
            TransferMoney(-1, playerid, till);
			FracBank[i] -= till;
			mysql_query_string[0] = EOS;
			switch(i)
			{
			    case 6: format(mysql_query_string, 100, "UPDATE "T_MAFIA" SET lcnbank = %d", FracBank[6]);
			    case 5: format(mysql_query_string, 100, "UPDATE "T_MAFIA" SET yakuzabank = %d", FracBank[5]);
			    case 7: format(mysql_query_string, 100, "UPDATE "T_MAFIA" SET rmbank = %d", FracBank[7]);
			}
			mysql_tquery(dbHandle, mysql_query_string, "", "");
			new string[90];
			format(string, 90, "Вы взяли со склада мафии %d$", till);
			SendClientMessage(playerid, COLOR_GREEN, string);
			format(string, 90, "%s[%d] взял%s со склада мафии %i$", GetName(playerid), playerid, (pInfo[playerid][pSex]==1)?(""):("а"), till);
			SendFMes(pInfo[playerid][pMember], COLOR_YELLOW, string);
	    }
	case dMafia+8:
	    {
	        if(!response) return 1;
			new till = 0;
			if(sscanf(inputtext, "i", till)) return ShowPlayerDialog(playerid, dMafia+8, 1, "{FFCC00}Взять наркотики", "{FFFFFF}Введите количество грамм наркотиков:", "Принять", "Отмена");
			new i = (pInfo[playerid][pMember] == TEAM_LCN) ? (15) : (pInfo[playerid][pMember] == TEAM_YAKUZA) ? (16) : (17);
			if(till < 0 || till > DrugsBank[i]) return ShowPlayerDialog(playerid, dMafia+8, 1, "{FFCC00}Взять наркотики", "{FFFFFF}Введите количество грамм наркотиков:", "Принять", "Отмена");
			if(pInfo[playerid][pDrugs]+till > 100 && !pInfo[playerid][pImprove][2]) return SendClientMessage(playerid, COLOR_GREY, "У Вас не может быть более 100 грамм наркотиков!");
			if(pInfo[playerid][pDrugs]+till > 200 && pInfo[playerid][pImprove][2]) return SendClientMessage(playerid, COLOR_GREY, "У Вас не может быть более 200 грамм наркотиков!");
			pInfo[playerid][pDrugs] += till;
			MysqlUpdatePlayerInt(playerid, "drugs", pInfo[playerid][pDrugs]);
			DrugsBank[i] -= till;
			mysql_query_string[0] = EOS;
			switch(i)
			{
			    case 16: format(mysql_query_string, 100, "UPDATE "T_MAFIA" SET yakuzadrugs = %d", DrugsBank[TEAM_YAKUZA]);
			    case 15: format(mysql_query_string, 100, "UPDATE "T_MAFIA" SET lcndrugs = %d", DrugsBank[TEAM_LCN]);
			    case 17: format(mysql_query_string, 100, "UPDATE "T_MAFIA" SET rmdrugs = %d", DrugsBank[TEAM_RM]);
			}
			mysql_tquery(dbHandle, mysql_query_string, "", "");
			new string[90];
			format(string, 90, "Вы взяли со склада мафии наркотики (+%i)", till);
			SendClientMessage(playerid, COLOR_GREEN, string);
			format(string, 90, "%s[%d] взял%s со склада мафии %i гр. наркотиков", GetName(playerid), playerid, (pInfo[playerid][pSex]==1)?(""):("а"), till);
			SendFMes(pInfo[playerid][pMember], COLOR_YELLOW, string);
	    }
	case dGang:
	    {
	        if(!response) return 1;
	        switch(listitem)
			{
				case 0: ShowPlayerDialog(playerid, dGang+1, 1, "{FFCC00}Положить патроны", "{FFFFFF}Введите количество патронов:", "Принять", "Отмена");
		  		case 1:	ShowPlayerDialog(playerid, dGang+2, 1, "{FFCC00}Положить ед. оружия", "{FFFFFF}Введите количество ед. оружия:", "Принять", "Отмена");
		  		case 2: ShowPlayerDialog(playerid, dGang+3, 1, "{FFCC00}Положить деньги", "{FFFFFF}Введите количество денег:", "Принять", "Отмена");
				case 3: ShowPlayerDialog(playerid, dGang+4, 1, "{FFCC00}Положить наркотики", "{FFFFFF}Введите количество наркотиков:","Принять", "Отмена");
				case 4:
				{
				    if(pInfo[playerid][pRank] < 4) return SendClientMessage(playerid, COLOR_GREY, "Данная возможность доступна с 4 ранга!");
					ShowPlayerDialog(playerid, dGang+5, 1, "{FFCC00}Взять патроны", "{FFFFFF}Введите количество патронов:", "Принять", "Отмена");
				}
				case 5:
				{
				    if(pInfo[playerid][pRank] < 4) return SendClientMessage(playerid, COLOR_GREY, "Данная возможность доступна с 4 ранга!");
					ShowPlayerDialog(playerid, dGang+6, 1, "{FFCC00}Взять ед. оружия", "{FFFFFF}Введите количество ед. оружия:", "Принять", "Отмена");
				}
				case 6:
				{
				    if(!pInfo[playerid][pLeader]) return SendClientMessage(playerid, COLOR_GREY, "Данная возможность доступна только лидеру!");
					ShowPlayerDialog(playerid, dGang+7, 1, "{FFCC00}Взять деньги", "{FFFFFF}Введите количество денег:", "Принять", "Отмена");
				}
				case 7:
				{
				    if(pInfo[playerid][pRank] < 4) return SendClientMessage(playerid, COLOR_GREY, "Данная возможность доступна с 4 ранга!");
					ShowPlayerDialog(playerid, dGang+8, 1, "{FFCC00}Взять наркотики", "{FFFFFF}Введите количество грамм наркотиков:", "Принять", "Отмена");
				}
		  	}
	    }
	case dGang+1:
	    {
	        if(!response) return 1;
			new till = 0;
			if(sscanf(inputtext, "i", till)) return ShowPlayerDialog(playerid, dGang+1, 1, "{FFCC00}Положить патроны", "{FFFFFF}Введите количество патронов:", "Принять", "Отмена");
			if(till < 0) return ShowPlayerDialog(playerid, dGang+1, 1, "{FFCC00}Положить патроны", "{FFFFFF}Введите количество патронов:", "Принять", "Отмена");
			if(pInfo[playerid][pPatron] < till) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько патронов!");
			new i = (pInfo[playerid][pMember] == TEAM_GROVE) ? (0) : (pInfo[playerid][pMember] == TEAM_BALLAS) ? (1) : (pInfo[playerid][pMember] == TEAM_RIFA) ? (2) : (pInfo[playerid][pMember] == TEAM_AZTECAS) ? (3) : (4);
			pInfo[playerid][pPatron] -= till;
			MysqlUpdatePlayerInt(playerid, "patron", pInfo[playerid][pPatron]);
			GangPatr[i] += till;
			mysql_query_string[0] = EOS;
			switch(i)
			{
			    case 0: format(mysql_query_string, 100, "UPDATE "T_GANG" SET grovepat = %d", GangPatr[0]);
			    case 1: format(mysql_query_string, 100, "UPDATE "T_GANG" SET ballaspat = %d", GangPatr[1]);
			    case 2: format(mysql_query_string, 100, "UPDATE "T_GANG" SET rifapat = %d", GangPatr[2]);
			    case 3: format(mysql_query_string, 100, "UPDATE "T_GANG" SET aztecpat = %d", GangPatr[3]);
			    case 4: format(mysql_query_string, 100, "UPDATE "T_GANG" SET vagospat = %d", GangPatr[4]);
			}
			mysql_tquery(dbHandle, mysql_query_string, "", "");
			new string[90];
			format(string, 90, "Вы положили на склад банды патроны (+%i)", till);
			SendClientMessage(playerid, COLOR_GREEN, string);
			format(string, 90, "%s[%d] положил%s на склад банды %i патрон", GetName(playerid), playerid, (pInfo[playerid][pSex]==1)?(""):("а"), till);
			SendFMes(pInfo[playerid][pMember], COLOR_YELLOW, string);
			return 1;
	    }
	case dGang+2:
	    {
	        if(!response) return 1;
			new till = 0;
			if(sscanf(inputtext, "i", till)) return ShowPlayerDialog(playerid, dGang+2, 1, "{FFCC00}Положить ед. оружия", "{FFFFFF}Введите количество ед. оружия:", "Принять", "Отмена");
			if(till < 0) return ShowPlayerDialog(playerid, dGang+2, 1, "{FFCC00}Положить ед. оружия", "{FFFFFF}Введите количество ед. оружия:", "Принять", "Отмена");
			if(pInfo[playerid][pGunAmount] < till) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько ед. оружия!");
			new i = (pInfo[playerid][pMember] == TEAM_GROVE) ? (0) : (pInfo[playerid][pMember] == TEAM_BALLAS) ? (1) : (pInfo[playerid][pMember] == TEAM_RIFA) ? (2) : (pInfo[playerid][pMember] == TEAM_AZTECAS) ? (3) : (4);
			pInfo[playerid][pGunAmount] -= till;
			MysqlUpdatePlayerInt(playerid, "gunamount", pInfo[playerid][pGunAmount]);
			GangEd[i] += till;
			mysql_query_string[0] = EOS;
			switch(i)
			{
			    case 0: format(mysql_query_string, 100, "UPDATE "T_GANG" SET groveed = %d", GangEd[0]);
			    case 1: format(mysql_query_string, 100, "UPDATE "T_GANG" SET ballased = %d", GangEd[1]);
			    case 2: format(mysql_query_string, 100, "UPDATE "T_GANG" SET rifaed = %d", GangEd[2]);
			    case 3: format(mysql_query_string, 100, "UPDATE "T_GANG" SET azteced = %d", GangEd[3]);
			    case 4: format(mysql_query_string, 100, "UPDATE "T_GANG" SET vagosed = %d", GangEd[4]);
			}
			mysql_tquery(dbHandle, mysql_query_string, "", "");
			new string[90];
			format(string, 90, "Вы положили на склад банды ед. оружия (+%i)", till);
			SendClientMessage(playerid, COLOR_GREEN, string);
			format(string, 90, "%s[%d] положил%s на склад банды %i ед. оружия", GetName(playerid), playerid, (pInfo[playerid][pSex]==1)?(""):("а"), till);
			SendFMes(pInfo[playerid][pMember], COLOR_YELLOW, string);
			return 1;
	    }
	case dGang+3:
	    {
	        if(!response) return 1;
			new till = 0;
			if(sscanf(inputtext, "i", till)) return ShowPlayerDialog(playerid, dGang+3, 1, "{FFCC00}Положить деньги", "{FFFFFF}Введите количество денег:", "Принять", "Отмена");
			if(till < 0) return ShowPlayerDialog(playerid, dGang+3, 1, "{FFCC00}Положить деньги", "{FFFFFF}Введите количество денег:", "Принять", "Отмена");
			if(till > GetCash(playerid) || till < 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько денег!");
			new i = (pInfo[playerid][pMember] == TEAM_GROVE) ? (0) : (pInfo[playerid][pMember] == TEAM_BALLAS) ? (1) : (pInfo[playerid][pMember] == TEAM_RIFA) ? (2) : (pInfo[playerid][pMember] == TEAM_AZTECAS) ? (3) : (4);
            TransferMoney(playerid, -1, till);
			FracBank[i] += till;
			mysql_query_string[0] = EOS;
			switch(i)
			{
			    case 0: format(mysql_query_string, 100, "UPDATE "T_GANG" SET grovebank = %d", FracBank[0]);
			    case 1: format(mysql_query_string, 100, "UPDATE "T_GANG" SET ballasbank = %d", FracBank[1]);
			    case 2: format(mysql_query_string, 100, "UPDATE "T_GANG" SET rifabank = %d", FracBank[2]);
			    case 3: format(mysql_query_string, 100, "UPDATE "T_GANG" SET aztecbank = %d", FracBank[3]);
			    case 4: format(mysql_query_string, 100, "UPDATE "T_GANG" SET vagosbank = %d", FracBank[4]);
			}
			mysql_tquery(dbHandle, mysql_query_string, "", "");
			new string[90];
			format(string, 90, "Вы положили на склад банды %d$", till);
			SendClientMessage(playerid, COLOR_GREEN, string);
			format(string, 90, "%s[%d] положил%s на склад банды %i$", GetName(playerid), playerid, (pInfo[playerid][pSex]==1)?(""):("а"), till);
			SendFMes(pInfo[playerid][pMember], COLOR_YELLOW, string);
			return 1;
	    }
	case dGang+4:
		{
	    	if(!response) return 1;
			new till = 0;
			if(sscanf(inputtext, "i", till)) return ShowPlayerDialog(playerid, dGang+4, 1, "{FFCC00}Положить наркотики", "{FFFFFF}Введите количество наркотиков:","Принять", "Отмена");
			if(till < 0) return ShowPlayerDialog(playerid, dGang+4, 1, "{FFCC00}Положить наркотики", "{FFFFFF}Введите количество наркотиков:","Принять", "Отмена");
			if(pInfo[playerid][pDrugs] < till) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько наркотиков!");
			new i = (pInfo[playerid][pMember] == TEAM_GROVE) ? (7) : (pInfo[playerid][pMember] == TEAM_BALLAS) ? (8) : (pInfo[playerid][pMember] == TEAM_RIFA) ? (9) : (pInfo[playerid][pMember] == TEAM_AZTECAS) ? (10) : (11);
			pInfo[playerid][pDrugs] -= till;
			MysqlUpdatePlayerInt(playerid, "drugs", pInfo[playerid][pDrugs]);
			DrugsBank[i] += till;
			mysql_query_string[0] = EOS;
			switch(i)
			{
			    case 7: format(mysql_query_string, 100, "UPDATE "T_GANG" SET grovedrugs = %d", DrugsBank[TEAM_GROVE]);
			    case 8: format(mysql_query_string, 100, "UPDATE "T_GANG" SET ballasdrugs = %d", DrugsBank[TEAM_BALLAS]);
			    case 9: format(mysql_query_string, 100, "UPDATE "T_GANG" SET rifadrugs = %d", DrugsBank[TEAM_RIFA]);
			    case 10: format(mysql_query_string, 100, "UPDATE "T_GANG" SET aztecdrugs = %d", DrugsBank[TEAM_AZTECAS]);
			    case 11: format(mysql_query_string, 100, "UPDATE "T_GANG" SET vagosdrugs = %d", DrugsBank[TEAM_VAGOS]);
			}
			mysql_tquery(dbHandle, mysql_query_string, "", "");
			new string[90];
			format(string, 90, "Вы положили на склад банды наркотики (+%i)", till);
			SendClientMessage(playerid, COLOR_GREEN, string);
			format(string, 90, "%s[%d] положил%s на склад банды %i грамм наркотиков", GetName(playerid), playerid, (pInfo[playerid][pSex]==1)?(""):("а"), till);
			SendFMes(pInfo[playerid][pMember], COLOR_YELLOW, string);
			return 1;
		}
	case dGang+5:
	    {
	        if(!response) return 1;
			new till = 0;
			if(sscanf(inputtext, "i", till)) return ShowPlayerDialog(playerid, dGang+5, 1, "{FFCC00}Взять патроны", "{FFFFFF}Введите количество патронов:", "Принять", "Отмена");
			new i = (pInfo[playerid][pMember] == TEAM_GROVE) ? (0) : (pInfo[playerid][pMember] == TEAM_BALLAS) ? (1) : (pInfo[playerid][pMember] == TEAM_RIFA) ? (2) : (pInfo[playerid][pMember] == TEAM_AZTECAS) ? (3) : (4);
			if(till < 0 || till > GangPatr[i]) return ShowPlayerDialog(playerid, dGang+5, 1, "{FFCC00}Взять патроны", "{FFFFFF}Введите количество патронов:", "Принять", "Отмена");
			if(pInfo[playerid][pPatron]+till > 500 && !pInfo[playerid][pImprove][2]) return SendClientMessage(playerid, COLOR_GREY, "У Вас не может быть более 500 патрон!");
			if(pInfo[playerid][pPatron]+till > 1000 && pInfo[playerid][pImprove][2]) return SendClientMessage(playerid, COLOR_GREY, "У Вас не может быть более 1000 патрон!");
			pInfo[playerid][pPatron] += till;
			MysqlUpdatePlayerInt(playerid, "patron", pInfo[playerid][pPatron]);
			GangPatr[i] -= till;
			mysql_query_string[0] = EOS;
			switch(i)
			{
			    case 0: format(mysql_query_string, 100, "UPDATE "T_GANG" SET grovepat = %d", GangPatr[0]);
			    case 1: format(mysql_query_string, 100, "UPDATE "T_GANG" SET ballaspat = %d", GangPatr[1]);
			    case 2: format(mysql_query_string, 100, "UPDATE "T_GANG" SET rifapat = %d", GangPatr[2]);
			    case 3: format(mysql_query_string, 100, "UPDATE "T_GANG" SET aztecpat = %d", GangPatr[3]);
			    case 4: format(mysql_query_string, 100, "UPDATE "T_GANG" SET vagospat = %d", GangPatr[4]);
			}
			mysql_tquery(dbHandle, mysql_query_string, "", "");
			new string[90];
			format(string, 90, "Вы взяли со склада банды патроны (+%i)", till);
			SendClientMessage(playerid, COLOR_GREEN, string);
			format(string, 90, "%s[%d] взял%s со склада банды %i патрон", GetName(playerid), playerid, (pInfo[playerid][pSex]==1)?(""):("а"), till);
			SendFMes(pInfo[playerid][pMember], COLOR_YELLOW, string);
			return 1;
	    }
	case dGang+6:
	    {
	        if(!response) return 1;
			new till = 0;
			if(sscanf(inputtext, "i",till)) return ShowPlayerDialog(playerid, dGang+6, 1, "{FFCC00}Взять ед. оружия", "{FFFFFF}Введите количество ед. оружия:", "Принять", "Отмена");
			new i = (pInfo[playerid][pMember] == TEAM_GROVE) ? (0) : (pInfo[playerid][pMember] == TEAM_BALLAS) ? (1) : (pInfo[playerid][pMember] == TEAM_RIFA) ? (2) : (pInfo[playerid][pMember] == TEAM_AZTECAS) ? (3) : (4);
			if(till < 0 || till > GangEd[i]) return ShowPlayerDialog(playerid, dGang+6, 1, "{FFCC00}Взять ед. оружия", "{FFFFFF}Введите количество ед. оружия:", "Принять", "Отмена");
			if(pInfo[playerid][pGunAmount]+till > 500 && !pInfo[playerid][pImprove][2]) return SendClientMessage(playerid, COLOR_GREY, "У Вас не может быть более 500 ед. оружия!");
			if(pInfo[playerid][pGunAmount]+till > 1000 && pInfo[playerid][pImprove][2]) return SendClientMessage(playerid, COLOR_GREY, "У Вас не может быть более 1000 ед. оружия!");
			pInfo[playerid][pGunAmount] += till;
			MysqlUpdatePlayerInt(playerid, "gunamount", pInfo[playerid][pGunAmount]);
			GangEd[i] -= till;
			mysql_query_string[0] = EOS;
			switch(i)
			{
			    case 0: format(mysql_query_string, 100, "UPDATE "T_GANG" SET groveed = %d", GangEd[0]);
			    case 1: format(mysql_query_string, 100, "UPDATE "T_GANG" SET ballased = %d", GangEd[1]);
			    case 2: format(mysql_query_string, 100, "UPDATE "T_GANG" SET rifaed = %d", GangEd[2]);
			    case 3: format(mysql_query_string, 100, "UPDATE "T_GANG" SET azteced = %d", GangEd[3]);
			    case 4: format(mysql_query_string, 100, "UPDATE "T_GANG" SET vagosed = %d", GangEd[4]);
			}
			mysql_tquery(dbHandle, mysql_query_string, "", "");
			new string[90];
			format(string, 90, "Вы взяли со склада банды ед. оружия (+%i)", till);
			SendClientMessage(playerid, COLOR_GREEN, string);
			format(string, 90, "%s[%d] взял%s со склада банды %i ед. оружия", GetName(playerid), playerid, (pInfo[playerid][pSex]==1)?(""):("а"), till);
			SendFMes(pInfo[playerid][pMember], COLOR_YELLOW, string);
			return 1;
	    }
	case dGang+7:
	    {
	        if(!response) return 1;
			new till = 0;
			if(sscanf(inputtext, "i", till)) return ShowPlayerDialog(playerid, dGang+7, 1, "{FFCC00}Взять деньги", "{FFFFFF}Введите количество денег:", "Принять", "Отмена");
			if(till < 0) return ShowPlayerDialog(playerid, dGang+7, 1, "{FFCC00}Взять деньги", "{FFFFFF}Введите количество денег:", "Принять", "Отмена");
			new i = (pInfo[playerid][pMember] == TEAM_GROVE) ? (0) : (pInfo[playerid][pMember] == TEAM_BALLAS) ? (1) : (pInfo[playerid][pMember] == TEAM_RIFA) ? (2) : (pInfo[playerid][pMember] == TEAM_AZTECAS) ? (3) : (4);
			if(till > FracBank[i] || till < 0) return SendClientMessage(playerid, COLOR_GREY, "На складе банды нет столько денег!");
            TransferMoney(-1, playerid, till);
			FracBank[i] -= till;
			mysql_query_string[0] = EOS;
			switch(i)
			{
			    case 0: format(mysql_query_string, 100, "UPDATE "T_GANG" SET grovebank = %d", FracBank[0]);
			    case 1: format(mysql_query_string, 100, "UPDATE "T_GANG" SET ballasbank = %d", FracBank[1]);
			    case 2: format(mysql_query_string, 100, "UPDATE "T_GANG" SET rifabank = %d", FracBank[2]);
			    case 3: format(mysql_query_string, 100, "UPDATE "T_GANG" SET aztecbank = %d", FracBank[3]);
			    case 4: format(mysql_query_string, 100, "UPDATE "T_GANG" SET vagosbank = %d", FracBank[4]);
			}
			mysql_tquery(dbHandle, mysql_query_string, "", "");
			new string[90];
			format(string, 90, "Вы взяли со склада банды %d$", till);
			SendClientMessage(playerid, COLOR_GREEN, string);
			format(string, 90, "%s[%d] взял%s со склада банды %i$", GetName(playerid), playerid, (pInfo[playerid][pSex]==1)?(""):("а"), till);
			SendFMes(pInfo[playerid][pMember], COLOR_YELLOW, string);
			return 1;
	    }
	case dGang+8:
	    {
	        if(!response) return 1;
			new till = 0;
			if(sscanf(inputtext, "i", till)) return ShowPlayerDialog(playerid, dGang+8, 1, "{FFCC00}Взять наркотики", "{FFFFFF}Введите количество грамм наркотиков:", "Принять", "Отмена");
			new i = (pInfo[playerid][pMember] == TEAM_GROVE) ? (7) : (pInfo[playerid][pMember] == TEAM_BALLAS) ? (8) : (pInfo[playerid][pMember] == TEAM_RIFA) ? (9) : (pInfo[playerid][pMember] == TEAM_AZTECAS) ? (10) : (11);
			if(till < 0 || till > DrugsBank[i]) return ShowPlayerDialog(playerid, dGang+8, 1, "{FFCC00}Взять наркотики", "{FFFFFF}Введите количество грамм наркотиков:", "Принять", "Отмена");
			if(pInfo[playerid][pDrugs]+till > 100 && !pInfo[playerid][pImprove][2]) return SendClientMessage(playerid, COLOR_GREY, "У Вас не может быть более 100 грамм наркотиков!");
			if(pInfo[playerid][pDrugs]+till > 200 && pInfo[playerid][pImprove][2]) return SendClientMessage(playerid, COLOR_GREY, "У Вас не может быть более 100 грамм наркотиков!");
			pInfo[playerid][pDrugs] += till;
			MysqlUpdatePlayerInt(playerid, "drugs", pInfo[playerid][pDrugs]);
			DrugsBank[i] -= till;
			mysql_query_string[0] = EOS;
			switch(i)
			{
			    case 7: format(mysql_query_string, 100, "UPDATE "T_GANG" SET grovedrugs = %d", DrugsBank[TEAM_GROVE]);
			    case 8: format(mysql_query_string, 100, "UPDATE "T_GANG" SET ballasdrugs = %d", DrugsBank[TEAM_BALLAS]);
			    case 9: format(mysql_query_string, 100, "UPDATE "T_GANG" SET rifadrugs = %d", DrugsBank[TEAM_RIFA]);
			    case 10: format(mysql_query_string, 100, "UPDATE "T_GANG" SET aztecdrugs = %d", DrugsBank[TEAM_AZTECAS]);
			    case 11: format(mysql_query_string, 100, "UPDATE "T_GANG" SET vagosdrugs = %d", DrugsBank[TEAM_VAGOS]);
			}
			mysql_tquery(dbHandle, mysql_query_string, "", "");
			new string[90];
			format(string, 90, "Вы взяли со склада банды наркотики (+%i)", till);
			SendClientMessage(playerid, COLOR_GREEN, string);
			format(string, 90, "%s[%d] взял%s со склада банды %i гр. наркотиков", GetName(playerid), playerid, (pInfo[playerid][pSex]==1)?(""):("а"), till);
			SendFMes(pInfo[playerid][pMember], COLOR_YELLOW, string);
			return 1;
	    }
	case dJob+1:
		{
			if(!response) return cmd_menu(playerid);
			new setting = 1 << listitem;
			if(!(pInfo[playerid][pSettings] & setting)) pInfo[playerid][pSettings] |= setting;
			else pInfo[playerid][pSettings] ^= setting;
			MysqlUpdatePlayerInt(playerid, "settings", pInfo[playerid][pSettings]);
			if(setting == setShowNickname)
			{
				if(pInfo[playerid][pSettings] & setShowNickname)
					foreach(new i : Player) ShowPlayerNameTagForPlayer(playerid, i, 1);
				else
					foreach(new i : Player) ShowPlayerNameTagForPlayer(playerid, i, 0);
			}
			else if(setting == setHungerInfo)
			{
			    if(pInfo[playerid][pSettings] & setHungerInfo)
			    {
			        TextDrawShowForPlayer(playerid, hunger_background_TD[0]);
					TextDrawShowForPlayer(playerid, hunger_background_TD[1]);
					PlayerTextDrawShow(playerid, hunger_progress_TD[playerid]);
			    }
			    else
			    {
			        if(GetPVarInt(playerid, "hunger_timer") <= gettime()) SendClientMessage(playerid, COLOR_YELLOW, "Вы отключили отображение сытости игрока, для просмотра используйте команду /hunger");
			        SetPVarInt(playerid, "hunger_timer", gettime()+30);
			        PlayerTextDrawHide(playerid, hunger_progress_TD[playerid]);
					TextDrawHideForPlayer(playerid, hunger_background_TD[0]);
					TextDrawHideForPlayer(playerid, hunger_background_TD[1]);
			    }
			}
			else if(setting == setShowKeis)
			{
			    if(pInfo[playerid][pSettings] & setShowKeis)
			    {
				    if(GetCash(playerid) >= 1000000)
					{
					    if(!GetPVarInt(playerid, "keis"))
					    {
				        	SetPlayerAttachedObject(playerid,8,1210,5,0.299999,0.099999,0.000000,0.000000,-83.000000,0.000000,1.000000,1.000000,1.000000);
				        	SetPVarInt(playerid, "keis", true);
						}
						if(GetPVarInt(playerid, "keis"))
						{
						    if(GetPlayerWeapon(playerid) > 0 || GetPlayerState(playerid) != PLAYER_STATE_ONFOOT || pTemp[playerid][pWork])
						    {
						        if(IsPlayerAttachedObjectSlotUsed(playerid, 8)) RemovePlayerAttachedObject(playerid, 8);
						    }
						    else
						    {
						        if(!IsPlayerAttachedObjectSlotUsed(playerid, 8)) SetPlayerAttachedObject(playerid,8,1210,5,0.299999,0.099999,0.000000,0.000000,-83.000000,0.000000,1.000000,1.000000,1.000000);
						    }
						}
					}
				}
				else
				{
					if(IsPlayerAttachedObjectSlotUsed(playerid, 8))
					{
					    if(GetPVarInt(playerid, "keis"))
					    {
			      			RemovePlayerAttachedObject(playerid, 8);
			      			DeletePVar(playerid, "keis");
						}
					}
				}
			}
			PlayerSettings(playerid);
		}
	case dMail:
	    {
	        if(!response) return PlayerSecurity(playerid);
	    	if(strlen(inputtext) < 1 || strlen(inputtext) > 65) return ShowPlayerDialog(playerid, dMail, DIALOG_STYLE_INPUT, "{FFCC00}Подтверждение почты", "{ffffff}Введите Ваш e-mail адрес, на который Вам будет отправлен код подтверждения.\nЕсли вы потеряете доступ к аккаунту, то с помощью e-mail вы сможете восстановить его.", "Далее", "Закрыть");
			for(new i = strlen(inputtext); i != 0; --i)
			{
				switch(inputtext[i])
				{
					case 'А'..'Я', 'а'..'я', ' ': return ShowPlayerDialog(playerid, dMail, DIALOG_STYLE_INPUT, "{F04245}Ошибка", "{FFFFFF}E-mail адрес не должен содержать запрещённые символы!\nВозможно Вы вводите его не в той раскладке.", "Повторить", "");
				}
			}
			if(!IsValidEmail(inputtext))
			{
			    SendClientMessage(playerid, COLOR_GREY, "Ошибка при вводе e-mail, вводите настоящий адрес!");
				return ShowPlayerDialog(playerid, dMail, DIALOG_STYLE_INPUT, "{FFCC00}Подтверждение почты", "{ffffff}Введите Ваш e-mail адрес, на который Вам будет отправлен код подтверждения.\nЕсли вы потеряете доступ к аккаунту, то с помощью e-mail вы сможете восстановить его.", "Далее", "Закрыть");
			}
			mysql_query_string[0] = EOS;
			format(mysql_query_string, 128, "SELECT * FROM "T_ACCOUNTS" WHERE mail = '%s' LIMIT 1", inputtext);
			mysql_tquery(dbHandle, mysql_query_string, "@OnPlayerConfirmedMail", "is", playerid, inputtext);
	    }
	case dMail+1:
	    {
	        if(!response) return 1;
	        if(!strlen(inputtext)) return ShowPlayerDialog(playerid, dMail+1, DIALOG_STYLE_INPUT, "{FFCC00}Подтверждение почты", "{FFFFFF}Введите код подтверждения который пришёл Вам на почту:", "Принять", "Закрыть");
	        for(new i; i < strlen(inputtext); i++)
			{
				if(inputtext[i] < '0' || inputtext[i] > '9')  return ShowPlayerDialog(playerid, dMail+1, DIALOG_STYLE_INPUT, "{FFCC00}Подтверждение почты", "{FFFFFF}Введите код подтверждения который пришёл Вам на почту:", "Принять", "Закрыть");
			}
		    if(GetPVarInt(playerid,"authcode") != strval(inputtext)) return ShowPlayerDialog(playerid, dMail+1, DIALOG_STYLE_INPUT, "{FFCC00}Подтверждение почты", "{FFFFFF}Введите код подтверждения который пришёл Вам на почту:\n\n{F04245}Неверный код, потвердите попытку ввода", "Принять", "Закрыть");
            new string[128], authmail[64];
			GetPVarString(playerid, "authmail", authmail, sizeof(authmail));
			format(string, sizeof(string), "Поздравляем, вы успешно подтвердили почту {FFFFFF}%s", authmail);
			SendClientMessage(playerid, COLOR_GREEN, string);
			pInfo[playerid][pMailConfirmed] = 1;
			strmid(pInfo[playerid][pMail], authmail, 0, strlen(authmail), 64);
			MysqlUpdatePlayerStr(playerid, "mail", pInfo[playerid][pMail]);
			MysqlUpdatePlayerInt(playerid, "mailconf", pInfo[playerid][pMailConfirmed]);
			DeletePVar(playerid, "authcode");
			DeletePVar(playerid, "authmail");
	    }
	case dLicWeapon:
		{
		    if(!response) return ShowPlayerDialog(playerid, dMenuPolice, DIALOG_STYLE_LIST, "{FFCC00}Что Вас интересует?", "1. Оформление лицензии на оружие\n2. Оплата штрафов\n3. Получение гос.номера на Т/С\n4. Сдаться с повинной", "Выбрать", "Отмена");
			if(GetCash(playerid) < 30000) return SendClientMessage(playerid, COLOR_GREY, NoMoney);
			TransferMoney(playerid, -1, 30000);
			GiveLicWeapon(playerid);
			ShowPlayerDialog(playerid, dNull, DIALOG_STYLE_MSGBOX, " ", "\n\n{FFFFFF}Вы успешно оформили лицензию на оружие\nТеперь Вам разрешено использовать оружие\n\n{F04245}За несоблюдение законов и правил обращения с оружием,\nу Вас его могут изъять, вместе с лицензией, а также\nвы можете понести наказание по уголовному кодексу штата\n\n", "Ок", "");
		}
	case dMenuPolice:
	    {
	        if(!response) return 1;
	        switch(listitem)
	        {
	            case 0:
	            {
                	if(GetLicWeapon(playerid)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы уже имеете лицензию на владение оружием");
	    			else if(pInfo[playerid][pLevel] < 3) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Для покупки лицензии необходимо иметь 3 уровень");
	    			else if(PassInfo[playerid][mcState] < 2) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас нету мед.карты или вам запрещенно использовать оружие");
	    			ShowPlayerDialog(playerid, dLicWeapon, DIALOG_STYLE_MSGBOX, " ", "\n\n{FFFFFF}Желаете оформить лицензию на владение оружием?\nСтоимость: {63BD4E}30000$\n\n", "Принять", "Назад");
  				}
  				case 1:
  				{
  				    if(pInfo[playerid][pFineAmount] < 1) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У Вас нету неоплаченных штрафов за превышения скорости");
					stringer[0] = EOS;
					format(stringer, 250, "\n\n{FFFFFF}Желаете оплатить штрафы за превышения скорости?\n\nОбщая сумма штрафов: {63BD4E}%i$\n\n{FFFFFF}После оплаты всех имеющихся штрафов\nВы снова сможете получить водительские права.\n\n", pInfo[playerid][pFineAmount]);
					ShowPlayerDialog(playerid, dMenuPolice+1, DIALOG_STYLE_MSGBOX, " ", stringer, "Оплатить", "Назад");
  				}
  				case 2: ShowPlayerDialog(playerid, dVehNumber, DIALOG_STYLE_MSGBOX, "{FFCC00}Получение гос.номера на Т/С", "{63BD4E}Требования:\n{FFFFFF}- Наличие паспорта\n- Наличие водительского удостоверения\n- Документы на автомобиль\n- Наличие квартиры/частного дома\n\n{afafaf}Если все это у вас есть, нажмите `Далее`", "Далее", "Назад");
  				case 3:
  				{
  				    if(!pInfo[playerid][pWanted]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы не находитесь в розыске!");
					ResetPlayerWeaponsEx(playerid);
					pInfo[playerid][pJailTime] = (((pInfo[playerid][pWanted]*10)*60)/3)*2;
					pInfo[playerid][pWanted] = 0;
					SetPlayerWantedLevel(playerid, pInfo[playerid][pWanted]);
					if(pInfo[playerid][pZakon] < 100) pInfo[playerid][pZakon]++;
					if(pCuff[playerid][pCuffer] != INVALID_PLAYER_ID)
					{
						new cuffer = pCuff[playerid][pCuffer];
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
						RemovePlayerAttachedObject(playerid, 0);
						pCuff[playerid][pCuffer] = pCuff[playerid][pCuffee] = pCuff[cuffer][pCuffee] = pCuff[cuffer][pCuffer] = INVALID_PLAYER_ID;
					}
					SendClientMessage(playerid, COLOR_BLUE, "Вы добровольно сдались в полицию. Срок Вашего пребывания в тюрьме сокращён (/jailtime)");
			        new rand_coord = random(sizeof(JailSpawn));
				    SetPlayerPos(playerid, JailSpawn[rand_coord][0], JailSpawn[rand_coord][1], JailSpawn[rand_coord][2], 1);
				    SetPlayerFacingAngle(playerid, JailSpawn[rand_coord][3]);
  				    pInfo[playerid][pJail] = GetPlayerVirtualWorld(playerid);
					mysql_query_string[0] = EOS;
					format(mysql_query_string, 200, "UPDATE "T_ACCOUNTS" SET jail = %i, jailtime = %i, wanted = 0, zakon = %i WHERE id = %i", pInfo[playerid][pJail], pInfo[playerid][pJailTime], pInfo[playerid][pZakon], pInfo[playerid][pID]);
					mysql_tquery(dbHandle, mysql_query_string, "", "");
  				}
	        }
	    }
	case dMenuPolice+1:
		{
		    if(!response) return ShowPlayerDialog(playerid, dMenuPolice, DIALOG_STYLE_LIST, "{FFCC00}Что Вас интересует?", "1. Оформление лицензии на оружие\n2. Оплата штрафов\n3. Получение гос.номера на Т/С\n4. Сдаться с повинной", "Выбрать", "Отмена");
		    if(pInfo[playerid][pFineAmount] < 1) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У Вас нету неоплаченных штрафов за превышения скорости");
		    if(GetCash(playerid) < pInfo[playerid][pFineAmount]) return SendClientMessage(playerid, COLOR_GREY, NoMoney);
		    TransferMoney(playerid, -1, pInfo[playerid][pFineAmount]);
		    ShowPlayerDialog(playerid, dNull, DIALOG_STYLE_MSGBOX, " ", "\n\n{FFFFFF}Вы успешно оплатили всю сумму штрафов\n\n", "Ок", "");
		    pInfo[playerid][pFine] = pInfo[playerid][pFineAmount] = pInfo[playerid][pFineTime] = 0;
		    MysqlUpdatePlayerInt(playerid, "fineamount", pInfo[playerid][pFineAmount]);
		    MysqlUpdatePlayerInt(playerid, "fine", pInfo[playerid][pFine]);
			MysqlUpdatePlayerInt(playerid, "finetime", pInfo[playerid][pFineTime]);
		}
	case dAutoSchool:
	    {
			if(!response) return 1;
			if(!listitem)
	        {
	            SetPlayerPos(playerid, 1168.2003,-1321.6484,1221.6130, 1);
				SetPlayerFacingAngle(playerid, 268.1917);
				SetPlayerInterior(playerid, 1);
				SetPlayerVirtualWorld(playerid, 1);
				SetCameraBehindPlayer(playerid);
	        }
	        else
	        {
	            if(pInfo[playerid][pMember] != TEAM_AUTOSCHOOL) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	            SetPlayerPos(playerid, 1131.3286,-1337.9222,24.8770, 1);
				SetPlayerFacingAngle(playerid, 180.5644);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				SetCameraBehindPlayer(playerid);
	        }
	    }
    case dAutoSchool+1:
	    {
	        if(!response) return 1;
	        if(!listitem)
	        {
	            SetPlayerPos(playerid, 1149.4191,-1347.7845,14.6030, 1);
				SetPlayerFacingAngle(playerid, 270.7950);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				SetCameraBehindPlayer(playerid);
	        }
	        else
	        {
	            if(pInfo[playerid][pMember] != TEAM_AUTOSCHOOL) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	            SetPlayerPos(playerid, 1131.3286,-1337.9222,24.8770, 1);
				SetPlayerFacingAngle(playerid, 180.5644);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				SetCameraBehindPlayer(playerid);
	        }
	    }
	case dAutoSchool+2:
	    {
	        if(!response) return 1;
	        if(!listitem)
	        {
	            SetPlayerPos(playerid, 1168.2003,-1321.6484,1221.6130, 1);
				SetPlayerFacingAngle(playerid, 268.1917);
				SetPlayerInterior(playerid, 1);
				SetPlayerVirtualWorld(playerid, 1);
				SetCameraBehindPlayer(playerid);
	        }
	        else
	        {
	            SetPlayerPos(playerid, 1149.4191,-1347.7845,14.6030, 1);
				SetPlayerFacingAngle(playerid, 270.7950);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				SetCameraBehindPlayer(playerid);
	        }
	    }
   /* case dHospitalLS:
	    {
			if(!response) return 1;
			if(!listitem)
	        {
	            SetPlayerPos(playerid,2459.1506,-2139.4192,634.2466, 1);
				SetPlayerFacingAngle(playerid, 91.2250);
				SetPlayerInterior(playerid,1);
				SetPlayerVirtualWorld(playerid, 4);
				SetCameraBehindPlayer(playerid);
	        }
	        else
	        {
             	if(!IsAMedic(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
				SetPlayerPos(playerid, 2114.7644,-2389.7288,22.6821, 1);
				SetPlayerFacingAngle(playerid, 89.7592);
				SetPlayerInterior(playerid, 0);
		 		SetPlayerVirtualWorld(playerid, 0);
		 		SetCameraBehindPlayer(playerid);
	        }
	    }
    case dHospitalLS+1:
	    {
	        if(!response) return 1;
	        if(!listitem)
	        {
	            if(PlayerDied[playerid] || PlayerLie[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Вы не прошли курс лечения");
				SetPlayerPos(playerid, 1518.2756,-1571.9285,14.5875, 1);
				SetPlayerFacingAngle(playerid, 180.0000);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				SetCameraBehindPlayer(playerid);
	        }
	        else
	        {
	            if(!IsAMedic(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
				SetPlayerPos(playerid, 1493.3563,-1560.9987,26.6401, 1);
				SetPlayerFacingAngle(playerid, 89.7592);
				SetPlayerInterior(playerid, 0);
		 		SetPlayerVirtualWorld(playerid, 0);
		 		SetCameraBehindPlayer(playerid);
	        }
	    }
	case dHospitalLS+2:
	    {
	        if(!response) return 1;
	        if(!listitem)
	        {
	            SetPlayerPos(playerid,488.3534,1135.4752,1020.5549, 1);
				SetPlayerFacingAngle(playerid, 91.2250);
				SetPlayerInterior(playerid,1);
				SetPlayerVirtualWorld(playerid, 4);
				SetCameraBehindPlayer(playerid);
	        }
	        else
	        {
				SetPlayerPos(playerid, 1518.2756,-1571.9285,14.5875, 1);
				SetPlayerFacingAngle(playerid, 180.0000);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				SetCameraBehindPlayer(playerid);
	        }
	    }*/
    case dHospitalSF:
	    {
			if(!response) return 1;
			if(!listitem)
	        {
	            SetPlayerPos(playerid,488.3534,1135.4752,1020.5549, 1);
				SetPlayerFacingAngle(playerid, 91.2250);
				SetPlayerInterior(playerid, 1);
				SetPlayerVirtualWorld(playerid, 5);
				SetCameraBehindPlayer(playerid);
	        }
	        else
	        {
             	if(!IsAMedic(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
				SetPlayerPos(playerid, -2714.1086,628.3011,34.4028, 1);
				SetPlayerFacingAngle(playerid, 182.0016);
				SetPlayerInterior(playerid, 0);
		 		SetPlayerVirtualWorld(playerid, 0);
		 		SetCameraBehindPlayer(playerid);
	        }
	    }
    case dHospitalSF+1:
	    {
	        if(!response) return 1;
	        if(!listitem)
	        {
	            if(PlayerDied[playerid] || PlayerLie[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Вы не прошли курс лечения");
				SetPlayerPos(playerid, -2655.0098,637.2404,14.4531, 1);
				SetPlayerFacingAngle(playerid, 179.9766);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				SetCameraBehindPlayer(playerid);
	        }
	        else
	        {
	            if(!IsAMedic(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
				SetPlayerPos(playerid, -2714.1086,628.3011,34.4028, 1);
				SetPlayerFacingAngle(playerid, 182.0016);
				SetPlayerInterior(playerid, 0);
		 		SetPlayerVirtualWorld(playerid, 0);
		 		SetCameraBehindPlayer(playerid);
	        }
	    }
	case dHospitalSF+2:
	    {
	        if(!response) return 1;
	        if(!listitem)
	        {
	            SetPlayerPos(playerid,488.3534,1135.4752,1020.5549, 1);
				SetPlayerFacingAngle(playerid, 91.2250);
				SetPlayerInterior(playerid, 1);
				SetPlayerVirtualWorld(playerid, 5);
				SetCameraBehindPlayer(playerid);
	        }
	        else
	        {
				SetPlayerPos(playerid, -2655.0098,637.2404,14.4531, 1);
				SetPlayerFacingAngle(playerid, 179.9766);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				SetCameraBehindPlayer(playerid);
	        }
	    }

    case dHospitalLV:
	    {
			if(!response) return 1;
			if(!listitem)
	        {
	            SetPlayerPos(playerid,488.3534,1135.4752,1020.5549, 1);
				SetPlayerFacingAngle(playerid, 91.2250);
				SetPlayerInterior(playerid,1);
				SetPlayerVirtualWorld(playerid, 6);
				SetCameraBehindPlayer(playerid);
	        }
	        else
	        {
             	if(!IsAMedic(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
				SetPlayerPos(playerid, 1607.8663,1788.6047,30.4688, 1);
				SetPlayerFacingAngle(playerid, 1.1633);
				SetPlayerInterior(playerid, 0);
		 		SetPlayerVirtualWorld(playerid, 0);
		 		SetCameraBehindPlayer(playerid);
	        }
	    }
    case dHospitalLV+1:
	    {
	        if(!response) return 1;
	        if(!listitem)
	        {
	            if(PlayerDied[playerid] || PlayerLie[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Вы не прошли курс лечения");
				SetPlayerPos(playerid, 1607.3972,1819.0358,10.8203, 1);
				SetPlayerFacingAngle(playerid, 0.8500);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				SetCameraBehindPlayer(playerid);
	        }
	        else
	        {
	            if(!IsAMedic(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
				SetPlayerPos(playerid, 1607.8663,1788.6047,30.4688, 1);
				SetPlayerFacingAngle(playerid, 1.1633);
				SetPlayerInterior(playerid, 0);
		 		SetPlayerVirtualWorld(playerid, 0);
		 		SetCameraBehindPlayer(playerid);
	        }
	    }
	case dHospitalLV+2:
	    {
	        if(!response) return 1;
	        if(!listitem)
	        {
	            SetPlayerPos(playerid,488.3534,1135.4752,1020.5549, 1);
				SetPlayerFacingAngle(playerid, 91.2250);
				SetPlayerInterior(playerid,1);
				SetPlayerVirtualWorld(playerid, 6);
				SetCameraBehindPlayer(playerid);
	        }
	        else
	        {
				SetPlayerPos(playerid, 1607.3972,1819.0358,10.8203, 1);
				SetPlayerFacingAngle(playerid, 0.8500);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				SetCameraBehindPlayer(playerid);
	        }
	    }
	case dShowAll:
	    {
	        if(!response) return 1;
	        new string[128];
	        switch(listitem)
	        {
	            case 0: format(string, sizeof(string), "SELECT * FROM "T_ACCOUNTS" WHERE member = %d AND admin = 0 ORDER BY name LIMIT 45", pInfo[playerid][pMember]);
				case 1: format(string, sizeof(string), "SELECT * FROM "T_ACCOUNTS" WHERE member = %d AND admin = 0 ORDER BY rank LIMIT 45", pInfo[playerid][pMember]);
				case 2: format(string, sizeof(string), "SELECT * FROM "T_ACCOUNTS" WHERE member = %d AND admin = 0 ORDER BY rank DESC LIMIT 45", pInfo[playerid][pMember]);
				case 3: format(string, sizeof(string), "SELECT * FROM "T_ACCOUNTS" WHERE member = %d AND admin = 0 ORDER BY level LIMIT 45", pInfo[playerid][pMember]);
				case 4: format(string, sizeof(string), "SELECT * FROM "T_ACCOUNTS" WHERE member = %d AND admin = 0 ORDER BY level DESC LIMIT 45", pInfo[playerid][pMember]);
	        }
	        mysql_tquery(dbHandle, string, "@ShowAll", "d", playerid);
	    }
	case dShowAll+1:
	    {
	        if(response) ShowPlayerDialog(playerid, dShowAll, DIALOG_STYLE_LIST, "{3399FF}Выберите тип сортировки списка", "1. В алфавитном порядке\n2. По возрастанию ранга\n3. По убыванию ранга\n4. По возрастанию уровня\n5. По убыванию уровня", "Выбрать", "Закрыть");
	        else return 1;
	    }
	case dBusJob: {
	        if(!response) return RemovePlayerFromVehicle(playerid);
			ShowPlayerDialog(playerid, dBusJob+1, 2, "{FFCC00}Выберите маршрут:", "1. г.Южный - Лесопилка\n2. Батырево - Шахта", "Выбрать", "Отмена");
	    }
	case dBusJob+1:
	    {
			if(!response) return RemovePlayerFromVehicle(playerid);
			SetPVarInt(playerid, "pbusroute", listitem);
			ShowPlayerDialog(playerid, dBusJob+2, 1, "{FFCC00}Цена за проезд", "{FFFFFF}Введите цену билета:", "Принять", "Отмена");
		}
	case dBusJob+2:
		{
            if(!response) return RemovePlayerFromVehicle(playerid);
			if(!strlen(inputtext))
			{
				SendClientMessage(playerid, COLOR_GREY, "Цена должна быть указана цифрами");
				return ShowPlayerDialog(playerid, dBusJob+2, 1, "{FFCC00}Цена за проезд", "{FFFFFF}Введите цену билета:", "Принять", "Отмена");
			}
			for(new i; i < strlen(inputtext); i++)
			{
			    if(inputtext[i] < '0' || inputtext[i] > '9')
			    {
			        SendClientMessage(playerid, COLOR_GREY, "Цена должна быть указана цифрами");
					return ShowPlayerDialog(playerid, dBusJob+2, 1, "{FFCC00}Цена за проезд", "{FFFFFF}Введите цену билета:", "Принять", "Отмена");
			    }
			}
			new price = strval(inputtext);
			if(!(5 <= price <= 100))
			{
				SendClientMessage(playerid, COLOR_GREY, "Цена должна быть от 5$ до 100$");
				return ShowPlayerDialog(playerid, dBusJob+2, 1, "{FFCC00}Цена за проезд", "{FFFFFF}Введите цену билета:", "Принять", "Отмена");
			}
			new vehicleid = GetPVarInt(playerid,"VehicleEnters");
			new model = GetVehicleModel(vehicleid);
			new route = GetPVarInt(playerid,"pbusroute");
			DeletePVar(playerid,"pbusroute");
			if(vehicleid == INVALID_VEHICLE_ID || (model != 418 && model != 418)) return 1;
			TransferMoney(playerid, -1, 200);
			new routename[56];
			switch(route)
			{
				case 0: routename = "{3399FF}г.Южный {FFFFFF}- {3399FF}Лесопилка";
				case 1: routename = "{3399FF}пгт.Батырево {FFFFFF}- {3399FF}Шахта";
				case 2: routename = "{3399FF}ЖДЛС {FFFFFF}- {3399FF}Лесопилка";
				case 3: routename = "{3399FF}ЖДСФ {FFFFFF}- {3399FF}Лесопилка";
				case 4: routename = "{3399FF}ЖДЛС {FFFFFF}- {3399FF}Шахта";
				case 5: routename = "{3399FF}Лос-Сантос {FFFFFF}- {3399FF}Лас-Вентурас";
				case 6: routename = "{3399FF}Лас-Вентурас {FFFFFF}- {3399FF}Сан-Фиерро";
			}
			new mes[200];
			format(mes,sizeof(mes),"%s\n{FFFFFF}Стоимость билета: {63BD4E}$%d",routename,price);
			if(!IsValidDynamic3DTextLabel(pTemp[playerid][pBusText])) pTemp[playerid][pBusText] = CreateDynamic3DTextLabel(mes,0xFFFFFFFF,0.0,0.0,3.0,40.0,INVALID_PLAYER_ID,vehicleid);
			pTemp[playerid][pBusID] = vehicleid;
			gBusCount++;
			pTemp[playerid][pBusRoute] = route;
			pTemp[playerid][pBusPrice] = price;
			pTemp[playerid][pBusPos] = 0;
			pTemp[playerid][pBusDamage] = 1000.0;
			SetNextBusCP(playerid,0);
		}
    case dBusJob+3:
		{
            if(!response) return 1;
			BusSpawnEx(playerid);
		}
	case dTruckJob:
	    {
	        new vehicleid = GetPVarInt(playerid,"VehicleEnters");
			new price = GetPVarInt(playerid,"truckprice");
			DeletePVar(playerid,"truckprice");
			if(GetCash(playerid) < price) return SendClientMessage(playerid,COLOR_GREY,"У Вас недостаточно денег");
			if(!response || vehicleid == INVALID_VEHICLE_ID) return RemovePlayerFromVehicle(playerid);
			pTemp[playerid][pTruckID] = vehicleid;
			TransferMoney(playerid,-1,price);
			SendClientMessage(playerid,COLOR_GREEN,"Вы арендовали грузовик (/gps - Работы - Дальнобойщики)");
	    }
    case dTruckJob+1:
		{
			if(!response) return 1;
			new amount = strval(inputtext);
			new maxamount = GetPVarInt(playerid,"maxamount");
			new loadid = GetPVarInt(playerid,"loadid");
			new string[200];
			if(!(1 <= amount <= maxamount))
			{
			    format(string, sizeof(string),"Значение должно быть от 1 до %d",maxamount);
				SendClientMessage(playerid,COLOR_GREY,string);
				if(loadid == 0)
				{
				    format(string, sizeof(string), "{FFFFFF}Сколько угля Вы хотите загрузить? (макс. %d кг)", maxamount);
					ShowPlayerDialog(playerid, dTruckJob+1, 1, "{FFCC00}Загрузка угля", string, "Принять", "Отмена");
				}
				else if(loadid == 1)
				{
					format(string, sizeof(string), "{FFFFFF}Сколько угля Вы хотите загрузить? (макс. %d кг)", maxamount);
					ShowPlayerDialog(playerid, dTruckJob+1, 1, "{FFCC00}Загрузка древесины", string, "Принять", "Отмена");
				}
				else if(loadid == 3)
				{
				    format(string, sizeof(string), "{FFFFFF}Сколько оружия Вы хотите загрузить? (макс. %d кг)", maxamount);
					ShowPlayerDialog(playerid, dTruckJob+1, 1, "{FFCC00}Загрузка оружия", string, "Принять", "Отмена");
				}
				return 1;
			}
			new price = gTruckLoadPrice[loadid]*amount;
			if(GetCash(playerid) < price) return SendClientMessage(playerid,COLOR_GREY,NoMoney);
			new ll;
			for (new i;i<10;i++)
			{
				if(gTruckLoadTurn[loadid][i] == INVALID_PLAYER_ID || i == playerid) continue;
				ll += GetPVarInt(gTruckLoadTurn[loadid][i],"truckamount");
			}
			new warehouse;
			if(loadid == 0) warehouse = Mineral;
			else if(loadid == 1) warehouse = Lessdrov;
			else if(loadid == 3) warehouse = gGunWorkWH[2];
			if(loadid == 0 && warehouse - ll < amount) return SendClientMessage(playerid,COLOR_GREY,"Недостаточно угля на складе, либо весь уголь распределен между дальнобойщиками в очереди");
			else if(loadid == 1 && warehouse - ll < amount) return SendClientMessage(playerid,COLOR_GREY,"Недостаточно древесины на складе, либо вся древесина распределена между дальнобойщиками в очереди");
			else if(loadid == 3 && warehouse - ll < amount) return SendClientMessage(playerid,COLOR_GREY,"Недостаточно оружия на складе, либо всё оружие распределено между дальнобойщиками в очереди");
			for(new i;i<10;i++)
			{
				if(gTruckLoadTurn[loadid][i] == INVALID_PLAYER_ID)
				{
					gTruckLoadTurn[loadid][i] = playerid;
					format(string,sizeof(string),"Вы номер %d в очереди на загрузку",i+1);
					SendClientMessage(playerid,COLOR_WHITE,string);
					SetPVarInt(playerid,"truckamount",amount);
					SetPVarInt(playerid,"truckonroad",0);
					SetPVarInt(playerid,"waitgruz",0);
					TransferMoney(playerid,-1,price);
					DeletePVar(playerid,"maxamount");
					return 1;
				}
			}
			SendClientMessage(playerid,COLOR_GREY,"Нет места в очереди. Подождите пожалуйста");
		}
	case dTruckJob+2:
		{
		    if(!response) return 1;
	    	TruckerSpawnEx(playerid);
 		}
	case dCreatePass:
		{
		    if(!response) return 1;
		    PassRegSex[playerid] = listitem;
		    ShowPlayerDialog(playerid, dCreatePass+1, DIALOG_STYLE_INPUT, "{FFCC00}Получение паспорта [2/2]", "{FFFFFF}Введите дату Вашего рождения\n{EAD86A}Пример: 1/6/1996", "Принять", "Отмена");
		}
	case dCreatePass+1:
	    {
	        if(!response) return 1;
	        new day, month, year, day2, month2, year2;
		    getdate(year, month, day);
            if(sscanf(inputtext, "p</>iii", day2, month2, year2)) return ShowPlayerDialog(playerid, dCreatePass+1, DIALOG_STYLE_INPUT, "{FFCC00}Получение паспорта [2/2]", "{FFFFFF}Введите дату Вашего рождения\n{EAD86A}Пример: 1/6/1996", "Принять", "Отмена");
	        new check = year - year2;
			if(check > 50 || check < 1 || day2 > GetMonthDays(year2, month2) || day2 < 1 || month2 > 12 || month2 < 1)
				return ShowPlayerDialog(playerid, dCreatePass+1, DIALOG_STYLE_INPUT, "{FFCC00}Получение паспорта [2/2]", "{FFFFFF}Введите дату Вашего рождения\n{EAD86A}Пример: 1/6/1996", "Принять", "Отмена");
			if(check < 18) return ShowPlayerDialog(playerid, dCreatePass+1, DIALOG_STYLE_INPUT, "{FFCC00}Получение паспорта [2/2]", "{FFFFFF}Введите дату Вашего рождения\n{EAD86A}Пример: 1/6/1996\n\n{AFAFAF}[Ошибка] Вы должны быть старше 18 лет!", "Принять", "Отмена");
			if(month2 > month || (month2 == month && day2 > day)) check--;
            pInfo[playerid][pSex] = PassRegSex[playerid];
            MysqlUpdatePlayerInt(playerid, "sex", pInfo[playerid][pSex]);
		    PassInfo[playerid][psDateBirth][0] = day2;
		    PassInfo[playerid][psDateBirth][1] = month2;
		    PassInfo[playerid][psDateBirth][2] = year2;
		    PassInfo[playerid][psDate][0] = day;
		    PassInfo[playerid][psDate][1] = month;
		    PassInfo[playerid][psDate][2] = year;
			PassInfo[playerid][psNumber] = 100000 + random(900000);
			PassInfo[playerid][psSeria] = 1000 + random(9000);
			mysql_query_string[0] = EOS;
			format(mysql_query_string, 300, "INSERT INTO "T_PASSPORTS" (Name,Seria,Number,Sex,D_Day,D_Month,D_Year,DB_Day,DB_Month,DB_Year,McState) VALUE ('%s',%d,%d,%d,%d,%d,%d,%d,%d,%d,'-1')",
			GetName(playerid), PassInfo[playerid][psSeria], PassInfo[playerid][psNumber], PassInfo[playerid][psSex],
			PassInfo[playerid][psDate][0], PassInfo[playerid][psDate][1], PassInfo[playerid][psDate][2],
			PassInfo[playerid][psDateBirth][0], PassInfo[playerid][psDateBirth][1], PassInfo[playerid][psDateBirth][2]);
			mysql_tquery(dbHandle, mysql_query_string, "", "");
			SendClientMessage(playerid, COLOR_GREEN, "Вы успешно получили паспорт. Чтобы показать, используйте команду /pass");
	    }
	case dAddWarehouse:
	    {
	        if(!response) return 1;
			switch(listitem)
			{
			    case 0: ShowPlayerDialog(playerid, dAddWarehouse+1, DIALOG_STYLE_LIST, "{FFCC00}Склады работ", "- Шахта\n- Лесопилка\n- Завод\n- Все работы", "Пополнить", "Назад");
			    case 1: ShowPlayerDialog(playerid, dAddWarehouse+2, DIALOG_STYLE_LIST, "{FFCC00}Склады армии", "- Армия\n- Склад оружия", "Пополнить", "Назад");
			    case 2: ShowPlayerDialog(playerid, dAddWarehouse+3, DIALOG_STYLE_LIST, "{FFCC00}Склады банд", "- ОПГ Южная\n- ОПГ Тамбовская\n- Южная братва\n- ОПГ Солнцевская\n- ОПГ Ореховская\n- Все банды", "Пополнить", "Назад");
			    case 3: ShowPlayerDialog(playerid, dAddWarehouse+4, DIALOG_STYLE_LIST, "{FFCC00}Склады мафий", "- Итальянская Мафия\n- Yakuza\n- Русская мафия\n- Все мафии", "Пополнить", "Назад");
			    case 4: ShowPlayerDialog(playerid, dAddWarehouse5, DIALOG_STYLE_LIST, "{FFCC00}Склады больниц", "- Больница г.Южного\n- Больница пгт.Батырево\n- Больница LV\n- Все больницы", "Пополнить", "Назад");
			}
	    }
	case dAddWarehouse+1:
	    {
	        if(!response) return cmd_addm(playerid);
	        switch(listitem)
			{
			    case 0:
			    {
			        Mineral = 200000;
			        SendClientMessage(playerid, COLOR_GREEN, "Склад шахты пополнен на 200 000 угля");
			    }
			    case 1:
				{
				    Lessdrov = 200000;
			        SendClientMessage(playerid, COLOR_GREEN, "Склад лесопилки пополнен на 200 000 древесины");
				}
			    case 2:
			    {
			        gGunWorkWH[0] = gGunWorkWH[1] = 500000;
					gGunWorkWH[2] = 250000;
			        SendClientMessage(playerid, COLOR_GREEN, "Склад завода пополнен на 500 000 угля, 500 000 древесины, 250 000 единиц оружия");
			    }
			    case 3:
			    {
			        Mineral = Lessdrov = 200000;
					gGunWorkWH[0] = gGunWorkWH[1] = 500000;
					gGunWorkWH[2] = 250000;
			        SendClientMessage(playerid, COLOR_GREEN, "Склады всех работ пополнены");
			    }
			}
	    }
	case dAddWarehouse+2:
	    {
			if(!response) return cmd_addm(playerid);
			switch(listitem)
			{
				case 0:
				{
			        gArmyWarehouse[0] = gArmyWarehouse[1] = 200000;
			        SendClientMessage(playerid, COLOR_GREEN, "Склад Армия пополнен на 200 000 патрон и единиц оружия");
				}
				case 1:
				{
			        gGunWorkWH[3] = 600000;
			        SendClientMessage(playerid, COLOR_GREEN, "Склад оружия пополнен на 600 000 оружия {AFAFAF}(2000 ящиков)");
				}
			}
	    }
 	case dAddWarehouse+3:
	    {
	        if(!response) return cmd_addm(playerid);
	        switch(listitem)
			{
			    case 0:
			    {
			        GangPatr[0] = GangEd[0] = 100000;
					mysql_query_string[0] = EOS;
					format(mysql_query_string, 60, "UPDATE "T_GANG" SET grovepat = %d, groveed = %d", GangPatr[0], GangEd[0]);
					mysql_tquery(dbHandle, mysql_query_string, "", "");
					SendClientMessage(playerid, COLOR_GREEN, "Склад ОПГ Южная пополнен на 100 000 патрон и единиц оружия");
			    }
			    case 1:
			    {
			        GangPatr[1] = GangEd[1] = 100000;
			        mysql_query_string[0] = EOS;
					format(mysql_query_string, 60, "UPDATE "T_GANG" SET ballaspat = %d, ballased = %d", GangPatr[1], GangEd[1]);
					mysql_tquery(dbHandle, mysql_query_string, "", "");
			        SendClientMessage(playerid, COLOR_GREEN, "Склад ОПГ Тамбовская пополнен на 100 000 патрон и единиц оружия");
			    }
			    case 2:
			    {
			        GangPatr[2] = GangEd[2] = 100000;
			        mysql_query_string[0] = EOS;
					format(mysql_query_string, 60, "UPDATE "T_GANG" SET rifapat = %d, rifaed = %d", GangPatr[2], GangEd[2]);
					mysql_tquery(dbHandle, mysql_query_string, "", "");
			        SendClientMessage(playerid, COLOR_GREEN, "Склад Южная братва пополнен на 100 000 патрон и единиц оружия");
			    }
			    case 3:
			    {
			        GangPatr[3] = GangEd[3] = 100000;
			        mysql_query_string[0] = EOS;
					format(mysql_query_string, 60, "UPDATE "T_GANG" SET aztecpat = %d, azteced = %d", GangPatr[3], GangEd[3]);
					mysql_tquery(dbHandle, mysql_query_string, "", "");
			        SendClientMessage(playerid, COLOR_GREEN, "Склад ОПГ Солнцевская пополнен на 100 000 патрон и единиц оружия");
			    }
			    case 4:
			    {
			        GangPatr[4] = GangEd[4] = 100000;
			        mysql_query_string[0] = EOS;
					format(mysql_query_string, 60, "UPDATE "T_GANG" SET vagospat = %d, vagosed = %d", GangPatr[4], GangEd[4]);
					mysql_tquery(dbHandle, mysql_query_string, "", "");
			        SendClientMessage(playerid, COLOR_GREEN, "Склад ОПГ Ореховская пополнен на 100 000 патрон и единиц оружия");
			    }
			    case 5:
			    {
			        for(new i; i < 5; i++) GangPatr[i] = GangEd[i] = 100000;
					mysql_query_string[0] = EOS;
					format(mysql_query_string, 150, "UPDATE "T_GANG" SET grovepat = %d, ballaspat = %d, rifapat = %d, aztecpat = %d, vagospat = %d", GangPatr[0], GangPatr[1], GangPatr[2], GangPatr[3], GangPatr[4]);
					mysql_tquery(dbHandle, mysql_query_string, "", "");
					mysql_query_string[0] = EOS;
					format(mysql_query_string, 150, "UPDATE "T_GANG" SET groveed = %d, ballased = %d, rifaed = %d, azteced = %d, vagosed = %d", GangEd[0], GangEd[1], GangEd[2], GangEd[3], GangEd[4]);
					mysql_tquery(dbHandle, mysql_query_string, "", "");
					SendClientMessage(playerid, COLOR_GREEN, "Склады всех банд пополнены на 100 000 патрон и единиц оружия");
			    }
			}
	    }
 	case dAddWarehouse+4:
	    {
	        if(!response) return cmd_addm(playerid);
	        switch(listitem)
			{
			    case 0:
			    {
			        MafiaPatr[0] = MafiaEd[0] = 100000;
			        mysql_query_string[0] = EOS;
					format(mysql_query_string, 60, "UPDATE "T_MAFIA" SET lcnpat = %d, lcned = %d", MafiaPatr[0], MafiaEd[0]);
					mysql_tquery(dbHandle, mysql_query_string, "", "");
			        SendClientMessage(playerid, COLOR_GREEN, "Склад Итальянская Мафия пополнен на 100 000 патрон и единиц оружия");
			    }
			    case 1:
			    {
			        MafiaPatr[1] = MafiaEd[1] = 100000;
			        mysql_query_string[0] = EOS;
					format(mysql_query_string, 60, "UPDATE "T_MAFIA" SET yakpat = %d, yaked = %d", MafiaPatr[1], MafiaEd[1]);
					mysql_tquery(dbHandle, mysql_query_string, "", "");
			        SendClientMessage(playerid, COLOR_GREEN, "Склад Yakuza пополнен на 100 000 патрон и единиц оружия");
			    }
			    case 2:
			    {
			        MafiaPatr[2] = MafiaEd[2] = 100000;
			        mysql_query_string[0] = EOS;
					format(mysql_query_string, 60, "UPDATE "T_MAFIA" SET rmpat = %d, rmed = %d", MafiaPatr[2], MafiaEd[2]);
					mysql_tquery(dbHandle, mysql_query_string, "", "");
			        SendClientMessage(playerid, COLOR_GREEN, "Склад Русской мафии пополнен на 100 000 патрон и единиц оружия");
			    }
			    case 3:
			    {
			        for(new i; i < 3; i++) MafiaPatr[i] = MafiaEd[i] = 100000;
					mysql_query_string[0] = EOS;
					format(mysql_query_string, 150, "UPDATE "T_MAFIA" SET lcnpat = %d, yakpat = %d, rmpat = %d", MafiaPatr[0], MafiaPatr[1], MafiaPatr[2]);
					mysql_tquery(dbHandle, mysql_query_string, "", "");
					mysql_query_string[0] = EOS;
					format(mysql_query_string, 150, "UPDATE "T_MAFIA" SET lcned = %d, yaked = %d, rmed = %d", MafiaEd[0], MafiaEd[1], MafiaEd[2]);
					mysql_tquery(dbHandle, mysql_query_string, "", "");
					SendClientMessage(playerid, COLOR_GREEN, "Склады всех мафий пополнены на 100 000 патрон и единиц оружия");
			    }
			}
	    }
	case dAddWarehouse5:
	    {
	        if(!response) return cmd_addm(playerid);
	        switch(listitem)
			{
			    case 0:
			    {
					MedWH[0] = 10000;
			        SendClientMessage(playerid, COLOR_GREEN, "Склад Больница г.Южного пополнен на 10 000 медикаментов");
			    }
			    case 1:
			    {
			        MedWH[1] = 10000;
			        SendClientMessage(playerid, COLOR_GREEN, "Склад Больница пгт.Батырево пополнен на 10 000 медикаментов");
			    }
			    case 2:
			    {
			        MedWH[2] = 10000;
			        SendClientMessage(playerid, COLOR_GREEN, "Склад Больница LV пополнен на 10 000 медикаментов");
			    }
			    case 3:
			    {
			        MedWH[0] = MedWH[1] = MedWH[2] = 10000;
			        SendClientMessage(playerid, COLOR_GREEN, "Склады всех больниц пополнены на 10 000 медикаментов");
			    }
			}
	    }
    case dVehNumber:
        {
            if(!response) return ShowPlayerDialog(playerid, dMenuPolice, DIALOG_STYLE_LIST, "{FFCC00}Что Вас интересует?", "1. Оформление лицензии на оружие\n2. Оплата штрафов\n3. Получение гос.номера на Т/С\n4. Сдаться с повинной", "Выбрать", "Отмена");
			if(pTemp[playerid][pCarPlayerID] == INVALID_VEHICLE_ID) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас нету машины!");
			if(pInfo[playerid][pRegVehicle] == 1) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас уже имеется номерной знак на этом авто!");
	     	new number[64], string[200];
		  	/*for(new i; i != 15; i++)
		    {
		        if(!i) number[i] = random('Z' - 'A') + 'A';
				if(i >= 1 && i <= 3) number[i] = random('9' - '0') + '0';
				if(i > 3) number[i] = random('Z' - 'A') + 'A';
				if(i >= 5) number[i] = + ' | ';
				if(i > 7) number[i]
		   	}*/
		   	format(number, 64, "%s%d%d%d%s%s | %d%dRUS", VehNumber(), random(9), random(9), random(9), VehNumber(), VehNumber(), random(9),random(9));
		   	strmid(pInfo[playerid][pNumberVehicle], number, 0, strlen(number), 64);
		   	pInfo[playerid][pRegVehicle] = 1;
			SetVehicleNumberPlate(pTemp[playerid][pCarPlayerID], pInfo[playerid][pNumberVehicle]);
			format(string, sizeof(string), "{FFFFFF}Место регистрации: {0000FF}Police Departament{FFFFFF}\nГос.номер вашего Т/С: {63BD4E}%s", number);
			ShowPlayerDialog(playerid, dNull, DIALOG_STYLE_MSGBOX, "{FFCC00}Информация", string, "Закрыть", "");
			format(string, sizeof(string), "%s[%i] зарегистрировал гос.номер на своё Т/С [%s]", GetName(playerid), playerid, number);
			foreach(new i : Player)
			{
			    if(!gPlayerLogged[i]) continue;
		    	if(IsACop(i)) SendClientMessage(i, 0x3399FFFF, string);
			}
			///
	   		//Delete3DTextLabel(VehicleLabel[pTemp[playerid][pCarPlayerID]]);
  			format(string,sizeof(string),"%s",pInfo[playerid][pNumberVehicle]);
			if(VehicleLabel[pTemp[playerid][pCarPlayerID]] != Text3D:INVALID_3DTEXT_ID)
			{
			    UpdateDynamic3DTextLabelText(VehicleLabel[pTemp[playerid][pCarPlayerID]], 0xFFFFFFFF, string);
			}
			///
            mysql_query_string[0] = EOS;
			format(mysql_query_string, 200, "UPDATE "T_ACCOUNTS" SET veh_reg = %i, veh_number = '%s' WHERE id = %i", pInfo[playerid][pRegVehicle], pInfo[playerid][pNumberVehicle], pInfo[playerid][pID]);
			mysql_tquery(dbHandle, mysql_query_string, "", "");
        }
	case dAdminPanel:
	    {
	        if(!response) return 1;
	        switch(listitem)
	        {
	            case 0:
	            {
				    new year, month, day, info[26], string[100];
				    new current_date = getdate(year, month, day);
				    format(info, sizeof(info), "VIP игроки онлайн: (%i)", GetVipsOnline());
					SendClientMessage(playerid, COLOR_ORANGE, info);
					foreach(new i : Player)
					{
						if(!gPlayerLogged[i] || !pInfo[i][pVip]) continue;
						format(string, sizeof(string), "- %s (осталось дн.: %i)", GetName(i), pInfo[i][pVipTime] - current_date);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
	            }
	            case 1: cmd_admins(playerid);
	            case 2: cmd_ahelp(playerid);
	            case 3:
	            {
				    stringer[0] = EOS;
				    if(pInfo[playerid][pAdmin] < ADM_DEPUTY_CHIEF)
				    {
				        format(stringer, 400, "{ffffff}Информация о новых игроках\t| %s",
						(!AdminInfo[playerid][admInfoNewPlayer]) ? ("{F04245}Выкл") : ("{63BD4E}Вкл"));
						ShowPlayerDialog(playerid, dAdminPanel+3, 2, "{FFCC00}Настройки администратора", stringer, "Выбрать", "Назад");
					}
					else
					{
					    format(stringer, 400, "{ffffff}Информация о новых игроках\t| %s\n{ffffff}Телепорт к себе\t\t\t| %s\n{ffffff}Телепорт себя\t\t\t\t| %s\n{ffffff}Слежка за собой\t\t\t| %s\nИнформация",
					    (!AdminInfo[playerid][admInfoNewPlayer]) ? ("{F04245}Выкл") : ("{63BD4E}Вкл"),
						(AdminInfo[playerid][admGoto]) ? ("{F04245}Запрещён") : ("{63BD4E}Разрешён"),
						(AdminInfo[playerid][admGethere]) ? ("{F04245}Запрещён") : ("{63BD4E}Разрешён"),
						(AdminInfo[playerid][admSpectate]) ? ("{F04245}Запрещена") : ("{63BD4E}Разрешена"));
						ShowPlayerDialog(playerid, dAdminPanel+3, 2, "{FFCC00}Настройки администратора", stringer, "Выбрать", "Назад");
					}
	            }
	            case 4: mysql_tquery(dbHandle, "SELECT * FROM "T_ADMIN" WHERE level > 0 AND level < 8", "@ListAllAdmins", "i", playerid);
	            case 5: ShowPlayerDialog(playerid, dAdminPanel+7, DIALOG_STYLE_INPUT, "{FFCC00}Статистика администратора", "{FFFFFF}Чтобы посмотреть статистику какого-либо администратора\nнеобходимо указать его ник", "Принять", "Назад");
				case 6: ShowPlayerDialog(playerid, dAdminPanel+6, DIALOG_STYLE_LIST, "{FFCC00}Мероприятия", "1. Запустить гонки \"Пустыня \"", "Выбрать", "Назад");
				case 7: ShowPlayerDialog(playerid, dAdminPanel+18, DIALOG_STYLE_LIST, "{FFCC00}Организации", "1. Список всех лидеров\n2. Снять оффлайн лидера\n3. Расформировать организацию", "Выбрать", "Назад");
				case 8:
				{
				    stringer[0] = EOS;
				    format(stringer, 1000, "\
					    {ffffff}X2 Weekends\t\t\t| %s\n\
						{ffffff}Опыт X2\t\t\t| %s\n\
						{ffffff}Донат X2\t\t\t| %s\n\
						{ffffff}Прокачка скиллов X2\t\t| %s\n\
						{ffffff}Зарплаты на работах X2\t| %s\n\
						{ffffff}Платёжная система\t\t| {3399FF}%s\n\
						{FFFFFF}Запустить PayDay\n\
						Сохранить сервер\n\
						Перезагрузить сервер",
						(!doubling_status) ? ("{F04245}Выкл") : ("{63BD4E}Вкл"),
						(!doubling_exp) ? ("{F04245}Выкл") : ("{63BD4E}Вкл"),
						(!doubling_donate) ? ("{F04245}Выкл") : ("{63BD4E}Вкл"),
						(!doubling_skills) ? ("{F04245}Выкл") : ("{63BD4E}Вкл"),
						(!doubling_salary) ? ("{F04245}Выкл") : ("{63BD4E}Вкл"),
						(payment_system==1) ? ("UnitPay") : ("Megakassa"));
					ShowPlayerDialog(playerid, dAdminPanel+2, 2, "{FFCC00}Настройки сервера", stringer, "Выбрать", "Назад");
				}
				case 9:
				{
				    mysql_query_string[0] = EOS;
				    format(mysql_query_string, sizeof(mysql_query_string), "\
						SELECT `searchserv` FROM "T_ACCOUNTS" WHERE \
						searchserv = 'На порталах/форумах' OR \
						searchserv = 'На мониторинге серверов' OR \
						searchserv = 'Через YouTube' OR \
						searchserv = 'В поисковике' OR \
						searchserv = 'Вкладка hosted' OR \
						searchserv = 'Сообщество ВКонтакте' OR \
						searchserv = 'Другое';");
					mysql_tquery(dbHandle, mysql_query_string, "@MysqlMonitoring", "d", playerid);
				}
				case 10: ShowPlayerDialog(playerid, dAdminPanel+9, DIALOG_STYLE_LIST, "{FFCC00}Промокоды", "1. Список промокодов\n2. Создать промокод\n3. Удалить промокод", "Выбрать", "Назад");
				case 11: ShowPlayerDialog(playerid, dAdminPanel+21, DIALOG_STYLE_LIST, "{FFCC00}Телепорт ютуберов", "1. Список ютуберов\n2. Выдать телепорт\n3. Забрать телепорт", "Выбрать", "Назад");
	        }
	    }
	case dAdminPanel+2:
	    {
	        if(!response) return cmd_apanel(playerid);
	        if(listitem < 6)
	        {
		        switch(listitem)
		        {
		            case 0:
		            {
		                if(!doubling_status)
		                {
			                doubling_status = 1;
			                if(gTestServer) SendRconCommand("hostname "SERVER_NAME" | Test | X2 Weekends");
			                else SendRconCommand("hostname "SERVER_NAME" | X2 Weekends ");
							//else SendRconCommand("hostname "SERVER_NAME" | X2 Weekends");
						}
						else
						{
						    doubling_status = 0;
			                if(gTestServer) SendRconCommand("hostname "SERVER_NAME" | Test");
							else SendRconCommand("hostname "SERVER_NAME"");
						}
		            }
		            case 1: doubling_exp = (!doubling_exp)?(1):(0);
		            case 2: doubling_donate = (!doubling_donate)?(1):(0);
					case 3: doubling_skills = (!doubling_skills)?(1):(0);
		            case 4: doubling_salary = (!doubling_salary)?(1):(0);
					case 5: payment_system = (payment_system==1)?(2):(1);
		        }
		        stringer[0] = EOS;
			    format(stringer, 1000, "\
				    {ffffff}X2 Weekends\t\t\t| %s\n\
					{ffffff}Опыт X2\t\t\t| %s\n\
					{ffffff}Донат X2\t\t\t| %s\n\
					{ffffff}Прокачка скиллов X2\t\t| %s\n\
					{ffffff}Зарплаты на работах X2\t| %s\n\
					{ffffff}Платёжная система\t\t| {3399FF}%s\n\
					{FFFFFF}Запустить PayDay\n\
					Сохранить сервер\n\
					Перезагрузить сервер",
					(!doubling_status) ? ("{F04245}Выкл") : ("{63BD4E}Вкл"),
					(!doubling_exp) ? ("{F04245}Выкл") : ("{63BD4E}Вкл"),
					(!doubling_donate) ? ("{F04245}Выкл") : ("{63BD4E}Вкл"),
					(!doubling_skills) ? ("{F04245}Выкл") : ("{63BD4E}Вкл"),
					(!doubling_salary) ? ("{F04245}Выкл") : ("{63BD4E}Вкл"),
					(payment_system==1) ? ("UnitPay") : ("Megakassa"));
				ShowPlayerDialog(playerid, dAdminPanel+2, 2, "{FFCC00}Настройки сервера", stringer, "Выбрать", "Назад");
			}
			else
			{
			    switch(listitem)
			    {
			        case 6: PayDay();
			        case 7: {			            
			        	SaveAcc();
			            SaveOther();
						SendClientMessage(playerid, COLOR_GREY, "Вы успешно всё сохранили");
			        }
			        case 8:
			        {
			            for(new x; x < 25; x++) SendClientMessageToAll(COLOR_GREY, " ");
			            SendClientMessageToAll(COLOR_RED, "Уважаемые игроки, происходит перезагрузка сервера...");
						GameTextForAll( "~b~RESTART", 5000, 3);
						SaveAcc();
						SaveOther();
						for(new i;i<MAX_PLAYERS;i++)
						{
						    if(!IsPlayerConnected(i)) continue;
							Kick(i);
						}
						SetTimer("@GameModeExitDelay", 5000, false);
			        }
			    }
			}
	    }
	case dAdminPanel+3:
	    {
	        if(!response) return cmd_apanel(playerid);
			stringer[0] = EOS;
			if(pInfo[playerid][pAdmin] < ADM_DEPUTY_CHIEF)
			{
			    if(listitem==0)
			    {
			        AdminInfo[playerid][admInfoNewPlayer] = (!AdminInfo[playerid][admInfoNewPlayer])?(1):(0);
			        mysql_query_string[0] = EOS;
			        format(mysql_query_string, 128, "UPDATE "T_ADMIN" SET a_infonewpl = %i WHERE admid = %i LIMIT 1", AdminInfo[playerid][admInfoNewPlayer], AdminInfo[playerid][admID]);
					mysql_tquery(dbHandle, mysql_query_string, "", "");
			    }
			    format(stringer, 400, "{ffffff}Информация о новых игроках\t| %s",
				(!AdminInfo[playerid][admInfoNewPlayer]) ? ("{F04245}Выкл") : ("{63BD4E}Вкл"));
				ShowPlayerDialog(playerid, dAdminPanel+3, 2, "{FFCC00}Настройки администратора", stringer, "Выбрать", "Назад");
			}
			else
			{
		        if(listitem < 4)
		        {
			        switch(listitem)
			        {
			            case 0:
			            {
			                AdminInfo[playerid][admInfoNewPlayer] = (!AdminInfo[playerid][admInfoNewPlayer])?(1):(0);
			                mysql_query_string[0] = EOS;
					        format(mysql_query_string, 128, "UPDATE "T_ADMIN" SET a_infonewpl = %i WHERE admid = %i LIMIT 1", AdminInfo[playerid][admInfoNewPlayer], AdminInfo[playerid][admID]);
							mysql_tquery(dbHandle, mysql_query_string, "", "");
			            }
			            case 1:
						{
							AdminInfo[playerid][admGoto] = (!AdminInfo[playerid][admGoto])?(1):(0);
							mysql_query_string[0] = EOS;
							format(mysql_query_string, 128, "UPDATE "T_ADMIN" SET a_goto = %i WHERE admid = %i LIMIT 1", AdminInfo[playerid][admGoto], AdminInfo[playerid][admID]);
							mysql_tquery(dbHandle, mysql_query_string, "", "");
						}
			            case 2:
			            {
							AdminInfo[playerid][admGethere] = (!AdminInfo[playerid][admGethere])?(1):(0);
							mysql_query_string[0] = EOS;
							format(mysql_query_string, 128, "UPDATE "T_ADMIN" SET a_gethere = %i WHERE admid = %i LIMIT 1", AdminInfo[playerid][admGoto], AdminInfo[playerid][admID]);
							mysql_tquery(dbHandle, mysql_query_string, "", "");
						}
						case 3:
						{
						    AdminInfo[playerid][admSpectate] = (!AdminInfo[playerid][admSpectate])?(1):(0);
						    mysql_query_string[0] = EOS;
						    format(mysql_query_string, 128, "UPDATE "T_ADMIN" SET a_spec = %i WHERE admid = %i LIMIT 1", AdminInfo[playerid][admGoto], AdminInfo[playerid][admID]);
							mysql_tquery(dbHandle, mysql_query_string, "", "");
						}
			        }
				    format(stringer, 400, "{ffffff}Информация о новых игроках\t| %s\n{ffffff}Телепорт к себе\t\t\t| %s\n{ffffff}Телепорт себя\t\t\t\t| %s\n{ffffff}Слежка за собой\t\t\t| %s\nИнформация",
				    (!AdminInfo[playerid][admInfoNewPlayer]) ? ("{F04245}Выкл") : ("{63BD4E}Вкл"),
					(AdminInfo[playerid][admGoto]) ? ("{F04245}Запрещён") : ("{63BD4E}Разрешён"),
					(AdminInfo[playerid][admGethere]) ? ("{F04245}Запрещён") : ("{63BD4E}Разрешён"),
					(AdminInfo[playerid][admSpectate]) ? ("{F04245}Запрещена") : ("{63BD4E}Разрешена"));
					ShowPlayerDialog(playerid, dAdminPanel+3, 2, "{FFCC00}Настройки администратора", stringer, "Выбрать", "Назад");
				}
				else
				{
					if(listitem==4)
						ShowPlayerDialog(playerid, dAdminPanel+4, 0, "{FFCC00}Информация", "{FFFFFF}\
							Запреты (начиная со 2 пункта) доступны для администраторов 6 уровня и выше.\n\
							Действуют они на администраторов младше 6 уровня.", "Назад", "");
				}
			}
	    }
	case dAdminPanel+4:
	    {
	        if(!response) return 1;
            stringer[0] = EOS;
            format(stringer, 400, "{ffffff}Информация о новых игроках\t| %s\n{ffffff}Телепорт к себе\t\t\t| %s\n{ffffff}Телепорт себя\t\t\t\t| %s\n{ffffff}Слежка за собой\t\t\t| %s\nИнформация",
		    (!AdminInfo[playerid][admInfoNewPlayer]) ? ("{F04245}Выкл") : ("{63BD4E}Вкл"),
			(AdminInfo[playerid][admGoto]) ? ("{F04245}Запрещён") : ("{63BD4E}Разрешён"),
			(AdminInfo[playerid][admGethere]) ? ("{F04245}Запрещён") : ("{63BD4E}Разрешён"),
			(AdminInfo[playerid][admSpectate]) ? ("{F04245}Запрещена") : ("{63BD4E}Разрешена"));
			ShowPlayerDialog(playerid, dAdminPanel+3, 2, "{FFCC00}Настройки администратора", stringer, "Выбрать", "Назад");
	    }
	case dAdminPanel+1:
	    {
	        if(response) return cmd_apanel(playerid);
			else return 1;
	    }
	case dAdminPanel+5:
	    {
	        if(response) ShowPlayerDialog(playerid, dAdminPanel+7, DIALOG_STYLE_INPUT, "{FFCC00}Статистика администратора", "{FFFFFF}Чтобы посмотреть статистику какого-либо администратора\nнеобходимо указать его ник", "Принять", "Назад");
	        else return 1;
	    }
	case dAdminPanel+6:
	    {
	        if(!response) return cmd_apanel(playerid);
	        switch(listitem)
	        {
	            case 0:
	            {
	                if(StartGonka != false) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Мероприятие запускается часто, подождите некоторое время");
					SendClientMessageToAll(COLOR_YELLOW, "Уважаемые игроки, через 10 минут начнутся гонки.");
					SendClientMessageToAll(COLOR_YELLOW, "Место регистрации: {FFFFFF}/gps - Развлечения{EAD86A}. Максимальное количество участников: {FFFFFF}9");
					RaceText = " ";
					EndingKartRound = false;
					KillTimer(RaceTimer);
					RaceTime = 600;
					RaceTimer = SetTimer("@RaceGonka", 1000, true);
					RaceTimerStEnd = false;
					GonkaPriz = 0;
					StartGonka = true;
					new string[128];
					format(string, sizeof(string), "[A] %s[%d] запустил мероприятие (Гонки)", GetName(playerid), playerid);
					SendAdminMessage(COLOR_GREEN, string);
	            }
	        }
	    }
	case dAdminPanel+7:
		{
		    if(!response) return cmd_apanel(playerid);
	        if(!strlen(inputtext)) return ShowPlayerDialog(playerid, dAdminPanel+7, DIALOG_STYLE_INPUT, "{FFCC00}Статистика администратора", "{FFFFFF}Чтобы посмотреть статистику какого-либо администратора\nнеобходимо указать его ник", "Принять", "Назад");
			new string[200];
			format(string, sizeof(string), "SELECT * FROM "T_ADMIN" WHERE name = '%s' LIMIT 1", inputtext);
			mysql_tquery(dbHandle, string, "@OnCheckStatsAdmin", "is", playerid, inputtext);
		}
	case dAdminPanel+8:
	    {
	        if(!response) return cmd_apanel(playerid);
	        mysql_query_string[0] = EOS;
		    format(mysql_query_string, 128, "SELECT * FROM "T_ACCOUNTS" WHERE member = %i", listitem+1);
		    mysql_tquery(dbHandle, mysql_query_string, "@RasformFraction", "dd", playerid, listitem+1);
	    }
	case dAdminPanel+9:
	    {
	        if(!response) return cmd_apanel(playerid);
	        switch(listitem)
	        {
	            case 0: mysql_tquery(dbHandle, "SELECT * FROM "T_PROMOCODE"", "@PromoCodeShow", "i", playerid);
	            case 1: ShowPlayerDialog(playerid, dAdminPanel+10, DIALOG_STYLE_INPUT, "{FFCC00}Создание промокода", "{FFFFFF}Введите промокод который хотите создать", "Далее", "Назад");
	            case 2: ShowPlayerDialog(playerid, dAdminPanel+17, DIALOG_STYLE_INPUT, "{FFCC00}Удаление промокода", "{FFFFFF}Введите промокод который хотите удалить", "Далее", "Назад");
	        }
	    }
	case dAdminPanel+10:
	    {
            if(!response) return 1;
            if(!strlen(inputtext)) return ShowPlayerDialog(playerid, dAdminPanel+10, DIALOG_STYLE_INPUT, "{FFCC00}Создание промокода", "{FFFFFF}Введите промокод который хотите создать\n\n{AFAFAF}Используйте от 3 до 16 символов", "Далее", "Назад");
            for(new i = strlen(inputtext); i != 0; --i)
			{
				switch(inputtext[i])
				{
					case 'А'..'Я', 'а'..'я', ' ':
					{
					    SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Нельзя создавать промокоды на русской раскладке");
						ShowPlayerDialog(playerid, dAdminPanel+10, DIALOG_STYLE_INPUT, "{FFCC00}Создание промокода", "{FFFFFF}Введите промокод который хотите создать\n\n{AFAFAF}Используйте от 3 до 16 символов", "Далее", "Назад");
					}
				}
			}
			if(!(3 <= strlen(inputtext) <= 16))
			{
			    SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Используйте от 3 до 16 символов");
				return ShowPlayerDialog(playerid, dAdminPanel+10, DIALOG_STYLE_INPUT, "{FFCC00}Создание промокода", "{FFFFFF}Введите промокод который хотите создать\n\n{AFAFAF}Используйте от 3 до 16 символов", "Далее", "Назад");
            }
            SetPVarString(playerid, "promoname", inputtext);
            ShowPlayerDialog(playerid, dAdminPanel+11, DIALOG_STYLE_MSGBOX, "{FFCC00}Создание промокода", "{FFFFFF}Промокод можно создавать как для определённого количества игроков,\nтак и для определённого количества дней.\n\n\t\tВыберите что нужно:", "Дни", "Игроки");
	    }
	case dAdminPanel+11:
	    {
            if(response) ShowPlayerDialog(playerid, dAdminPanel+12, DIALOG_STYLE_INPUT, "{FFCC00}Создание промокода", "{FFFFFF}На какое количество дней вы хотите создать промокод?\n\n{AFAFAF}Допустимое значение количества дней от 1 до 30", "Далее", "Отмена");
            else ShowPlayerDialog(playerid, dAdminPanel+13, DIALOG_STYLE_INPUT, "{FFCC00}Создание промокода", "{FFFFFF}На сколько игроков вы хотите создать промокод?\n\n{AFAFAF}Допустимое значение количества участников от 1 до 500", "Далее", "Отмена");
	    }
    case dAdminPanel+12:
        {
            if(!response) return 1;
            if(!strlen(inputtext)) return ShowPlayerDialog(playerid, dAdminPanel+12, DIALOG_STYLE_INPUT, "{FFCC00}Создание промокода", "{FFFFFF}На какое количество дней вы хотите создать промокод?\n\n{AFAFAF}Допустимое значение количества дней от 1 до 30", "Далее", "Отмена");
            if(!(1 <= strval(inputtext) <= 30))
			{
			    SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Допустимое значение количества дней от 1 до 30");
				return ShowPlayerDialog(playerid, dAdminPanel+12, DIALOG_STYLE_INPUT, "{FFCC00}Создание промокода", "{FFFFFF}На какое количество дней вы хотите создать промокод?\n\n{AFAFAF}Допустимое значение количества дней от 1 до 30", "Далее", "Отмена");
			}
            SetPVarInt(playerid, "promodays", strval(inputtext));
            SetPVarInt(playerid, "promoplayers", 0);
            ShowPlayerDialog(playerid, dAdminPanel+14, DIALOG_STYLE_INPUT, "{FFCC00}Создание промокода", "{FFFFFF}Укажите количество денег, которое будет выдано при использовании промокода\n\n{AFAFAF}Допустимое значение количества денег от 1$ до 10.000.000$", "Завершить", "Отмена");
        }
    case dAdminPanel+13:
        {
            if(!response) return 1;
            if(!strlen(inputtext)) return ShowPlayerDialog(playerid, dAdminPanel+13, DIALOG_STYLE_INPUT, "{FFCC00}Создание промокода", "{FFFFFF}На сколько игроков вы хотите создать промокод?\n\n{AFAFAF}Допустимое значение количества участников от 1 до 500", "Далее", "Отмена");
            if(!(1 <= strval(inputtext) <= 500))
			{
			    SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Допустимое значение количества участников от 1 до 500");
				return ShowPlayerDialog(playerid, dAdminPanel+13, DIALOG_STYLE_INPUT, "{FFCC00}Создание промокода", "{FFFFFF}На сколько игроков вы хотите создать промокод?\n\n{AFAFAF}Допустимое значение количества участников от 1 до 500", "Далее", "Отмена");
			}
            SetPVarInt(playerid, "promoplayers", strval(inputtext));
            SetPVarInt(playerid, "promodays", -1);
            ShowPlayerDialog(playerid, dAdminPanel+14, DIALOG_STYLE_INPUT, "{FFCC00}Создание промокода", "{FFFFFF}Укажите количество денег, которое будет выдано при использовании промокода\n\n{AFAFAF}Допустимое значение количества денег от 1$ до 10.000.000$", "Далее", "Отмена");
        }
    case dAdminPanel+14:
        {
            if(!response) return 1;
            if(!strlen(inputtext)) return ShowPlayerDialog(playerid, dAdminPanel+14, DIALOG_STYLE_INPUT, "{FFCC00}Создание промокода", "{FFFFFF}Укажите количество денег, которое будет выдано при использовании промокода\n\n{AFAFAF}Допустимое значение количества денег от 1$ до 10.000.000$", "Далее", "Отмена");
            if(!(1 <= strval(inputtext) <= 10000000))
			{
			    SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Допустимое значение количества денег от 10.000$ до 10.000.000$");
				return ShowPlayerDialog(playerid, dAdminPanel+14, DIALOG_STYLE_INPUT, "{FFCC00}Создание промокода", "{FFFFFF}Укажите количество денег, которое будет выдано при использовании промокода\n\n{AFAFAF}Допустимое значение количества денег от 10.000$ до 100.000$", "Далее", "Отмена");
            }
            SetPVarInt(playerid, "promomoney", strval(inputtext));
            new promoname[16];
            GetPVarString(playerid, "promoname", promoname, sizeof(promoname));
            new promodays = GetPVarInt(playerid, "promodays");
            new promoplayers = GetPVarInt(playerid, "promoplayers");
            new promomoney = GetPVarInt(playerid, "promomoney");
			stringer[0] = EOS;
			format(stringer, 400, "\
				{FFFFFF}Вы хотите создать промокод {EAD86A}%s{FFFFFF}?\n\
				Количество денег {63BD4E}%i${FFFFFF}\n\
				Промокод действует на {3399FF}%d %s",
			promoname,
			promomoney,
			(promoplayers > 0) ? (promoplayers) : (promodays),
			(promoplayers > 0) ? ("игроков") : ("дней"));
            ShowPlayerDialog(playerid, dAdminPanel+15, DIALOG_STYLE_MSGBOX, "{FFCC00}Создание промокода", stringer, "Принять", "Отмена");
        }
	case dAdminPanel+15:
	    {
            if(!response) return 1;
            new promoname[16];
            GetPVarString(playerid, "promoname", promoname, sizeof(promoname));
            mysql_tquery(dbHandle, "SELECT * FROM "T_PROMOCODE"", "@PromoCodeCreate", "is", playerid, promoname);
	    }
    case dAdminPanel+16:
	    {
	        if(response) return ShowPlayerDialog(playerid, dAdminPanel+9, DIALOG_STYLE_LIST, "{FFCC00}Промокоды", "1. Список промокодов\n2. Создать промокод\n3. Удалить промокод", "Выбрать", "Назад");
			else return 1;
	    }
    case dAdminPanel+17:
	    {
            if(!response) return 1;
            if(!strlen(inputtext)) return ShowPlayerDialog(playerid, dAdminPanel+17, DIALOG_STYLE_INPUT, "{FFCC00}Удаление промокода", "{FFFFFF}Введите промокод который хотите удалить", "Далее", "Назад");
            for(new i = strlen(inputtext); i != 0; --i)
			{
				switch(inputtext[i])
				{
					case 'А'..'Я', 'а'..'я', ' ':
					{
					    SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы указали промокод на русской раскладке");
						ShowPlayerDialog(playerid, dAdminPanel+17, DIALOG_STYLE_INPUT, "{FFCC00}Удаление промокода", "{FFFFFF}Введите промокод который хотите удалить", "Далее", "Назад");
					}
				}
			}
			mysql_tquery(dbHandle, "SELECT * FROM "T_PROMOCODE"", "@PromoCodeDelete", "is", playerid, inputtext);
	    }
	case dUsePromocode:
	    {
	        if(!response) return ShowPlayerDialog(playerid, dMainMenuAdd, DIALOG_STYLE_LIST, "{FFCC00}Дополнительно", "1. Донат услуги\n2. Промокод\n3. Семьи", "Далее", "Назад");
	        if(!(3 <= pInfo[playerid][pLevel] <= 4)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Промокоды доступны с 3 по 4 уровень");
	        mysql_query_string[0] = EOS;
            format(mysql_query_string, 128, "SELECT * FROM "T_PROMOCODE" WHERE code LIKE '%s'", inputtext);
            mysql_tquery(dbHandle, mysql_query_string, "@PromoCodeCheck", "is", playerid, inputtext);
	    }
    case dAdminPanel+18:
	    {
			if(!response) return cmd_apanel(playerid);
			switch(listitem)
			{
			    case 0: mysql_tquery(dbHandle, "SELECT name,leader,datavhod,admin FROM "T_ACCOUNTS" WHERE leader > 0", "@ListAllLeaders", "i", playerid);
			    case 1: ShowPlayerDialog(playerid, dAdminPanel+20, DIALOG_STYLE_INPUT, "{FFCC00}Снять оффлайн лидера", "{FFFFFF}Введите ник лидера которого хотите снять", "Принять", "Назад");
			    case 2:
			    {
			        stringer[0] = EOS;
					for(new i = 1; i < MAX_FRACTIONS; i++) format(stringer, 1000, "%s№%i - %s\n", stringer, i, Fraction_Name[i]);
					ShowPlayerDialog(playerid, dAdminPanel+8, DIALOG_STYLE_LIST, "{FFCC00}Выберите организацию", stringer, "Принять", "Назад");
			    }
			}
	    }
    case dAdminPanel+19:
	    {
	        if(response) return ShowPlayerDialog(playerid, dAdminPanel+18, DIALOG_STYLE_LIST, "{FFCC00}Организации", "1. Список всех лидеров\n2. Снять оффлайн лидера\n3. Расформировать организацию", "Выбрать", "Назад");
			else return 1;
	    }
	case dAdminPanel+20:
	    {
	        if(!response) return ShowPlayerDialog(playerid, dAdminPanel+18, DIALOG_STYLE_LIST, "{FFCC00}Организации", "1. Список всех лидеров\n2. Снять оффлайн лидера\n3. Расформировать организацию", "Выбрать", "Назад");
	        new playername[MAX_PLAYER_NAME];
		    if(sscanf(inputtext, "s[24]", playername)) return ShowPlayerDialog(playerid, dAdminPanel+20, DIALOG_STYLE_INPUT, "{FFCC00}Снять оффлайн лидера", "{FFFFFF}Введите ник лидера которого хотите снять", "Принять", "Назад");
		    else if(GetPlayerID(playername) != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок в сети, используйте команду /setleader");
		    mysql_query_string[0] = EOS;
			format(mysql_query_string, sizeof(mysql_query_string), "SELECT templeader,leader FROM "T_ACCOUNTS" WHERE name = '%s' LIMIT 1", playername);
		    mysql_tquery(dbHandle, mysql_query_string, "@OfflineUnleader", "is", playerid, playername);
	    }
	case dAdminPanel+21:
	    {
	        if(!response) return cmd_apanel(playerid);
	        switch(listitem)
	        {
	            case 0: mysql_tquery(dbHandle, "SELECT name FROM "T_ACCOUNTS" WHERE setmark > 0", "@ListAllSetMark", "i", playerid);
	            case 1: ShowPlayerDialog(playerid, dAdminPanel+23, DIALOG_STYLE_INPUT, "{FFCC00}Выдать телепорт", "{FFFFFF}Введите ник или id игрока которому хотите {63BD4E}выдать {FFFFFF}возможность телепорта по метке на карте", "Принять", "Назад");
	            case 2: ShowPlayerDialog(playerid, dAdminPanel+24, DIALOG_STYLE_INPUT, "{FFCC00}Забрать телепорт", "{FFFFFF}Введите ник или id игрока у которого хотите {F04245}забрать {FFFFFF}возможность телепорта по метке на карте", "Принять", "Назад");
	        }
	    }
	case dAdminPanel+22:
	    {
	        if(!response) return 1;
			ShowPlayerDialog(playerid, dAdminPanel+21, DIALOG_STYLE_LIST, "{FFCC00}Телепорт ютуберов", "1. Список ютуберов\n2. Выдать телепорт\n3. Забрать телепорт", "Выбрать", "Назад");
	    }
	case dAdminPanel+23:
		{
		    if(!response) return ShowPlayerDialog(playerid, dAdminPanel+21, DIALOG_STYLE_LIST, "{FFCC00}Телепорт ютуберов", "1. Список ютуберов\n2. Выдать телепорт\n3. Забрать телепорт", "Выбрать", "Назад");
			new text[MAX_PLAYER_NAME];
			if(sscanf(inputtext, "s", text)) return ShowPlayerDialog(playerid, dAdminPanel+23, DIALOG_STYLE_INPUT, "{FFCC00}Выдать телепорт", "{FFFFFF}Введите ник или id игрока которому хотите\n{63BD4E}выдать {FFFFFF}возможность телепорта по метке на карте", "Принять", "Назад");
			new bool:findname;
		    for(new i; i < strlen(text); i++)
		    {
		        if(text[i] >= '0' && text[i] <= '9') continue;
		        findname = true;
		        break;
		    }
		    new string[128];
		    if(findname)
		    {
		        new targetid = GetPlayerID(text);
		        if(targetid != INVALID_PLAYER_ID)
		        {
		            if(pInfo[targetid][pSetMark]) return ShowPlayerDialog(playerid, dAdminPanel+23, DIALOG_STYLE_INPUT, "{FFCC00}Выдать телепорт", "{FFFFFF}Введите ник или id игрока которому хотите {63BD4E}выдать {FFFFFF}возможность телепорта по метке на карте\n\n{AFAFAF}У данного игрока уже есть такая возможность", "Принять", "Назад");
			        pInfo[targetid][pSetMark] = 1;
			        MysqlUpdatePlayerInt(targetid, "setmark", pInfo[targetid][pSetMark]);
					format(string, sizeof(string), "Вы выдали %s возможность телепорта по метке на карте", text);
			        SendClientMessage(playerid, COLOR_GREEN, string);
		        }
		        else
		        {
		            #if MYSQL_R41_2 == true

	    			mysql_query_string[0] = EOS;
					format(mysql_query_string, 150, "SELECT * FROM "T_ACCOUNTS" WHERE name = '%s'", text);
					new Cache:result = mysql_query(dbHandle, mysql_query_string);
					new rows = cache_num_rows();
					if(!rows) return ShowPlayerDialog(playerid, dAdminPanel+23, DIALOG_STYLE_INPUT, "{FFCC00}Выдать телепорт", "{FFFFFF}Введите ник или id игрока которому хотите {63BD4E}выдать {FFFFFF}возможность телепорта по метке на карте\n\n{AFAFAF}Аккаунт не найден", "Принять", "Назад");
		  	  		mysql_query_string[0] = EOS;
					format(mysql_query_string, 200, "UPDATE "T_ACCOUNTS" SET setmark = 1 WHERE name = '%s'", text);
					mysql_tquery(dbHandle, mysql_query_string);
					cache_delete(result);
					format(string, sizeof(string), "Вы выдали оффлайн игроку %s возможность телепорта по метке на карте", text);
			        SendClientMessage(playerid, COLOR_GREEN, string);

					#else

					mysql_query_string[0] = EOS;
					format(mysql_query_string, 150, "SELECT * FROM "T_ACCOUNTS" WHERE name = '%s'", text);
					new Cache:result = mysql_query(dbHandle, mysql_query_string);
					new rows = cache_get_row_count(dbHandle);
					if(!rows) return ShowPlayerDialog(playerid, dAdminPanel+23, DIALOG_STYLE_INPUT, "{FFCC00}Выдать телепорт", "{FFFFFF}Введите ник или id игрока которому хотите {63BD4E}выдать {FFFFFF}возможность телепорта по метке на карте\n\n{AFAFAF}Аккаунт не найден", "Принять", "Назад");
		  	  		mysql_query_string[0] = EOS;
					format(mysql_query_string, 200, "UPDATE "T_ACCOUNTS" SET setmark = 1 WHERE name = '%s'", text);
					mysql_tquery(dbHandle, mysql_query_string);
					cache_delete(result, dbHandle);
					format(string, sizeof(string), "Вы выдали оффлайн игроку %s возможность телепорта по метке на карте", text);
			        SendClientMessage(playerid, COLOR_GREEN, string);

				    #endif
		        }
		    }
		    else
		    {
		        if(pInfo[strval(text)][pSetMark]) return ShowPlayerDialog(playerid, dAdminPanel+23, DIALOG_STYLE_INPUT, "{FFCC00}Выдать телепорт", "{FFFFFF}Введите ник или id игрока которому хотите {63BD4E}выдать {FFFFFF}возможность телепорта по метке на карте\n\n{AFAFAF}У данного игрока уже есть такая возможность", "Принять", "Назад");
		        pInfo[strval(text)][pSetMark] = 1;
		        MysqlUpdatePlayerInt(strval(text), "setmark", pInfo[strval(text)][pSetMark]);
				format(string, sizeof(string), "Вы выдали %s возможность телепорта по метке на карте", GetName(strval(text)));
		        SendClientMessage(playerid, COLOR_GREEN, string);
		    }
		}
	case dAdminPanel+24:
	    {
	        if(!response) return ShowPlayerDialog(playerid, dAdminPanel+21, DIALOG_STYLE_LIST, "{FFCC00}Телепорт ютуберов", "1. Список ютуберов\n2. Выдать телепорт\n3. Забрать телепорт", "Выбрать", "Назад");
	        new text[MAX_PLAYER_NAME];
			if(sscanf(inputtext, "s", text)) return ShowPlayerDialog(playerid, dAdminPanel+24, DIALOG_STYLE_INPUT, "{FFCC00}Забрать телепорт", "{FFFFFF}Введите ник или id игрока у которого хотите\n{F04245}забрать {FFFFFF}возможность телепорта по метке на карте", "Принять", "Назад");
			new bool:findname;
		    for(new i; i < strlen(text); i++)
		    {
		        if(text[i] >= '0' && text[i] <= '9') continue;
		        findname = true;
		        break;
		    }
		    new string[128];
		    if(findname)
		    {
		        new targetid = GetPlayerID(text);
		        if(targetid != INVALID_PLAYER_ID)
		        {
			        if(!pInfo[targetid][pSetMark]) return ShowPlayerDialog(playerid, dAdminPanel+24, DIALOG_STYLE_INPUT, "{FFCC00}Забрать телепорт", "{FFFFFF}Введите ник или id игрока у которого хотите {F04245}забрать {FFFFFF}возможность телепорта по метке на карте\n\n{AFAFAF}У данного игрока нет такой возможности", "Принять", "Назад");
			        pInfo[targetid][pSetMark] = 0;
			        MysqlUpdatePlayerInt(targetid, "setmark", pInfo[targetid][pSetMark]);
					format(string, sizeof(string), "Вы забрали у %s возможность телепорта по метке на карте", text);
			        SendClientMessage(playerid, COLOR_RED, string);
     			}
     			else
     			{
     			    #if MYSQL_R41_2 == true

	    			mysql_query_string[0] = EOS;
					format(mysql_query_string, 150, "SELECT * FROM "T_ACCOUNTS" WHERE name = '%s'", text);
					new Cache:result = mysql_query(dbHandle, mysql_query_string);
					new rows = cache_num_rows();
					if(!rows) return ShowPlayerDialog(playerid, dAdminPanel+24, DIALOG_STYLE_INPUT, "{FFCC00}Забрать телепорт", "{FFFFFF}Введите ник или id игрока у которого хотите {F04245}забрать {FFFFFF}возможность телепорта по метке на карте\n\n{AFAFAF}Аккаунт не найден", "Принять", "Назад");
		  	  		mysql_query_string[0] = EOS;
					format(mysql_query_string, 200, "UPDATE "T_ACCOUNTS" SET setmark = 0 WHERE name = '%s'", text);
					mysql_tquery(dbHandle, mysql_query_string);
					cache_delete(result);
					format(string, sizeof(string), "Вы забрали у оффлайн игрока %s возможность телепорта по метке на карте", text);
			        SendClientMessage(playerid, COLOR_RED, string);

					#else

					mysql_query_string[0] = EOS;
					format(mysql_query_string, 150, "SELECT * FROM "T_ACCOUNTS" WHERE name = '%s'", text);
					new Cache:result = mysql_query(dbHandle, mysql_query_string);
					new rows = cache_get_row_count(dbHandle);
					if(!rows) return ShowPlayerDialog(playerid, dAdminPanel+24, DIALOG_STYLE_INPUT, "{FFCC00}Забрать телепорт", "{FFFFFF}Введите ник или id игрока у которого хотите {F04245}забрать {FFFFFF}возможность телепорта по метке на карте\n\n{AFAFAF}Аккаунт не найден", "Принять", "Назад");
		  	  		mysql_query_string[0] = EOS;
					format(mysql_query_string, 200, "UPDATE "T_ACCOUNTS" SET setmark = 0 WHERE name = '%s'", text);
					mysql_tquery(dbHandle, mysql_query_string);
					cache_delete(result, dbHandle);
					format(string, sizeof(string), "Вы забрали у оффлайн игрока %s возможность телепорта по метке на карте", text);
			        SendClientMessage(playerid, COLOR_RED, string);

				    #endif
     			}
		    }
		    else
		    {
		        if(!pInfo[strval(text)][pSetMark]) return ShowPlayerDialog(playerid, dAdminPanel+24, DIALOG_STYLE_INPUT, "{FFCC00}Забрать телепорт", "{FFFFFF}Введите ник или id игрока у которого хотите {F04245}забрать {FFFFFF}возможность телепорта по метке на карте\n\n{AFAFAF}У данного игрока нет такой возможности", "Принять", "Назад");
		        pInfo[strval(text)][pSetMark] = 0;
                MysqlUpdatePlayerInt(strval(text), "setmark", pInfo[strval(text)][pSetMark]);
				format(string, sizeof(string), "Вы забрали у %s возможность телепорта по метке на карте", GetName(strval(text)));
		        SendClientMessage(playerid, COLOR_RED, string);
		    }
	    }
	case dJob+34:
	    {
	        if(!response) return cmd_menu(playerid);
	        switch(listitem)
	        {
	            case 0: ShowPlayerDialog(playerid, dJob+2, 1, "{FFCC00}Смена пароля", "{FFFFFF}Введите ваш действующий пароль:", "Принять", "Отмена");
	            case 1:
	            {
	                if(!GetPVarInt(playerid, "authcode"))
	                {
	                	if(pInfo[playerid][pMailConfirmed]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Ваша почта уже подтверждена!");
						ShowPlayerDialog(playerid, dMail, DIALOG_STYLE_INPUT, "{FFCC00}Подтверждение почты", "{ffffff}Введите Ваш e-mail адрес, на который Вам будет отправлен код подтверждения.\nЕсли вы потеряете доступ к аккаунту, то с помощью e-mail вы сможете восстановить его.", "Далее", "Закрыть");
					}
					else ShowPlayerDialog(playerid, dMail+1, DIALOG_STYLE_INPUT, "{FFCC00}Подтверждение почты", "{FFFFFF}Введите код подтверждения который пришёл Вам на почту:", "Принять", "Закрыть");
	            }
	            case 2:
	            {
	                if(pInfo[playerid][pCheckCode])
					{
					    pInfo[playerid][pCheckCode] = 0;
					    MysqlUpdatePlayerInt(playerid,"checkcode",pInfo[playerid][pCheckCode]);
						PlayerSecurity(playerid);
					}
					else ShowPlayerDialog(playerid, 12422, DIALOG_STYLE_INPUT, "{FFCC00}Графический пароль", "{FFFFFF}Графический пароль защищает ваш аккаунт, если Ваш IP адрес не совпадает с последним IP адресом.\nУбедитесь в правильности ввода данных и сделайте скриншот (F8).\nГрафический пароль может состоять только из 4 цифр!", "Принять", "Назад");
	            }
	            case 3:
	            {
	                if(pInfo[playerid][pCheckCode])
	                {
	                    new mes[30];
	                    switch(pInfo[playerid][pCheckCode])
	                    {
	                        case 1: mes = "Запрашивается всегда";
	                        case 2: mes = "При несовпадении IP адреса";
	                        case 3: mes = "При несовпадении подсети";
	                    }
	                    stringer[0] = EOS;
	                    format(stringer, 300, "{3399FF}- %s{FFFFFF}\n1. Запрашивать всегда\n2. При несовпадении IP адреса\n3. При несовпадении подсети", mes);
	                	ShowPlayerDialog(playerid, 12423, DIALOG_STYLE_LIST, "{FFCC00}Настройки графического пароля", stringer, "Выбрать", "Назад");
                	}
                	else SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас не установлен графический пароль!");
	            }
	        }
	    }
	case 12422:
		{
			if(!response) return PlayerSecurity(playerid);
			new day;
			if(sscanf(inputtext, "i", day)) return ShowPlayerDialog(playerid, 12422, DIALOG_STYLE_INPUT, "{FFCC00}Графический пароль", "{FFFFFF}Графический пароль защищает ваш аккаунт, если Ваш IP адрес не совпадает с последним IP адресом.\nУбедитесь в правильности ввода данных и сделайте скриншот (F8).\nГрафический пароль может состоять только из 4 цифр!", "Принять", "Назад");
			if(strlen(inputtext) != 4) return ShowPlayerDialog(playerid, 12422, DIALOG_STYLE_INPUT, "{FFCC00}Графический пароль", "{FFFFFF}Графический пароль защищает ваш аккаунт, если Ваш IP адрес не совпадает с последним IP адресом.\nУбедитесь в правильности ввода данных и сделайте скриншот (F8).\nГрафический пароль может состоять только из 4 цифр!", "Принять", "Назад");
			if(strfind(inputtext, "0", true) != -1)
			{
			    ShowPlayerDialog(playerid, 12422, DIALOG_STYLE_INPUT, "{FFCC00}Графический пароль", "{FFFFFF}Графический пароль защищает ваш аккаунт, если Ваш IP адрес не совпадает с последним IP адресом.\nУбедитесь в правильности ввода данных и сделайте скриншот (F8).\nГрафический пароль может состоять только из 4 цифр!", "Принять", "Назад");
				return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] В графическом пароле нельзя использовать цифру 0");
			}
			pInfo[playerid][pSecurityCode] = day;
			pInfo[playerid][pCheckCode] = 2;
			SendMes(playerid, COLOR_GREEN, "Ваш новый графический пароль: {ffffff}%i", day);
			SendClientMessage(playerid, COLOR_GREEN, "Рекомендуется сделать скриншот. Клавиша: {ffffff}F8");
			MysqlUpdatePlayerInt(playerid,"securitycode",pInfo[playerid][pSecurityCode]);
			MysqlUpdatePlayerInt(playerid,"checkcode",pInfo[playerid][pCheckCode]);
		}
	case 12423:
	    {
	        if(!response) return PlayerSecurity(playerid);
			switch(listitem)
			{
				case 1: SendClientMessage(playerid, COLOR_GREEN, "Графический пароль будет запрашиваться при каждом заходе на сервер");
				case 2: SendClientMessage(playerid, COLOR_GREEN, "Графический пароль будет запрашиваться при несовпадении IP адреса");
				case 3: SendClientMessage(playerid, COLOR_GREEN, "Графический пароль будет запрашиваться при несовпадении подсети");
			}
			pInfo[playerid][pCheckCode] = listitem;
			MysqlUpdatePlayerInt(playerid,"checkcode",pInfo[playerid][pCheckCode]);
	    }
	case dJob+2:
		{
			if(!response) return 1;
			new password[32];
			if(sscanf(inputtext, "s[32]",password)) return ShowPlayerDialog(playerid, dJob+2, 1, "{FFCC00}Смена пароля", "{ffffff}Введите ваш действующий пароль:", "Принять", "Отмена");
			if(strlen(password) < 6 || strlen(password) > 16)
			{
				SendClientMessage(playerid, COLOR_GREY, "Количество символов от 6 до 16!");
				return ShowPlayerDialog(playerid, dJob+2, 1, "{FFCC00}Смена пароля", "{ffffff}Введите ваш действующий пароль:", "Принять", "Отмена");
			}
			if(IsTextRussian(password))
			{
				SendClientMessage(playerid, COLOR_GREY, "Использовать русские символы запрещено!");
				return ShowPlayerDialog(playerid, dJob+2, 1, "{FFCC00}Смена пароля", "{ffffff}Введите ваш действующий пароль:", "Принять", "Отмена");
			}
			if(GetString(password, pInfo[playerid][pPassword])) ShowPlayerDialog(playerid, dJob+3, 1, "{FFCC00}Смена пароля", "{ffffff}Введите новый пароль:", "Принять", "Отмена");
			else
			{
			    gPlayerLogTries[playerid]++;
				if(gPlayerLogTries[playerid] == 3)
				{
					SendClientMessage(playerid,COLOR_RED, "Вы несколько раз ввели неверный пароль! Для выхода из игры введите: {ffffff}/q(uit)");
					return SKick(playerid, 53);
				}
		        new string[100];
				format(string, sizeof(string), "{FFFFFF}Вы ввели неверный пароль!\nУ вас осталось {FF9900}%d {FFFFFF}попыток", 4 - gPlayerLogTries[playerid]);
				ShowPlayerDialog(playerid, dErrorPassword+1, DIALOG_STYLE_MSGBOX, "{F04245}Ошибка", string, "Повтор", "Отмена");
			}
		}
	case dJob+3:
		{
			if(!response) return 1;
			new password[32];
			if(sscanf(inputtext, "s[32]",password)) return ShowPlayerDialog(playerid, dJob+3, 1, "{FFCC00}Смена пароля", "{ffffff}Введите новый пароль:", "Принять", "Отмена");
			if(strlen(password) < 3 || strlen(password) > 16)
			{
				SendClientMessage(playerid, COLOR_GREY, "Количество символов от 3 до 16!");
				return ShowPlayerDialog(playerid, dJob+3, 1, "{FFCC00}Смена пароля", "{ffffff}Введите новый пароль:", "Принять", "Отмена");
			}
			if(IsTextRussian(password))
			{
				SendClientMessage(playerid, COLOR_GREY, "Использовать русские символы запрещено!");
				return ShowPlayerDialog(playerid, dJob+3, 1, "{FFCC00}Смена пароля", "{ffffff}Введите новый пароль:", "Принять", "Отмена");
			}
			strmid(pInfo[playerid][pPassword], password, 0, strlen(password), 32);
			SendMes(playerid, COLOR_GREEN, "Ваш новый пароль: {ffffff}%s", inputtext);
			SendClientMessage(playerid, COLOR_GREEN, "Рекомендуется сделать скриншот. Клавиша: {ffffff}F8");
			MysqlUpdatePlayerStr(playerid, "password", pInfo[playerid][pPassword]);
		}
    case dErrorPassword+1:
		{
		    if(!response) return PlayerSecurity(playerid);
            ShowPlayerDialog(playerid, dJob+2, 1, "{FFCC00}Смена пароля", "{ffffff}Введите ваш действующий пароль:", "Принять", "Отмена");
		}
	case dJob+4:
		{
			if(!response) return cmd_menu(playerid);
			new nickname[24];
			if(sscanf(inputtext, "s[24]", nickname)) return ShowPlayerDialog(playerid, dJob+4, 1, "{FFCC00}Смена нонРП ника", "{FFFFFF}Введите будущий ник\n\nВозможно сменить только если Ваш ник не соответствует RP правилам.\nВо всех остальных случаях смена осуществляется в /menu > Донат услуги", "Принять", "Назад");
			if(!(3 <= strlen(nickname) <= MAX_PLAYER_NAME)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Длина ника не может быть меньше трех и больше 24 символов");
            if(IsLoginInvalid(nickname)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] В нике найдены запрещенные символы/пробелы");
            if(IsTextRussian(nickname)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Ник должен содержать только латинские буквы");
			if(strfind(GetName(playerid), "_", true) != -1) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Менять ник можно только если у вас нонРП ник");
			if(strfind(nickname, "_", true) == -1) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Новый ник должен быть формата Имя_Фамилия");
            mysql_query_string[0] = EOS;
			format(mysql_query_string, sizeof(mysql_query_string), "SELECT * FROM "T_ACCOUNTS" WHERE name = '%s'", nickname);
			mysql_tquery(dbHandle, mysql_query_string, "@OnPlayerChangeName", "is", playerid, nickname);
		}
	case dSellCar:
		{
			if(!response) return 1;
			if(pInfo[playerid][pHouse] != 0)
			{
			   	pInfo[playerid][cModel] = 0;
				pInfo[playerid][cColor][0] = pInfo[playerid][cColor][1] = pInfo[playerid][cClass] = 0;
				pInfo[playerid][cFuel] = 150.0;
				pInfo[playerid][cPaintjob] = 3;
				for(new i = 0; i < 14; i++) pInfo[playerid][cVehcoms][i] = 0;
				format(pInfo[playerid][cVehcom], 64, "%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",
				pInfo[playerid][cVehcoms][0],pInfo[playerid][cVehcoms][1],pInfo[playerid][cVehcoms][2],
				pInfo[playerid][cVehcoms][3],pInfo[playerid][cVehcoms][4],pInfo[playerid][cVehcoms][5],
				pInfo[playerid][cVehcoms][6],pInfo[playerid][cVehcoms][7],pInfo[playerid][cVehcoms][8],
				pInfo[playerid][cVehcoms][9],pInfo[playerid][cVehcoms][10],pInfo[playerid][cVehcoms][11],
				pInfo[playerid][cVehcoms][12],pInfo[playerid][cVehcoms][13]);
    			//Delete3DTextLabel(VehicleLabel[pTemp[playerid][pCarPlayerID]]);
				new string[128];
				format(string, sizeof(string), "Вы продали ваше транспортное средство за %d$", (pInfo[playerid][cCost]/100)*75);
				SendClientMessage(playerid, COLOR_YELLOW, string);
				TransferMoney(-1,playerid,(pInfo[playerid][cCost]/100)*75);
				pInfo[playerid][pRegVehicle] = 0;
    			strmid(pInfo[playerid][pNumberVehicle], "ТРАНЗИТ", 0, strlen("ТРАНЗИТ"), 64);
    			mysql_query_string[0] = EOS;
				format(mysql_query_string, 200, "UPDATE "T_ACCOUNTS" SET veh_reg = %i, veh_number = '%s' WHERE id = %i", pInfo[playerid][pRegVehicle], pInfo[playerid][pNumberVehicle], pInfo[playerid][pID]);
				mysql_tquery(dbHandle, mysql_query_string, "", "");
				format(string, sizeof(string), "Игрок %s продал транспорт %s[%i] за %d$", GetName(playerid), VehStats[GetVehicleModel(pTemp[playerid][pCarPlayerID])-400][vName], GetPVarInt(playerid,"VehicleEnters"), (pInfo[playerid][cCost]/100)*75);
				WriteLog("SellCar", string);
				if(pTemp[playerid][pCarPlayerID] != INVALID_VEHICLE_ID)
				{
					DestroyVehicle(pTemp[playerid][pCarPlayerID]);
					pTemp[playerid][pCarPlayerID] = INVALID_VEHICLE_ID;
				}
				if(VehicleLabel[pTemp[playerid][pCarPlayerID]] != Text3D:INVALID_3DTEXT_ID)
				{
				    DestroyDynamic3DTextLabel(VehicleLabel[pTemp[playerid][pCarPlayerID]]);
				    VehicleLabel[pTemp[playerid][pCarPlayerID]] = Text3D:INVALID_3DTEXT_ID;
				}
				pInfo[playerid][cCost] = 0;
			}
		}
	case dEvent:
		{
		    if(!response) return 1;
		    switch(listitem)
		    {
		        case 0:
		        {
		            if(!gEvent[eventPlayers]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Сначала укажите количество участников!");
					new string[128];
					if(!gEvent[eventStatus])
		            {
		                GetPlayerPos(playerid, gEvent[eventPos][0], gEvent[eventPos][1], gEvent[eventPos][2]);
		                gEvent[eventVirtualWorld] = GetPlayerVirtualWorld(playerid);
		                gEvent[eventInterior] = GetPlayerInterior(playerid);
    					gEvent[eventStatus] = 1;
    					for(new i;i<MAX_PLAYERS;i++)
					    {
					        if(!gPlayerLogged[i]) continue;
					        gEventIn[playerid] = -1;
					    }
    					SendClientMessageToAll(COLOR_YELLOW, "Уважаемые игроки, открыт телепорт на мероприятие. Используйте: {FFFFFF}/gomp");
						format(string, sizeof(string), "Инициатор: {FFFFFF}%s{EAD86A}. Максимальное количество участников: {FFFFFF}%i", GetName(playerid), gEvent[eventPlayers]);
						SendClientMessageToAll(COLOR_YELLOW, string);
						format(string, sizeof(string), "[A] %s[%d] открыл телепорт на мероприятие", GetName(playerid), playerid);
						SendAdminMessage(COLOR_GREEN, string);
 					}
 					else
 					{
 					    gEvent[eventStatus] = gEvent[eventPlayers] = 0;
 					    SendClientMessageToAll(COLOR_YELLOW, "Телепорт на мероприятие окончен");
 					    format(string, sizeof(string), "[A] %s[%d] закрыл телепорт на мероприятие", GetName(playerid), playerid);
						SendAdminMessage(COLOR_GREEN, string);
 					}
		        }
		        case 1:
		        {
		            if(gEvent[eventStatus]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Нельзя указывать количество участников во время открытого телепорта!");
		            ShowPlayerDialog(playerid, dEvent+1, DIALOG_STYLE_INPUT, "{FFCC00}Указать количество участников", "{FFFFFF}Укажите максимальное количество участников\nкоторое сможет попасть на мероприятие\n\n{AFAFAF}Допустимое значение количества участников от 5 до 100", "Принять", "Назад");
		        }
		        case 2: ShowPlayerDialog(playerid, dEvent+2, DIALOG_STYLE_INPUT, "{FFCC00}Выдать здоровье в радиусе", "{FFFFFF}Укажите радиус\n\n{AFAFAF}Допустимое значение радиуса от 1 до 100", "Принять", "Назад");
				case 3: ShowPlayerDialog(playerid, dEvent+3, DIALOG_STYLE_INPUT, "{FFCC00}Выдать броню в радиусе", "{FFFFFF}Укажите радиус\n\n{AFAFAF}Допустимое значение радиуса от 1 до 100", "Принять", "Назад");
				case 4: ShowPlayerDialog(playerid, dEvent+4, DIALOG_STYLE_INPUT, "{FFCC00}Выдать оружие в радиусе", "{FFFFFF}Укажите id оружия, патроны и радиус через запятую\n\n{AFAFAF}Допустимое значение радиуса от 1 до 100\nДопустимое значение патрон от 1 до 500", "Принять", "Назад");
				case 5: ShowPlayerDialog(playerid, dEvent+5, DIALOG_STYLE_INPUT, "{FFCC00}Забрать броню в радиусе", "{FFFFFF}Укажите радиус\n\n{AFAFAF}Допустимое значение радиуса от 1 до 100", "Принять", "Назад");
				case 6: ShowPlayerDialog(playerid, dEvent+6, DIALOG_STYLE_INPUT, "{FFCC00}Забрать оружие в радиусе", "{FFFFFF}Укажите радиус\n\n{AFAFAF}Допустимое значение радиуса от 1 до 100", "Принять", "Назад");
				case 7: ShowPlayerDialog(playerid, dEvent+7, DIALOG_STYLE_INPUT, "{FFCC00}Заспавнить игроков в радиусе", "{FFFFFF}Укажите радиус\n\n{AFAFAF}Допустимое значение радиуса от 1 до 100", "Принять", "Назад");
				case 8: ShowPlayerDialog(playerid, dEvent+8, DIALOG_STYLE_INPUT, "{FFCC00}Выдать временные скиллы в радиусе", "{FFFFFF}Укажите радиус\n\n{AFAFAF}Допустимое значение от 1 до 100\n\n{F04245}[Внимание] {FFFFFF}Скиллы вернутся по стандарту игрокам после их спавна", "Принять", "Назад");
		    }
		}
	case dEvent+1:
		{
		    if(!response) return cmd_mp(playerid);
		    new count;
			if(sscanf(inputtext, "i", count)) return ShowPlayerDialog(playerid, dEvent+1, DIALOG_STYLE_INPUT, "{FFCC00}Указать количество участников", "{FFFFFF}Укажите максимальное количество участников\nкоторое сможет попасть на мероприятие\n\n{AFAFAF}Допустимое значение количества участников от 5 до 100", "Принять", "Назад");
			if(!(5 <= count <= 80))
			{
				SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Допустимое значение количества участников от 5 до 100");
				return ShowPlayerDialog(playerid, dEvent+1, DIALOG_STYLE_INPUT, "{FFCC00}Указать количество участников", "{FFFFFF}Укажите максимальное количество участников\nкоторое сможет попасть на мероприятие\n\n{AFAFAF}Допустимое значение количества участников от 5 до 100", "Принять", "Назад");
			}
			gEvent[eventPlayers] = count;
			new string[128];
			format(string, sizeof(string), "Вы указали количество участников на мероприятие: {FFFFFF}%i", gEvent[eventPlayers]);
			SendClientMessage(playerid, COLOR_GREEN, string);
		}
	case dEvent+2:
		{
		    if(!response) return cmd_mp(playerid);
		    new Float:radius, Float:x, Float:y, Float:z;
			if(sscanf(inputtext, "f", radius)) return ShowPlayerDialog(playerid, dEvent+2, DIALOG_STYLE_INPUT, "{FFCC00}Выдать здоровье в радиусе", "{FFFFFF}Укажите радиус\n\n{AFAFAF}Допустимое значение радиуса от 1 до 100", "Принять", "Назад");
			if(!(1 <= radius <= 100))
			{
				SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Допустимое значение радиуса от 1 до 100");
				return ShowPlayerDialog(playerid, dEvent+2, DIALOG_STYLE_INPUT, "{FFCC00}Выдать здоровье в радиусе", "{FFFFFF}Укажите радиус\n\n{AFAFAF}Допустимое значение радиуса от 1 до 100", "Принять", "Назад");
			}
			new num;
		    for(new i;i<MAX_PLAYERS;i++)
		    {
		        if(!gPlayerLogged[i]) continue;
		        GetPlayerPos(playerid,x,y,z);
		        if(IsPlayerInRangeOfPoint(i,radius,x,y,z))
		        {
		            SetHealth(i,100);
		            SetHealth(i,100);
		            num++;
		        }
		    }
		    new string[128];
		    format(string, sizeof(string), "Вы выдали здоровье %d игрокам в радиусе %.01f м", num, radius);
		    SendClientMessage(playerid, COLOR_GREEN, string);
		    format(string, sizeof(string), "[A] %s[%d] выдал здоровье %i игрокам в радиусе %.01f м", GetName(playerid), playerid, num, radius);
			SendAdminMessage(COLOR_GREEN, string);
		}
	case dEvent+3:
		{
		    if(!response) return cmd_mp(playerid);
		    new Float:radius, Float:x, Float:y, Float:z;
			if(sscanf(inputtext, "f", radius)) return ShowPlayerDialog(playerid, dEvent+3, DIALOG_STYLE_INPUT, "{FFCC00}Выдать броню в радиусе", "{FFFFFF}Укажите радиус\n\n{AFAFAF}Допустимое значение радиуса от 1 до 100", "Принять", "Назад");
			if(!(1 <= radius <= 100))
			{
				SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Допустимое значение радиуса от 1 до 100");
				return ShowPlayerDialog(playerid, dEvent+3, DIALOG_STYLE_INPUT, "{FFCC00}Выдать броню в радиусе", "{FFFFFF}Укажите радиус\n\n{AFAFAF}Допустимое значение радиуса от 1 до 100", "Принять", "Назад");
			}
			new num;
		    for(new i;i<MAX_PLAYERS;i++)
		    {
		        if(!gPlayerLogged[i]) continue;
		        GetPlayerPos(playerid,x,y,z);
		        if(IsPlayerInRangeOfPoint(i,radius,x,y,z))
		        {
		            SetArmour(i,100);
		            num++;
		        }
		    }
		    new string[128];
		    format(string, sizeof(string), "Вы успешно броню %d игрокам в радиусе %.01f м", num, radius);
		    SendClientMessage(playerid, COLOR_GREEN, string);
		    format(string, sizeof(string), "[A] %s[%d] выдал броню %i игрокам в радиусе %.01f м", GetName(playerid), playerid, num, radius);
			SendAdminMessage(COLOR_GREEN, string);
		}
	case dEvent+4:
		{
		    if(!response) return cmd_mp(playerid);
		    new weaponid, ammo, Float:radius, Float:x, Float:y, Float:z;
			if(sscanf(inputtext, "iif", weaponid, ammo, radius)) return ShowPlayerDialog(playerid, dEvent+4, DIALOG_STYLE_INPUT, "{FFCC00}Выдать оружие в радиусе", "{FFFFFF}Укажите id оружия, патроны и радиус через запятую\n\n{AFAFAF}Допустимое значение радиуса от 1 до 100\nДопустимое значение патрон от 1 до 500", "Принять", "Назад");
			if(!(1 <= radius <= 100))
			{
				SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Допустимое значение радиуса от 1 до 100");
				return ShowPlayerDialog(playerid, dEvent+4, DIALOG_STYLE_INPUT, "{FFCC00}Выдать оружие в радиусе", "{FFFFFF}Укажите id оружия, патроны и радиус через запятую\n\n{AFAFAF}Допустимое значение радиуса от 1 до 100\nДопустимое значение патрон от 1 до 500", "Принять", "Назад");
			}
			else if(!(1 <= ammo <= 500))
			{
			    SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Допустимое значение патрон от 1 до 500");
				return ShowPlayerDialog(playerid, dEvent+4, DIALOG_STYLE_INPUT, "{FFCC00}Выдать оружие в радиусе", "{FFFFFF}Укажите id оружия, патроны и радиус через запятую\n\n{AFAFAF}Допустимое значение радиуса от 1 до 100\nДопустимое значение патрон от 1 до 500", "Принять", "Назад");
			}
			new num;
		    for(new i;i<MAX_PLAYERS;i++)
		    {
		        if(!gPlayerLogged[i]) continue;
		        GetPlayerPos(playerid,x,y,z);
		        if(IsPlayerInRangeOfPoint(i,radius,x,y,z))
		        {
		            GivePlayerWeaponEx(i, weaponid, ammo);
		            num++;
		        }
		    }
		    new string[128];
		    format(string, sizeof(string), "Вы выдали оружие id:%i (%i патр.) %d игрокам в радиусе %.01f м", weaponid, ammo, num, radius);
		    SendClientMessage(playerid, COLOR_GREEN, string);
		    format(string, sizeof(string), "[A] %s[%d] выдал оружие id:%i (%i патр.) %i игрокам в радиусе %.01f м", GetName(playerid), playerid, weaponid, ammo, num, radius);
			SendAdminMessage(COLOR_GREEN, string);
		}
	case dEvent+5:
		{
		    if(!response) return cmd_mp(playerid);
		    new Float:radius, Float:x, Float:y, Float:z;
			if(sscanf(inputtext, "f", radius)) return ShowPlayerDialog(playerid, dEvent+5, DIALOG_STYLE_INPUT, "{FFCC00}Забрать броню в радиусе", "{FFFFFF}Укажите радиус\n\n{AFAFAF}Допустимое значение радиуса от 1 до 100", "Принять", "Назад");
			if(!(1 <= radius <= 100))
			{
				SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Допустимое значение радиуса от 1 до 100");
				return ShowPlayerDialog(playerid, dEvent+5, DIALOG_STYLE_INPUT, "{FFCC00}Забрать броню в радиусе", "{FFFFFF}Укажите радиус\n\n{AFAFAF}Допустимое значение радиуса от 1 до 100", "Принять", "Назад");
			}
			new num;
		    for(new i;i<MAX_PLAYERS;i++)
		    {
		        if(!gPlayerLogged[i]) continue;
		        GetPlayerPos(playerid,x,y,z);
		        if(IsPlayerInRangeOfPoint(i,radius,x,y,z))
		        {
		            SetArmour(i,0);
		            num++;
		        }
		    }
		    new string[128];
		    format(string, sizeof(string), "Вы забрали броню у %d игроков в радиусе %.01f м", num, radius);
		    SendClientMessage(playerid, COLOR_GREEN, string);
		    format(string, sizeof(string), "[A] %s[%d] забрал броню у %i игроков в радиусе %.01f м", GetName(playerid), playerid, num, radius);
			SendAdminMessage(COLOR_GREEN, string);
		}
	case dEvent+6:
		{
		    if(!response) return cmd_mp(playerid);
		    new Float:radius, Float:x, Float:y, Float:z;
			if(sscanf(inputtext, "f", radius)) return ShowPlayerDialog(playerid, dEvent+6, DIALOG_STYLE_INPUT, "{FFCC00}Забрать оружие в радиусе", "{FFFFFF}Укажите радиус\n\n{AFAFAF}Допустимое значение радиуса от 1 до 100", "Принять", "Назад");
			if(!(1 <= radius <= 100))
			{
				SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Допустимое значение радиуса от 1 до 100");
				return ShowPlayerDialog(playerid, dEvent+6, DIALOG_STYLE_INPUT, "{FFCC00}Забрать оружие в радиусе", "{FFFFFF}Укажите радиус\n\n{AFAFAF}Допустимое значение радиуса от 1 до 100", "Принять", "Назад");
			}
			new num;
		    for(new i;i<MAX_PLAYERS;i++)
		    {
		        if(!gPlayerLogged[i]) continue;
		        GetPlayerPos(playerid,x,y,z);
		        if(IsPlayerInRangeOfPoint(i,radius,x,y,z))
		        {
		            ResetPlayerWeaponsEx(i);
		            num++;
		        }
		    }
		    new string[128];
		    format(string, sizeof(string), "Вы забрали оружие у %d игроков в радиусе %.01f м", num, radius);
		    SendClientMessage(playerid, COLOR_GREEN, string);
		    format(string, sizeof(string), "[A] %s[%d] забрал оружие у %i игроков в радиусе %.01f м", GetName(playerid), playerid, num, radius);
			SendAdminMessage(COLOR_GREEN, string);
		}
    case dEvent+7:
		{
		    if(!response) return cmd_mp(playerid);
		    new Float:radius, Float:x, Float:y, Float:z;
			if(sscanf(inputtext, "f", radius)) return ShowPlayerDialog(playerid, dEvent+7, DIALOG_STYLE_INPUT, "{FFCC00}Заспавнить игроков в радиусе", "{FFFFFF}Укажите радиус\n\n{AFAFAF}Допустимое значение радиуса от 1 до 100", "Принять", "Назад");
			if(!(1 <= radius <= 100))
			{
				SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Допустимое значение радиуса от 1 до 100");
				return ShowPlayerDialog(playerid, dEvent+7, DIALOG_STYLE_INPUT, "{FFCC00}Заспавнить игроков в радиусе", "{FFFFFF}Укажите радиус\n\n{AFAFAF}Допустимое значение радиуса от 1 до 100", "Принять", "Назад");
			}
			new num;
		    for(new i;i<MAX_PLAYERS;i++)
		    {
		        if(!gPlayerLogged[i] || playerid == i) continue;
		        GetPlayerPos(playerid,x,y,z);
		        if(IsPlayerInRangeOfPoint(i,radius,x,y,z))
		        {
		            SpawnPlayerEx(i);
		            num++;
		        }
		    }
		    new string[128];
		    format(string, sizeof(string), "Вы заспавнили %d игроков в радиусе %.01f м", num, radius);
		    SendClientMessage(playerid, COLOR_GREEN, string);
		    format(string, sizeof(string), "[A] %s[%d] заспавнил %i игроков в радиусе %.01f м", GetName(playerid), playerid, num, radius);
			SendAdminMessage(COLOR_GREEN, string);
		}
	case dEvent+8:
	    {
	        if(!response) return cmd_mp(playerid);
			new Float:radius, Float:x, Float:y, Float:z;
			if(sscanf(inputtext, "f", radius)) return ShowPlayerDialog(playerid, dEvent+8, DIALOG_STYLE_INPUT, "{FFCC00}Выдать временные скиллы в радиусе", "{FFFFFF}Укажите радиус\n\n{AFAFAF}Допустимое значение от 1 до 100\n\n{F04245}[Внимание] {FFFFFF}Скиллы вернутся по стандарту игрокам после их спавна", "Принять", "Назад");
			if(!(1 <= radius <= 100))
			{
			    SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Допустимое значение радиуса от 1 до 100");
			    return ShowPlayerDialog(playerid, dEvent+8, DIALOG_STYLE_INPUT, "{FFCC00}Выдать временные скиллы в радиусе", "{FFFFFF}Укажите радиус\n\n{AFAFAF}Допустимое значение от 1 до 100\n\n{F04245}[Внимание] {FFFFFF}Скиллы вернутся по стандарту игрокам после их спавна", "Принять", "Назад");
			}
			new num;
		    for(new i;i<MAX_PLAYERS;i++)
		    {
		        if(!gPlayerLogged[i]) continue;
		        GetPlayerPos(playerid,x,y,z);
		        if(IsPlayerInRangeOfPoint(i,radius,x,y,z))
		        {
		            SetPlayerSkillLevel(i, WEAPONSKILL_PISTOL_SILENCED, 		1000);
					SetPlayerSkillLevel(i, WEAPONSKILL_DESERT_EAGLE, 			1000);
					SetPlayerSkillLevel(i, WEAPONSKILL_SHOTGUN, 				1000);
					SetPlayerSkillLevel(i, WEAPONSKILL_MP5, 					1000);
					SetPlayerSkillLevel(i, WEAPONSKILL_AK47, 					1000);
					SetPlayerSkillLevel(i, WEAPONSKILL_M4, 						1000);
					SetPlayerSkillLevel(i, WEAPONSKILL_PISTOL, 					1000);
					SetPlayerSkillLevel(i, WEAPONSKILL_MICRO_UZI, 				1000);
		            num++;
		        }
		    }
		    new string[128];
		    format(string, sizeof(string), "Вы выдали временные скиллы %d игрокам в радиусе %.01f м", num, radius);
		    SendClientMessage(playerid, COLOR_GREEN, string);
		    format(string, sizeof(string), "[A] %s[%d] выдал временные скиллы %i игрокам в радиусе %.01f м", GetName(playerid), playerid, num, radius);
			SendAdminMessage(COLOR_GREEN, string);
	    }
	case dJob+5:
		{
		    if(!response) return RemovePlayerFromVehicle(playerid);
	        new arid = GetArendCarID(GetPVarInt(playerid,"VehicleEnters"));
	        if(arid != -1)
	        {
	        	if(GetPVarInt(playerid, "arendkey") == -1)
				{
		            if(ArendInfo[arid][aPlayerID] == INVALID_PLAYER_ID || !IsPlayerConnected(ArendInfo[arid][aPlayerID]))
		            {
				        if(GetCash(playerid) >= ArendInfo[arid][aCost])
				        {
				            SetPVarInt(playerid, "arendkey", arid);
				            TransferMoney(playerid, -1, ArendInfo[arid][aCost]);
				            ArendInfo[arid][aPlayerID] = playerid;
				            SendClientMessage(playerid, COLOR_WHITE, "Вы успешно арендовали этот транспорт");
				            ShowPlayerDialog(playerid, 0, 0, "{FFCC00}Вы успешно арендовали транспорт", "{FFFFFF}Список доступных команд:\n\n{63BD4E}/lock 2{FFFFFF} - закрыть/открыть арендованный транспорт\n{63BD4E}/cancelrent{FFFFFF} - отказаться от аренды\n\n{afafaf}При отдалении от ТС на 2км контракт автоматически расторгается", "Закрыть", "");
				        }
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "У вас не хватает денег");
						    RemovePlayerFromVehicle(playerid);
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "Этот транспорт уже арендуют");
					    RemovePlayerFromVehicle(playerid);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Вы уже арендуете транспорт");
					RemovePlayerFromVehicle(playerid);
				}
			}
		    return 1;
		}
	case dJob+6:
		{
			if(!response)
			{
				SendClientMessage(playerid, COLOR_RED, PlayerNeedToLoggedForToPlay);
				return Kick(playerid);
			}
			if(!(1 <= strlen(inputtext) <= 65)) return ShowPlayerDialog(playerid, dJob+6, 1, "{FFCC00}Электронная почта", "{ffffff}Введите Ваш e-mail адрес, за которым будет закреплён данный аккаунт.\nЕсли вы потеряете доступ к аккаунту, то с помощью e-mail вы сможете восстановить его.", "Далее", "Отмена");
			for(new i = strlen(inputtext); i != 0; --i)
			{
				switch(inputtext[i])
				{
					case 'А'..'Я', 'а'..'я', ' ': return ShowPlayerDialog(playerid, dJob+6, DIALOG_STYLE_MSGBOX, "{F04245}Ошибка", "{FFFFFF}E-mail адрес не должен содержать запрещённые символы!\nВозможно Вы вводите его не в той раскладке.", "Повторить", "");
				}
			}
			if(!IsValidEmail(inputtext))
			{
			    SendClientMessage(playerid, COLOR_GREY, "Ошибка при вводе e-mail, вводите настоящий адрес!");
				return ShowPlayerDialog(playerid, dJob+6, 1, "{FFCC00}Электронная почта", "{ffffff}Введите Ваш e-mail адрес, за которым будет закреплён данный аккаунт.\nЕсли вы потеряете доступ к аккаунту, то с помощью e-mail вы сможете восстановить его.", "Далее", "Отмена");
			}
			mysql_query_string[0] = EOS;
			format(mysql_query_string, 128, "SELECT * FROM "T_ACCOUNTS" WHERE mail = '%s' LIMIT 1", inputtext);
			mysql_tquery(dbHandle, mysql_query_string, "@OnPlayerMail", "is", playerid, inputtext);
		}
	case dJob+7:
		{
			if(!response) return 1;
			ClothesRound[playerid] = 2;
			InShopSkin[playerid] = GetPlayerVirtualWorld(playerid);
			SpawnPlayerEx(playerid);
		}
	case dReferal:
	    {
	        if(!response)
			{
				SendClientMessage(playerid, COLOR_RED, PlayerNeedToLoggedForToPlay);
				return Kick(playerid);
			}
	        if(listitem != 1)
	        {
	            static const list_search[8][32] = {"На порталах/форумах","None","На мониторинге серверов","Через YouTube","В поисковике","Вкладка hosted","Сообщество ВКонтакте","Другое"};
	            strmid(pInfo[playerid][pSearchServ], list_search[listitem], 0, strlen(list_search[listitem]), 32);
	            strmid(pInfo[playerid][pReferal], list_search[1], 0, strlen(list_search[1]), MAX_PLAYER_NAME);
				ShowPlayerDialog(playerid, dSex, 0, "{FFCC00}Выбор пола", "{ffffff}Выберите пол Вашего персонажа", "Мужской", "Женский");
	        }
	        else ShowPlayerDialog(playerid, dReferal+1, 1, "{FFCC00}Реферальная система", "{ffffff}Если Вы пришли на сервер по приглашению игрока, укажите его ник в поле ниже.\nВ качестве вознаграждения он получит {63BD4E}50.000$ {FFFFFF}после того как Вы достигнете {EAD86A}4 уровня.\n\n{FFFFFF}Если Вы узнали о сервере не от игрока, либо нашли сервер сами,\nто вернитесь назад и укажите другой вариант.", "Указать", "Назад");
	    }
	case dReferal+1:
		{
			if(!response) return ShowPlayerDialog(playerid, dReferal, DIALOG_STYLE_LIST, "{FFCC00}Откуда Вы узнали о сервере?", "1. На порталах/форумах\n2. От игрока этого сервера\n3. На мониторинге серверов\n4. Через YouTube\n5. В поисковике\n6. Вкладка hosted\n7. Сообщество ВКонтакте\n8. Другое", "Далее", "Отмена");
			if(!(3 <= strlen(inputtext) <= MAX_PLAYER_NAME)) return ShowPlayerDialog(playerid, dReferal+1, 1, "{FFCC00}Реферальная система", "{ffffff}Если Вы пришли на сервер по приглашению игрока, укажите его ник в поле ниже.\nВ качестве вознаграждения он получит {63BD4E}50.000$ {FFFFFF}после того как Вы достигнете {EAD86A}4 уровня.\n\n{FFFFFF}Если Вы узнали о сервере не от игрока, либо нашли сервер сами,\nто вернитесь назад и укажите другой вариант.", "Указать", "Назад");
			if(IsTextRussian(inputtext) || IsLoginInvalid(inputtext))
			{
				SendClientMessage(playerid, COLOR_GREY, "Использовать русские символы запрещено!");
				return ShowPlayerDialog(playerid, dReferal+1, 1, "{FFCC00}Реферальная система", "{ffffff}Если Вы пришли на сервер по приглашению игрока, укажите его ник в поле ниже.\nВ качестве вознаграждения он получит {63BD4E}50.000$ {FFFFFF}после того как Вы достигнете {EAD86A}4 уровня.\n\n{FFFFFF}Если Вы узнали о сервере не от игрока, либо нашли сервер сами,\nто вернитесь назад и укажите другой вариант.", "Указать", "Назад");
			}
			mysql_query_string[0] = EOS;
			format(mysql_query_string, 128, "SELECT * FROM "T_ACCOUNTS" WHERE name = '%s' LIMIT 1", inputtext);
			mysql_tquery(dbHandle, mysql_query_string, "@OnPlayerReferal", "is", playerid, inputtext);
		}
	case dJob+8:
		{
			if(!response) return 1;
			switch(listitem)
			{
			    case 0:
				{
				    if(pInfo[playerid][pFineAmount] > 0) return SendClientMessage(playerid, COLOR_GREY, "Сначала оплатите имеющиеся штрафы за превышения скорости!");
				    if(GetLicCar(playerid)) return SendClientMessage(playerid, COLOR_GREY, "У вас уже имеются водительские права!");
					ShowPlayerDialog(playerid, dJob+9, 0, " ", "\n\n{ffffff}Вы хотите сдать экзамен на управление наземным транспортом?\n\nСтоимость: {63BD4E}600$\n\n", "Да", "Нет");
				}
			    case 1:
				{
				    if(GetLicPlane(playerid)) return SendClientMessage(playerid, COLOR_GREY, "У вас уже имеется лицензия на управление воздушным транспортом!");
					ShowPlayerDialog(playerid, dJob+10, 0, " ", "\n\n{ffffff}Вы хотите сдать экзамен на управление воздушным транспортом?\n\nСтоимость: {63BD4E}10000$\n\n", "Да", "Нет");
				}
			    case 2:
				{
				    if(GetLicWater(playerid)) return SendClientMessage(playerid, COLOR_GREY, "У вас уже имеется лицензия на управление водным транспортом!");
					ShowPlayerDialog(playerid, dJob+11, 0, " ", "\n\n{ffffff}Вы хотите сдать экзамен на управление водным транспортом?\n\nСтоимость: {63BD4E}3000$\n\n", "Да", "Нет");
				}
			}
			return 1;
		}
	case dJob+9:
	    {
	        if(!response) return 1;
			if(GetCash(playerid) < 600) return SendClientMessage(playerid, COLOR_GREY, NoMoney);
			SendClientMessage(playerid, COLOR_BLUE, "Вы начали прохождение экзамена на управление наземным транспортом");
			SendClientMessage(playerid, COLOR_BLUE, "Выходите во двор и садитесь в свободный транспорт");
			SetPVarInt(playerid, "DrivingTest", 1);
			TransferMoney(playerid, -1, 600);
			pPressed[playerid] = 0;
			return 1;
	    }
	case dJob+10:
	    {
	        if(!response) return 1;
			if(GetCash(playerid) < 10000) return SendClientMessage(playerid, COLOR_GREY, NoMoney);
			SendClientMessage(playerid, COLOR_BLUE, "Вы начали прохождение экзамена на управление воздушным транспортом");
			SendClientMessage(playerid, COLOR_BLUE, "Выходите во задний двор и садитесь в свободный вертолёт");
			SetPVarInt(playerid, "FlyTest", 1);
			TransferMoney(playerid, -1, 10000);
			pPressed[playerid] = 0;
            UseGPS[playerid] = true;
            for(new i; i < 2; i++) TextDrawShowForPlayer(playerid, enable_gps_TD[i]);
    		DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid,1,-2035.2886,-129.5167,35.2415,0.0,0.0,0.0,5.0);
			return 1;
	    }
	case dJob+11:
	    {
	        if(!response) return 1;
			if(GetCash(playerid) < 3000) return SendClientMessage(playerid, COLOR_GREY, NoMoney);
			SendClientMessage(playerid, COLOR_BLUE, "Вы начали прохождение экзамена на управление водным транспортом");
			SendClientMessage(playerid, COLOR_BLUE, "Отправляйтесь на причал и садитесь в свободную лодку");
			SetPVarInt(playerid, "WaterTest", 1);
			TransferMoney(playerid, -1, 3000);
			pPressed[playerid] = 0;
			UseGPS[playerid] = true;
			for(new i; i < 2; i++) TextDrawShowForPlayer(playerid, enable_gps_TD[i]);
    		DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid,1,-2930.1848,472.6345,4.4298,0.0,0.0,0.0,5.0);
			return 1;
	    }
	case dJob+12:
		{
			if(!response) return 1;
			new color[2];
			if(sscanf(inputtext, "p<,>ii", color[0], color[1])) return ShowPlayerDialog(playerid, dJob+12, 1, "{FFCC00}Цвета транспорта", "{FFFFFF}Введите первый и второй цвет транспорта через запятую:", "Принять", "Отмена");
			if(!(0 <= color[0] <= 255))
			{
				ShowPlayerDialog(playerid, dJob+12, 1, "{FFCC00}Цвета транспорта", "{FFFFFF}Введите первый и второй цвет транспорта через запятую:", "Принять", "Отмена");
				return SendClientMessage(playerid, COLOR_GREY, "ID цвета от 0 до 255!");
			}
			if(!(0 <= color[1] <= 255))
			{
				ShowPlayerDialog(playerid, dJob+12, 1, "{FFCC00}Цвета транспорта", "{FFFFFF}Введите первый и второй цвет транспорта через запятую:", "Принять", "Отмена");
				return SendClientMessage(playerid, COLOR_GREY, "ID цвета от 0 до 255!");
			}
			ChangeVehicleColor(GetPVarInt(playerid,"VehicleEnters"), color[0], color[1]);
			for(new i = 0; i < 2; i++) colors[playerid][i] = color[i];
			return 1;
		}
	case dJob+13:
		{
			if(!response) return 1;
			new price;
			if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, dJob+13, 1, "{FFCC00}Тариф", "{ffffff}Введите стоимость проезда:", "Принять", "Отмена");
			if(!(1 <= price <= 100))
			{
				SendClientMessage(playerid, COLOR_GREY, "Цена проезда от 1 до 100");
				return ShowPlayerDialog(playerid, dJob+13, 1, "Тариф", "{ffffff}Введите стоимость проезда:", "Принять", "Отмена");
			}
			new string[90];
			SendClientMessage(playerid, COLOR_BLUE, "Вы начали работу таксиста");
			SetPVarInt(playerid, "PriceTaxi", price);
			format(string, sizeof(string), "Тариф: {63BD4E}%i$", price);
			if(!IsValidDynamic3DTextLabel(TaxiText3D[playerid])) TaxiText3D[playerid] = CreateDynamic3DTextLabel(string, 0xFFFFFFFF, 0.0, 0.0, 1.24, 40.0, INVALID_PLAYER_ID, GetPVarInt(playerid,"VehicleEnters"));
			return 1;
		}
	case dJob+14:
		{
		    if(!response) return RemovePlayerFromVehicle(playerid);
		    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
		    new vehicleid = GetPVarInt(playerid,"VehicleEnters");
			SendClientMessage(playerid, COLOR_GREEN, "Вы арендовали такси");
			pTemp[playerid][pTaxiID] = vehicleid;
			TransferMoney(playerid, -1, 200);
			return 1;
		}
	case dJob+15:
		{
			if(!response) return RemovePlayerFromVehicle(playerid);
		    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
		    new vehicleid = GetPVarInt(playerid,"VehicleEnters");
			SendClientMessage(playerid, COLOR_GREEN, "Вы арендовали транспорт");
			pTemp[playerid][pMechID] = vehicleid;
			TransferMoney(playerid, -1, 200);
			return 1;
		}
	case dJob+16:
		{
			new targetid = GetPVarInt(playerid, "PlayerMech"), price = GetPVarInt(playerid, "MechanicPrice");
			if(response)
			{
				if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в транспорте!");
				if(GetCash(playerid) < price)
				{
					SendMes(targetid, COLOR_GREY, "У игрока %s недостаточно денег!", GetName(playerid));
					DeletePVar(playerid, "PlayerMech");
					DeletePVar(playerid, "MechanicPrice");
					SendClientMessage(playerid, COLOR_GREY, NoMoney);
					return 1;
				}
				SendMes(playerid, COLOR_GREEN, "Автомеханик %s отремонтировал ваше авто за %d", GetName(targetid),price);
				SendMes(targetid, COLOR_GREEN, "Вы отремонтировали авто %s за %d$", GetName(playerid),price);
				SetVehicleHealth(GetPVarInt(playerid,"VehicleEnters"),1000.0);
				RepairVehicle(GetPVarInt(playerid,"VehicleEnters"));
				DeletePVar(playerid, "PlayerMech");
				DeletePVar(playerid, "MechanicPrice");
				if(doubling_salary)
				{
				    new money2 = price*2;
				    SendMes(targetid, COLOR_YELLOW, "[Информация] {FFFFFF}С учётом акции Вы заработали: {63BD4E}%i$",money2);
				    price = money2;
				}
				TransferMoney(playerid,-1,price);
				TransferMoney(-1,targetid,price);
			}
			else
			{
				SendMes(targetid, COLOR_RED, "%s отклонил предложение починить транспорт за %i$", GetName(playerid), price);
				DeletePVar(playerid, "PlayerMech");
				DeletePVar(playerid, "MechanicPrice");
			}
		}
	case dJob+30:
		{
			if(!response) return cmd_menu(playerid);
			switch(listitem)
			{
			case 0:
			    {
					if(pInfo[playerid][pImprove][0] == 1) return SendClientMessage(playerid, COLOR_GREY, "Вы уже приобрели данное улучшение!");
					if(pInfo[playerid][pLevel] < 5) return SendClientMessage(playerid, COLOR_GREY, "Необходим 5 уровень и 50000$");
					if(GetCash(playerid) < 50000) return SendClientMessage(playerid, COLOR_GREY, "Необходим 5 уровень и 50000$");
					TransferMoney(playerid, -1, 50000);
					pInfo[playerid][pImprove][0] = 1;
					SendClientMessage(playerid, COLOR_LIME, "Ваша выносливость была улучшена");
				}
			case 1:
				{
					if(pInfo[playerid][pImprove][1] == 1) return SendClientMessage(playerid,COLOR_GREY,"Вы уже приобрели данное улучшение!");
					if(pInfo[playerid][pLevel] < 8) return SendClientMessage(playerid, COLOR_GREY, "Необходим 8 уровень и 75000$");
					if(GetCash(playerid) < 75000) return SendClientMessage(playerid, COLOR_GREY, "Необходим 8 уровень и 75000$");
					TransferMoney(playerid, -1, 75000);
					pInfo[playerid][pImprove][1] = 1;
					SendClientMessage(playerid, COLOR_LIME, "Теперь Вы можете самостоятельно увольняться с организации (/leave)");
				}
			case 2:
				{
					if(pInfo[playerid][pImprove][2] == 1) return SendClientMessage(playerid,COLOR_GREY,"Вы уже приобрели данное улучшение!");
					if(pInfo[playerid][pLevel] < 11) return SendClientMessage(playerid, COLOR_GREY, "Необходим 11 уровень и 100000$");
					if(GetCash(playerid) < 100000) return SendClientMessage(playerid, COLOR_GREY, "Необходим 11 уровень и 100000$");
					TransferMoney(playerid, -1, 100000);
					pInfo[playerid][pImprove][2] = 1;
					SendClientMessage(playerid, COLOR_LIME, "Ваш рюкзак стал вместительнее. Теперь вы можете носить в 2 раза больше предметов.");
				}
			case 3:
			    {
			        if(pInfo[playerid][pImprove][3] == 1) return SendClientMessage(playerid,COLOR_GREY,"Вы уже приобрели данное улучшение!");
					if(pInfo[playerid][pLevel] < 15) return SendClientMessage(playerid, COLOR_GREY, "Необходим 15 уровень и 125000$");
					if(GetCash(playerid) < 125000) return SendClientMessage(playerid, COLOR_GREY, "Необходим 15 уровень и 125000$");
					TransferMoney(playerid, -1, 125000);
					pInfo[playerid][pImprove][3] = 1;
					SendClientMessage(playerid, COLOR_LIME, "Теперь Ваш транспорт не будет глохнуть при столкновениях");
			    }
			case 4:
			    {
			        stringer[0] = EOS;
			        format(stringer, 1000, "{FFFFFF}Выносливость - способность организма к продолжительному выполнению какой-либо работы\nбез заметного снижения работоспособности. С данным улучшением, при голоде,\nВаше здоровье будет гораздо дольше держаться, по сравнению с невыносливым человеком.\n\n");
					format(stringer, 1000, "%s{FFFFFF}Решительность - это индивидуальное качество воли человека, связанное со способностью и умением\nсамостоятельно и своевременно принимать ответственные решения и упорно реализовывать их в реальной деятельности.\nДанное улучшение позволит Вам самостоятельно, без каких-либо просьб, увольняться из организации - {FF9900}/leave.\n\n", stringer);
					format(stringer, 1000, "%s{FFFFFF}Рюкзак - это улучшение позволит Вам носить в 2 раза больше предметов.\n\n", stringer);
					format(stringer, 1000, "%s{FFFFFF}Мастер вождения - став мастером вождения, двигатель транспорта под Вашим управлением\nбольше не будет глохнуть при различных ударах.", stringer);
					ShowPlayerDialog(playerid, dJob+31, 0, "{FFCC00}Помощь", stringer, "Закрыть", "Назад");
			    }
			}
		}
	case dJob+31:
		{
		    if(!response)
			{
			    stringer[0] = EOS;
				format(stringer, 300, "%s\n%s\n%s\n%s\n{FFFFFF}Помощь",
				(pInfo[playerid][pImprove][0] != 1) ? ("{FFFFFF}Выносливость\t\t| {F04245}Не имеется (5 уровень и 50.000$)") : ("{FFFFFF}Выносливость\t\t| {63BD4E}Куплено"),
				(pInfo[playerid][pImprove][1] != 1) ? ("{FFFFFF}Решительность\t| {F04245}Не имеется (8 уровень и 75.000$)") : ("{FFFFFF}Решительность\t| {63BD4E}Куплено (/leave)"),
				(pInfo[playerid][pImprove][2] != 1) ? ("{FFFFFF}Рюкзак\t\t\t| {F04245}Не имеется (11 уровень и 100.000$)") : ("{FFFFFF}Рюкзак\t\t\t| {63BD4E}Куплено"),
				(pInfo[playerid][pImprove][3] != 1) ? ("{FFFFFF}Мастер вождения\t| {F04245}Не имеется (15 уровень и 125.000$)") : ("{FFFFFF}Мастер вождения\t| {63BD4E}Куплено"));
				return ShowPlayerDialog(playerid, dJob+30, DIALOG_STYLE_LIST, "{FFCC00}Улучшения персонажа", stringer, "Выбрать", "Назад");
			}
		}
	case dJob+32:
	    {
			if(!response) return DonateShow(playerid);
			if(pInfo[playerid][pCredits] < 20) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно кредитов!");
			new nickname[MAX_PLAYER_NAME];
			if(sscanf(inputtext, "s[24]", nickname)) return ShowPlayerDialog(playerid, dJob+32, 1, "{FFCC00}Смена ника", "{FFFFFF}Введите будущий ник", "Принять", "Назад");
			if(!(3 <= strlen(nickname) <= MAX_PLAYER_NAME)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Длина ника не может быть меньше трех и больше 24 символов");
            if(IsLoginInvalid(nickname)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] В нике найдены запрещенные символы/пробелы");
            if(IsTextRussian(nickname)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Ник должен содержать только латинские буквы");
			if(strfind(nickname, "_", true) == -1) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Новый ник должен быть формата Имя_Фамилия");
            mysql_query_string[0] = EOS;
			format(mysql_query_string, sizeof(mysql_query_string), "SELECT * FROM "T_ACCOUNTS" WHERE name = '%s'", nickname);
			mysql_tquery(dbHandle, mysql_query_string, "@OnPlayerChangeDonateName", "is", playerid, nickname);
	    }
	case dFilling:
		{
		    if(!response) return DeletePVar(playerid, "FuelBizID");
		    switch(listitem)
		    {
		        case 0:
		        {
			        if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы должны находиться за рулем!");
					new vehicleid = GetPVarInt(playerid,"VehicleEnters");
					if(IsAVel(vehicleid)) return 1;
					new Float:tank = VehStats[GetVehicleModel(vehicleid)-400][vMaxFuel];
			        if(VehicleInfo[vehicleid][vFuel] >= tank) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Ваш бак полон!");
			        if(GetPVarFloat(playerid, "Refueling") > 0.0) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы уже заправляетесь!");
		            ShowPlayerDialog(playerid, dJob+17, DIALOG_STYLE_INPUT, "{FFCC00}Топливо", "{FFFFFF}Введите количество литров топлива:", "Принять", "Назад");
				}
          		case 1:
		        {
				    if(pInfo[playerid][pRepcar][0]+1 > 1 && !pInfo[playerid][pImprove][2]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас не может быть более 1-ой канистры!");
				    else if(pInfo[playerid][pRepcar][0]+1 > 2 && pInfo[playerid][pImprove][2]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас не может быть более 2-ух канистр!");
                    new till = BizInfo[GetPVarInt(playerid, "FuelBizID")][bTill]*4;
					if(GetCash(playerid) < till) return SendClientMessage(playerid, COLOR_GREY, NoMoney);
		    	    TransferMoney(playerid, -1, till);
		    	    GiveBizMoney(GetPVarInt(playerid, "FuelBizID"), till, 5);
				    pInfo[playerid][pRepcar][0]++;
				    SendMes(playerid, COLOR_YELLOW, "Вы купили канистру за %i$", till);
		            DeletePVar(playerid,"FuelBizID");
				}
		        case 2:
		        {
				    if(pInfo[playerid][pRepcar][1]+1 > 1 && !pInfo[playerid][pImprove][2]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас не может быть более 1-го набора инструментов!");
				    else if(pInfo[playerid][pRepcar][1]+1 > 2 && pInfo[playerid][pImprove][2]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас не может быть более 2-ух наборов инструментов!");
                    new till = BizInfo[GetPVarInt(playerid, "FuelBizID")][bTill]*5;
					if(GetCash(playerid) < till) return SendClientMessage(playerid, COLOR_GREY, NoMoney);
		            TransferMoney(playerid, -1, till);
		            GiveBizMoney(GetPVarInt(playerid, "FuelBizID"), till, 5);
				    pInfo[playerid][pRepcar][1]++;
				    SendMes(playerid, COLOR_YELLOW, "Вы купили набор инструментов за %i$", till);
		            DeletePVar(playerid,"FuelBizID");
		        }
        	}
		}
	case dJob+17:
		{
			if(!response) return ShowPlayerDialog(playerid, dFilling, DIALOG_STYLE_LIST, "{FFCC00}АЗС", "Заправить транспорт\nКанистра\nНабор инструментов", "Выбрать", "Отмена");
			new Float:fuel;
			if(sscanf(inputtext, "f", fuel)) return ShowPlayerDialog(playerid, dJob+17, DIALOG_STYLE_INPUT, "{FFCC00}Заправить транспорт", "{FFFFFF}Введите количество литров топлива:", "Принять", "Отмена");
            new biz = BizInfo[GetPVarInt(playerid, "FuelBizID")][bTill];
            new vehicleid = GetPVarInt(playerid,"VehicleEnters");
			new Float:tank = VehStats[GetVehicleModel(vehicleid)-400][vMaxFuel];
			new string[128];
			if(!(1 <= fuel <= tank))
			{
			    format(string, sizeof(string), "Топлива от 1 до %.0f литров!", tank);
				SendClientMessage(playerid, COLOR_GREY, string);
				return ShowPlayerDialog(playerid, dJob+17, DIALOG_STYLE_INPUT, "{FFCC00}Заправить транспорт", "{FFFFFF}Введите количество литров топлива:", "Принять", "Отмена");
			}
			if(fuel+VehicleInfo[vehicleid][vFuel] > tank)
			{
			    format(string, sizeof(string), "Слишком много топлива. Рекомендуем: %.0f литров", tank-VehicleInfo[vehicleid][vFuel]);
				SendClientMessage(playerid, COLOR_GREY, string);
				return ShowPlayerDialog(playerid, dJob+17, DIALOG_STYLE_INPUT, "{FFCC00}Заправить транспорт", "{FFFFFF}Введите количество литров топлива:", "Принять", "Отмена");
			}
			new price = floatround(fuel)*biz;
			if(price > GetCash(playerid))
			{
				SendClientMessage(playerid, COLOR_GREY, NoMoney);
				return ShowPlayerDialog(playerid, dJob+17, DIALOG_STYLE_INPUT, "{FFCC00}Заправить транспорт", "{FFFFFF}Введите количество литров топлива:", "Принять", "Отмена");
			}
			TransferMoney(playerid, -1, price);
			GiveBizMoney(GetPVarInt(playerid, "FuelBizID"), price, floatround(fuel));
			DeletePVar(playerid, "FuelBizID");
			SendClientMessage(playerid, COLOR_YELLOW, "Транспорт заправляется, пожалуйста подождите");
			SetPVarFloat(playerid, "Refueling", fuel);
			TogglePlayerControllable(playerid, false);
			ReFuelTimer[playerid] = SetTimerEx("@ReFill", 500, true, "i", playerid);
		}
		case dJob+18:
		{
			new targetid = GetPVarInt(playerid, "MechanicPlayer"), price = GetPVarInt(playerid, "MechanicPrice");
			if(response)
			{
				if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в транспорте!");
				if(GetCash(playerid) < price)
				{
					SendMes(targetid, COLOR_GREY, "У игрока %s недостаточно денег!", GetName(playerid));
					DeletePVar(playerid, "MechanicPlayer");
					DeletePVar(playerid, "MechanicPrice");
					return SendClientMessage(playerid, COLOR_GREY, NoMoney);
				}
				new vehicleid = GetPVarInt(playerid,"VehicleEnters");
				new Float:tank = VehStats[GetVehicleModel(vehicleid)-400][vMaxFuel];
				if(VehicleInfo[GetPVarInt(playerid,"VehicleEnters")][vFuel] >= tank)
				{
					SendClientMessage(targetid, COLOR_GREY, "У игрока достаточно бензина в баке");
					DeletePVar(playerid, "MechanicPlayer");
					DeletePVar(playerid, "MechanicPrice");
					return SendClientMessage(playerid, COLOR_GREY, "У вас достаточно бензина в баке");
				}
				VehicleInfo[vehicleid][vFuel] = tank;
				SendMes(playerid, COLOR_GREEN, "Автомеханик %s заправил Ваш транспорт за %i$", GetName(targetid), price);
				SendMes(targetid, COLOR_GREEN, "Вы заправили транспорт %s за %i$", GetName(playerid), price);
				if(doubling_salary)
				{
				    new money2 = price*2;
				    SendMes(targetid, COLOR_YELLOW, "[Информация] {FFFFFF}С учётом акции Вы заработали: {63BD4E}%i$",money2);
				    price = money2;
				}
				TransferMoney(playerid,-1,price);
				TransferMoney(-1,targetid,price);
			}
			else
			{
				SendMes(targetid, COLOR_GREY, "%s отклонил предложение заправить транспорт за %i$", GetName(playerid), price);
				DeletePVar(playerid, "MechanicPlayer");
				DeletePVar(playerid, "MechanicPrice");
			}
		}
		case dJob+19:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
	            {
			        new price, bank;
					if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, dJob+21, 1, "{FFCC00}Положить деньги", "{FFFFFF}Введите количество денег:", "Положить", "Назад");
					if(!(1 <= price <= GetCash(playerid)))
					{
						SendMes(playerid, COLOR_GREY, "Количество денег от 1$ до %i$", GetCash(playerid));
						return ShowPlayerDialog(playerid, dJob+21, 1, "{FFCC00}Положить деньги", "{FFFFFF}Введите количество денег:", "Положить", "Назад");
					}
					if(pInfo[playerid][pMember] == TEAM_LSNEWS) bank = FracBank[8];
					if(pInfo[playerid][pMember] == TEAM_SFNEWS) bank = FracBank[9];
					if(pInfo[playerid][pMember] == TEAM_LVNEWS) bank = FracBank[10];
					new sbank = bank+price;
					SendMes(playerid, COLOR_BLUE, "Вы положили %i$ в сейф. Теперь в сейфе: %i$", price, sbank);
					TransferMoney(playerid, -1, price);
					if(pInfo[playerid][pMember] == TEAM_LSNEWS) FracBank[8]+=price;
					if(pInfo[playerid][pMember] == TEAM_SFNEWS) FracBank[9]+=price;
					if(pInfo[playerid][pMember] == TEAM_LVNEWS) FracBank[10]+=price;
				}
			case 1:
			   	{
					new price, bank;
					if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, dJob+20, 1, "{FFCC00}Снять деньги", "{FFFFFF}Введите количество денег:", "Обналичить", "Назад");
					if(pInfo[playerid][pMember] == TEAM_LSNEWS) bank = FracBank[8];
					if(pInfo[playerid][pMember] == TEAM_SFNEWS) bank = FracBank[9];
					if(pInfo[playerid][pMember] == TEAM_LVNEWS) bank = FracBank[10];
					if(!(1 <= price <= bank))
					{
						SendMes(playerid, COLOR_GREY, "Количество денег от 1$ до %i$", bank);
						return ShowPlayerDialog(playerid, dJob+20, 1, "{FFCC00}Снять деньги", "{FFFFFF}Введите количество денег:", "Обналичить", "Назад");
					}
					SendMes(playerid, COLOR_BLUE, "Вы взяли %i$ из сейфа. Остаток: %i$", price, bank-price);
					TransferMoney(-1, playerid, price);
					if(pInfo[playerid][pMember] == TEAM_LSNEWS) FracBank[8]-=price;
					if(pInfo[playerid][pMember] == TEAM_SFNEWS) FracBank[9]-=price;
					if(pInfo[playerid][pMember] == TEAM_LVNEWS) FracBank[10]-=price;
				}
			}
		}
	case dJob+20:
		{
			new price, bank;
			if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, dJob+20, 1, "{FFCC00}Снять деньги", "{FFFFFF}Введите количество денег:", "Обналичить", "Назад");
			if(pInfo[playerid][pMember] == TEAM_LSNEWS) bank = FracBank[8];
			if(pInfo[playerid][pMember] == TEAM_SFNEWS) bank = FracBank[9];
			if(pInfo[playerid][pMember] == TEAM_LVNEWS) bank = FracBank[10];
			if(!(1 <= price <= bank))
			{
				SendMes(playerid, COLOR_GREY, "Количество денег от 1$ до %i$", bank);
				return ShowPlayerDialog(playerid, dJob+20, 1, "{FFCC00}Снять деньги", "{FFFFFF}Введите количество денег:", "Обналичить", "Назад");
			}
			SendMes(playerid, COLOR_BLUE, "Вы взяли %i$ из сейфа. Остаток: %i$", price, bank-price);
			TransferMoney(-1, playerid, price);
			if(pInfo[playerid][pMember] == TEAM_LSNEWS) FracBank[8]-=price;
			if(pInfo[playerid][pMember] == TEAM_SFNEWS) FracBank[9]-=price;
			if(pInfo[playerid][pMember] == TEAM_LVNEWS) FracBank[10]-=price;
			return 1;
		}
    case dJob+21:
		{
			new price, bank;
			if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, dJob+21, 1, "{FFCC00}Положить деньги", "{FFFFFF}Введите количество денег:", "Положить", "Назад");
			if(!(1 <= price <= GetCash(playerid)))
			{
				SendMes(playerid, COLOR_GREY, "Количество доллларов от 1$ до %i$", GetCash(playerid));
				return ShowPlayerDialog(playerid, dJob+21, 1, "{FFCC00}Положить деньги", "{FFFFFF}Введите количество денег:", "Положить", "Назад");
			}
			if(pInfo[playerid][pMember] == TEAM_LSNEWS) bank = FracBank[8];
			if(pInfo[playerid][pMember] == TEAM_SFNEWS) bank = FracBank[9];
			if(pInfo[playerid][pMember] == TEAM_LVNEWS) bank = FracBank[10];
			new sbank = bank+price;
			SendMes(playerid, COLOR_BLUE, "Вы положили %i$ в сейф. Теперь в сейфе: %i$", price, sbank);
			TransferMoney(playerid, -1, price);
			if(pInfo[playerid][pMember] == TEAM_LSNEWS) FracBank[8]+=price;
			if(pInfo[playerid][pMember] == TEAM_SFNEWS) FracBank[9]+=price;
			if(pInfo[playerid][pMember] == TEAM_LVNEWS) FracBank[10]+=price;
			return 1;
		}
    case dJob+22:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
	            {
			        new price, bank;
					if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, dJob+24, 1, "{FFCC00}Положить деньги", "{FFFFFF}Введите количество денег:", "Положить", "Назад");
					if(!(1 <= price <= GetCash(playerid)))
					{
						SendMes(playerid, COLOR_GREY, "Количество денег от 1$ до %i$", GetCash(playerid));
						return ShowPlayerDialog(playerid, dJob+24, 1, "{FFCC00}Положить деньги", "{FFFFFF}Введите количество денег:", "Положить", "Назад");
					}
					if(pInfo[playerid][pMember] == TEAM_AUTOSCHOOL) bank = FracBank[11];
					new sbank = bank+price;
					SendMes(playerid, COLOR_BLUE, "Вы положили %i$ в сейф. Теперь в сейфе: %i$", price, sbank);
					TransferMoney(playerid, -1, price);
					if(pInfo[playerid][pMember] == TEAM_AUTOSCHOOL) FracBank[11]+=price;
				}
			case 1:
			   	{
					new price, bank;
					if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, dJob+23, 1, "{FFCC00}Снять деньги", "{FFFFFF}Введите количество денег:", "Обналичить", "Назад");
					if(pInfo[playerid][pMember] == TEAM_AUTOSCHOOL) bank = FracBank[11];
					if(!(1 <= price <= bank))
					{
						SendMes(playerid, COLOR_GREY, "Количество денег от 1$ до %i$", bank);
						return ShowPlayerDialog(playerid, dJob+23, 1, "{FFCC00}Снять деньги", "{FFFFFF}Введите количество денег:", "Обналичить", "Назад");
					}
					SendMes(playerid, COLOR_BLUE, "Вы взяли %i$ из сейфа. Остаток: %i$", price, bank-price);
					TransferMoney(-1, playerid, price);
					if(pInfo[playerid][pMember] == TEAM_AUTOSCHOOL) FracBank[11]-=price;
				}
			}
		}
	case dJob+23:
		{
          	new price, bank;
			if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, dJob+23, 1, "{FFCC00}Снять деньги", "{FFFFFF}Введите количество денег:", "Обналичить", "Назад");
			if(pInfo[playerid][pMember] == TEAM_AUTOSCHOOL) bank = FracBank[11];
			if(!(1 <= price <= bank))
			{
				SendMes(playerid, COLOR_GREY, "Количество денег от 1$ до %i$", bank);
				return ShowPlayerDialog(playerid, dJob+23, 1, "{FFCC00}Снять деньги", "{FFFFFF}Введите количество денег:", "Обналичить", "Назад");
			}
			SendMes(playerid, COLOR_BLUE, "Вы взяли %i$ из сейфа. Остаток: %i$", price, bank-price);
			TransferMoney(-1, playerid, price);
			if(pInfo[playerid][pMember] == TEAM_AUTOSCHOOL) FracBank[11]-=price;
			return 1;
		}
	case dJob+24:
		{
			new price, bank;
			if(sscanf(inputtext, "i",price)) return ShowPlayerDialog(playerid, dJob+24, 1, "{FFCC00}Положить деньги", "{FFFFFF}Введите количество денег:", "Положить", "Назад");
			if(!(1 <= price <= GetCash(playerid)))
			{
				SendMes(playerid, COLOR_GREY, "Количество денег от 1$ до %i$", GetCash(playerid));
				return ShowPlayerDialog(playerid, dJob+24, 1, "{FFCC00}Положить деньги", "{FFFFFF}Введите количество денег:", "Положить", "Назад");
			}
			if(pInfo[playerid][pMember] == TEAM_AUTOSCHOOL) bank = FracBank[11];
			new sbank = bank+price;
			SendMes(playerid, COLOR_BLUE, "Вы положили %i$ в сейф. Теперь в сейфе: %i$", price, sbank);
			TransferMoney(playerid, -1, price);
			if(pInfo[playerid][pMember] == TEAM_AUTOSCHOOL) FracBank[11]+=price;
			return 1;
		}
	case dJob+25:
	    {
	        if(!response) return 1;
	        SelectAnimation(playerid, listitem);
	        return 1;
	    }
	case dJob+26:
		{
		    if(!response) return 1;
			switch(listitem)
			{
			    case 0: ShowPlayerDialog(playerid, dJob+27, 2, "{FFCC00}Важные места", "1. Автовокзал пгт.Батырево\n2. Автовокзал г.Южный\n3. Гонки\n4. пгг.Батырево\n5. г.Южный\n6. Шахта\n7. Автосалон спорт\n8. Автосалон Средний\n9. Автосалон Эконом\n10. Грузовики дальнобойщиков\n11. Банк г.Южный\n12. Банк пгт.Батырево\n13. Церковь\n14. Лесопилка\n15. Завод\n16. Админ зона\n17. Склад оружия", "Телепорт", "Назад");
			    case 1: ShowPlayerDialog(playerid, dJob+28, 2, "{FFCC00}Базы организаций", "1. Администрация г.Южный\n2. Администрация г.Арзмас\n3. Администрация Облости\n4. Больница г.Южного\n5. Больница пгт.Батырево\n6. Больница г.Арзамас\n7. Автошкола\n8. Армия\n9. Полиция г.Южного\n10. Полиция г.Арзамас\n11. Полиция пгт.Батырево\n12. ФСБ\n13. Итальянская Мафия\n14. Yakuza\n15. Russian Mafia\n16. СМИ г.Южный\n17. СМИ пгт.Батырево", "Телепорт", "Назад");
			    case 2: ShowPlayerDialog(playerid, dJob+29, 2, "{FFCC00}Развлечения", "1. Казино\n2. Гонки: Пустыня", "Телепорт", "Назад");
			}
		}
	case dJob+27:
		{
			if(!response) return cmd_tp(playerid);
			new Float:X, Float:Y, Float:Z, intid = 0, worldid = 0;
			switch(listitem)
			{
			case 0: X=1909.9572, Y=2080.4949, Z=15.7053;//  Автовокзал бт
			case 1: X=2263.0686, Y=-2177.6575, Z=21.9531;// Автовокзал ЮЖ
			case 2: X=1795.0416, Y=2042.2788, Z=15.8590;// Гонки бт
			case 3: X=1869.0138, Y=2253.8755, Z=15.2729;// Пгт.Батырево
			case 4: X=2548.0574, Y=-2189.2681, Z=21.9676;// г.Южный
			case 5: X=2493.1067, Y=-1498.8555, Z=24.2386;// Шахта
			case 6: X=2324.5576, Y=-1802.3085, Z=22.4540;// Автосалон спорт
			case 7: X=2478.8123, Y=-735.5245, Z=12.0969;// Автосалон Средний
			case 8: X=1827.1608, Y=2254.0291, Z=15.2729;// Автосалон Эконом
			case 9: X=2686.4407, Y=-2360.1921, Z=17.9362;// Стоянка дальнобойщики
			case 10: X=2379.2395, Y=-1885.5704, Z=21.9619;// Банк южный
			case 11: X=1852.3927, Y=2041.3236, Z=15.8850;// Банк Батырево
			case 12: X=2081.4229, Y=1917.8486, Z=15.6343;// Церковь
			case 13: X=1825.3193, Y=1454.5055, Z=9.9700;// Лесопилка
			case 14: X=2726.4302, Y=-2237.3257, Z=17.9269;// Завод
			case 15: X=2142.5635, Y=-1972.3975, Z=188.2424, worldid=55;// Завод
			case 16: X=1763.0317, Y=2268.7573, Z=15.8666;// Склад оружие
			}
			if (GetPlayerState(playerid) == 2) SetVehiclePos(GetPVarInt(playerid,"VehicleEnters"), X, Y, Z);
			else SetPlayerPos(playerid, X, Y, Z);
			SetPlayerInterior(playerid, intid);
			SetPlayerVirtualWorld(playerid, worldid);
		}
    	case dJob+28:
		{
		    if(!response) return cmd_tp(playerid);
			new Float:X, Float:Y, Float:Z, intid = 0, worldid = 0;
			switch(listitem)
			{
			case 0: X=1909.9258, Y=-2236.8240, Z=11.2373;// АЮ
			case 1: X=-140.3493, Y =591.2073, Z =12.1494;//АА
			case 2: X=1825.9019, Y=2097.3088, Z=15.8507;// АО
			case 3: X=2112.8333, Y=-2386.6748, Z=21.9430;// Болька юж
			case 4: X=1971.9451, Y=1595.6053, Z=15.7490;// Болька бт
			case 5: X=-284.9573, Y=589.2452, Z=12.1857;// Болька ар
			case 6: X=2185.8628, Y=-2194.8933, Z=22.0478;// Автошкола
			case 7: X=1899.9298, Y=1723.7993, Z=15.9118;// Армия
			case 8: X=2581.8257, Y=-2405.4414, Z=22.0078;// Полиция г.Южный
			case 9: X=758.9640, Y=768.2162, Z=12.0059;// Полиция г.Арзамас
			case 10: X=1914.9479, Y=2183.0967, Z=15.7060;// Полиция пгт.Батырево
			case 11: X=2411.7161, Y=-1848.9020, Z=21.8578;// ФСБ
			case 12: X=2170.5911, Y=-985.5103, Z=2.2500;// Италия мафия
			case 13: X=2312.3796, Y=1760.0038, Z=1.0319;// Якудза
			case 14: X=2147.5103, Y=-1797.2211, Z=18.9510;// Русская Мафия
			case 15: X=2125.7537, Y=-1954.0420, Z=20.2422;// СМИ г.Южный
			case 16: X=1991.0562, Y=1945.6309, Z=15.5928;// СМИ пгт.Батырево
		}
			if (GetPlayerState(playerid) == 2) SetVehiclePos(GetPVarInt(playerid,"VehicleEnters"), X, Y, Z);
			else SetPlayerPos(playerid, X, Y, Z);
			SetPlayerInterior(playerid, intid);
			SetPlayerVirtualWorld(playerid, worldid);
		}
    	case dJob+29:
		{
		    if(!response) return cmd_tp(playerid);
			new Float:X, Float:Y, Float:Z, intid = 0, worldid = 0;
			switch(listitem)
			{
			case 0: X=2545.9976, Y=-2203.9180, Z=21.9590;// Казино южный
			case 1: X=1795.0416, Y=2042.2788, Z=15.8590;// Гонки бт
			}
			if(GetPlayerState(playerid) == 2 && listitem != 2 && listitem != 3)
			{
				SetVehiclePos(GetPVarInt(playerid,"VehicleEnters"), X, Y, Z);
			}
			else
			{
			    if(listitem == 2 || listitem == 3) SetPlayerPos(playerid, X, Y, Z, 1);
			    else SetPlayerPos(playerid, X, Y, Z);
   			}
			SetPlayerInterior(playerid, intid);
			SetPlayerVirtualWorld(playerid, worldid);
		}
 	case dAdminLogin:
		{
			if(!response) return 1;
			new string[144];
			if(GetPVarInt(playerid, "type_alogin") == 1)
			{
			    if(!strlen(inputtext) || GetString(inputtext, "qwerty") || strlen(inputtext) < 6 || strlen(inputtext) > 16 || strfind(inputtext, "=", true) != -1)
					return ShowPlayerDialog(playerid, dAdminLogin, DIALOG_STYLE_PASSWORD, "{FFCC00}Регистрация администратора", "{FFFFFF}Введите пароль, который будет от панели администратора\n\n{63BD4E}Примечание:\n\t- Пароль должен состоять из латинских букв и цифр\n\t- Размер пароля от 6 до 15 символов", "Принять", "Отмена");
				SetPVarString(playerid, "inputtext", inputtext);
				format(string, sizeof(string), "SELECT * FROM "T_ADMIN" WHERE name = '%s'", GetName(playerid));
				mysql_tquery(dbHandle, string, "@AloginReg", "is", playerid, GetName(playerid));
			}
			else
			{
			    if(!strlen(inputtext)) return ShowPlayerDialog(playerid, dAdminLogin, DIALOG_STYLE_PASSWORD, "{FFCC00}Доступ администратора", "{FFFFFF}Введите Ваш пароль от панели администратора", "Принять", "Отмена");
				mysql_format(dbHandle, string, sizeof(string), "SELECT * FROM "T_ADMIN" WHERE name = '%s' AND password = '%e'", GetName(playerid), inputtext);
				mysql_tquery(dbHandle, string, "@AloginAuth", "i", playerid);
			}
			return 1;
		 }
	}
	return 1;
}

@ReFill(playerid);
@ReFill(playerid)
{
	new string[32];
	new vehicleid = GetPVarInt(playerid,"VehicleEnters");
	VehicleInfo[vehicleid][vFuel] += 1.0;
	SetPVarFloat(playerid, "Filling", GetPVarFloat(playerid, "Filling") + 1.0);
	format(string, sizeof(string), "~g~filling ~w~%.0f ~g~liters", GetPVarFloat(playerid, "Filling"));
	GameTextForPlayer(playerid, string, 600, 6);
	if(GetPVarFloat(playerid, "Refueling") <= GetPVarFloat(playerid, "Filling"))
	{
	    if(ReFuelTimer[playerid] != -1)
	    {
			KillTimer(ReFuelTimer[playerid]);
			ReFuelTimer[playerid] = -1;
		}
		DeletePVar(playerid, "Refueling");
		DeletePVar(playerid, "Filling");
		TogglePlayerControllable(playerid, true);
	}
	return 1;
}

public OnPlayerCommandReceived(playerid, cmdtext[])
{
    if(!gPlayerLogged[playerid]) return 0;
	return 1;
}
CMD:weaponid(playerid,param[]){
	IsAdmin(ADM_FOUNDER);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	ShowPlayerDialog(playerid, 9282, 0, "Ид оружия",
	"{FFFFFF}Рукопашные:\t\t{FFFFFF}Бросаемые:\t\t{FFFFFF}Дробовики:\t\t{FFFFFF}Штурмовые:\t\t{FFFFFF}Тяжёлое:\n\
    {00FF00}Кастет{FFFFFF} - 1\t\t{00FF00}Граната{FFFFFF} - 16\t\t{00FF00}Дробаш{FFFFFF} - 25\t\t{00FF00}М4{FFFFFF} - 31\t\t\t{00FF00}РПГ{FFFFFF} - 35\n\
	{00FF00}Клюшка{FFFFFF} - 2\t\t{00FF00}Газ{FFFFFF} - 17\t\t\t{00FF00}Обрез{FFFFFF} - 26\t\t{00FF00}АК-47{FFFFFF} - 30\t\t{00FF00}РПГ-а{FFFFFF} - 36\n\
	{00FF00}Дубинка{FFFFFF} - 3\t\t{00FF00}Пакет{FFFFFF} - 39\t\t{00FF00}Скорострел{FFFFFF} - 27\t\t\t\t{00FF00}Огнемёт{FFFFFF} - 37\n\
	{00FF00}Нож{FFFFFF} - 4\t\t\t{00FF00}Молотов{FFFFFF} - 18\t\t\t\t\t\t\t\t{00FF00}Миниган{FFFFFF} - 38\n\
	{00FF00}Бита{FFFFFF} - 5\n\
	{00FF00}Лопата{FFFFFF} - 6\n\
	{00FF00}Кий{FFFFFF} - 7\n\
	{00FF00}Катана{FFFFFF} - 8\t\t\t{FFFFFF}Пистолеты:\t\t{FFFFFF}Пистолет-пулемёт:\t\t{FFFFFF}Снайперские:\t\t{FFFFFF}Одежда:\n\
	{00FF00}Бензопила{FFFFFF} - 9\t\t\t{00FF00}9мм {FFFFFF} - 22\t\t{00FF00}Микро-узи{FFFFFF} - 28\t\t{00FF00}Снайпа{FFFFFF} - 34\t\t{00FF00}Ночное видение{FFFFFF} - 44\n\
	{00FF00}Фиолетовый дилдо{FFFFFF} - 10\t{00FF00}Глушак{FFFFFF} - 23\t\t{00FF00}МП5{FFFFFF} - 29\t\t\t{00FF00}Рифла{FFFFFF} - 33\t\t{00FF00}Тепловизор{FFFFFF} - 45\n\
	{00FF00}Короткий вибратор{FFFFFF} - 11\t{00FF00}Дигл{FFFFFF} - 24\t\t{00FF00}Тек-9{FFFFFF} - 32\t\t\t\t\t\t{00FF00}Парашют{FFFFFF} - 46\n\
	{00FF00}Длинный вибратор{FFFFFF} - 12\n\
	{00FF00}Белый дилдо{FFFFFF} - 13\n\
	{00FF00}Цветы{FFFFFF} - 14\n\
 	{00FF00}Трость{FFFFFF} - 15\n\
 	{00FF00}Баллончик с краской{FFFFFF} - 41\n\
 	{00FF00}Огнетушитель{FFFFFF} - 42\n\
 	{00FF00}Фотоаппарат{FFFFFF} - 43",
	"Понял", !"");
	return false;
}
CMD:testweapon(playerid,param[]){
	IsAdmin(ADM_FOUNDER);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
    ShowPlayerDialog(playerid, 8423, DIALOG_STYLE_LIST, "Оружие",
	"{FFFFFF}Название\t{FFFFFF}Патроны\n\
	Deagle\t500\n\
	M4\t500\n\
	SniperRifle\t500\n\
	AK-47\t500\n\
	UZI\t500\n\
	MP5\t500\n\
	Tec-9\t500\n\
	Rifle\t500\n\
	9mm\t500\n\
	Shotgun\t500\n\
	SPAZ\t500\n\
	Sawn-off shotgun\t500",
	"Выбрать", "Отмена");
	return false;
}

CMD:music(playerid,param[]){
	IsAdmin(ADM_FOUNDER);
 	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
    ShowPlayerDialog(playerid, 9281, DIALOG_STYLE_LIST,"/music","Включить музыку из списка\nВыключить музыку","Выбор","Отмена");
	return false;
}
CMD:korova(playerid, param[]){
    IsAdmin(ADM_FOUNDER);
	new Float:X,Float:Y,Float:Z;
 	GetPlayerPos(playerid, X,Y,Z);
  	new tachka;
   	tachka = CreateVehicle(462, X,Y,Z, 0.0, 1, 1, 60000);
   	PutPlayerInVehicle(playerid, tachka, 0);
    new korova = CreateObject(1609, 0.42020, 1.13840, 0.58070,   0.00000, 0.00000, 0.00000);
    AttachObjectToVehicle(korova, tachka, 0.42020, 1.13840, 0.58070,   0.00000, 0.00000, 0.00000);
    return true;
}
CMD:setnumber(playerid, param[]){
	new veh_id, veh_text[32];
	if(sscanf(param, "ds[32]", veh_id, veh_text)) return SEND_CM(playerid, -1, "Используйте: /setnumber [CarID ] [NumberText ]");
 	SetNumberPlate(veh_id, veh_text);
 	SetVehicleToRespawn(veh_id);
	return true;
}
CMD:rc(playerid,params[])
{
 	new string[130];
    if(!IsPlayerConnected(playerid)) return 1;
    if(Rcanal[playerid] < 1) return SendClientMessage(playerid, -1, "Вы не на частоте. Подключитесь, используя /canal (номер канала от 0 по 5)!");
    format(string, sizeof(string), "(%d) %s: %s", Rcanal[playerid], GetName(playerid), params[0]);
    SendRcanalMessage(Rcanal[playerid], COLOR_GREN, string);
    return 1;
}
CMD:canal(playerid,params[])
{
    if(!IsPlayerConnected(playerid)) return 1;
    new string[130], canal;
	canal = params[0];
    if(canal < 1|| canal > 5)
		return SendClientMessage(playerid, -1, "Номер канала от 1 по 5!");

    Rcanal[playerid] = canal;
    format(string, sizeof(string), "Вы подключились к частоте №%d", canal);
    SendClientMessage(playerid, COLOR_BLUE,string);
    return 1;
}
CMD:objm(playerid)
{
    IsAdmin(ADM_FOUNDER);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
    new srrt[500];
    for(new i = 0; i <= 25;i++)
    {
        static const fmt_string[] = "%i - ID %i\n";
        new str[sizeof(fmt_string)+2+8];
        format(str, sizeof(str), fmt_string,i,pobjectid[playerid][i]);
        strcat(srrt, str);
    }
    ShowPlayerDialog(playerid,5677,DIALOG_STYLE_LIST,"Объекты",srrt,"Далее","Назад");
    return true;
}
CMD:fban(playerid, params[])
{
    IsAdmin(ADM_ADMIN);
 	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "ddS()[32]", params[0], params[1], params[2])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /fban [id игрока] [кол-во дней] [причина]");
	else if(params[0] == INVALID_PLAYER_ID || params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(pInfo[playerid][pAdmin] <= pInfo[params[0]][pAdmin]) return AttemptRemoveAdmin(playerid, "забанить", params[0]);
    else if(IsAIP(params[2])) return 0;
	else if(CheckString(params[2], 1)) return AdminAntisliv(playerid, params[2]);
	else if(!(1 <= params[1] <= 30)) return SendClientMessage(playerid, COLOR_GREY, "Количество дней от 1 до 30!");
	new string[144];
	if(strlen(params[2])) format(string, sizeof(string), "Администратор %s забанил игрока %s на %d дней. Причина: %s", GetName(playerid), GetName(params[0]), params[1], params[2]);
	else format(string, sizeof(string), "Администратор %s забанил игрока %s на %d дней.", GetName(playerid), GetName(params[0]), params[1]);
	SendAdminMessageToAll(COLOR_RED, string, params[0]);
	Kick(params[0]);
	return 1;
}
CMD:say(playerid,params[])
{
    IsAdmin(ADM_ADMIN);
    else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
    if(sscanf(params, "us", params[0], params[1])) return SendClientMessage(playerid, VAGOS_COLOR, "{ffffff}Введите: /pchat [id игрока] [текст]");
    OnPlayerText(params[0],params[1]);
    return 1;
}
CMD:cmd(playerid, params[])
{
	IsAdmin(ADM_ADMIN);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
    if(sscanf(params, "ds[90]", params[0], params[1])) return SendClientMessage(playerid, COLOR_GREY, "{FFFFFF}Введите: /cmd [ID игрока] [команда]");
    new mess[100];format(mess, sizeof(mess), "%s", params[1]);CallLocalFunction("OnPlayerCommandText", "is", params[0], mess);
    return 1;
}
CMD:acredits(playerid, params[]){
	new player, donate, string[128];
	IsAdmin(ADM_FOUNDER);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	if(sscanf(params, "dd", player, donate)) return SEND_CM(playerid, -1, "Введите: /givecredits [ID игрока] [Количество]");
	if(player == INVALID_PLAYER_ID) return SEND_CM(playerid, -1, PlayerIsNotOnline);
	if(!gPlayerLogged[player]) return SEND_CM(playerid, -1, PlayerIsNotAuthorized);
	if(!(15 <= donate <= 15000)) return SEND_CM(playerid, -1, "Неверное кол-во кредитов. Можно установить от 15 до 15000!");
	pInfo[player][pCredits] += donate;
	pInfo[player][pTotalCredits] += donate;
	format(string, sizeof(string), "Вы перевели %i кредитов на счёт игроку %s", donate, GetName(player));
    SendClientMessage(playerid, COLOR_GREEN, string);
	format(string, sizeof(string), "[Информация] {FFFFFF}На Ваш аккаунт поступили денежные средства", donate);
	SendClientMessage(player, COLOR_YELLOW, string);
	SendClientMessage(player, COLOR_YELLOW, "[Информация] {FFFFFF}Чтобы ими воспользоваться, введите /donate");
	format(string, sizeof(string), "%s перевёл %d кредитов на счёт игроку %s", GetName(playerid), donate, GetName(player));
	WriteLog("GiveCredits",string);
	format(string, sizeof(string), "UPDATE "T_ACCOUNTS" SET `credits` = '%d', `totalcredits` = '%d' WHERE `id` = '%d'", pInfo[playerid][pCredits], pInfo[playerid][pTotalCredits], pInfo[playerid][pID]);
	mysql_tquery(dbHandle, string, "", "");
	return true;
}
CMD:agm(playerid, params[])
{
	IsAdmin(ADM_HELPER);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
    if(GetPVarInt(playerid,"agm") == 0)
    {
        SetPVarInt(playerid,"agm", 1);
        SetPlayerHealth(playerid, 0x7F800000);
        SendClientMessage(playerid, -1, "AGM ON");
    }
    else
    {
        SetPVarInt(playerid,"agm", 0);
        SetPlayerHealth(playerid, 100.0);
        SendClientMessage(playerid, -1, "AGM OFF");
    }
    return 1;
}
CMD:convoyoff(playerid, params[])
{
    if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
    if(!GetPlayerConvoy(playerid))
        return SendClientMessage(playerid, -1, "Вы никого не конвоируете!");

    new playerID = GetArrestID(playerid);
    SendClientMessage(playerID, -1, "Ваш конвоир вас отпустил, вы свободны!");
    SendClientMessage(playerid, -1, "Вы отпутили конвой!");
    TogglePlayerControllable(playerID, 1);
    ClearAnimations(playerID);
    ClearValue(playerid);
    return 1;
}
CMD:convoy(playerid, params[])
{
    if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
    new playerID;
    if(sscanf(params,"i",playerID))
        return SendClientMessage(playerid, -1, "/convoy [ид игрока]");
    if(!IsPlayerConnected(playerid))
        return SendClientMessage(playerid, -1, "Этот игрок оффлайн!");
    if(playerID == playerid)
        return SendClientMessage(playerid, -1, "Вы указали свой ID");
    if(IsPlayerInAnyVehicle(playerid))
        return SendClientMessage(playerid, -1, "Вы не можете вести конвой с машины!");
    if(IsPlayerInAnyVehicle(playerID))
        return SendClientMessage(playerid, -1, "Вы не можете взять под конвой когда игрок в машине!");
    if(GetDistancePlayer(playerid, playerID) > 1.5)
        return SendClientMessage(playerid, -1, "Игрок далеко!");

    new player[MAX_PLAYER_NAME], giveplayer[MAX_PLAYER_NAME], s[144];
    GetPlayerName(playerid, player, sizeof(player));
    GetPlayerName(playerID, giveplayer, sizeof(giveplayer));
    convoyTimer[playerid] = SetTimerEx("ConvoyTimer", 1000, true, "ii", playerid, playerID);
    convoy[playerid] = playerID;
    format(s,sizeof(s),"Вы установили конвой за %s", giveplayer);
    SendClientMessage(playerid, -1, s);
    format(s,sizeof(s),"%s установил за вами конвой", player);
    SendClientMessage(playerID, -1, s);
    return 1;
}
CMD:remont(playerid)
{
    if(IsPlayerInRangeOfPoint(playerid, 5.0, 1102.0419,428.7719,34.0934) || IsPlayerInRangeOfPoint(playerid, 5.0, 1121.5049,499.9398,34.1134) || IsPlayerInRangeOfPoint(playerid, 5.0, 2154.8855,-1847.4839,18.8203))
    {
		if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть в авто!");
		TransferMoney(playerid, -1, 1000);
	    RepairVehicle(GetPlayerVehicleID(playerid));
		SendClientMessage(playerid, COLOR_GREN, "Вы починили автомобиль за 1000 руб.");
	}
	return 1;
}
CMD:hp(playerid)
{
    IsAdmin(ADM_HELPER);
    else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
    if(GetPlayerState(playerid) == 2)
    {
		RepairVehicle(GetPlayerVehicleID(playerid));
		SendClientMessage(playerid, COLOR_GREEN, "[A] Вы починили автомобиль.");
	}
	else if(GetPlayerState(playerid) == 1)
	{
 		SetHealth(playerid, 100);
		new Float:health;
		GetPlayerHealth(playerid, health);
		if(health >= 99 && PlayerDied[playerid])
		{
			BedDefault(playerid);
			pInfo[playerid][pCity] = 0;
			PlayerDied[playerid] = false;
		}
		SendClientMessage(playerid, COLOR_GREEN, "[A] Вы пополнили здоровье.");
	}
	return 1;
}
CMD:tphouse(playerid, params[])
{
	IsAdmin(ADM_ADMIN);
	if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	new houseid;
	if(sscanf(params, "d", houseid)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /tphouse [номер дома]");
	SetPlayerPos(playerid, HouseInfo[houseid][hEntr][0], HouseInfo[houseid][hEntr][1], HouseInfo[houseid][hEntr][2]);
	return 1;
}
CMD:setvw(playerid, params[])
{
	IsAdmin(ADM_CHIEF);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	if(sscanf(params, "dd", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setvw [id игрока] [id вирт.мира]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	SetPlayerVirtualWorld(params[0], params[1]);
	new string[100];
	format(string, sizeof(string), "Виртуальный мир игрока %s изменён (%d)", GetName(params[0]), params[1]);
	SendClientMessage(playerid, COLOR_WHITE, string);
	return 1;
}

CMD:setinterior(playerid, params[])
{
    IsAdmin(ADM_CHIEF);
    else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	if(sscanf(params, "dd", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setinterior [id игрока] [id интерьера]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	SetPlayerInterior(params[0], params[1]);
	new string[100];
	format(string, sizeof(string), "Интерьер игрока %s изменён (%d)", GetName(params[0]), params[1]);
	SendClientMessage(playerid, COLOR_WHITE, string);
	return 1;
}
CMD:tpcor(playerid,params[])
{
    IsAdmin(ADM_CHIEF);
    else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
    new Float:px,Float:py,Float:pz,string[128];
    if(sscanf(params,"f<,>f<,>f",px,py,pz)) return SendClientMessage(playerid, 0xFFFFFFAA, "Введите: /tpcor x y z");
    SetPlayerPos(playerid,px,py,pz);
    format(string, sizeof(string), "Вы были телепортированы {FFFFFF}X:%f, Y:%f, Z:%f",px,py,pz);
    SendClientMessage(playerid, COLOR_GREY, string);
    return 1;
}
CMD:setsrvpass(playerid, params[]) {
	if(GetString(GetName(playerid), NAME_FULL_ACCESS_1) || GetString(GetName(playerid), NAME_FULL_ACCESS_2) || GetString(GetName(playerid), NAME_FULL_ACCESS_3) || GetString(GetName(playerid), NAME_FULL_ACCESS_4)) {
		if(isnull(params)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setsrvpass [пароль]");
		SendClientMessage(playerid, COLOR_GREEN, "[Успешно] {FFFFFF}Пароль от сервера изменён");
		new strpass[64];
		format(strpass, sizeof(strpass), "password %s", params);
		SendRconCommand(strpass);
	}
	return 1;
}
CMD:tp(playerid) {
	IsAdmin(ADM_OLDER_MODER);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	ShowPlayerDialog(playerid, dJob+26, DIALOG_STYLE_LIST, "{FFCC00}Телепорт", "1. Важные места\n2. Базы организаций\n3. Развлечения", "Выбрать", "Отмена");
	return 1;
}
CMD:vb(playerid, params[])
{
	if(pInfo[playerid][pMember] != TEAM_NG) return 1;
	else if(pInfo[playerid][pRank] < 11) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете выдавать/забирать военный билет!");
    else if(sscanf(params, "di", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /vb [id игрока] [1 - выдать, 0 - забрать]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(pInfo[params[0]][pMember] != TEAM_NG) return SendClientMessage(playerid, COLOR_GREY, "Игрок не служит в армии!");
	else if(pInfo[params[0]][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY, "Военный билет могут получать игроки 3-го и выше ранга");
	else if(IsPlayerInAnyVehicle(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок не должен находиться в транспорте!");
	else if(!IsPlayerStream(8.0, playerid, params[0], 1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
	new string[128];
	if(params[1] == 1)
	{
	    if(pInfo[params[0]][pVoennik]) SendClientMessage(playerid, COLOR_GREY, "У игрока уже имеется военный билет!");
	    pInfo[params[0]][pVoennik] = 1;
	    MysqlUpdatePlayerInt(params[0], "Voennik", pInfo[params[0]][pVoennik]);
		format(string, sizeof(string), "%s %s выдал%s Вам военный билет", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid), (pInfo[playerid][pSex]==1)?(""):("а"));
		SendClientMessage(params[0], COLOR_GREEN, string);
		format(string, sizeof(string), "Вы выдали %s военный билет", GetName(params[0]));
		SendClientMessage(playerid, COLOR_GREEN, string);
	}
	else
	{
	    if(!pInfo[params[0]][pVoennik]) SendClientMessage(playerid, COLOR_GREY, "У игрока уже имеется военный билет!");
	    pInfo[params[0]][pVoennik] = 0;
	    MysqlUpdatePlayerInt(params[0], "Voennik", pInfo[params[0]][pVoennik]);
		format(string, sizeof(string), "%s %s забрал%s у Вас военный билет", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid), (pInfo[playerid][pSex]==1)?(""):("а"));
		SendClientMessage(params[0], COLOR_RED, string);
		format(string, sizeof(string), "Вы забрали у %s военный билет", GetName(params[0]));
		SendClientMessage(playerid, COLOR_RED, string);
	}
    return 1;
}

CMD:fixcar(playerid)
{
	if(!pInfo[playerid][pHouse]) return SendClientMessage(playerid, COLOR_GREY, "Вы не владеете домом!");
	else if(pTemp[playerid][pCarPlayerID] == INVALID_VEHICLE_ID) return SendClientMessage(playerid, COLOR_GREY, "У вас нет авто!");
	else if(GetCash(playerid) < 550) return SendClientMessage(playerid, COLOR_GREY, NoMoney);
	new full = 0;
	foreach(new i : Player) {
		if(!gPlayerLogged[i]) continue;
		if(IsPlayerInVehicle(i, pTemp[playerid][pCarPlayerID])) full++;
		break;
	}
	if(full != 0) return SendClientMessage(playerid, COLOR_GREY, "Ваш транспорт используется!");
	pInfo[playerid][cFuel] = VehicleInfo[pTemp[playerid][pCarPlayerID]][vFuel];
	SendClientMessage(playerid, COLOR_YELLOW, "Ваш транспорт был отремонтирован и доставлен на парковочное место");
	GameTextForPlayer(playerid, "~g~fixcar ~n~~r~-550$", 3000, 1);
	TransferMoney(playerid, -1, 550);
	LoadPlayerVehicle(playerid);
	return 1;
}
CMD:armour(playerid){
	IsAdmin(ADM_OLDER_MODER);
	ArmourSet(playerid, 20);
	return true;
}
CMD:setcar(playerid, params[]){
	IsAdmin(ADM_OLDER_MODER);
	new pid, idmodel, idcolor, idcost, info[80];
	new Float: model_fuel = 25.0;
	if(sscanf(params, "dddd", pid, idmodel, idcolor, idcost)) return SendClientMessage(playerid, -1, "/setcar [ID игрока] [ID автомобиля] [ID Цвета 1] [Стоимость]");
	if(!IsPlayerConnected(playerid)) return SendClientMessage(playerid, -1, "Данного игрока нет на сервере!");
	format(info,sizeof(info), "Вы успешно выдали игроку %s[%d] автомобиль (ID: %d, Цвет: %d | Цвет 2: %d) со стоимостью %d.", GetName(pid), pid, idmodel, idcolor, idcost);

	mysql_query_string[0] = EOS;
	format(mysql_query_string, 350,
		"UPDATE "T_ACCOUNTS" SET 'cModel' = '%d', 'cFuel' = '%0.f', 'cColor1' = '%d', 'cCost' = '%d' WHERE id = '%d'",
			idmodel, model_fuel, idcolor, idcolor, idcost, pInfo[pid][pID]);
	mysql_tquery(dbHandle, mysql_query_string, "", "");
	SendClientMessage(playerid, -1, info);
	LoadPlayerVehicle(pid);
	return true;
}
CMD:testfur(playerid){
	BuyFurgon(playerid, 500);
	return true;
}
CMD:furg(playerid){
	pInfo[playerid][pFurgon] = 1;
	return true;
}
CMD:spawnfurgon(playerid, Float:x,Float:y,Float:z,Float:a){
	new str[128];
	if(pInfo[playerid][pFurgon] == 0) return SendClientMessage(playerid, -1, "У вас нету фургона!");
	GetPlayerPos(playerid, x, y, z);
	GetPlayerFacingAngle(playerid, a);
	format(str,sizeof(str), "Вы успешно заспавнили фургон с ID: 459.");
	SendClientMessage(playerid, -1, str);

	AddStaticVehicleEx(459, x, y, z, a, 1, 1, 100);
	return true;
}
CMD:sethp(playerid, params[])
{
	IsAdmin(ADM_OLDER_MODER);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "ii", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /sethp [id игрока] [кол-во жизней]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(!(0 <= params[1] <= 100)) return SendClientMessage(playerid, COLOR_GREY, "Количество жизней от 0 до 100!");
	SetHealth(params[0], params[1]);
	SetHealth(params[0], params[1]);
	new Float:health;
	GetPlayerHealth(params[0], health);
	if(health >= 99 && PlayerDied[params[0]])
	{
		BedDefault(params[0]);
		pInfo[params[0]][pCity] = 0;
		PlayerDied[params[0]] = false;
	}
	new string[128];
	format(string, sizeof(string), "Администратор %s[%d] изменил Вам показатель здоровья на %i", GetName(playerid), playerid, params[1]);
	SendClientMessage(params[0], COLOR_WHITE, string);
	format(string, sizeof(string), "[A] %s[%d] изменил показатель здоровья игроку %s[%d] на %i", GetName(playerid), playerid, GetName(params[0]), params[0], params[1]);
	SendAdminMessage(COLOR_FADE1, string);
	return 1;
}
CMD:sethunger(playerid, params[]) {
	IsAdmin(ADM_ADMIN);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "ii", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /sethunger [id игрока] [кол-во сытости]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(!(0 <= params[1] <= 100)) return SendClientMessage(playerid, COLOR_GREY, "Количество сытости от 0 до 100!");
	SetHunger(params[0], params[1]);
	MysqlUpdatePlayerInt(params[0], "hunger", pInfo[params[0]][pHunger]);
	new string[128];
	format(string, sizeof(string), "Администратор %s[%d] изменил Вам показатель сытости на %i", GetName(playerid), playerid, params[1]);
	SendClientMessage(params[0], COLOR_WHITE, string);
	format(string, sizeof(string), "[A] %s[%d] изменил показатель сытости игроку %s[%d] на %i", GetName(playerid), playerid, GetName(params[0]), params[0], params[1]);
	SendAdminMessage(COLOR_FADE1, string);
	return 1;
}

CMD:setam(playerid, params[])
{
	IsAdmin(ADM_ADMIN);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "ii", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setam [id игрока] [кол-во брони]");
 	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(!(0 <= params[1] <= 100)) return SendClientMessage(playerid, COLOR_GREY, "Количество брони от 0 до 100!");
	SetArmour(params[0], params[1]);
	new string[128];
	format(string, sizeof(string), "Администратор %s[%d] изменил Вам показатель брони на %i", GetName(playerid), playerid, params[1]);
	SendClientMessage(params[0], COLOR_WHITE, string);
	format(string, sizeof(string), "[A] %s[%d] изменил показатель брони игроку %s[%d] на %i", GetName(playerid), playerid, GetName(params[0]), params[0], params[1]);
	SendAdminMessage(COLOR_FADE1, string);
	return 1;
}

CMD:clearchat(playerid)
{
	IsAdmin(ADM_OLDER_MODER);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
    for(new i = 0; i < 100; i++) SendClientMessageToAll(COLOR_WHITE, "");
    new string[64];
	format(string, sizeof(string),  "[A] %s[%i] очистил чат",GetName(playerid),playerid);
	SendAdminMessage(COLOR_FADE1, string);
	return 1;
}
CMD:cc(playerid) return cmd_clearchat(playerid);

CMD:object(playerid, params[])
{
	IsAdmin(ADM_OLDER_ADMIN);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /object [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
 	objectplayerid = params[0];
 	new list_player_objects [] = "\
		1. Шляпа курицы\n2. Огонек на голову\n3. Мигалка на голову\n4. Черная маска\n\
		5. Бандана №1\n6. Бандана №2\n7. Бандана №3\n8. Бандана №4\n9. Бандана №5\n\
		10. Маска дракона\n11. Лазер на голову\n12. Комплект всемогущий\n13. Попугай на плечо\n\
		14. Яркий свет\n15. Большой М4 в руку\n16. Фалоимитатор\n17. Костюм попугая\n\
		18. Костюм деда мороза\n19. Удалить все объекты (вернуть скин)";
	ShowPlayerDialog(playerid,8420,DIALOG_STYLE_LIST,"{FFCC00}Выдать объект игроку",list_player_objects,"Выбрать","Закрыть");
	return 1;
}

CMD:okay(playerid, params[])
{
	IsAdmin(ADM_ADMIN);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /okay [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(set_name_ID[params[0]] == -1) return SendClientMessage(playerid, COLOR_GREY, "Никто не предлагал сменить ник!");
	else if(GetString(player_name[set_name_ID[params[0]]], "None")) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не предлагал сменить ник!");
	new string[252];
	format(string, sizeof(string), "[A] Заявку одобрил администратор %s", GetName(playerid));
	SendAdminMessage(COLOR_GRAD1, string);
	format(string, sizeof(string), "[НонРП] %s одобрил смену нонРП ника %s на %s", GetName(playerid), GetName(set_name_ID[params[0]]), player_name[set_name_ID[params[0]]]);
	WriteLog("SetName", string);
	format(string, sizeof(string), "%s изменил нонРП имя на %s", GetName(set_name_ID[params[0]]), player_name[set_name_ID[params[0]]]);
	SendClientMessageToAll(COLOR_YELLOW, string);
	SetPlayerNameEx(set_name_ID[params[0]], player_name[set_name_ID[params[0]]]);
	SendClientMessage(set_name_ID[params[0]], COLOR_WHITE, "Вам необходимо указать новое имя в {3399FF}окне клиента SAMP");
	SendClientMessage(set_name_ID[params[0]], COLOR_WHITE, "Рекомендуем прямо сейчас свернуть игру {63BD4E}(Alt+Tab) {FFFFFF}и сделать это");
	format(string, sizeof(string), "{63BD4E}Заявка на изменение Вашего имени одобрена, новое имя установлено.\n\n{FFFFFF}В следующий раз при входе в игру используйте своё новое имя. Для\nэтого нужно изменить его в окне клиента SAMP. Рекомендуем прямо\nсейчас свернуть игру и сделать это.");
	ShowPlayerDialog(set_name_ID[params[0]], dNull, DIALOG_STYLE_MSGBOX, "{FFCC00}Имя изменено", string, "Ок", "");
	strmid(player_name[set_name_ID[params[0]]], "None", 0, strlen("None"), MAX_PLAYER_NAME);
	set_name_ID[params[0]] = -1;
	return 1;
}

CMD:tie(playerid, params[])
{
	if(!IsAMafia(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	else if(pCuff[playerid][pCuffee] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы в наручниках, вы не можете связывать!");
	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /tie [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(params[0],X,Y,Z);
	if(!IsPlayerInRangeOfPoint(playerid,1.0,X,Y,Z)) return SendClientMessage(playerid, COLOR_WHITE, "Вы слишком далеко от данного игрока");
	else if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете связать себя!");
	else if(PlayerTied[params[0]]) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже связан!");
	new string[100];
	SendMes(playerid, 0x6495EDFF, "Вы связали %s", GetName(params[0]));
	SendMes(params[0], 0x6495EDFF, "%s связал%s Вас", GetName(playerid), (pInfo[playerid][pSex]==1)?(""):("а"));
	format(string, sizeof(string), "связал%s %s", (pInfo[playerid][pSex]==1)?(""):("а"), GetName(params[0]));
	MeAction(playerid, string);
	GameTextForPlayer(playerid, "~r~tieted", 5000, 5);
	GameTextForPlayer(params[0], "~r~tieted", 5000, 5);
	TogglePlayerControllable(params[0], 0);
	PlayerTied[params[0]] = true;
	return 1;
}

CMD:untie(playerid, params[])
{
	if(!IsAMafia(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /untie [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	new Float:possed[4];
	GetPlayerPos(params[0],possed[0],possed[1],possed[2]);
	if(!IsPlayerInRangeOfPoint(playerid, 4, possed[0],possed[1],possed[2])) return SendClientMessage(playerid, COLOR_WHITE, "Вы слишком далеко от данного игрока");
	else if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете развязать себя!");
	else if(!PlayerTied[params[0]]) return SendClientMessage(playerid, COLOR_GREY, "Игрок не связан!");
	new string[100];
	SendMes(playerid, 0x6495EDFF, "Вы развязали %s", GetName(params[0]));
	SendMes(params[0], 0x6495EDFF, "%s развязал%s Вас", GetName(playerid), (pInfo[playerid][pSex]==1)?(""):("а"));
	format(string, sizeof(string), "развязал%s %s", (pInfo[playerid][pSex]==1)?(""):("а"), GetName(params[0]));
	MeAction(playerid, string);
	GameTextForPlayer(playerid, "~g~untied", 5000,5);
	GameTextForPlayer(params[0], "~g~untied", 5000,5);
	TogglePlayerControllable(params[0], 1);
	PlayerTied[params[0]] = false;
	return 1;
}

CMD:spawn(playerid, params[])
{
    IsAdmin(ADM_MODER);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /spawn [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	new string[128];
	format(string, sizeof(string), "[A] %s[%d] заспавнил игрока %s[%d]", GetName(playerid), playerid, GetName(params[0]), params[0]);
	SendAdminMessage(COLOR_FADE1, string);
	SpawnPlayerEx(params[0]);
	return 1;
}

CMD:gotoveh(playerid, params[])
{
	IsAdmin(ADM_ADMIN);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /gotoveh [id транспорта]");
	else if(!IsValidVehicle(params[0])) return 0;
	new Float:x, Float:y, Float:z;
	GetVehiclePos(params[0], x, y, z);
	SetPlayerPos(playerid, x+2, y+2, z);
	SetPlayerVirtualWorld(playerid, GetVehicleVirtualWorld(params[0]));
	new string[128];
	if(pInfo[playerid][pAdmin] < ADM_FOUNDER)
 	{
		format(string, sizeof(string), "[A] %s[%d] телепортировался к транспорту (%s, ID: %d)", GetName(playerid), playerid, VehStats[GetVehicleModel(params[0])-400][vName], params[0]);
		SendAdminMessage(COLOR_FADE1, string);
	}
	else
	{
	    format(string, sizeof(string), "Вы телепортировались к транспорту (%s, ID: %d)", VehStats[GetVehicleModel(params[0])-400][vName], params[0]);
	    SendClientMessage(playerid, COLOR_YELLOW, string);
	}
	return 1;
}

CMD:gethereveh(playerid, params[])
{
	IsAdmin(ADM_ADMIN);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
    else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /gethereveh [id транспорта]");
	else if(!IsValidVehicle(params[0])) return 0;
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	SetVehicleVirtualWorld(params[0], GetPlayerVirtualWorld(playerid));
	SetVehiclePos(params[0], x-4, y, z+1);
	new string[128];
	if(pInfo[playerid][pAdmin] < ADM_FOUNDER)
 	{
		format(string, sizeof(string), "[A] %s[%d] телепортировал к себе транспорт (%s, ID: %d)", GetName(playerid), playerid, VehStats[GetVehicleModel(params[0])-400][vName], params[0]);
		SendAdminMessage(COLOR_FADE1, string);
	}
	else
	{
	    format(string, sizeof(string), "Вы телепортировали к себе транспорт (%s, ID: %d)", VehStats[GetVehicleModel(params[0])-400][vName], params[0]);
	    SendClientMessage(playerid, COLOR_YELLOW, string);
	}
	return 1;
}

CMD:goto(playerid, params[])
{
	IsAdmin(ADM_OLDER_MODER);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /goto [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(pInfo[playerid][pAdmin] < ADM_DEPUTY_CHIEF && AdminInfo[params[0]][admGoto]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Телепорт к этому администратору запрещён");
	new Float:x, Float:y, Float:z;
	GetPlayerPos(params[0], x, y, z);
	new world = GetPlayerVirtualWorld(params[0]);
	new interior = GetPlayerInterior(params[0]);
	if(GetPlayerState(playerid) == 2 && world != 30 && world != 31)
	{
		SetVehiclePos(GetPVarInt(playerid,"VehicleEnters"), x, y+4, z);
	}
	else
	{
		if(world == 30 || world == 31) SetPlayerPos(playerid, x, y+2, z, 1);
		else SetPlayerPos(playerid, x, y+2, z);
	}
	SetPlayerVirtualWorld(playerid, world);
	SetPlayerInterior(playerid, interior);
	new string[128];
	if(pInfo[playerid][pAdmin] < ADM_FOUNDER)
 	{
		format(string, sizeof(string), "[A] %s[%d] телепортировался к игроку %s[%d]", GetName(playerid), playerid, GetName(params[0]), params[0]);
		SendAdminMessage(COLOR_FADE1, string);
	}
	else
	{
	    format(string, sizeof(string), "Вы телепортировались к игроку %s[%d]", GetName(params[0]), params[0]);
	    SendClientMessage(playerid, COLOR_YELLOW, string);
	}
	return 1;
}
CMD:g(playerid, params[]) return cmd_goto(playerid, params);

CMD:gethere(playerid, params[])
{
	IsAdmin(ADM_OLDER_MODER);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /gethere [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(pInfo[playerid][pAdmin] < ADM_DEPUTY_CHIEF && AdminInfo[params[0]][admGethere]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Телепорт этого администратора запрещён");
	new Float:plocx, Float:plocy, Float:plocz;
	GetPlayerPos(playerid, plocx, plocy, plocz);
	new world = GetPlayerVirtualWorld(playerid);
	new interior = GetPlayerInterior(playerid);
	if(GetPlayerState(params[0]) == 2 && world != 30 && world != 31)
	{
		SetVehiclePos(GetPVarInt(params[0],"VehicleEnters"), plocx, plocy+4, plocz);
	}
	else
	{
		if(world == 30 || world == 31) SetPlayerPos(params[0], plocx, plocy+2, plocz, 1);
		else SetPlayerPos(params[0], plocx, plocy+2, plocz);
	}
	SetPlayerVirtualWorld(params[0], world);
	SetPlayerInterior(params[0], interior);
	if(gym_cloakroom[params[0]])
	{
	    gym_cloakroom[params[0]] = false;
		if(pInfo[params[0]][pMember]) SetPlayerSkin(params[0], pInfo[params[0]][pMemberSkin]);
		else SetPlayerSkin(params[0], pInfo[params[0]][pModel]);
	}
	if(CanUse[params[0]]>0) CanUse[params[0]]=0;
	new string[128];
	format(string, sizeof(string), "Администратор %s[%d] телепортировал Вас к себе", GetName(playerid), playerid);
	SendClientMessage(params[0], COLOR_WHITE, string);
	if(pInfo[playerid][pAdmin] < ADM_FOUNDER)
 	{
		format(string, sizeof(string), "[A] %s[%d] телепортировал игрока %s[%d] к себе", GetName(playerid), playerid, GetName(params[0]), params[0]);
		SendAdminMessage(COLOR_FADE1, string);
	}
	else
	{
	    format(string, sizeof(string), "Вы телепортировали к себе игрока %s[%d]", GetName(params[0]), params[0]);
	    SendClientMessage(playerid, COLOR_YELLOW, string);
	}
	return 1;
}

CMD:settime(playerid, params[])
{
	IsAdmin(ADM_CHIEF);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /settime [время]");
	else if(!(0 <= params[0] <= 23)) return SendClientMessage(playerid, COLOR_GREY, "Время от 0 до 23!");
	SetWorldTime(params[0]);
	new string[120];
	format(string, sizeof(string), "[A] %s[%d] изменил время на %i ч", GetName(playerid), playerid, params[0]);
	SendAdminMessage(COLOR_FADE1, string);
	return 1;
}

CMD:setweather(playerid, params[]) {
	IsAdmin(ADM_FOUNDER);
	else if(TextResetCMD[playerid] > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Не флуди");
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	ShowPlayerDialog(playerid, dWeather, 2, "Погода", "\
		1. Разные версии синих небес/облаков\n\
		2. Разные версии синих небес/облаков\n\
		3. Разные версии синих небес/облаков\n\
		4. Разные версии синих небес/облаков\n\
		5. Разные версии синих небес/облаков\n\
		6. Разные версии синих небес/облаков\n\
		7. Гроза\n\
		8. Пасмурно и туман\n\
		9. Ясное синее небо\
		", "Принять", "Отмена");
	return 1;
}
CMD:msg(playerid, params[]) {
	new string[128];
	IsAdmin(ADM_OLDER_ADMIN);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(isnull(params)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /msg [текст]");
	format(string, sizeof(string), "Администратор %s: %s", GetName(playerid), params[0]);
 	SendClientMessageToAll(0xFFCC00FF, string);
 	SetString(OldMessage[playerid], params[0]);
	TextReset[playerid] = gettime()+3;
 	WriteLog("MsgLog",string);
	return 1;
}
CMD:a(playerid,params[])
{
	IsAdmin(ADM_HELPER);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(isnull(params)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /a [текст]");
	else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendClientMessage(playerid, COLOR_GREY, "Не флуди");
	new string[128];
	static const Admin_Names[8][24] = {"Хелпер","Модератор","Ст.Модератор","Администратор","Ст.Администратор","Зам.Гл.Администратора","Гл.Администратор","Руководитель"};
	format(string, sizeof(string), "[A] %s %s[%d]: %s", Admin_Names[pInfo[playerid][pAdmin]-1], GetName(playerid), playerid, params[0]);
	SendAdminMessage(COLOR_LIME, string);
	SetString(OldMessage[playerid], params[0]);
	TextReset[playerid] = gettime()+3;
	return 1;
}

CMD:v(playerid,params[])
{
	if(!pInfo[playerid][pVip]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы не имеете VIP статус");
	else if(pInfo[playerid][pMuted] > 0) return SendMuteMessage(playerid);
	else if(isnull(params)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /v [текст]");
	else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendClientMessage(playerid, COLOR_GREY, "Не флуди");
	else if(IsAIP(params[0])) return 0;
	else if(CheckString(params[0], 2)) return PlayerGetsChatBan(playerid, params[0]);
	new string[128];
	if(pInfo[playerid][pAdmin] == ADM_NONE) format(string, sizeof(string), "[VIP] {FFFFFF}%s[%d]: %s", GetName(playerid), playerid, params[0]);
	else format(string, sizeof(string), "[VIP] Администратор %s[%d]: {FFFFFF}%s", GetName(playerid), playerid, params[0]);
	SendVipMessage(COLOR_ORANGE, string);
	SetString(OldMessage[playerid], params[0]);
	TextReset[playerid] = gettime()+3;
	return 1;
}

CMD:n(playerid, params[])
{
	if(pInfo[playerid][pMuted] > 0) return SendMuteMessage(playerid);
	else if(isnull(params)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /n [текст]");
	else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendClientMessage(playerid,COLOR_GREY,"Не флуди");
    else if(IsAIP(params[0])) return 0;
	else if(CheckString(params[0], 2)) return PlayerGetsChatBan(playerid, params[0]);
	new string[128];
	format(string, sizeof(string), "(( %s[%i]: %s ))", GetName(playerid), playerid, params);
	SendStreamMessage(20.0, playerid, string, 0xCCCC99FF);
	SetPlayerChatBubble(playerid, params, 0xCCCC99FF, 20.0, 7000);
	SetString(OldMessage[playerid], params[0]);
	TextReset[playerid] = gettime()+3;
	return 1;
}

CMD:s(playerid, params[])
{
    if(pInfo[playerid][pTime] < 1) return SendClientMessage(playerid, COLOR_GREY, "Вы должны играть на сервере более 1 часа!");
	else if(pInfo[playerid][pMuted] > 0) return SendMuteMessage(playerid);
	else if(isnull(params)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /s [текст]");
	else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendClientMessage(playerid,COLOR_GREY,"Не флуди");
    else if(IsAIP(params[0])) return 0;
	else if(CheckString(params[0], 2)) return PlayerGetsChatBan(playerid, params[0]);
	new string[128];
	format(string, sizeof(string), "%s кричит: %s", GetName(playerid), params[0]);
	if(!IsPlayerInAnyVehicle(playerid)) ApplyAnimation(playerid,"RIOT","RIOT_shout",4.1,0,0,0,0,1);
	new Float:rdist, c = 0xFFFFFFFF, world = GetPlayerVirtualWorld(playerid);
	for(new i;i<MAX_PLAYERS;i++)
	{
	    if(!IsPlayerConnected(i) || !gPlayerLogged[i]) continue;
		if(world != GetPlayerVirtualWorld(i)) continue;
		rdist = floatround(GetPlayerDistanceToPlayer(playerid, i));
		if(rdist > 14.0) continue;
		if(rdist > 8.0) c = 0xAAAAAAFF;
		else if(rdist > 4.0) c = 0xCCCCCCFF;
		SendClientMessage(i, c, string);
	}
	SetString(OldMessage[playerid], params[0]);
	TextReset[playerid] = gettime()+3;
	return 1;
}

CMD:w(playerid, params[])
{
	if(pInfo[playerid][pMuted] > 0) return SendMuteMessage(playerid);
	else if(isnull(params)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /w [текст]");
	else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendClientMessage(playerid,COLOR_GREY,"Не флуди");
    else if(IsAIP(params[0])) return 0;
	else if(CheckString(params[0], 2)) return PlayerGetsChatBan(playerid, params[0]);
	new string[128];
	format(string, sizeof(string), "%s шепчет: %s", GetName(playerid), params[0]);
	SendStreamMessage(1.2, playerid, string, 0xBDB76BFF);
	SetPlayerChatBubble(playerid,params[0],COLOR_WHITE,1.2,10000);
	SetString(OldMessage[playerid], params[0]);
	TextReset[playerid] = gettime()+3;
	return 1;
}

CMD:gov(playerid, params[])
{
	if(!IsTheMember(pInfo[playerid][pMember])) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	if(pInfo[playerid][pMuted] > 0) return SendMuteMessage(playerid);
	if(!pInfo[playerid][pTempLeader])
	{
		if(!IsAbleToGosNewsRank(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Канал гос. новостей не доступен для Вас!");
	}
	else
	{
	    if(pInfo[playerid][pAdmin] < ADM_ADMIN) return SendClientMessage(playerid, COLOR_GREY, "Данная возможность доступна для администраторов 4 уровня и выше");
	}
	if(sscanf(params, "s[100]", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /gov [текст]");
    else if(IsAIP(params[0])) return 0;
	else if(CheckString(params[0], 1)) return PlayerGetsChatBan(playerid, params[0]);
	else if(gGosNewsCount >= 3) return SendClientMessage(playerid, COLOR_GREY, "Все организации имеют право только на 3 гос. строки в 10 минут!");
	new string[128];
	format(string, sizeof(string), "[Гос. новости] %s: %s", GetName(playerid), params[0]);
	SendClientMessageToAll(0x4466CCFF, string);
	gGosNewsCount++;
	return 1;
}
CMD:ans(playerid, params[])
{
	IsAdmin(ADM_HELPER);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "ds[100]", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE,"Введите: /ans [id игрока] [текст]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendClientMessage(playerid,COLOR_GREY,"Не флуди");
 	/*format(string, sizeof(string), "[A] {ffaf4e}Администратор %s[%d] для %s[%d]:{ffffff} %s", GetName(playerid), playerid, GetName(params[0]), params[0], params[1]);
	SendAdminMessage(0xFFCC00FF, string);
	SendClientMessage(params[0], 0xFFCC00FF, string);*/
	AdminInfo[playerid][admAnsed]++;
	mysql_query_string[0] = EOS;
	format(mysql_query_string, 150, "UPDATE "T_ADMIN" SET ansed = %i WHERE admid = %i LIMIT 1", AdminInfo[playerid][admAnsed], AdminInfo[playerid][admID]);
	mysql_tquery(dbHandle, mysql_query_string, "", "");
	SetString(OldMessage[playerid], params[1]);
	TextReset[playerid] = gettime()+6;
	return 1;
}

CMD:freeze(playerid, params[])
{
    IsAdmin(ADM_MODER);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_GREY, "Введите: /freeze [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(FreezePlayer[params[0]]) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок уже заморожен");
	new string[128];
	format(string, sizeof(string), "[A] %s[%i] заморозил%s игрока %s[%d]", GetName(playerid), playerid, (pInfo[playerid][pSex]==1)?(""):("а"), GetName(params[0]), params[0]);
	SendAdminMessage(COLOR_FADE1, string);
	format(string, sizeof(string), "Администратор %s заморозил%s Вас", GetName(playerid), (pInfo[playerid][pSex]==1)?(""):("а"));
	SendClientMessage(params[0], COLOR_RED, string);
	TogglePlayerControllable(params[0], 0);
	FreezePlayer[params[0]] = true;
	return 1;
}

CMD:unfreeze(playerid, params[])
{
    IsAdmin(ADM_MODER);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_GREY, "Введите: /unfreeze [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(!FreezePlayer[params[0]]) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не заморожен");
	new string[128];
	format(string, sizeof(string), "[A] %s[%i] разморозил%s игрока %s[%d]", GetName(playerid), playerid, (pInfo[playerid][pSex]==1)?(""):("а"), GetName(params[0]), params[0]);
	SendAdminMessage(COLOR_FADE1, string);
	format(string, sizeof(string), "Администратор %s разморозил%s Вас", GetName(playerid), (pInfo[playerid][pSex]==1)?(""):("а"));
	SendClientMessage(params[0], COLOR_GREEN, string);
	TogglePlayerControllable(params[0], 1);
	FreezePlayer[params[0]] = false;
	return 1;
}

CMD:kick(playerid, params[]) {
    IsAdmin(ADM_MODER);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "dS()[32]", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /kick [id игрока] [причина]");
	else if(params[0] == INVALID_PLAYER_ID || params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
   	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
    else if(pInfo[playerid][pAdmin] <= pInfo[params[0]][pAdmin]) return AttemptRemoveAdmin(playerid, "кикнуть", params[0]);
    else if(IsAIP(params[1])) return 0;
	else if(CheckString(params[1], 1)) return AdminAntisliv(playerid, params[1]);
    new string[128];
	if(strlen(params[1])) format(string, sizeof(string), "Администратор %s кикнул игрока %s. Причина: %s", GetName(playerid), GetName(params[0]), params[1]);
	else format(string, sizeof(string), "Администратор %s кикнул игрока %s.", GetName(playerid), GetName(params[0]));
	SendAdminMessageToAll(COLOR_RED, string, params[0]);
	WriteLog("Kick",string);
    string_replace(params[1], ''', ' ');
	return 1;
}

CMD:skick(playerid, params[]) {
	IsAdmin(ADM_OLDER_ADMIN);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /skick [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID || params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(pInfo[playerid][pAdmin] <= pInfo[params[0]][pAdmin]) return AttemptRemoveAdmin(playerid, "тихо кикнуть", params[0]);
    new string[128];
	if(pInfo[playerid][pAdmin] < ADM_FOUNDER) {
		format(string, sizeof(string), "[A] %s[%d] тихо кикнул игрока %s[%d]", GetName(playerid), playerid, GetName(params[0]), params[0]);
		SendAdminMessage(COLOR_FADE1, string);
		WriteLog("Skick", string);
	}
	else {
	    format(string, sizeof(string), "Вы тихо кикнули игрока %s[%d]", GetName(params[0]), params[0]);
	    SendClientMessage(playerid, COLOR_YELLOW, string);
	    format(string, sizeof(string), "[A] %s[%d] тихо кикнул игрока %s[%d]", GetName(playerid), playerid, GetName(params[0]), params[0]);
		WriteLog("Skick", string);
	}
	return 1;
}
CMD:stats(playerid, params[])
{
	IsAdmin(ADM_HELPER);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /stats [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	ShowPlayerStatsDialog(playerid, params[0]);
	SetPVarInt(playerid, "checkstats", params[0]);
	return 1;
}

CMD:setstats(playerid, params[])
{
	if(GetString(GetName(playerid), NAME_FULL_ACCESS_1) || GetString(GetName(playerid), NAME_FULL_ACCESS_2) || GetString(GetName(playerid), NAME_FULL_ACCESS_3) || GetString(GetName(playerid), NAME_FULL_ACCESS_4))
	{
		if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
		else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setstats [id игрока]");
		else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
		else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
		edit_stats_ID[playerid] = params[0];
		ShowPlayerDialog(playerid, dUcpAdmin, DIALOG_STYLE_LIST, GetName(params[0]), "Ник\nУровень\nОпыт\nПол\nИгральные фишки\nРабота", "Принять", "Отмена");
	}
	return 1;
}

CMD:sban(playerid, params[])
{
	IsAdmin(ADM_OLDER_ADMIN);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "dds[32]", params[0], params[1], params[2])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /sban [id игрока] [кол-во дней] [причина]");
	else if(params[0] == INVALID_PLAYER_ID || params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
    else if(pInfo[playerid][pAdmin] <= pInfo[params[0]][pAdmin]) return AttemptRemoveAdmin(playerid, "тихо забанить", params[0]);
    else if(IsAIP(params[2])) return 0;
	else if(CheckString(params[2], 1)) return AdminAntisliv(playerid, params[2]);
	else if(!(1 <= params[1] <= 30)) return SendClientMessage(playerid, COLOR_GREY, "Количество дней от 1 до 30!");
    LeaveFractionPlayer(params[0]);
	new string[128];
    if(pInfo[playerid][pAdmin] < ADM_FOUNDER)
 	{
		format(string, sizeof(string), "[A] %s[%d] тихо забанил игрока %s на %d дней. Причина: %s", GetName(playerid), playerid, GetName(params[0]), params[1], params[2]);
		SendAdminMessage(COLOR_FADE1, string);
	}
	else
	{
	    format(string, sizeof(string), "Вы тихо забанили игрока %s на %d дней. Причина: %s", GetName(params[0]), params[1], params[2]);
	    SendClientMessage(playerid, COLOR_YELLOW, string);
	}
	mysql_query_string[0] = EOS;
	format(mysql_query_string, sizeof(mysql_query_string), "INSERT INTO "T_BANS" (name,whobanned,ip,bandate,time,unbandate,reason) VALUES ('%s','%s','%s',CURDATE(),%d,CURDATE() + INTERVAL %i DAY,'%s')", GetName(params[0]), GetName(playerid), pInfo[params[0]][pIP], params[1], params[1], params[2]);
	mysql_tquery(dbHandle, mysql_query_string, "", "");
	Kick(params[0]);
	return 1;
}

CMD:getip(playerid, params[])
{
	IsAdmin(ADM_OLDER_MODER);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /getip [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(CheckExceptionName(GetName(params[0]))) return 0;
	new string[128];
	format(string, sizeof(string), "[%s] IP: %s - RegIP: %s - LastIP: %s", GetName(params[0]), pInfo[params[0]][pIP], pInfo[params[0]][pRegIP], pInfo[params[0]][pLastIP]);
	SendClientMessage(playerid, COLOR_YELLOW, string);
	return 1;
}

CMD:lip(playerid, params[])
{
    IsAdmin(ADM_OLDER_MODER);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(isnull(params)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /lip [ip адрес]");
    new country[64], city[64];
	GetIPCountry(params, country, sizeof(country));
	GetIPCity(params, city, sizeof(city));
	stringer[0] = EOS;
	new temp[200];
	format(temp, sizeof(temp), "{63BD4E}%s (%s %s)\n", params, country, city);
	strcat(stringer, temp);
	strcat(stringer, "{EAD86A}Ник\t\t\tДеньги\tБанк\t\tУровень\tID\n\n");
	new playerip[16];
	foreach(new i : Player)
	{
  	    if(i == playerid || !gPlayerLogged[i]) continue;
        GetPlayerIp(i, playerip, sizeof(playerip));
        if(!GetString(playerip, params)) continue;
        format(stringer, sizeof(stringer), "%s{FFFFFF}%s\t\t%d$\t%d$\t%d\t\t%d\n", stringer, GetName(i), pInfo[i][pCash], pInfo[i][pBank], pInfo[i][pLevel], pInfo[i][pID]);
	}
	ShowPlayerDialog(playerid, dNull, DIALOG_STYLE_MSGBOX, " ", stringer, "Закрыть", "");
	return 1;
}

CMD:ban(playerid, params[])
{
    IsAdmin(ADM_ADMIN);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "ddS()[32]", params[0], params[1], params[2])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /ban [id игрока] [кол-во дней] [причина]");
	else if(params[0] == INVALID_PLAYER_ID || params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(pInfo[playerid][pAdmin] <= pInfo[params[0]][pAdmin]) return AttemptRemoveAdmin(playerid, "забанить", params[0]);
    else if(IsAIP(params[2])) return 0;
	else if(CheckString(params[2], 1)) return AdminAntisliv(playerid, params[2]);
	else if(!(1 <= params[1] <= 30)) return SendClientMessage(playerid, COLOR_GREY, "Количество дней от 1 до 30!");
	LeaveFractionPlayer(params[0]);
	new string[144];
	if(strlen(params[2])) format(string, sizeof(string), "Администратор %s забанил игрока %s на %d дней. Причина: %s", GetName(playerid), GetName(params[0]), params[1], params[2]);
	else format(string, sizeof(string), "Администратор %s забанил игрока %s на %d дней.", GetName(playerid), GetName(params[0]), params[1]);
	SendAdminMessageToAll(COLOR_RED, string, params[0]);
    string_replace(params[2], ''', ' ');
	mysql_query_string[0] = EOS;
	format(mysql_query_string, sizeof(mysql_query_string), "INSERT INTO "T_BANS" (name,whobanned,ip,bandate,time,unbandate,reason) VALUES ('%s','%s','%s',CURDATE(),%d,CURDATE() + INTERVAL %i DAY,'%s')", GetName(params[0]), GetName(playerid), pInfo[params[0]][pIP], params[1], params[1], params[2]);
	mysql_tquery(dbHandle, mysql_query_string, "", "");
	AdminInfo[playerid][admBaned]++;
	if(strlen(params[2])) strmid(AdminInfo[playerid][admBanedReason], params[2], 0, strlen(params[2]), 32);
	else strmid(AdminInfo[playerid][admBanedReason], "None", 0, strlen("None"), 32);
	mysql_query_string[0] = EOS;
	format(mysql_query_string, 200, "UPDATE "T_ADMIN" SET baned = %i, baned_reason = '%s' WHERE admid = %i LIMIT 1", AdminInfo[playerid][admBaned], AdminInfo[playerid][admBanedReason], AdminInfo[playerid][admID]);
	mysql_tquery(dbHandle, mysql_query_string, "", "");
	Kick(params[0]);
	return 1;
}

CMD:offban(playerid, params[])
{
	IsAdmin(ADM_OLDER_ADMIN);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	new playername[MAX_PLAYER_NAME], days, reason[32];
	if(sscanf(params, "s[24]is[32]", playername, days, reason)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /offban [ник игрока] [кол-во дней] [причина]");
	else if(CheckExceptionName(playername)) return AttemptRemoveChiefAdmin(playerid, "оффлайн забанить", playername);
    else if(IsAIP(reason)) return 0;
	else if(CheckString(reason, 1)) return AdminAntisliv(playerid, reason);
	else if(GetPlayerID(playername) != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок в сети, используйте команду /ban");
	else if(!(1 <= days <= 30)) return SendClientMessage(playerid, COLOR_GREY, "Количество дней от 1 до 30!");
    string_replace(reason, ''', ' ');
	mysql_query_string[0] = EOS;
	format(mysql_query_string, sizeof(mysql_query_string), "SELECT ip FROM "T_ACCOUNTS" WHERE name = '%s'", playername);
	mysql_tquery(dbHandle, mysql_query_string, "@OnPlayerOffban", "isis", playerid, playername, days, reason);
	return 1;
}

CMD:offwarn(playerid, params[])
{
	IsAdmin(ADM_ADMIN);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	new playername[MAX_PLAYER_NAME], reason[32];
	if(sscanf(params, "s[24]s[32]", playername, reason)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /offwarn [ник игрока] [причина]");
	else if(CheckExceptionName(playername)) return AttemptRemoveChiefAdmin(playerid, "оффлайн заварнить", playername);
    else if(IsAIP(reason)) return 0;
	else if(CheckString(reason, 1)) return AdminAntisliv(playerid, reason);
	else if(GetPlayerID(playername) != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок в сети, используйте команду /warn");
    string_replace(reason, ''', ' ');
	mysql_query_string[0] = EOS;
	format(mysql_query_string, sizeof(mysql_query_string), "SELECT warn,ip FROM "T_ACCOUNTS" WHERE name = '%s'", playername);
	mysql_tquery(dbHandle, mysql_query_string, "@OnPlayerOffwarn", "iss", playerid, playername, reason);
	return 1;
}

CMD:offunwarn(playerid, params[])
{
	IsAdmin(ADM_ADMIN);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	new playername[MAX_PLAYER_NAME];
	if(sscanf(params, "s[24]", playername)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /offunwarn [ник игрока]");
	else if(GetPlayerID(playername) != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок в сети, используйте команду /unwarn");
	mysql_query_string[0] = EOS;
	format(mysql_query_string, sizeof(mysql_query_string), "SELECT warn FROM "T_ACCOUNTS" WHERE name = '%s'", playername);
	mysql_tquery(dbHandle, mysql_query_string, "@OnPlayerOffunwarn", "is", playerid, playername);
	return 1;
}

CMD:warn(playerid, params[])
{
    IsAdmin(ADM_ADMIN);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "ds[32]", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /warn [id игрока] [причина]");
	else if(params[0] == INVALID_PLAYER_ID || params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(pInfo[playerid][pAdmin] <= pInfo[params[0]][pAdmin]) return AttemptRemoveAdmin(playerid, "заварнить", params[0]);
    else if(IsAIP(params[1])) return 0;
	else if(CheckString(params[1], 1)) return AdminAntisliv(playerid, params[1]);
	pInfo[params[0]][pTimeToLastWarn] = gettime();
	pInfo[params[0]][pWarn]++;
	new string[144];
	if(pInfo[params[0]][pWarn] > 2)
	{
		format(string, sizeof(string), "Администратор %s выдал предупреждение игроку %s [%i/3]. Причина: %s. Акк заблок. на 10 дней", GetName(playerid), GetName(params[0]), pInfo[params[0]][pWarn], params[1]);
        mysql_query_string[0] = EOS;
		format(mysql_query_string, sizeof(mysql_query_string), "INSERT INTO "T_BANS" (name,whobanned,ip,bandate,time,unbandate,reason) VALUES ('%s','%s','%s',CURDATE(),10,CURDATE() + INTERVAL 10 DAY,'%s')", GetName(params[0]), GetName(playerid), pInfo[params[0]][pIP], params[1]);
		mysql_tquery(dbHandle, mysql_query_string, "", "");
		pInfo[params[0]][pWarn] = 0;
	}
	else format(string, sizeof(string), "Администратор %s выдал предупреждение игроку %s [%i/3]. Причина: %s", GetName(playerid), GetName(params[0]), pInfo[params[0]][pWarn], params[1]);
	SendAdminMessageToAll(COLOR_RED, string, params[0]);
	LeaveFractionPlayer(params[0]);
	format(string, sizeof(string), "Администратор %s выдал предупреждение игроку %s [%i/3]. Причина: %s", GetName(playerid), GetName(params[0]), pInfo[params[0]][pWarn], params[1]);
	WriteLog("WarnLog",string);
	string_replace(params[1], ''', ' ');
	AdminInfo[playerid][admWarned]++;
	strmid(AdminInfo[playerid][admWarnedReason], params[1], 0, strlen(params[1]), 32);
	mysql_query_string[0] = EOS;
	format(mysql_query_string, 200, "UPDATE "T_ADMIN" SET warned = %i, warned_reason = '%s' WHERE admid = %i LIMIT 1", AdminInfo[playerid][admWarned], AdminInfo[playerid][admWarnedReason], AdminInfo[playerid][admID]);
	mysql_tquery(dbHandle, mysql_query_string, "", "");
	Kick(params[0]);
	return 1;
}

CMD:unwarn(playerid, params[])
{
	IsAdmin(ADM_ADMIN);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /unwarn [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(pInfo[params[0]][pWarn] == 0) return SendClientMessage(playerid, COLOR_GREY, "У данного игрока нету предупреждений!");
	pInfo[params[0]][pWarn]--;
	new string[128];
	format(string, sizeof(string), "Администратор %s[%d] снял Вам 1 предупреждение", GetName(playerid), playerid);
	SendClientMessage(params[0], COLOR_WHITE, string);
	format(string, sizeof(string), "[A] %s[%d] снял 1 предупреждение игроку %s[%d]", GetName(playerid), playerid, GetName(params[0]), params[0]);
	SendAdminMessage(COLOR_FADE1, string);
	return 1;
}

CMD:delacc(playerid, params[])
{
    IsAdmin(ADM_CHIEF);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	new playername[MAX_PLAYER_NAME];
	if(sscanf(params, "s[24]", playername) && !GetPVarInt(playerid, "deleting_account")) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /delacc [ник игрока]");
	else if(CheckExceptionName(playername)) return AttemptRemoveChiefAdmin(playerid, "удалить аккаунт", playername);
	else if(sscanf(params, "s[24]", playername) && !GetPVarInt(playerid, "deleting_account"))
	{
		DeletePVar(playerid, "deleting_account");
		SendClientMessage(playerid, COLOR_GREY, "Вы отменили удаление аккаунта");
		return 1;
	}
	mysql_query_string[0] = EOS;
	format(mysql_query_string, sizeof(mysql_query_string), "SELECT id,level FROM "T_ACCOUNTS" WHERE name = '%s'", playername);
	mysql_tquery(dbHandle, mysql_query_string, "@OnPlayerDeleteAccount", "is", playerid, playername);
	return 1;
}

CMD:unban(playerid, params[])
{
	IsAdmin(ADM_ADMIN);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	new playername[MAX_PLAYER_NAME];
	if(sscanf(params, "s[24]", playername)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /unban [имя игрока]");
    mysql_query_string[0] = EOS;
	format(mysql_query_string, sizeof(mysql_query_string), "SELECT * FROM "T_BANS" WHERE name = '%s'", playername);
	mysql_tquery(dbHandle, mysql_query_string, "@OnPlayerUnban", "is", playerid, playername);
	return 1;
}

CMD:banip(playerid, params[])
{
	IsAdmin(ADM_DEPUTY_CHIEF);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(isnull(params)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /banip [ip адрес]");
    new string[128], strip[25];
	if(pInfo[playerid][pAdmin] < ADM_FOUNDER)
	{
		format(string, sizeof(string), "[A] %s заблокировал IP адрес %s", GetName(playerid), params);
		SendAdminMessageEx(COLOR_YELLOW, string, ADM_DEPUTY_CHIEF);
	}
	else
	{
	    format(string, sizeof(string), "Вы заблокировали IP адрес %s", params);
		SendClientMessage(playerid, COLOR_YELLOW, string);
	}
	format(strip, sizeof(strip), "banip %s", params);
	SendRconCommand(strip);
	format(string, sizeof(string), "%s заблокировал IP адрес %s", GetName(playerid), params);
	WriteLog("Banip.log", string);
	return 1;
}

CMD:unbanip(playerid, params[])
{
	IsAdmin(ADM_DEPUTY_CHIEF);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(isnull(params)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /unbanip [ip адрес]");
	new string[128], strip[25];
	if(pInfo[playerid][pAdmin] < ADM_FOUNDER)
	{
		format(string, sizeof(string), "[A] %s разблокировал IP адрес %s", GetName(playerid), params);
		SendAdminMessageEx(COLOR_YELLOW, string, ADM_DEPUTY_CHIEF);
	}
	else
	{
	    format(string, sizeof(string), "Вы разблокировали IP адрес %s", params);
		SendClientMessage(playerid, COLOR_YELLOW, string);
	}
	format(strip, sizeof(strip), "unbanip %s", params);
	SendRconCommand(strip);
	format(string, sizeof(string), "%s разблокировал IP адрес %s", GetName(playerid), params);
	WriteLog("Banip.log", string);
	return 1;
}

CMD:unmute(playerid, params[])
{
    IsAdmin(ADM_MODER);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /unmute [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(pInfo[params[0]][pMuted] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не имеет бан чата!");
	pInfo[params[0]][pMuted] = 0;
	MysqlUpdatePlayerInt(params[0], "mute", pInfo[params[0]][pMuted]);
	new string[100];
	format(string, sizeof(string), "Администратор %s снял бан чата у %s",GetName(playerid),GetName(params[0]));
	SendAdminMessageToAll(COLOR_RED, string, params[0]);
	return 1;
}

CMD:mute(playerid, params[])
{
    IsAdmin(ADM_MODER);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "ddS()[32]", params[0], params[1], params[2])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /mute [id игрока] [время] [причина]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(pInfo[params[0]][pMuted] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже имеет бан чата!");
	else if(!(10 <= params[1] <= 180)) return SendClientMessage(playerid, COLOR_GREY, "Время от 10 до 180 минут!");
    else if(IsAIP(params[2])) return 0;
	else if(CheckString(params[2], 1)) return AdminAntisliv(playerid, params[2]);
	pInfo[params[0]][pMuted] = params[1]*60;
	new string[128];
	if(strlen(params[2])) format(string, sizeof(string), "Администратор %s выдал бан чата %s на %d минут. Причина: %s",GetName(playerid), GetName(params[0]), params[1], params[2]);
	else format(string, sizeof(string), "Администратор %s выдал бан чата %s на %d минут.",GetName(playerid), GetName(params[0]), params[1]);
	SendAdminMessageToAll(COLOR_RED, string, params[0]);
	string_replace(params[2], ''', ' ');
	AdminInfo[playerid][admMuted]++;
	if(strlen(params[2])) strmid(AdminInfo[playerid][admMutedReason], params[2], 0, strlen(params[2]), 32);
	else strmid(AdminInfo[playerid][admMutedReason], "None", 0, strlen("None"), 32);
	mysql_query_string[0] = EOS;
	format(mysql_query_string, 200, "UPDATE "T_ADMIN" SET muted = %i, muted_reason = '%s' WHERE admid = %i LIMIT 1", AdminInfo[playerid][admMuted], AdminInfo[playerid][admMutedReason], AdminInfo[playerid][admID]);
	mysql_tquery(dbHandle, mysql_query_string, "", "");
	return 1;
}

CMD:offmute(playerid, params[])
{
    IsAdmin(ADM_OLDER_MODER);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	new playername[MAX_PLAYER_NAME], time, reason[32];
	if(sscanf(params, "s[24]is[32]", playername, time, reason)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /offmute [ник игрока] [время] [причина]");
	else if(CheckExceptionName(playername)) return 0;
	else if(GetString(reason, "None")) return SendClientMessage(playerid, COLOR_GREY, "Укажите другую причину!");
    else if(IsAIP(reason)) return 0;
	else if(CheckString(reason, 1)) return AdminAntisliv(playerid, reason);
	else if(GetPlayerID(playername) != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок в сети, используйте команду /mute");
	else if(!(10 <= params[1] <= 180)) return SendClientMessage(playerid, COLOR_GREY, "Время от 10 до 180 минут!");
    mysql_query_string[0] = EOS;
	format(mysql_query_string, sizeof(mysql_query_string), "SELECT mute FROM "T_ACCOUNTS" WHERE name = '%s'", playername);
	mysql_tquery(dbHandle, mysql_query_string, "@OnPlayerOffmute", "isis", playerid, playername, time, reason);
	return 1;
}

CMD:offprison(playerid, params[])
{
    IsAdmin(ADM_OLDER_MODER);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	new playername[MAX_PLAYER_NAME], time, reason[32];
	if(sscanf(params, "s[24]is[32]", playername, time, reason)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /offprison [ник игрока] [время] [причина]");
	else if(CheckExceptionName(playername)) return 0;
	else if(GetString(reason, "None")) return SendClientMessage(playerid, COLOR_GREY, "Укажите другую причину!");
    else if(IsAIP(reason)) return 0;
	else if(CheckString(reason, 1)) return AdminAntisliv(playerid, reason);
	else if(GetPlayerID(playername) != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок в сети, используйте команду /prison");
	else if(!(1 <= time <= 180)) return SendClientMessage(playerid, COLOR_GREY, "Время от 1 до 180 минут!");
    mysql_query_string[0] = EOS;
	format(mysql_query_string, sizeof(mysql_query_string), "SELECT jail FROM "T_ACCOUNTS" WHERE name = '%s'", playername);
	mysql_tquery(dbHandle, mysql_query_string, "@OnPlayerOffprison", "isis", playerid, playername, time, reason);
	return 1;
}

CMD:prison(playerid, params[])
{
	IsAdmin(ADM_OLDER_MODER);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "dds[32]", params[0], params[1],  params[2])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /prison [id игрока] [время] [причина]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(pInfo[params[0]][pJail] == 4) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже находиться в деморгане!");
	else if(!(1 <= params[1] <= 180)) return SendClientMessage(playerid, COLOR_GREY, "Время от 1 до 180 минут!");
	ResetPlayerWeaponsEx(params[0]);
	pInfo[params[0]][pJailTime] = params[1]*60;
	if(pCuff[params[0]][pCuffer] != INVALID_PLAYER_ID)
	{
		new cuffer = pCuff[params[0]][pCuffer];
		SetPlayerSpecialAction(params[0], SPECIAL_ACTION_NONE);
		RemovePlayerAttachedObject(params[0], 0);
		pCuff[params[0]][pCuffer] = pCuff[params[0]][pCuffee] = pCuff[cuffer][pCuffee] = pCuff[cuffer][pCuffer] = INVALID_PLAYER_ID;
	}
	new string[128];
	format(string, sizeof(string), "Администратор %s посадил Вас в деморган (%s)", GetName(playerid), params[2]);
	SendClientMessage(params[0], COLOR_GREEN, string);
	ShowPlayerDialog(params[0], dNull, DIALOG_STYLE_MSGBOX, "{F04245}Деморган", "{FFFFFF}Запрещено нарушение RP режима, где персонаж не поступил бы подобным способом в реальной жизни", "Закрыть", "");
	format(string, sizeof(string), "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~JAILED: ~w~%d", pInfo[playerid][pJailTime]);
	GameTextForPlayer(params[0], string, 3000, 3);
	format(string, sizeof(string), "[A] %s[%i] посадил %s[%i] в деморган на %i минут (%s)", GetName(playerid), playerid, GetName(params[0]), params[0], params[1], params[2]);
	SendAdminMessage(COLOR_GRAD1, string);
	SetPlayerPos(params[0],5494.0488,1245.3721,23.1886);
	SetPlayerFacingAngle(params[0], 270.0000);
	SetPlayerInterior(params[0], 1);
	SetPlayerVirtualWorld(params[0], 1);
	pInfo[params[0]][pJail] = 4;
    mysql_query_string[0] = EOS;
	format(mysql_query_string, 200, "UPDATE "T_ACCOUNTS" SET jail = %i, jailtime = %i WHERE id = %i", pInfo[params[0]][pJail], pInfo[params[0]][pJailTime], pInfo[params[0]][pID]);
	mysql_tquery(dbHandle, mysql_query_string, "", "");
	return 1;
}

CMD:unprison(playerid, params[])
{
	IsAdmin(ADM_OLDER_MODER);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /unprison [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(pInfo[params[0]][pJail] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не находиться в деморгане!");
	pInfo[params[0]][pJailTime] = 1;
	MysqlUpdatePlayerInt(params[0], "jailtime", pInfo[params[0]][pJailTime]);
	ResetPlayerWeaponsEx(params[0]);
	new string[100];
	format(string, sizeof(string), "[A] %s[%i] выпустил из деморгана %s[%i]",GetName(playerid),playerid,GetName(params[0]),params[0]);
	SendAdminMessage(COLOR_GRAD1, string);
	SpawnPlayerEx(params[0]);
	return 1;
}

CMD:jail(playerid, params[])
{
    IsAdmin(ADM_OLDER_MODER);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "ddds[32]", params[0], params[1], params[2],  params[3])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /jail [id игрока] [номер тюрьмы (1-3)] [время] [причина]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(pInfo[params[0]][pJail] == 4) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже находиться в деморгане!");
	else if(pInfo[params[0]][pJail] != 0 && pInfo[params[0]][pJail] < 4) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже находиться в тюрьме!");
	else if(!(1 <= params[1] <= 3)) return SendClientMessage(playerid, COLOR_GREY, "Номер тюрьмы от 1 до 3!");
	else if(!(1 <= params[2] <= 180)) return SendClientMessage(playerid, COLOR_GREY, "Время от 1 до 180 минут!");
	ResetPlayerWeaponsEx(params[0]);
	pInfo[params[0]][pJailTime] = params[2]*60;
	pInfo[params[0]][pWanted] = 0;
	SetPlayerWantedLevel(params[0], pInfo[params[0]][pWanted]);
	if(pCuff[params[0]][pCuffer] != INVALID_PLAYER_ID)
	{
		new cuffer = pCuff[params[0]][pCuffer];
		SetPlayerSpecialAction(params[0], SPECIAL_ACTION_NONE);
		RemovePlayerAttachedObject(params[0], 0);
		pCuff[params[0]][pCuffer] = pCuff[params[0]][pCuffee] = pCuff[cuffer][pCuffee] = pCuff[cuffer][pCuffer] = INVALID_PLAYER_ID;
	}
	SetPlayerVirtualWorld(params[0], 1);
	new string[128];
	format(string, sizeof(string), "Администратор %s посадил Вас в тюрьму (%s)", GetName(playerid), params[3]);
	SendClientMessage(params[0], COLOR_GREEN, string);
	format(string, sizeof(string), "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~JAILED: ~w~%d", pInfo[playerid][pJailTime]);
	GameTextForPlayer(params[0], string, 3000, 3);
	format(string, sizeof(string), "[A] %s[%i] посадил в тюрьму %s[%i] на %i минут (%s)", GetName(playerid), playerid, GetName(params[0]), params[0], params[2], params[3]);
	SendAdminMessage(COLOR_GRAD1, string);
	switch(params[1])
	{
	    case 1:
	    {
		    SetPlayerPos(params[0],2210.1938,-505.2677,-7.4141, 1);
			SetPlayerInterior(params[0], 1);
			SetPlayerVirtualWorld(params[0], 1);
			pInfo[params[0]][pJail] = 1;
	    }
	    case 2:
	    {
		    SetPlayerPos(params[0],2210.1938,-505.2677,-7.4141, 1);
			SetPlayerInterior(params[0], 1);
			SetPlayerVirtualWorld(params[0], 2);
			pInfo[params[0]][pJail] = 2;
	    }
	    case 3:
	    {
		    SetPlayerPos(params[0],2210.1938,-505.2677,-7.4141, 1);
			SetPlayerInterior(params[0], 1);
			SetPlayerVirtualWorld(params[0], 3);
			pInfo[params[0]][pJail] = 3;
		}
	}
	mysql_query_string[0] = EOS;
	format(mysql_query_string, 200, "UPDATE "T_ACCOUNTS" SET jail = %i, jailtime = %i, wanted = 0 WHERE id = %i", pInfo[params[0]][pJail], pInfo[params[0]][pJailTime], pInfo[params[0]][pID]);
	mysql_tquery(dbHandle, mysql_query_string, "", "");
	return 1;
}

CMD:unjail(playerid, params[])
{
    IsAdmin(ADM_OLDER_MODER);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /unjail [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(pInfo[params[0]][pJail] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не находиться в тюрьме!");
	pInfo[params[0]][pJailTime] = 1;
	MysqlUpdatePlayerInt(params[0], "jailtime", pInfo[params[0]][pJailTime]);
	ResetPlayerWeaponsEx(params[0]);
	new string[100];
	format(string, sizeof(string), "[A] %s[%i] выпустил из тюрьмы %s[%i]",GetName(playerid),playerid,GetName(params[0]),params[0]);
	SendAdminMessage(COLOR_GRAD1, string);
	SpawnPlayerEx(playerid);
	return 1;
}

CMD:id(playerid, params[])
{
	if(isnull(params)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /id [id игрока / часть имени]");
	new string[100];
	if(!sscanf(params, "u", params[0]))
	{
		if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
		else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
		SendClientMessage(playerid, COLOR_YELLOW, "Игроки онлайн:");
		format(string, sizeof(string), "%s [%i] [№%i]", GetName(params[0]), params[0], pInfo[params[0]][pID]);
		SendClientMessage(playerid, COLOR_WHITE, string);
	}
	else
	{
		new ids = 0;
		SendClientMessage(playerid, COLOR_YELLOW, "Игроки онлайн:");
	    foreach(new i : Player)
		{
			if(!gPlayerLogged[i]) continue;
			if(strfind(GetName(i), params[0], true) != -1)
			{
				format(string, sizeof(string), "%s [%i] [№%i]", GetName(i), i, pInfo[i][pID]);
			    SendClientMessage(playerid, COLOR_WHITE, string);
			    ids++;
			}
		}
		if(ids == 0) SendClientMessage(playerid, COLOR_GREY, "Не найдено");
	}
	return 1;
}

CMD:doncheck(playerid, params[])
{
	IsAdmin(ADM_FOUNDER);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	new playername[MAX_PLAYER_NAME];
	if(sscanf(params, "s[24]", playername)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /doncheck [ник игрока]");
	mysql_query_string[0] = EOS;
	format(mysql_query_string, sizeof(mysql_query_string), "SELECT credits,totalcredits FROM "T_ACCOUNTS" WHERE name = '%s'", playername);
	mysql_tquery(dbHandle, mysql_query_string, "@OnPlayerDonateCheck", "is", playerid, playername);
	return 1;
}

@OnPlayerDonateCheck(playerid, name[]);
@OnPlayerDonateCheck(playerid, name[]) {
    #if MYSQL_R41_2 == true
	new rows;
	cache_get_row_count(rows);
	if(!rows) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден!");
	if(payment_system!=1) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Не удалось просмотреть информацию по донат счёту у данного игрока. Обратитесь к разработчику.");
    new credits, totalcredits;
	cache_get_value_index_int(0, 0, credits);
	cache_get_value_index_int(0, 1, totalcredits);
	SetPVarInt(playerid, "check_credits", credits);
	SetPVarInt(playerid, "check_tcredits", totalcredits);
	SetPVarString(playerid, "check_name", name);
    mysql_query_string[0] = EOS;
	format(mysql_query_string, 200, "SELECT * FROM "T_UNITPAY" WHERE account = '%s' AND status = 2 ORDER BY dateComplete DESC LIMIT 0,20;", name);
	mysql_tquery(dbHandle, mysql_query_string, "@unitpay_callback", "dd", playerid, 5);
	#else

	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден!");
	if(payment_system!=1) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Не удалось просмотреть информацию по донат счёту у данного игрока. Обратитесь к разработчику");
	new credits, totalcredits;
	credits = cache_get_row_int(0, 0);
	totalcredits = cache_get_row_int(0, 1);
	SetPVarInt(playerid, "check_credits", credits);
	SetPVarInt(playerid, "check_tcredits", totalcredits);
	SetPVarString(playerid, "check_name", name);
    mysql_query_string[0] = EOS;
	format(mysql_query_string, 200, "SELECT * FROM "T_UNITPAY" WHERE account = '%s' AND status = 2 ORDER BY dateComplete DESC LIMIT 0,20;", name);
	mysql_tquery(dbHandle, mysql_query_string, "@unitpay_callback", "dd", playerid, 5);
	#endif

	return 1;
}

CMD:agun(playerid, params[])
{
	IsAdmin(ADM_CHIEF);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "ddd", params[0],params[1],params[2])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /agun [id игрока] [id оружия] [кол-во патронов]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if((params[1] < 1 || params[1] > 47) || params[1] == 27 || params[1] == 1 || params[1] == 2 || params[1] == 17 || params[1] == 19 || params[1] == 4
		|| params[1] == 20 || params[1] == 21 || params[1] == 35 || params[1] == 36 || params[1] == 39 || params[1] == 40 || params[1] == 44 || params[1] == 45
		|| params[1] == 38 || params[1] == 32 || params[1] == 28 || params[1] == 18 || params[1] == 37 || params[1] == 16 || params[1] == 9) return SendClientMessage(playerid, COLOR_GREY, "ID оружия от 1 до 47!");
	else if(!(1 <= params[2] <= 500)) return SendClientMessage(playerid, COLOR_GREY, "Количество патронов от 1 до 500!");
	GivePlayerWeaponEx(params[0], params[1], params[2]);
	SendMes(playerid, COLOR_LIME, "Вы установили оружие игроку %s",GetName(params[0]));
	return 1;
}

CMD:deletegun(playerid, params[])
{
	IsAdmin(ADM_DEPUTY_CHIEF);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /deletegun [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	ResetPlayerWeaponsEx(params[0]);
	SendMes(playerid, COLOR_YELLOW, "Вы обнулили оружие игроку %s",GetName(params[0]));
	SendMes(params[0], COLOR_GREEN, "Администратор %s обнулил ваше оружие",GetName(playerid));
	return 1;
}
CMD:amoney(playerid, params[]) {
	new string[128];
	if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "dd", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /amoney [ID игрока] [Количество]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(!(1 <= params[1] <= 250000)) return SendClientMessage(playerid, COLOR_GREY, "Количество денег от 1 до 250000!");
	TransferMoney(-1,params[0],params[1]);
	SendMes(playerid, COLOR_LIME, "Вы установили денег игроку: %s", GetName(params[0]));
	SendMes(params[0], COLOR_YELLOW, "[Информация] {FFFFFF}Администратор %s выписал Вам чек на {63BD4E}%d$", GetName(playerid),params[1]);
	SendClientMessage(params[0], COLOR_YELLOW, "[Информация] {FFFFFF}Деньги были зачислены на ваш баланс");
	format(string, sizeof(string), "Администратор %s выдал %d$ игроку %s", GetName(playerid),params[1],GetName(params[0]));
	WriteLog("GiveMoney",string);
	return 1;
}

CMD:givemoney(playerid, params[]) {
	if(GetString(GetName(playerid), NAME_FULL_ACCESS_1) || GetString(GetName(playerid), NAME_FULL_ACCESS_2) || GetString(GetName(playerid), NAME_FULL_ACCESS_3) || GetString(GetName(playerid), NAME_FULL_ACCESS_4))
	{
	    new string[128];
		if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
		else if(sscanf(params, "dd", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /givemoney [id игрока] [кол-во денег]");
		else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
		else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
		else if(!(1 <= params[1] <= 25000000)) return SendClientMessage(playerid, COLOR_GREY, "Количество денег от 1 до 25000000!");
	    TransferMoney(-1,params[0],params[1]);
		SendMes(playerid, COLOR_LIME, "Вы установили денег игроку: %s", GetName(params[0]));
		SendMes(params[0], COLOR_YELLOW, "[Информация] {FFFFFF}Администратор %s выписал Вам чек на {63BD4E}%d$", GetName(playerid),params[1]);
		SendClientMessage(params[0], COLOR_YELLOW, "[Информация] {FFFFFF}Деньги были зачислены на ваш баланс");
		format(string, sizeof(string), "Администратор %s выдал %d$ игроку %s", GetName(playerid),params[1],GetName(params[0]));
		WriteLog("GiveMoney",string);
	}
	return 1;
}
CMD:givecredits(playerid, params[])
{
	if(GetString(GetName(playerid), NAME_FULL_ACCESS_1) || GetString(GetName(playerid), NAME_FULL_ACCESS_2) || GetString(GetName(playerid), NAME_FULL_ACCESS_3) || GetString(GetName(playerid), NAME_FULL_ACCESS_4))
	{
		if(sscanf(params, "dd", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /givecredits [id игрока] [кол-во]");
		else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
		else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
		else if(!(1 <= params[1] <= 50000)) return SendClientMessage(playerid, COLOR_GREY, "Неверное кол-во кредитов. Можно установить от 1 до 50.000");
		pInfo[params[0]][pCredits] += params[1];
		pInfo[params[0]][pTotalCredits] += params[1];
		new string[128];
		format(string, sizeof(string), "Вы перевели %i кредитов на счёт игроку %s", params[1], GetName(params[0]));
        SendClientMessage(playerid, COLOR_GREEN, string);
		format(string, sizeof(string), "[Информация] {FFFFFF}На Ваш аккаунт поступили денежные средства", params[1]);
		SendClientMessage(params[0], COLOR_YELLOW, string);
		SendClientMessage(params[0], COLOR_YELLOW, "[Информация] {FFFFFF}Чтобы ими воспользоваться, введите /donate");
		format(string, sizeof(string), "%s перевёл %d кредитов на счёт игроку %s", GetName(playerid), params[1], GetName(params[0]));
		WriteLog("GiveCredits",string);
		format(string, sizeof(string), "UPDATE "T_ACCOUNTS" SET credits = %d, totalcredits = %d WHERE id = %d", pInfo[playerid][pCredits], pInfo[playerid][pTotalCredits], pInfo[playerid][pID]);
		mysql_tquery(dbHandle, string, "", "");
		PlayerPlaySound(params[0], 6401, 0.0, 0.0, 0.0);
	}
	return 1;
}

CMD:resetmoney(playerid, params[])
{
	if(GetString(GetName(playerid), NAME_FULL_ACCESS_1) || GetString(GetName(playerid), NAME_FULL_ACCESS_2) || GetString(GetName(playerid), NAME_FULL_ACCESS_3) || GetString(GetName(playerid), NAME_FULL_ACCESS_4))
	{
		IsAdmin(ADM_FOUNDER);
		else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
		else if(sscanf(params, "dd", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /resetmoney [id игрока] [тип] (1 - наличка, 2 - банк)");
		else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
		else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
		else if(!(1 <= params[1] <= 2)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /resetmoney [id игрока] [тип] (1 - наличка, 2 - банк)");
        new string[128];
		if(params[1] == 1)
		{
			ResetPlayerMoneyEx(params[0]);
			format(string, sizeof(string), "Вы обнулили {AFAFAF}наличные {3399FF}игроку %s", GetName(params[0]));
		}
		else
		{
		    pInfo[params[0]][pBank] = 0;
		    format(string, sizeof(string), "Вы обнулили {AFAFAF}банковский счёт {3399FF}игроку %s", GetName(params[0]));
		}
		SendClientMessage(playerid, COLOR_BLUE, string);
	}
	return 1;
}

CMD:slap(playerid, params[]) {
    IsAdmin(ADM_OLDER_MODER);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /slap [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	SlapPlayer(params[0]);
	new string[128];
	if(pInfo[playerid][pAdmin] < ADM_FOUNDER) {
		format(string, sizeof(string), "[A] %s[%d] подкинул игрока %s[%d]", GetName(playerid), playerid, GetName(params[0]), params[0]);
		SendAdminMessage(COLOR_FADE1, string);
	}
	else {
	    format(string, sizeof(string), "Вы подкинули игрока %s[%d]", GetName(params[0]), params[0]);
	    SendClientMessage(playerid, COLOR_YELLOW, string);
	}
	return 1;
}

CMD:alogin(playerid, params[])
{
    if(GetPVarInt(playerid, "alogin_timer") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Не флуди");
    else if(gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы уже авторизовались как администратор!");
 	new string[128];
	format(string, sizeof(string), "SELECT * FROM "T_ADMIN" WHERE name = '%s'", GetName(playerid));
	mysql_tquery(dbHandle, string, "@Alogin", "is", playerid, GetName(playerid));
 	SetPVarInt(playerid, "alogin_timer", gettime()+3);
 	return 1;
}

CMD:skin(playerid, params[])
{
	IsAdmin(ADM_OLDER_ADMIN);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "dd", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /skin [id игрока] [id внешности]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(!(1 <= params[1] <= 299)) return SendClientMessage(playerid, COLOR_GREY, "Неверный id внешности. Можно установить от 1 до 299");
	SetPlayerSkin(params[0], params[1]);
	new string[128];
	format(string, sizeof(string), "Администратор %s выдал Вам временный скин", GetName(playerid));
	SendClientMessage(params[0], COLOR_LIME, string);
	format(string, sizeof(string), "Вы выдали временный скин [%i] игроку %s", params[1], GetName(params[0]));
	SendClientMessage(playerid, COLOR_LIME, string);
	format(string, sizeof(string), "[A] %s[%i] выдал временный скин %s[%d] (%i)", GetName(playerid), playerid, GetName(params[0]), params[0], params[1]);
	SendAdminMessage(COLOR_GRAD1, string);
	return 1;
}

CMD:askin(playerid, params[])
{
	IsAdmin(ADM_FOUNDER);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "dd", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /askin [id игрока] [id внешности]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(!(1 <= params[1] <= 299)) return SendClientMessage(playerid, COLOR_GREY, "Неверный id внешности. Можно установить от 1 до 299");
	if(pInfo[params[0]][pMember])
	{
		pInfo[params[0]][pMemberSkin] = params[1];
		SetPlayerSkin(params[0], pInfo[params[0]][pMemberSkin]);
		MysqlUpdatePlayerInt(params[0], "memberskin", pInfo[params[0]][pMemberSkin]);
	}
	else
	{
		pInfo[params[0]][pModel] = params[1];
		SetPlayerSkin(params[0], pInfo[params[0]][pModel]);
		MysqlUpdatePlayerInt(params[0], "model", pInfo[params[0]][pModel]);
	}
	new string[128];
	format(string, sizeof(string), "Администратор %s выдал Вам статический скин", GetName(playerid));
	SendClientMessage(params[0], COLOR_LIME, string);
	format(string, sizeof(string), "Вы выдали статический скин [%i] игроку %s", params[1], GetName(params[0]));
	SendClientMessage(playerid, COLOR_LIME, string);
	return 1;
}

CMD:exit(playerid, params[])
{
	if(TextResetCMD[playerid] > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Не флуди");
	SetTimerEx("@PickupBack",3000,0,"i",playerid);
	pickupentered[playerid] = 1;
	new a = GetPVarInt(playerid, "UseHouse"), _c = HouseInfo[a][hClass], _i = HouseInfo[a][hInt];
	if(IsPlayerInRangeOfPoint(playerid, 3.0, -1658.8940,1541.3593,835.6316) && GetPlayerVirtualWorld(playerid) == HouseInfo[a][hID])
	{
		SetPlayerPos(playerid, HintsInfo[_c][_i][hiExitX], HintsInfo[_c][_i][hiExitY], HintsInfo[_c][_i][hiExitZ], 1);
        SetPlayerFacingAngle(playerid, HintsInfo[_c][_i][hiExitFA]);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, HintsInfo[_c][_i][hiInt]);
		SetPlayerVirtualWorld(playerid, HouseInfo[a][hID]);
	}
	if(HouseInfo[a][hGarage])
	{
		if(IsPlayerInRangeOfPoint(playerid, 6.0, HintsInfo[_c][_i][hiExitX], HintsInfo[_c][_i][hiExitY], HintsInfo[_c][_i][hiExitZ]) && GetPlayerVirtualWorld(playerid) == HouseInfo[a][hID])
		{
			ShowPlayerDialog(playerid, dHome+1, DIALOG_STYLE_LIST, "{FFCC00}Куда Вы хотите выйти?", "- На улицу\n- В гараж", "Ок", "Закрыть");
		}
	}
	else
	{
		if(IsPlayerInRangeOfPoint(playerid, 6.0, HintsInfo[_c][_i][hiExitX], HintsInfo[_c][_i][hiExitY], HintsInfo[_c][_i][hiExitZ]) && GetPlayerVirtualWorld(playerid) == HouseInfo[a][hID])
		{
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerPos(playerid, HouseInfo[a][hEntr][0], HouseInfo[a][hEntr][1], HouseInfo[a][hEntr][2]);
		}
	}
	return 1;
}

CMD:skill(playerid, params[])
{
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /skill [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(!IsPlayerStream(8.0, playerid, params[0], 1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
	else if(ZapretDice[params[0]] == 1) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У игрока уже есть одно активное предложение!");
    else if(pTemp[playerid][pSelectPlayer] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас уже есть одно активное предложение. Чтобы отказаться от него введите /cancel");
	else if(pTemp[params[0]][pTargetPlayer] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У игрока уже есть одно активное предложение!");
	if(params[0] == playerid)
	{
		new Stats_Level[8][30];
	    if(pInfo[playerid][pGunSkill][0] <= 10) Stats_Level[0] = "{F04245}[Очень плохо]";
	    else if(pInfo[playerid][pGunSkill][0] <= 30) Stats_Level[0] = "{F04245}[Плохо]";
	    else if(pInfo[playerid][pGunSkill][0] <= 70) Stats_Level[0] = "{63BD4E}[Нормально]";
	    else if(pInfo[playerid][pGunSkill][0] <= 90) Stats_Level[0] = "{FF9900}[Хорошо]";
	    else Stats_Level[0] = "{EAD86A}[Отлично]";
	    if(pInfo[playerid][pGunSkill][1] <= 10) Stats_Level[1] = "{F04245}[Очень плохо]";
	    else if(pInfo[playerid][pGunSkill][1] <= 30) Stats_Level[1] = "{F04245}[Плохо]";
	    else if(pInfo[playerid][pGunSkill][1] <= 70) Stats_Level[1] = "{63BD4E}[Нормально]";
	    else if(pInfo[playerid][pGunSkill][1] <= 90) Stats_Level[1] = "{FF9900}[Хорошо]";
	    else Stats_Level[1] = "{EAD86A}[Отлично]";
	    if(pInfo[playerid][pGunSkill][2] <= 10) Stats_Level[2] = "{F04245}[Очень плохо]";
	    else if(pInfo[playerid][pGunSkill][2] <= 30) Stats_Level[2] = "{F06245}[Плохо]";
	    else if(pInfo[playerid][pGunSkill][2] <= 70) Stats_Level[2] = "{63BD4E}[Нормально]";
	    else if(pInfo[playerid][pGunSkill][2] <= 90) Stats_Level[2] = "{FF9900}[Хорошо]";
	    else Stats_Level[2] = "{EAD86A}[Отлично]";
	    if(pInfo[playerid][pGunSkill][3] <= 10) Stats_Level[3] = "{F04245}[Очень плохо]";
	    else if(pInfo[playerid][pGunSkill][3] <= 30) Stats_Level[3] = "{F04245}[Плохо]";
	    else if(pInfo[playerid][pGunSkill][3] <= 70) Stats_Level[3] = "{63BD4E}[Нормально]";
	    else if(pInfo[playerid][pGunSkill][3] <= 90) Stats_Level[3] = "{FF9900}[Хорошо]";
	    else Stats_Level[3] = "{EAD86A}[Отлично]";
	    if(pInfo[playerid][pGunSkill][4] <= 10) Stats_Level[4] = "{F04245}[Очень плохо]";
	    else if(pInfo[playerid][pGunSkill][4] <= 30) Stats_Level[4] = "{F04245}[Плохо]";
	    else if(pInfo[playerid][pGunSkill][4] <= 70) Stats_Level[4] = "{63BD4E}[Нормально]";
	    else if(pInfo[playerid][pGunSkill][4] <= 90) Stats_Level[4] = "{FF9900}[Хорошо]";
	    else Stats_Level[4] = "{EAD86A}[Отлично]";
	    if(pInfo[playerid][pGunSkill][5] <= 10) Stats_Level[5] = "{F04245}[Очень плохо]";
	    else if(pInfo[playerid][pGunSkill][5] <= 30) Stats_Level[5] = "{F04245}[Плохо]";
	    else if(pInfo[playerid][pGunSkill][5] <= 70) Stats_Level[5] = "{63BD4E}[Нормально]";
	    else if(pInfo[playerid][pGunSkill][5] <= 90) Stats_Level[5] = "{FF9900}[Хорошо]";
	    else Stats_Level[5] = "{EAD86A}[Отлично]";
	    if(pInfo[playerid][pGunSkill][6] <= 10) Stats_Level[6] = "{F04245}[Очень плохо]";
	    else if(pInfo[playerid][pGunSkill][6] <= 30) Stats_Level[6] = "{F04245}[Плохо]";
	    else if(pInfo[playerid][pGunSkill][6] <= 70) Stats_Level[6] = "{63BD4E}[Нормально]";
	    else if(pInfo[playerid][pGunSkill][6] <= 90) Stats_Level[6] = "{FF9900}[Хорошо]";
	    else Stats_Level[6] = "{EAD86A}[Отлично]";
	    if(pInfo[playerid][pGunSkill][7] <= 10) Stats_Level[7] = "{F04245}[Очень плохо]";
	    else if(pInfo[playerid][pGunSkill][7] <= 30) Stats_Level[7] = "{F04245}[Плохо]";
	    else if(pInfo[playerid][pGunSkill][7] <= 70) Stats_Level[7] = "{63BD4E}[Нормально]";
	    else if(pInfo[playerid][pGunSkill][7] <= 90) Stats_Level[7] = "{FF9900}[Хорошо]";
	    else Stats_Level[7] = "{EAD86A}[Отлично]";
	    //
	    new status[50], count[40], target;
		if(pInfo[playerid][pTruckSkill] >= TRUCK_LEVEL_3) { status = "{FF9900}[Опытный работник]"; target = 0; }
		if(pInfo[playerid][pTruckSkill] >= TRUCK_LEVEL_2) { status = "{EAD86A}[Стабильный работник]"; target = TRUCK_LEVEL_3; }
		else { status = "{63BD4E}[Начинающий работник]"; target = TRUCK_LEVEL_2; }
		if(!target) format(count, sizeof(count), "%d", pInfo[playerid][pTruckSkill]);
		else format(count, sizeof(count), "%d/%d", pInfo[playerid][pTruckSkill], target);
		//
	    stringer[0] = EOS;
		format(stringer, sizeof(stringer), "\
		{3399FF}Владение оружием\n\n\
		{FFFFFF}Colt 45:\t\t%d%%\t%s\n\
		{FFFFFF}Silenced Pistol:\t%d%%\t%s\n\
		{FFFFFF}Desert Eeagle:\t\t%d%%\t%s\n\
		{FFFFFF}Shotgun:\t\t%d%%\t%s\n\
		{FFFFFF}UZI:\t\t\t%d%%\t%s\n\
		{FFFFFF}MP5:\t\t\t%d%%\t%s\n\
		{FFFFFF}AK47:\t\t\t%d%%\t%s\n\
		{FFFFFF}M4:\t\t\t%d%%\t%s\n\n\
		{3399FF}Опыт работы\n\n\
		{FFFFFF}- Дальнобойщик:\n\
		{FFFFFF}%s кг\t%s",
		pInfo[playerid][pGunSkill][6], Stats_Level[6],
		pInfo[playerid][pGunSkill][0], Stats_Level[0],
		pInfo[playerid][pGunSkill][1], Stats_Level[1],
		pInfo[playerid][pGunSkill][2], Stats_Level[2],
		pInfo[playerid][pGunSkill][7], Stats_Level[7],
		pInfo[playerid][pGunSkill][3], Stats_Level[3],
		pInfo[playerid][pGunSkill][4], Stats_Level[4],
		pInfo[playerid][pGunSkill][5], Stats_Level[5],
		count, status);
		ShowPlayerDialog(params[0], dNull, DIALOG_STYLE_MSGBOX, "{FFCC00}Навыки игрока", stringer, "Закрыть", "");
        new string[56];
		format(string, sizeof(string), "показал%s свои навыки %s", (pInfo[playerid][pSex]==1)?(""):("а"), GetName(params[0]));
		MeAction(playerid, string);
	}
	else
	{
	    SendMes(playerid, COLOR_BLUE, "Вы предлагаете %s показать свои навыки", GetName(params[0]));
		SendMes(params[0], COLOR_BLUE, "%s предлагает Вам показать свои навыки", GetName(playerid));
		SendClientMessage(params[0], COLOR_WHITE, PlayerAccess);
  		pTemp[playerid][pSelectPlayer] = params[0];
		pTemp[params[0]][pTargetPlayer] = playerid;
		pTemp[params[0]][pTargetAction] = ACTION_SHOW_SKILL;
	}
	return 1;
}

CMD:smoke(playerid, params[])
{
    if(IsPlayerInDynamicArea(playerid, AreaInfo[arGreenZone][16])) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] В данном месте вы не можете курить!");
	else if(pInfo[playerid][pCiggare] == 0) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас нет сигарет, купить их можно в магазине 24/7");
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_SMOKE_CIGGY);
	if(pInfo[playerid][pHunger] <= 93) GiveHunger(playerid, 7);
	else SetHunger(playerid, 100);
	pInfo[playerid][pCiggare]--;
	MysqlUpdatePlayerInt(playerid, "ciggare", pInfo[playerid][pCiggare]);
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) ApplyAnimation(playerid,"SMOKING","M_smk_drag",4.1,0,0,0,0,0,1);
	if(pInfo[playerid][pSex] == 1) MeAction(playerid, "достал сигарету и скурил её");
	else MeAction(playerid, "достала сигарету и скурила её");
	return 1;
}

CMD:sprunk(playerid, params[])
{
    if(pInfo[playerid][pSprunk] == 0) return SendClientMessage(playerid,COLOR_GREY,"[Ошибка] У вас нет лимонада, купить его можно в магазине 24/7");
    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK);
	if(pInfo[playerid][pHunger] <= 90) GiveHunger(playerid, 10);
	else SetHunger(playerid, 100);
	pInfo[playerid][pSprunk]--;
	MysqlUpdatePlayerInt(playerid, "sprunk", pInfo[playerid][pSprunk]);
	if(pInfo[playerid][pSex] == 1) MeAction(playerid, "достал банку газировки и открыл ее");
	else MeAction(playerid, "достала банку газировки и открыла ее");
	PlayerPlaySound(playerid,42600,0.0,0.0,0.0);
	return 1;
}

CMD:usecanister(playerid, params[])
{
    if(!pInfo[playerid][pRepcar][0]) return SendClientMessage(playerid,COLOR_GREY,"У вас нет канистры, купите её на ближайшей АЗС!");
    else if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в транспорте!");
    new vehicleid = GetPVarInt(playerid,"VehicleEnters");
    new Float:tank = VehStats[GetVehicleModel(vehicleid)-400][vMaxFuel];
	if(VehicleInfo[vehicleid][vFuel] >= tank) return SendClientMessage(playerid, COLOR_GREY, "Ваш бак полон!");
	if(VehicleInfo[vehicleid][vFuel]+20.0 >= 100.0) VehicleInfo[vehicleid][vFuel] = tank;
	else VehicleInfo[vehicleid][vFuel] += 20.0;
	pInfo[playerid][pRepcar][0]--;
	SendClientMessage(playerid, COLOR_BLUE, "Вы использовали канистру");
	return 1;
}

CMD:usetools(playerid, params[])
{
    if(!pInfo[playerid][pRepcar][1]) return SendClientMessage(playerid, COLOR_GREY, "У вас нет набора инструментов, купите его на ближайшей АЗС!");
    else if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в транспорте!");
    new vehicleid = GetPVarInt(playerid,"VehicleEnters"), Float:vhealth;
    GetVehicleHealth(vehicleid, vhealth);
	if(vhealth >= 600.0) return SendClientMessage(playerid, COLOR_GREY, "Набором инструментов т/с можно отремонтировать только на 60%%. Для полного ремонта вызывайте механиков");
	if(vhealth+600.0 > 600.0) SetVehicleHealth(vehicleid, 600.0);
	else SetVehicleHealth(vehicleid, 600.0);
	new panels, tires, doors, lights;
    GetVehicleDamageStatus(vehicleid, panels, doors, lights, tires);
    tires = 0;
    UpdateVehicleDamageStatus(vehicleid, panels, doors, lights, tires);
	pInfo[playerid][pRepcar][1]--;
	SendClientMessage(playerid, COLOR_BLUE, "Вы отремонтировали т/с на {FFFFFF}60%%{3399FF}, чтобы отремонтировать его на {FFFFFF}100%%{3399FF} вызывайте механиков");
	return 1;
}

CMD:mask(playerid, params[])
{
	if(pInfo[playerid][pMask] == 0) return SendClientMessage(playerid,COLOR_GREY,"[Ошибка] У вас нет маски, купить ее можно в магазине 24/7");
	if(!PlayerUseMask[playerid])
	{
		SetPlayerColor(playerid, 0x665E5E01);
		PlayerUseMask[playerid] = true;
		if(!IsPlayerInAnyVehicle(playerid)) ApplyAnimation(playerid, "SHOP", "ROB_Shifty", 4.1, 0, 0, 0, 0, 0);
		SendClientMessage(playerid, COLOR_YELLOW, "Ваше местоположение на GPS {ffffff}скрыто{EAD86A} на 10 минут!");
		SetPlayerChatBubble(playerid, "одевает маску", COLOR_ORANGE, 20.0, 500);
		GameTextForPlayer(playerid, "~b~INVISABLE ON", 800, 4);
		PlayerPlaySound(playerid, 21000, 0.0, 0.0, 0.0);
		MaskTimer[playerid] = SetTimerEx("@MaskOff", 60000*10, false, "d", playerid);
	}
	else
	{
		SetPlayerColorEx(playerid,TeamColors[GetTeamID(playerid)]);
		PlayerUseMask[playerid] = false;
		pInfo[playerid][pMask]--;
		MysqlUpdatePlayerInt(playerid, "mask", pInfo[playerid][pMask]);
	    GameTextForPlayer(playerid, "~y~INVISABLE OFF", 800, 4);
	    PlayerPlaySound(playerid, 21001, 0.0, 0.0, 0.0);
		SetPlayerChatBubble(playerid, "снимает маску", COLOR_ORANGE, 20.0, 500);
		if(MaskTimer[playerid] != -1)
        {
			KillTimer(MaskTimer[playerid]);
			MaskTimer[playerid] = -1;
		}
	}
	return 1;
}

CMD:healme(playerid, params[])
{
    if(HealmeObject[playerid]>0) return SendClientMessage(playerid, COLOR_GREY, "Не флуди");
	if(IsPlayerInDynamicArea(playerid, AreaInfo[arGreenZone][16])) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] В данном месте вы не можете использовать аптечку!");
	else if(pInfo[playerid][pAptechka] == 0) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас нет аптечек, купить их можно в магазине 24/7");
	new Float:shealth = pInfo[playerid][pHeal];
	GetPlayerHealth(playerid, shealth);
	if(shealth >= 100) return SendClientMessage(playerid, COLOR_GREY, "Вы не нуждаетесь в лечении!");
	if(shealth <= 50) SetHealth(playerid, shealth+50);
	else SetHealth(playerid, 100);
	if(!IsPlayerInAnyVehicle(playerid))
	{
		ApplyAnimation(playerid,"PED","gum_eat",4.0,0,0,0,0,0,1);
		SetPlayerAttachedObject(playerid, 8, 11736, 5,  0.186999, 0.037000, 0.022999,  -102.499969, -179.900024, -91.400024,  1.000000, 1.000000, 1.000000);
		HealmeObject[playerid] = 5;
	}
	pInfo[playerid][pAptechka]--;
	MysqlUpdatePlayerInt(playerid, "aptechka", pInfo[playerid][pAptechka]);
	SetPlayerChatBubble(playerid,"использует аптечку",COLOR_PURPLE,30.0,1000);
    GameTextForPlayer(playerid, "~b~+50 HP", 100, 1);
	return 1;
}

CMD:time(playerid, params[])
{
	if(pInfo[playerid][pWatch] == 0) return SendClientMessage(playerid,COLOR_GREY,"[Ошибка] У вас нет часов, купить их можно в магазине 24/7");
	new hour, minuite, second, year, month, day, saturday = 1310155200, w = gettime(), day_week;
	gettime(hour, minuite, second);
	getdate(year, month, day);
	while(w - saturday > 60 * 60 * 24)
    {
        w -= 60 * 60 * 24;
        day_week ++;
    }
    while(day_week >= 7) day_week -= 7;
	static const Names_Months[12][12] = {"января","февраля","марта","апреля","мая","июня","июля","августа","сентября","октября","ноября","декабря"};
    static const Names_Days[7][12] = {"суббота","воскресенье","понедельник","вторник","среда","четверг","пятница"};
	stringer[0] = EOS;
    format(stringer, 1000, "\
		{FFFFFF}Текущее время: {3399FF}%02d:%02d\n\
		{FFFFFF}Сегодняшняя дата: {63BD4E}%s, %d %s %04d г.\n\n\
		{FFFFFF}Время в игре за час: {FF6666}%d мин\n\
		{FFFFFF}Время в игре за сегодня: {FFCC00}%s\n\
		{FFFFFF}Время в игре за вчера: {FFCC00}%s\n\
		{FFFFFF}AFK за сегодня: {FF9900}%s\n\
		{FFFFFF}AFK за вчера: {FF9900}%s",
		hour, minuite,
		Names_Days[day_week], day, Names_Months[month-1], year,
		pInfo[playerid][pTimeHour]/60,
		ConvertsCmdTime(gOnlinePlayer[playerid][0]),
		ConvertsCmdTime(gOnlinePlayer[playerid][1]),
		ConvertsCmdTime(gOnlinePlayerAFK[playerid][0]),
		ConvertsCmdTime(gOnlinePlayerAFK[playerid][1]));
	ShowPlayerDialog(playerid, dNull, DIALOG_STYLE_MSGBOX, "{FFCC00}Часы", stringer, "Закрыть", "");
	new string[80];
	format(string, sizeof(string), "~y~%02d:%02d ~n~~w~%02d-%02d-%04d", hour, minuite, day, month, year);
	GameTextForPlayer(playerid, string, 5000, 1);
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) ApplyAnimation(playerid,"COP_AMBIENT","Coplook_watch",4.1,0,0,0,0,0,1);
	if(pInfo[playerid][pSex] == 1) MeAction(playerid, "посмотрел на часы");
	else MeAction(playerid, "посмотрела на часы");
	return 1;
}

CMD:jailtime(playerid, params[])
{
	if(!pInfo[playerid][pJailTime]) return SendClientMessage(playerid,COLOR_GREY,"Вы не находитесь под заключением в тюрьме!");
	new string[100];
	format(string, sizeof(string), "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~JAILED: ~w~%d", pInfo[playerid][pJailTime]);
	GameTextForPlayer(playerid, string, 3000, 3);
	return 1;
}
CMD:mostik(){
	OpenMost();
	return true;
}
CMD:mostikdown(playerid){
	CloseGate(playerid);
	return true;
}
CMD:plveh(playerid, params[])
{
	new Float: x,
	    Float: y,
	    Float: z,
	    Float: a;
	GetPlayerFacingAngle(playerid, a);
	GetPlayerPos(playerid, x, y, z);
	
	IsAdmin(ADM_OLDER_ADMIN);
	if(sscanf(params, "dd", params[0], params[1])) return SEND_CM(playerid, -1, "Используйте: /plveh [ID Игрока] [ID Car]");
 	if(!IsPlayerConnected(params[0])) return SEND_CM(playerid, -1, "[Примечание] Данного игрока нет на сервере!");
 	
 	Plveh[params[0]] = VehCreate(params[0], params[1], x, y, z, a, 0, 0, -1);
    PutPlayerInVehicleEx(params[0], Plveh[params[0]], 0);
	return 1;
}
CMD:flpcar(playerid, params[]){
	IsAdmin(ADM_OLDER_ADMIN);
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, -1, "Используйте: /flpcar [CarID ]");
	new str_flip[30];

    FCar(params[0]);
	format(str_flip, sizeof str_flip, "Вы успешно флипнули авто(%d)", params[0]);
	SendClientMessage(playerid, -1, str_flip);
	return true;
}
CMD:veh(playerid, params[])
{
	IsAdmin(ADM_OLDER_ADMIN);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(GetPlayerInterior(playerid) > 0) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] В интерьере нельзя создавать транспорт!");
	else if(sscanf(params, "ddd", params[0], params[1], params[2])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /veh [id машины] [цвет 1] [цвет 2]");
	else if(!(400 <= params[0] <= 611)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] ID машины не может быть меньше 400 и больше чем 611");
	else if(!(0 <= params[1] <= 255)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Номер цвета не может быть меньше 0 и больше 255");
	else if(!(0 <= params[2] <= 255)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Номер цвета не может быть меньше 0 и больше 255");
	else if(TotalAdminVehicles > 80) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Лимит админ-машин превышен");
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid, X,Y,Z);
	X += 1.5;
	new vehicleid = 0;
	vehicleid = CreateVehicle(params[0], X,Y,Z, 0.0, params[1], params[2], -1);
	SetVehicleVirtualWorld(vehicleid, GetPlayerVirtualWorld(playerid));
	LinkVehicleToInterior(vehicleid, GetPlayerInterior(playerid));
	SetVehicleParamsEx(vehicleid, false, false, false, false, false, false, false);
	VehicleInfo[vehicleid][vX] = X;
	VehicleInfo[vehicleid][vY] = Y;
	VehicleInfo[vehicleid][vZ] = Z;
	VehicleInfo[vehicleid][vFuel] = VehStats[params[0]-400][vMaxFuel];
	VehicleInfo[vehicleid][vMileage] = 0;
	ToggleLock(vehicleid, 0);
	Iter_Add(adm_vehicles, vehicleid);
	new string[120];
	format(string, sizeof(string), "[A] %s[%i] создал транспорт (%s, ID: %d)", GetName(playerid), playerid, VehStats[params[0]-400][vName], vehicleid);
	SendAdminMessage(COLOR_GRAD1, string);
	TotalAdminVehicles++;
	return 1;
}
CMD:alldelv(playerid, params[])
{
	IsAdmin(ADM_OLDER_ADMIN);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	new string[90];
	format(string, sizeof(string), "[A] %s[%i] удалил все автомобили созданные администраторами", GetName(playerid), playerid);
	SendAdminMessage(COLOR_GRAD1, string);
	if(pTemp[playerid][pCarInfoTimer] != 0)
	{
		HideSpeedometer(playerid);
		KillTimer(pTemp[playerid][pCarInfoTimer]);
		pTemp[playerid][pCarInfoTimer] = 0;
	}
	foreach(new vehicleid : adm_vehicles) if(IsValidVehicle(vehicleid)) DestroyVehicle(vehicleid);
	Iter_Clear(adm_vehicles);
	TotalAdminVehicles = 0;
	return 1;
}

CMD:delv(playerid, params[])
{
	IsAdmin(ADM_OLDER_ADMIN);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в транспорте!");
	else if(!TotalAdminVehicles) return 1;
	new vehicleid = GetPVarInt(playerid,"VehicleEnters");
	if(!Iter_Contains(adm_vehicles, vehicleid)) return SendClientMessage(playerid, COLOR_GREY, "Этот автомобиль не создавал администратор");
	new string[128];
	format(string, sizeof(string), "[A] %s[%i] удалил транспорт (%s, ID: %d)", GetName(playerid), playerid, VehStats[GetVehicleModel(vehicleid)-400][vName], vehicleid);
	SendAdminMessage(COLOR_GRAD1, string);
	if(IsValidVehicle(vehicleid)) DestroyVehicle(vehicleid);
    TotalAdminVehicles--;
 	Iter_Remove(adm_vehicles, vehicleid);
	return 1;
}

CMD:carhp(playerid, params[]) {
    IsAdmin(ADM_MODER);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /carhp [ID car ]");
	if(IsValidVehicle(params[0]))
	{
		RepairVehicle(params[0]);
		new string[100];
		format(string, sizeof(string), "Вы установили 1000 HP транспорту (%s, ID: %d)", VehStats[GetVehicleModel(params[0])-400][vName], params[0]);
		SendClientMessage(playerid, COLOR_LIME, string);
	}
	return 1;
}
CMD:do(playerid, params[])
{
    if(pInfo[playerid][pMuted] > 0) return SendMuteMessage(playerid);
	else if(isnull(params)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /do [текст]");
	else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendClientMessage(playerid,COLOR_GREY,"Не флуди");
    else if(IsAIP(params[0])) return 0;
	else if(CheckString(params[0], 1)) return PlayerGetsChatBan(playerid, params[0]);
	DoAction(playerid, params[0]);
	SetString(OldMessage[playerid], params[0]);
	TextReset[playerid] = gettime()+3;
	return 1;
}
CMD:try(playerid, params[])
{
    if(pInfo[playerid][pMuted] > 0) return SendMuteMessage(playerid);
	else if(isnull(params)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /try [текст]");
	else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendClientMessage(playerid,COLOR_GREY,"Не флуди");
    else if(IsAIP(params[0])) return 0;
	else if(CheckString(params[0], 1)) return PlayerGetsChatBan(playerid, params[0]);
	TryAction(playerid, params[0]);
	SetString(OldMessage[playerid], params[0]);
	TextReset[playerid] = gettime()+3;
	return 1;
}

CMD:ame(playerid, params[])
{
    if(pInfo[playerid][pMuted] > 0) return SendMuteMessage(playerid);
    else if(isnull(params)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /ame [текст]");
    else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendClientMessage(playerid,COLOR_GREY,"Не флуди");
    else if(IsAIP(params[0])) return 0;
	else if(CheckString(params[0], 1)) return PlayerGetsChatBan(playerid, params[0]);
	new string[128];
	format(string, sizeof(string), "%s", params[0]);
	SendClientMessage(playerid, COLOR_PURPLE, string);
	SetPlayerChatBubble(playerid, params[0], COLOR_PURPLE, 13.0, 10000);
	SetString(OldMessage[playerid], params[0]);
	TextReset[playerid] = gettime()+3;
	return 1;
}

CMD:me(playerid, params[])
{
    if(pInfo[playerid][pMuted] > 0) return SendMuteMessage(playerid);
	else if(isnull(params)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /me [текст]");
	else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendClientMessage(playerid,COLOR_GREY,"Не флуди");
    else if(IsAIP(params[0])) return 0;
	else if(CheckString(params[0], 1)) return PlayerGetsChatBan(playerid, params[0]);
	MeAction(playerid, params[0]);
	SetString(OldMessage[playerid], params[0]);
	TextReset[playerid] = gettime()+3;
	return 1;
}

CMD:charity(playerid)
{
    mysql_tquery(dbHandle, "SELECT * FROM "T_ACCOUNTS" WHERE charity > 0 ORDER BY charity DESC LIMIT 0, 15", "@TopCharity", "i", playerid);//AND admin < 1
	return 1;
}

CMD:setfuel(playerid, params[])
{
	IsAdmin(ADM_OLDER_MODER);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в транспорте!");
	else if(isnull(params)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setfuel [кол-во бензина]");
	new vehicleid = GetPVarInt(playerid,"VehicleEnters");
	new Float:tank = VehStats[GetVehicleModel(vehicleid)-400][vMaxFuel];
	if(!(1 <= strval(params) <= tank))
	{
	    new string[128];
	    format(string, sizeof(string), "Неверное кол-во литров. Можно установить от 1.0 до %.0f л", tank);
		return SendClientMessage(playerid, COLOR_GREY, string);
	}
	VehicleInfo[vehicleid][vFuel] = strval(params);
	SendClientMessage(playerid, COLOR_LIME, "Транспорт заправлен");
	return 1;
}

CMD:fuelvehs(playerid, params[])
{
	IsAdmin(ADM_CHIEF);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	for(new i; i != lastveh; i++) VehicleInfo[i][vFuel] = VehStats[GetVehicleModel(i)-400][vMaxFuel];
    new string[128];
    format(string, sizeof(string), "[A] %s заправил весь общественный транспорт на сервере", GetName(playerid));
	SendAdminMessage(COLOR_GRAD1, string);
	return 1;
}

CMD:admins(playerid)
{
	IsAdmin(ADM_HELPER);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	new info[29], str[144];
	format(info, sizeof(info), "Администраторы онлайн: (%i)", GetAdminsOnline());
	SendClientMessage(playerid, COLOR_GREEN, info);
	foreach(new i : Player)
	{
		if(!gPlayerLogged[i] || !pInfo[i][pAdmin] || pInfo[i][pAdmin] == ADM_FOUNDER) continue;
		format(str, sizeof(str), "%s {FFFFFF}%s[%d] (%i уровень) ", (gAdminLogged[i])?("{63BD4E}[Авторизован]"):("{F04245}[Не авторизован]"), GetName(i), i, pInfo[i][pAdmin]);
		if(pInfo[i][Spectating][0] == INVALID_PLAYER_ID && GetPVarInt(i, "AFK_Time") > 1)
		{
		    format(str, sizeof(str), "%s {FF9900}AFK %s", str, Converts(GetPVarInt(i, "AFK_Time")));
		}
		else if(pInfo[i][Spectating][0] != INVALID_PLAYER_ID && GetPVarInt(i, "AFK_Time") <= 1)
		{
			format(str, sizeof(str), "%s {80CCFF}/spec %i", str, pInfo[i][Spectating][0]);
		}
		else if(pInfo[i][Spectating][0] != INVALID_PLAYER_ID && GetPVarInt(i, "AFK_Time") > 1)
		{
			format(str, sizeof(str), "%s {FF9900}AFK %s {80CCFF}/spec %i", str, Converts(GetPVarInt(i, "AFK_Time")), pInfo[i][Spectating][0]);
		}
		SendClientMessage(playerid, COLOR_WHITE, str);
	}
	new string[128];
	format(string, sizeof(string), "Время администратирования за сегодня: %s", ConvertsCmdTime(AdminInfo[playerid][admPlayTime]));
	SendClientMessage(playerid, COLOR_YELLOW, string);
	return 1;
}

CMD:weap(playerid, params[])
{
	IsAdmin(ADM_HELPER);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /weap [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	new weapons[13][2], strs[46], gunname[32];
	stringer[0] = EOS;
	format(strs, sizeof(strs), "Игрок:\t\t\t%s{FFFFFF}", GetName(params[0]));
	strcat(stringer, strs);
	for(new i = 0; i < 13; i++)
	{
		GetPlayerWeaponData(params[0], i, weapons[i][0], weapons[i][1]);
		GetWeaponName(weapons[i][0], gunname, sizeof(gunname));
		if(weapons[i][0] != 0)
		{
			format(stringer, sizeof(stringer), "%s\n\nОружие:\t\t%s (%d)\nПатроны:\t\t%d", stringer, gunname, weapons[i][0], weapons[i][1]);
		}
	}
	ShowPlayerDialog(playerid, dNull, DIALOG_STYLE_MSGBOX, "{FFCC00}Оружие игрока", stringer, "Закрыть", "");
	return 1;
}

CMD:add(playerid, params[])
{
	if(GetString(GetName(playerid), NAME_FULL_ACCESS_1) || GetString(GetName(playerid), NAME_FULL_ACCESS_2) || GetString(GetName(playerid), NAME_FULL_ACCESS_3) || GetString(GetName(playerid), NAME_FULL_ACCESS_4))
	{
		if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
		stringer[0] = EOS;
		format(stringer, 300, "\
			{FFFFFF}Дом\t{63BD4E}%i\n\
			{FFFFFF}Бизнес\t{63BD4E}%i\n\
			{FFFFFF}Банкомат\t{63BD4E}%i",
			TOTALHOUSE, TOTALBIZ, TOTALATM);
		return ShowPlayerDialog(playerid, dAddNed, DIALOG_STYLE_LIST, "{FFCC00}Добавить", stringer, "Выбрать", "Отмена");
	}
	return 1;
}

CMD:sellcar(playerid, params[])
{
	if(!pInfo[playerid][pHouse]) return SendClientMessage(playerid, COLOR_GREY, "Вы не владеете домом!");
	else if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в транспорте!");
	else if(GetPVarInt(playerid,"VehicleEnters") != pTemp[playerid][pCarPlayerID]) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в вашем личном транспорте!");
	else if(sscanf(params, "dd", params[0], params[1])) return ShowPlayerDialog(playerid, dSellCar, 0, "{FFCC00}Продажа транспорта", "{ffffff}Вы хотите продать свой транспорт?\n\n{F04245}[Внимание] {FFFFFF}Вам вернут только 75% стоимости транспорта\n{63BD4E}[Информация] {FFFFFF}Чтобы продать т/с игроку, введите /sellcar [id игрока] [стоимость]", "Принять", "Отмена");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете продать транспорт себе!");
	else if(!pInfo[params[0]][pHouse]) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет дома!");
	else if(!IsPlayerInVehicle(params[0], GetPVarInt(playerid,"VehicleEnters"))) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен находиться с вами в транспорте!");
	else if(!(1 <= params[1] <= 5000000)) return SendClientMessage(playerid, COLOR_GREY, "Стоимость от 1$ до 5 млн.");
	else if(ZapretDice[params[0]] == 1) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У игрока уже есть одно активное предложение!");
    else if(pTemp[playerid][pSelectPlayer] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас уже есть одно активное предложение. Чтобы отказаться от него введите /cancel");
	else if(pTemp[params[0]][pTargetPlayer] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У игрока уже есть одно активное предложение!");

	pTemp[playerid][pSelectPlayer] = params[0];
	pTemp[params[0]][pTargetPlayer] = playerid;
	pTemp[params[0]][pTargetAction] = ACTION_SELL_CAR;
	pTemp[params[0]][pActionPrice] = params[1];

	new string[144];
	format(string, sizeof(string), "Вы предлагаете %s купить ваше т/с", GetName(params[0]));
	SendClientMessage(playerid, COLOR_BLUE, string);
	format(string, sizeof(string), "%s предлагает Вам купить его т/с за %i$", GetName(playerid), params[1]);
	SendClientMessage(params[0], COLOR_BLUE, string);

	new model = GetVehicleModel(pTemp[playerid][pCarPlayerID]);
	format(string, sizeof(string), "Название: %s | Класс: %s | Пробег: %.1f | Бензобак: %.0fл. | Расход: %.0fл/100км",
		VehStats[model-400][vName],
		VehicleClass[pInfo[playerid][cClass]-1],
		pInfo[playerid][cMileage],
		VehStats[model-400][vMaxFuel],
		VehStats[model-400][vFuelDrop]);

	SendClientMessage(params[0], COLOR_GREEN, string);
	SendClientMessage(params[0], COLOR_WHITE, PlayerAccess);
	return 1;
}

CMD:changecar(playerid, params[])
{
	if(!pInfo[playerid][pHouse]) return SendClientMessage(playerid, COLOR_GREY, "Вы не владеете домом!");
	else if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в транспорте!");
	else if(GetPVarInt(playerid,"VehicleEnters") != pTemp[playerid][pCarPlayerID]) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в вашем личном транспорте!");
	else if(sscanf(params, "dd", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /changecar [id игрока] [доплата]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете обменять транспорт себе!");
	else if(!pInfo[params[0]][pHouse]) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет дома!");
	else if(!IsPlayerInVehicle(params[0], GetPVarInt(playerid,"VehicleEnters"))) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен находиться с вами в транспорте!");
	else if(!(1 <= params[1] <= 5000000)) return SendClientMessage(playerid, COLOR_GREY, "Доплата от 1$ до 5 млн.");
	else if(ZapretDice[params[0]] == 1) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У игрока уже есть одно активное предложение!");
    else if(pTemp[playerid][pSelectPlayer] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас уже есть одно активное предложение. Чтобы отказаться от него введите /cancel");
	else if(pTemp[params[0]][pTargetPlayer] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У игрока уже есть одно активное предложение!");

	pTemp[playerid][pSelectPlayer] = params[0];
	pTemp[params[0]][pTargetPlayer] = playerid;
	pTemp[params[0]][pTargetAction] = ACTION_CHANGE_CAR;
	pTemp[params[0]][pActionPrice] = params[1];

	new string[144];
	format(string, sizeof(string), "Вы предлагаете %s обменять своё т/с на его", GetName(params[0]));
	SendClientMessage(playerid, COLOR_BLUE, string);
	format(string, sizeof(string), "%s предлагает Вам обменять ваше т/с на его с доплатой %i$", GetName(playerid), params[1]);
	SendClientMessage(params[0], COLOR_BLUE, string);

	new model0 = GetVehicleModel(pTemp[params[0]][pCarPlayerID]);
	new model1 = GetVehicleModel(pTemp[playerid][pCarPlayerID]);

	format(string, sizeof(string), "Название: %s | Класс: %s | Пробег: %.1f | Бензобак: %.0fл. | Расход: %.0fл/100км",
		VehStats[model0-400][vName],
		VehicleClass[pInfo[params[0]][cClass]-1],
		pInfo[params[0]][cMileage],
		VehStats[model0-400][vMaxFuel],
		VehStats[model0-400][vFuelDrop]);
	SendClientMessage(playerid, COLOR_GREEN, string);

	format(string, sizeof(string), "Название: %s | Класс: %s | Пробег: %.1f | Бензобак: %.0fл. | Расход: %.0fл/100км",
		VehStats[model1-400][vName],
		VehicleClass[pInfo[playerid][cClass]-1],
		pInfo[playerid][cMileage],
		VehStats[model1-400][vMaxFuel],
		VehStats[model1-400][vFuelDrop]);
	SendClientMessage(params[0], COLOR_GREEN, string);

	SendClientMessage(params[0], COLOR_WHITE, PlayerAccess);
	return 1;
}

CMD:sellhouse(playerid, params[])
{
    if(!pInfo[playerid][pHouse]) return SendClientMessage(playerid, COLOR_GREY, "Вы не владеете домом!");
	else if(sscanf(params, "dd", params[0], params[1])) return ShowPlayerDialog(playerid, dSellHouse, 0, "{FFCC00}Продажа дома", "{FFFFFF}Вы хотите продать свой дом?\n\n{F04245}[Внимание] {FFFFFF}Вам вернут только 75% стоимости дома\n{63BD4E}[Информация] {FFFFFF}Чтобы продать дом игроку, введите /sellhouse [id игрока] [стоимость]", "Принять", "Отмена");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете продать дом себе!");
	else if(pInfo[params[0]][pHouse]) return SendClientMessage(playerid, COLOR_GREY, "У игрока уже есть дом!");
	else if(ZapretDice[params[0]] == 1) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У игрока уже есть одно активное предложение!");
    else if(pTemp[playerid][pSelectPlayer] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас уже есть одно активное предложение. Чтобы отказаться от него введите /cancel");
	else if(pTemp[params[0]][pTargetPlayer] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У игрока уже есть одно активное предложение!");
    new i = pInfo[playerid][pHouse];
	new surcharge = HouseInfo[i][hPrice]*3;
	if(!(1 <= params[1] <= surcharge))
	{
	    new string[64];
	    format(string, sizeof(string), "Стоимость от 1$ до %i$", surcharge);
		return SendClientMessage(playerid, COLOR_GREY, string);
	}
	new _c = HouseInfo[i][hClass], _i = HouseInfo[i][hInt];
	if(IsPlayerInRangeOfPoint(playerid, 5.0, HouseInfo[i][hEntr][0], HouseInfo[i][hEntr][1], HouseInfo[i][hEntr][2]) || IsPlayerInRangeOfPoint(playerid, 15.0, HintsInfo[_c][_i][hiExitX], HintsInfo[_c][_i][hiExitY], HintsInfo[_c][_i][hiExitZ]))
	{
		if(!IsPlayerStream(3.0, playerid, params[0], 1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен находиться рядом с тобой!");
		new string[144];
		format(string, sizeof(string), "Вы предлагаете %s купить ваш дом", GetName(params[0]));
		SendClientMessage(playerid, COLOR_BLUE, string);
		format(string, sizeof(string), "%s предлагает Вам купить его дом №%i за %i$", GetName(playerid), i, params[1]);
		SendClientMessage(params[0], COLOR_BLUE, string);
		SendClientMessage(params[0], COLOR_WHITE, PlayerAccess);
		pTemp[playerid][pSelectPlayer] = params[0];
		pTemp[params[0]][pTargetPlayer] = playerid;
		pTemp[params[0]][pTargetAction] = ACTION_SELL_HOUSE;
		pTemp[params[0]][pActionPrice] = params[1];
	}
	else SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться либо в вашем доме либо возле него!");
    return 1;
}
CMD:sellbiz(playerid, params[])
{
    if(!pInfo[playerid][pBiz]) return SendClientMessage(playerid, COLOR_GREY, "Вы не владеете бизнесом!");
	else if(sscanf(params, "dd", params[0], params[1])) return ShowPlayerDialog(playerid, dSellBiz, 0, "{FFCC00}Продажа бизнеса", "{FFFFFF}Вы хотите продать свой бизнес?\n\n{F04245}[Внимание] {FFFFFF}Вам вернут только 75% стоимости бизнеса\n{63BD4E}[Информация] {FFFFFF}Чтобы продать бизнес игроку, введите /sellbiz [id игрока] [стоимость]", "Принять", "Отмена");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете продать бизнес себе!");
	else if(pInfo[params[0]][pBiz]) return SendClientMessage(playerid, COLOR_GREY, "У игрока уже есть бизнес!");
	else if(!(1 <= params[1] <= 50000000)) return SendClientMessage(playerid, COLOR_GREY, "Стоимость от 1$ до 50 млн.");
	else if(ZapretDice[params[0]] == 1) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У игрока уже есть одно активное предложение!");
    else if(pTemp[playerid][pSelectPlayer] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас уже есть одно активное предложение. Чтобы отказаться от него введите /cancel");
	else if(pTemp[params[0]][pTargetPlayer] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У игрока уже есть одно активное предложение!");
	new i = pInfo[playerid][pBiz];
	if(IsPlayerInRangeOfPoint(playerid, 5.0, BizInfo[i][bEntr][0], BizInfo[i][bEntr][1], BizInfo[i][bEntr][2]) || BizInfo[i][bVirtual] == GetPlayerVirtualWorld(playerid))
	{
		if(!IsPlayerStream(3.0, playerid, params[0], 1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен находиться рядом с тобой!");
		new string[144];
		format(string, sizeof(string), "Вы предлагаете %s купить ваш бизнес", GetName(params[0]));
		SendClientMessage(playerid, COLOR_BLUE, string);
		format(string, sizeof(string), "%s предлагает Вам купить его бизнес %s (%i) за %i$", GetName(playerid), BizInfo[i][bName], i, params[1]);
		SendClientMessage(params[0], COLOR_BLUE, string);
		SendClientMessage(params[0], COLOR_GREEN, "Посмотреть дополнительную информацию о бизнесе - {FFFFFF}/binfo");
		SendClientMessage(params[0], COLOR_WHITE, PlayerAccess);
		pTemp[playerid][pSelectPlayer] = params[0];
		pTemp[params[0]][pTargetPlayer] = playerid;
		pTemp[params[0]][pTargetAction] = ACTION_SELL_BIZ;
		pTemp[params[0]][pActionPrice] = params[1];
		pTemp[params[0]][pSellBizID] = i;
	}
	else SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться либо в вашем бизнесе либо возле него!");
	return 1;
}
/*CMD:changebiz(playerid, params[])
{
    if(!pInfo[playerid][pBiz]) return SendClientMessage(playerid, COLOR_GREY, "Вы не владеете бизнесом!");
	else if(sscanf(params, "dd", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /changebiz [id игрока] [доплата]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете обменять бизнес себе!");
	else if(!pInfo[params[0]][pBiz]) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет бизнеса!");
	else if(!(1 <= params[1] <= 50000000)) return SendClientMessage(playerid, COLOR_GREY, "Стоимость от 1$ до 50 млн.");
	else if(ZapretDice[params[0]] == 1) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У игрока уже есть одно активное предложение!");
    else if(pTemp[playerid][pSelectPlayer] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас уже есть одно активное предложение. Чтобы отказаться от него введите /cancel");
	else if(pTemp[params[0]][pTargetPlayer] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У игрока уже есть одно активное предложение!");
	new i = pInfo[playerid][pBiz];
	new i2 = pInfo[params[0]][pBiz];
	if(IsPlayerInRangeOfPoint(playerid, 5.0, BizInfo[i][bEntr][0], BizInfo[i][bEntr][1], BizInfo[i][bEntr][2]) || BizInfo[i][bVirtual] == GetPlayerVirtualWorld(playerid))
	{
		if(!IsPlayerStream(3.0, playerid, params[0], 1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен находиться рядом с тобой!");
	    new string[144];
		format(string, sizeof(string), "Вы предлагаете %s обменять свой бизнес на его", GetName(params[0]));
		SendClientMessage(playerid, COLOR_BLUE, string);
		format(string, sizeof(string), "%s предлагает Вам обменять ваш бизнес на его %s (%i) с доплатой %i$", GetName(playerid), BizInfo[i2][bName], i2, params[1]);
		SendClientMessage(params[0], COLOR_BLUE, string);
		SendClientMessage(playerid, COLOR_GREEN, "Посмотреть дополнительную информацию о бизнесе - {FFFFFF}/binfo");
		SendClientMessage(params[0], COLOR_GREEN, "Посмотреть дополнительную информацию о бизнесе - {FFFFFF}/binfo");
		SendClientMessage(params[0], COLOR_WHITE, PlayerAccess);
		pTemp[playerid][pSelectPlayer] = params[0];
		pTemp[params[0]][pTargetPlayer] = playerid;
		pTemp[params[0]][pTargetAction] = ACTION_CHANGE_BIZ;
		pTemp[params[0]][pActionPrice] = params[1];
		pTemp[playerid][pChangeBizID] = i2;
		pTemp[params[0]][pChangeBizID2] = i;
	}
	else SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться либо в вашем бизнесе либо возле него!");
	return 1;
}*/

CMD:binfo(playerid)
{
    if(pTemp[playerid][pSellBizID]) BizStats(playerid, pTemp[playerid][pSellBizID]);
    else if(pTemp[playerid][pChangeBizID]) BizStats(playerid, pTemp[playerid][pChangeBizID]);
   	else if(pTemp[playerid][pChangeBizID2]) BizStats(playerid, pTemp[playerid][pChangeBizID2]);
	return 1;
}

CMD:tpc(playerid, params[])
{
	if(GetString(GetName(playerid), NAME_FULL_ACCESS_1) || GetString(GetName(playerid), NAME_FULL_ACCESS_2) || GetString(GetName(playerid), NAME_FULL_ACCESS_3) || GetString(GetName(playerid), NAME_FULL_ACCESS_4))
	{
		if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
		if(!TPC[playerid]) { // 0
			if(!IsPlayerInVehicle(playerid, pTemp[playerid][hParkID])) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в транспорте!");
			new Float:X,Float:Y,Float:Z,Float:FA;
			GetVehicleZAngle(pTemp[playerid][hParkID], FA);
			GetVehiclePos(pTemp[playerid][hParkID], X,Y,Z);
			format(coordh, sizeof(coordh), "%f,%f,%f,%f", X, Y, Z, FA);
			DestroyVehicle(pTemp[playerid][hParkID]);
			pTemp[playerid][hParkID] = INVALID_VEHICLE_ID;
			TPC[playerid] = true;
			SendClientMessage(playerid, COLOR_GREY, "Координаты созданы. Установите интерьер: /tpc.");
		}
		else { // 1
			stringer[0] = EOS;
			strcat(stringer,"{FFFFFF}Интерьер, гараж, цена\n\nПример: 5 1 60000\n\n");
   			strcat(stringer,"1. [Эконом]\n");
			strcat(stringer,"2. [Средний]\n");
			strcat(stringer,"3. [Высокий]\n");
			strcat(stringer,"4. [Элитный]");
			ShowPlayerDialog(playerid,dAddNed+1,1," ",stringer,"Выбрать","Закрыть");
		}
	}
	return 1;
}

CMD:sethint(playerid, params[]) {
    if(GetString(GetName(playerid), NAME_FULL_ACCESS_1) || GetString(GetName(playerid), NAME_FULL_ACCESS_2) || GetString(GetName(playerid), NAME_FULL_ACCESS_3) || GetString(GetName(playerid), NAME_FULL_ACCESS_4)) {
		stringer[0] = EOS;
		strcat(stringer,"{FFFFFF}Номер дома, интерьер\n\nПример: 311, 5\n\n");
		strcat(stringer,"1. [Эконом]\n");
		strcat(stringer,"2. [Средний]\n");
		strcat(stringer,"3. [Высокий]\n");
		strcat(stringer,"4. [Элитный]");
		ShowPlayerDialog(playerid,dEditHouseInt,1," ",stringer,"Выбрать","Закрыть");
	}
	return 1;
}

CMD:cancelrent(playerid)
{
    if(GetPVarInt(playerid, "arendkey") == -1) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы не арендуете транспорт");
	new rc = GetPVarInt(playerid, "arendkey");
	if(ArendInfo[rc][aPlayerID] != playerid)
	{
	    SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы не арендуете транспорт");
	    SetPVarInt(playerid, "arendkey", -1);
	    return 1;
	}
	ShowPlayerDialog(playerid, dCancelRent, 0, "{FFCC00}Отмена аренды", "\n\n{FF6600}Вы действительно хотите отменить аренду транспорта?\n{FFFFFF}Дальнейшее его использование станет недоступным,\nдо нового заключения договора на аренду транспорта.\n\n", "Принять", "Отмена");
	return 1;
}

CMD:alock(playerid)
{
	IsAdmin(ADM_OLDER_ADMIN);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	new Float:x, Float:y, Float:z;
    for(new i = 1, j = MAX_VEHICLES; i <= j; i++)
	{
	    GetVehiclePos(i, x, y, z);
	    if(IsPlayerInRangeOfPoint(playerid, 4.0, x, y, z))
	    {
	        new model = GetVehicleModel(i);
	        if(!model) break;
			if(VehicleInfo[i][vLock] == 0)
			{
				ToggleLock(i, 1);
				GameTextForPlayer(playerid, "~r~locked", 2000, 3);
				MeAction(playerid, "достал ключи и закрыл транспорт");
				PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
			}
			else
			{
			    ToggleLock(i, 0);
				GameTextForPlayer(playerid, "~g~unlocked", 2000, 3);
				MeAction(playerid, "достал ключи и открыл транспорт");
				PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
			}
			break;
		}
	}
	return 1;
}

CMD:lock(playerid, params[])
{
	if(TextResetCMD[playerid] > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Не флуди");
	new Float:x, Float:y, Float:z, type = 1;
	if(sscanf(params, "d", type)) type = 1;
	else if(!(1 <= type <= 3)) type = 1;
	new vehicleid = 0;
	if(pTemp[playerid][pCarPlayerID] && type == 1) vehicleid = pTemp[playerid][pCarPlayerID];
	else if(pInfo[playerid][pVehicleKey] && type == 3) vehicleid = pInfo[playerid][pVehicleKey];
	else if(type == 2)
	{
	    if(pInfo[playerid][pJob] == JOB_BUS && pTemp[playerid][pBusID] != INVALID_VEHICLE_ID) vehicleid = pTemp[playerid][pBusID];
	    else if(pInfo[playerid][pJob] == JOB_TAXI && pTemp[playerid][pTaxiID] != INVALID_VEHICLE_ID) vehicleid = pTemp[playerid][pTaxiID];
	    else if(pInfo[playerid][pJob] == JOB_MECHANIC && pTemp[playerid][pMechID] != INVALID_VEHICLE_ID) vehicleid = pTemp[playerid][pMechID];
	    else if(pInfo[playerid][pJob] == JOB_TRUCKER && pTemp[playerid][pTruckID] != INVALID_VEHICLE_ID) vehicleid = pTemp[playerid][pTruckID];
	    else return SendClientMessage(playerid, COLOR_GREY, "У вас нет рабочего транспорта");
        GetVehiclePos(vehicleid, x, y, z);
		if(!IsPlayerInRangeOfPoint(playerid, 4.0, x, y, z)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться возле рабочего транспорта!");
		if(VehicleInfo[vehicleid][vLock] == 0)
		{
			ToggleLock(vehicleid, 1);
			GameTextForPlayer(playerid, "~r~locked", 2000, 3);
			MeAction(playerid, "достал ключи и закрыл транспорт");
			PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
		}
		else
		{
		    ToggleLock(vehicleid, 0);
			GameTextForPlayer(playerid, "~g~unlocked", 2000, 3);
			MeAction(playerid, "достал ключи и открыл транспорт");
			PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
		}
		return 1;
	}
	else if(type == 3)
	{
	    if(GetPVarInt(playerid, "arendkey") == -1) return SendClientMessage(playerid, COLOR_GREY, "Вы не арендуете транспорт");
		new rc = GetPVarInt(playerid, "arendkey");
		if(ArendInfo[rc][aPlayerID] != playerid)
		{
		    SendClientMessage(playerid, COLOR_GREY, "Вы не арендуете транспорт");
		    SetPVarInt(playerid, "arendkey", -1);
		    return 1;
		}
		GetVehiclePos(ArendInfo[rc][aID], x, y, z);
		if(!IsPlayerInRangeOfPoint(playerid, 4.0, x, y, z)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться возле арендованного Вами транспорта!");
		if(VehicleInfo[ArendInfo[rc][aID]][vLock] == 0)
		{
			ToggleLock(ArendInfo[rc][aID], 1);
			GameTextForPlayer(playerid, "~r~locked", 2000, 3);
			MeAction(playerid, "достал ключи и закрыл транспорт");
			PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
		}
		else
		{
			ToggleLock(ArendInfo[rc][aID], 0);
			GameTextForPlayer(playerid, "~g~unlocked", 2000, 3);
			MeAction(playerid, "достал ключи и открыл транспорт");
			PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
		}
		return 1;
	}
	else return SendClientMessage(playerid, COLOR_GREY, "У вас нет авто!");
	GetVehiclePos(vehicleid, x, y, z);
	if(!IsPlayerInRangeOfPoint(playerid, 4.0, x, y, z)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться возле своего транспорта!");
	if(VehicleInfo[vehicleid][vLock] == 0)
	{
		ToggleLock(vehicleid, 1);
		GameTextForPlayer(playerid, "~r~locked", 2000, 3);
		MeAction(playerid, "достал ключи и закрыл транспорт");
		PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
	}
	else
	{
	    ToggleLock(vehicleid, 0);
		GameTextForPlayer(playerid, "~g~unlocked", 2000, 3);
		MeAction(playerid, "достал ключи и открыл транспорт");
		PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
	}
	return 1;
}

CMD:givevkey(playerid, params[])
{
	if(pTemp[playerid][pCarPlayerID] == INVALID_VEHICLE_ID) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Команда доступна только владельцам авто");
	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /givevkey [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(GetPlayerDistanceToPlayer(playerid, params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
	else if(pInfo[params[0]][pVehicleKey]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У игрока уже есть ключи от транспорта");
	pInfo[params[0]][pVehicleKey] = pTemp[playerid][pCarPlayerID];
	new string[128];
	format(string, sizeof(string), "Вы получили ключи от транспорта от %s", GetName(playerid));
	SendClientMessage(params[0], COLOR_GREEN, string);
	format(string, sizeof(string), "Вы выдали %s ключи от вашего транспорта", GetName(params[0]));
	SendClientMessage(playerid, COLOR_GREEN, string);
	return 1;
}

CMD:takevkey(playerid, params[])
{
    if(pTemp[playerid][pCarPlayerID] == INVALID_VEHICLE_ID) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Команда доступна только владельцам авто");
	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /givevkey [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(GetPlayerDistanceToPlayer(playerid, params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
	else if(pInfo[params[0]][pVehicleKey] != pTemp[playerid][pCarPlayerID]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У игрока нет ключей от вашего транспорта");
	pInfo[params[0]][pVehicleKey] = 0;
	new string[128];
	format(string, sizeof(string), "%s забрал у Вас ключи от транспорта", GetName(playerid));
	SendClientMessage(params[0], COLOR_RED, string);
	format(string, sizeof(string), "Вы забрали у %s ключи от вашего транспорта", GetName(params[0]));
	SendClientMessage(playerid, COLOR_RED, string);
	return 1;
}

CMD:dropvkey(playerid, params[])
{
    if(!pInfo[playerid][pVehicleKey]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас нет дубликатов ключей от транспорта");
	pInfo[playerid][pVehicleKey] = 0;
	SendClientMessage(playerid, COLOR_RED, "Вы выбросили ключи от транспорта");
	return 1;
}

CMD:pts(playerid, params[])
{
	if(pTemp[playerid][pCarPlayerID] == INVALID_VEHICLE_ID) return SendClientMessage(playerid, COLOR_GREY, "У вас нет авто!");
	else if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в транспорте!");
	else if(GetPVarInt(playerid,"VehicleEnters") != pTemp[playerid][pCarPlayerID]) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в вашем личном транспорте!");
	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /pts [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(GetPlayerDistanceToPlayer(playerid, params[0]) > 5.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
	stringer[0] = EOS;
	new model = GetVehicleModel(pTemp[playerid][pCarPlayerID]);
	format(stringer, 700, "{FFFFFF}\
		Владелец: %s\n\
		Модель: %s\n\
		Класс: %s\n\
		Объём бензобака: %.0fл\n\
		Пробег: %.1fкм\n\
		Номерной знак: %s",
		GetName(playerid),
		VehStats[model-400][vName],
		VehicleClass[pInfo[playerid][cClass]-1],
		VehStats[model-400][vMaxFuel],
		VehicleInfo[pTemp[playerid][pCarPlayerID]][vMileage],
		pInfo[playerid][pNumberVehicle]);
	ShowPlayerDialog(params[0], dNull, DIALOG_STYLE_MSGBOX, "{FFCC00}ПТС", stringer, "Закрыть", "");
	new string[100];
	format(string, sizeof(string), "показал%s паспорт транспортного средства %s", (pInfo[playerid][pSex]==1)?(""):("а"), GetName(params[0]));
	MeAction(playerid, string);
	return 1;
}

CMD:spec(playerid, params[])
{
	IsAdmin(ADM_HELPER);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Для начала выйдите из транспорта");
	else if(FlyInfo[playerid][fType] == 1) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Для начала выйдите из режима полёта");
	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /spec [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Следить за самим собой нельзя");
	else if(pInfo[playerid][pAdmin] < ADM_DEPUTY_CHIEF && AdminInfo[params[0]][admSpectate]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Следить за этим администратором запрещено");
	else if(pInfo[params[0]][Spectating][0] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Этот администратор уже за кем-то следит");
 	new Float:xPos[4];
	GetPlayerPos(playerid, xPos[0], xPos[1], xPos[2]);
	GetPlayerFacingAngle(playerid, xPos[3]);
	if(pInfo[playerid][Spectating][0] == INVALID_PLAYER_ID)
	{
	    SetPVarInt(playerid, "SpecInt", GetPlayerInterior(playerid));
		SetPVarInt(playerid, "SpecVw", GetPlayerVirtualWorld(playerid));
		SetPVarFloat(playerid, "SpecX", xPos[0]);
		SetPVarFloat(playerid, "SpecY", xPos[1]);
		SetPVarFloat(playerid, "SpecZ", xPos[2]);
		SetPVarFloat(playerid, "SpecA", xPos[3]);
		if(pInfo[playerid][pAdmin] < ADM_FOUNDER)
		{
			new string[128];
			format(string, sizeof(string), "[A] %s[%d] начал наблюдать за %s[%d]", GetName(playerid), playerid, GetName(params[0]), params[0]);
    		SendAdminMessage(COLOR_FADE1, string);
 		}
 		DestroyPlayerTD(playerid, pTemp[playerid][SpecTxt]);
		pTemp[playerid][SpecTxt] = CreatePlayerTextDraw(playerid, 496.000000, 219.625000, "Spectate");
		PlayerTextDrawBackgroundColor(playerid, pTemp[playerid][SpecTxt], 255);
		PlayerTextDrawFont(playerid, pTemp[playerid][SpecTxt], 2);
		PlayerTextDrawLetterSize(playerid, pTemp[playerid][SpecTxt], 0.240000, 1.271875);
		PlayerTextDrawColor(playerid, pTemp[playerid][SpecTxt], -1);
		PlayerTextDrawSetOutline(playerid, pTemp[playerid][SpecTxt], 1);
		PlayerTextDrawShow(playerid, pTemp[playerid][SpecTxt]);
		ShowMenuForPlayer(spectate_menu, playerid);
	}
	SetPlayerInterior(playerid, GetPlayerInterior(params[0]));
	SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(params[0]));
	TogglePlayerSpectating(playerid, 1);
	if(IsPlayerInAnyVehicle(params[0])) PlayerSpectateVehicle(playerid, GetPVarInt(params[0],"VehicleEnters"));
	else PlayerSpectatePlayer(playerid, params[0]);
	pInfo[playerid][Spectating][0] = params[0];
	pInfo[playerid][Spectating][1] = playerid;
	if(pInfo[params[0]][pAdmin] >= ADM_FOUNDER)
	{
		new string[50];
		format(string, sizeof(string), "За вами начал следить {33CCFF}%s", GetName(playerid));
		SendClientMessage(params[0], COLOR_GREY, string);
	}
	return 1;
}
CMD:sp(playerid, params[]) return cmd_spec(playerid, params);

CMD:specoff(playerid)
{
	IsAdmin(ADM_HELPER);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(pInfo[playerid][Spectating][0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Вы не наблюдаете за игроком!");
	if(pInfo[playerid][pAdmin] < ADM_FOUNDER)
	{
		new string[128];
		format(string, sizeof(string), "[A] %s[%d] закончил наблюдение за %s[%i]", GetName(playerid), playerid, GetName(pInfo[playerid][Spectating][0]), pInfo[playerid][Spectating][0]);
	    SendAdminMessage(COLOR_FADE1, string);
  	}
	TogglePlayerSpectating(playerid, 0);
    PlayerTextDrawHide(playerid, pTemp[playerid][SpecTxt]);
	DestroyPlayerTD(playerid, pTemp[playerid][SpecTxt]);
    HideMenuForPlayer(spectate_menu, playerid);
	return 1;
}
CMD:spoff(playerid) return cmd_specoff(playerid);

CMD:respv(playerid, params[])
{
	IsAdmin(ADM_ADMIN);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(isnull(params)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /respv [радиус] или [-1]");
    if(strval(params) == -1)
	{
	    if(pInfo[playerid][pAdmin] < ADM_OLDER_ADMIN) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 5 уровня администратора");
        new Float:x, Float:y, Float:z, destroyvehs;
        for(new i = 1, j = MAX_VEHICLES; i <= j; i++)
		{
			GetPlayerPos(playerid, x, y, z);
			if(IsVehicleInRangeOfPoint(i, 200, x, y, z))
			{
			    if(Iter_Contains(adm_vehicles, i))
			    {
			        if(IsValidVehicle(i))
					{
						DestroyVehicle(i);
						destroyvehs++;
					}
			        TotalAdminVehicles -= destroyvehs;
			        Iter_Remove(adm_vehicles, i);
			    }
			    SetVehicleToRespawn(i);
			}
		}
		new string[128];
		format(string, sizeof(string), "[A] %s зареспавнил транспорт в области своей видимости", GetName(playerid));
		SendAdminMessage(COLOR_GRAD1, string);
	}
	else if(10 <= strval(params) <= 80)
	{
	    new Float:x, Float:y, Float:z, destroyvehs;
        for(new i = 1, j = MAX_VEHICLES; i <= j; i++)
		{
		    GetPlayerPos(playerid, x, y, z);
		    if(IsVehicleInRangeOfPoint(i, strval(params), x, y, z))
			{
				if(Iter_Contains(adm_vehicles, i))
			    {
			        if(IsValidVehicle(i))
					{
						DestroyVehicle(i);
						destroyvehs++;
					}
			        TotalAdminVehicles -= destroyvehs;
			        Iter_Remove(adm_vehicles, i);
			    }
				SetVehicleToRespawn(i);
			}
		}
		new string[128];
		format(string, sizeof(string), "[A] %s зареспавнил транспорт в радиусе %d м", GetName(playerid), strval(params));
		SendAdminMessage(COLOR_GRAD1, string);
	}
	else SendClientMessage(playerid, COLOR_GREY, "Радиус от 10 до 80 метров либо -1 (область Вашей видимости)");
	return 1;
}

CMD:gomechanic(playerid, params[])
{
	if(pInfo[playerid][pJob] != JOB_MECHANIC) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /gomechanic [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(!MechanicON[params[0]]) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не вызывал механика либо его вызов уже приняли");
	foreach(new i : Player)
	{
		if(!gPlayerLogged[i]) continue;
		if(pInfo[i][pJob] == JOB_MECHANIC) SendMes(i, COLOR_YELLOW, "Автомеханик %s принял вызов %s", GetName(playerid), GetName(params[0]));
	}
	SendMes(params[0], COLOR_GREEN, "Автомеханик %s принял ваш вызов, ждите", GetName(playerid));
	SendMes(playerid, COLOR_GREEN, "Игрок %s отмечен на карте", GetName(params[0]));
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(params[0], X, Y, Z);
	DisablePlayerRaceCheckpoint(playerid);
	SetPlayerRaceCheckpoint(playerid, 1, X, Y, Z, 0.0, 0.0, 0.0, 5);
	UseGPS[playerid] = true;
	for(new i; i < 2; i++) TextDrawShowForPlayer(playerid, enable_gps_TD[i]);
	MechanicON[params[0]] = false;
	SetPVarInt(params[0], "CallMech", gettime()+600);
	return 1;
}

CMD:gotaxi(playerid, params[])
{
    if(pInfo[playerid][pJob] != JOB_TAXI) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
    else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /gotaxi [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
    else if(!GetPVarInt(playerid, "PriceTaxi")) return SendClientMessage(playerid, COLOR_GREY, "Принять вызов можно только с автомобиля такси с настроеным тарифом!");
	else if(!TaxiON[params[0]]) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не заказывал такси либо его заказ уже приняли");
	foreach(new i : Player)
	{
		if(!gPlayerLogged[i]) continue;
		if(pInfo[i][pJob] == JOB_TAXI) SendMes(i, COLOR_YELLOW, "Таксист %s принял вызов %s",GetName(playerid), GetName(params[0]));
	}
	SendMes(params[0], COLOR_GREEN, "Таксист %s принял ваш вызов, ждите", GetName(playerid));
	SendMes(playerid, COLOR_GREEN, "Игрок %s отмечен на карте", GetName(params[0]));
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(params[0], X, Y, Z);
	DisablePlayerRaceCheckpoint(playerid);
	SetPlayerRaceCheckpoint(playerid, 1, X, Y, Z, 0.0, 0.0, 0.0, 5);
	UseGPS[playerid] = true;
	for(new i; i < 2; i++) TextDrawShowForPlayer(playerid, enable_gps_TD[i]);
	TaxiON[params[0]] = false;
	SetPVarInt(params[0], "CallTaxi", gettime()+600);
	return 1;
}

CMD:gomedhelp(playerid, params[])
{
    if(!IsAMedic(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /gomedhelp [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(!MedicON[params[0]]) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не вызывал мед.помощь либо его вызов уже приняли");
	foreach(new i : Player)
	{
		if(!gPlayerLogged[i]) continue;
		if(IsAMedic(i)) SendMes(i, COLOR_YELLOW, "%s %s (%s) принял вызов %s", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid), Fraction_Name[pInfo[playerid][pMember]], GetName(params[0]));
	}
	SendMes(params[0], COLOR_GREEN, "%s %s принял ваш вызов, ждите", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid));
	SendMes(playerid, COLOR_GREEN, "Игрок %s отмечен на карте", GetName(params[0]));
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(params[0], X, Y, Z);
	DisablePlayerRaceCheckpoint(playerid);
	SetPlayerRaceCheckpoint(playerid, 1, X, Y, Z, 0.0, 0.0, 0.0, 5);
	UseGPS[playerid] = true;
	for(new i; i < 2; i++) TextDrawShowForPlayer(playerid, enable_gps_TD[i]);
	MedicON[params[0]] = false;
	SetPVarInt(params[0], "CallMedic", gettime()+600);
	return 1;
}

CMD:gopolice(playerid, params[])
{
    if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /gopolice [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(!PoliceON[params[0]]) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не вызывал полицию либо его вызов уже приняли");
	foreach(new i : Player)
	{
		if(!gPlayerLogged[i]) continue;
		if(IsACop(i)) SendMes(i, COLOR_YELLOW, "%s %s (%s) принял вызов %s", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid), Fraction_Name[pInfo[playerid][pMember]], GetName(params[0]));
	}
	SendMes(params[0], COLOR_GREEN, "%s %s принял ваш вызов, ждите", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid));
	SendMes(playerid, COLOR_GREEN, "Игрок %s отмечен на карте", GetName(params[0]));
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(params[0], X, Y, Z);
	DisablePlayerRaceCheckpoint(playerid);
	SetPlayerRaceCheckpoint(playerid, 1, X, Y, Z, 0.0, 0.0, 0.0, 5);
	UseGPS[playerid] = true;
	for(new i; i < 2; i++) TextDrawShowForPlayer(playerid, enable_gps_TD[i]);
	PoliceON[params[0]] = false;
	SetPVarInt(params[0], "CallPolice", gettime()+600);
	return 1;
}

CMD:gps(playerid, params[])
{
	if(GetPlayerInterior(playerid) != 0 || GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, COLOR_GREY, "GPS-навигатор не может установить соединение со спутником. Выйдите на улицу.");
	else if(pTemp[playerid][pBusRoute]>0) return SendClientMessage(playerid, COLOR_GREY, "В данный момент это действие не может быть выполнено");
	if(UseGPS[playerid]) {
		SendClientMessage(playerid, COLOR_RED, "Вы отключили метку на карте");
		DisablePlayerRaceCheckpoint(playerid);
		UseGPS[playerid] = false;
		for(new i; i < 2; i++) TextDrawHideForPlayer(playerid, enable_gps_TD[i]);
	}
	ShowPlayerDialog(playerid, dGPS, DIALOG_STYLE_LIST, "{FFCC00}GPS", "\
		1. Основные места\n\
		2. Работы\n\
		3. Государственные организации\n\
		4. Нелегальные организации\n\
		5. Автосалоны и тюнинги\n\
		6. Банки\n\
		7. Бизнесы\n\
		8. Развлечения\n\
		9. Прочее", "Выбрать", "Отмена");
	return 1;
}

CMD:gm(playerid, params[])
{
    IsAdmin(ADM_MODER);
    else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /gm [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(GetPVarInt(params[0], "AFK_Time") > 1) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Игрок находится в AFK!");
	else if(gCheckGodMode[playerid]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы тестируете другого человека, подождите окончания теста!");
	new Float:gmhealth;
	GetPlayerHealth(params[0], gmhealth);
	new Float:boomx, Float:boomy, Float:boomz;
	GetPlayerPos(params[0],boomx, boomy, boomz);
    CreateExplosion(boomx, boomy, boomz+7, 5, 0.5);
  	SetTimerEx("@GmTest", 1000, false, "ddf", playerid, params[0], gmhealth);
  	gCheckGodMode[playerid] = true;
    return 1;
}

CMD:setskill(playerid, params[])
{
	IsAdmin(ADM_FOUNDER);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "ddd", params[0], params[1], params[2]))
	{
		SendClientMessage(playerid, COLOR_WHITE, "Введите: /setskill [id игрока] [номер] [количество]");
		SendClientMessage(playerid, COLOR_WHITE, "0) Silenced Pistol, 1) Desert Eagle, 2) Shotgun, 3) MP5, 4) AK47, 5) M4, 6) Colt 45, 7) UZI");
		SendClientMessage(playerid, COLOR_WHITE, "8) Дальнобойщик");
		return 1;
	}
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(!(0 <= params[1] <= 8)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Неизвестнео значение");
	switch(params[1])
	{
	    case 0..7:
	    {
	        if(!(0 <= params[2] <= 100)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Значение владения оружием может быть от 0 до 100");
			pInfo[params[0]][pGunSkill][params[1]] = params[2];
			SendClientMessage(playerid, COLOR_GRAD1, "Уровень владения оружием игроку установлен");
	    }
	    case 8:
	    {
	        if(params[2] <= 0) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Значение опыта работы дальнобойщиком не может быть меньше или равно нулю");
	        pInfo[params[0]][pTruckSkill] = params[2];
	        MysqlUpdatePlayerInt(params[0],"truckskill",pInfo[params[0]][pTruckSkill]);
	        SendClientMessage(playerid, COLOR_GRAD1, "Опыт работы дальнобойщиком игроку установлен");
	    }
	}
	return 1;
}

CMD:setvip(playerid, params[])
{
    IsAdmin(ADM_FOUNDER);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "dd", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setvip [id игрока] [кол-во дней]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(!(0 <= params[1] <= 365)) return SendClientMessage(playerid, COLOR_GREY, "Нельзя выдавать VIP статус более чем на 365 дней");
	new string[128];
	if(params[1] > 0)
	{
		new year, month, day;
		new current_date = getdate(year, month, day);
		if(!pInfo[params[0]][pVip])
		{
		    pInfo[params[0]][pVip] = 1;
		    pInfo[params[0]][pVipTime] = current_date + params[1];
		}
		else
		{
		    new time_left = pInfo[params[0]][pVipTime] - current_date;
		    pInfo[params[0]][pVipTime] = time_left + (current_date + params[1]);
		}
	    format(string, sizeof(string), "Вы выдали VIP статус игроку %s на %i дней", GetName(params[0]), params[1]);
	    SendClientMessage(playerid, COLOR_YELLOW, string);
	    format(string, sizeof(string), "Администратор %s выдал вам VIP статус на %i дней", GetName(playerid), params[1]);
	    SendClientMessage(params[0], COLOR_YELLOW, string);
	    format(string, sizeof(string), "%s выдал VIP статус %s на %i дней", GetName(playerid), GetName(params[0]), params[1]);
	    WriteLog("SetVip", string);
	}
	else if(params[1] == 0)
	{
	    pInfo[params[0]][pVip] = pInfo[params[0]][pVipTime] = 0;
	    format(string, sizeof(string), "Вы забрали VIP статус у игрока %s", GetName(params[0]));
	    SendClientMessage(playerid, COLOR_YELLOW, string);
	    format(string, sizeof(string), "Администратор %s забрал у вас VIP статус", GetName(playerid));
	    SendClientMessage(params[0], COLOR_YELLOW, string);
	    format(string, sizeof(string), "%s забрал VIP статус у игрока %s", GetName(playerid), GetName(params[0]));
	    WriteLog("SetVip", string);
	}
	return 1;
}

CMD:setadmin(playerid, params[]) {
	new playername[24], adm_level,
		string[100];
    IsAdmin(ADM_DEPUTY_CHIEF);
	if(sscanf(params, "s[24]i", playername, adm_level)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setadmin [ник игрока] [уровень админа]");
	else if(CheckExceptionName(playername)) return 0;
	else if(!(ADM_NONE <= adm_level <= ADM_DEPUTY_CHIEF)) return SendClientMessage(playerid, COLOR_GREY, "Уровень администратора от 1 до 6");
	format(string, sizeof(string), "SELECT * FROM "T_ADMIN" WHERE name = '%s'", playername);
	mysql_tquery(dbHandle, string, "@SetAdmin", "isi", playerid, playername, adm_level);
	return 1;
}
CMD:admremove(playerid, params[])
{
    IsAdmin(ADM_FOUNDER);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /admremove [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(CheckExceptionName(GetName(params[0]))) return 0;
	else if(pInfo[params[0]][pAdmin] < ADM_HELPER) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не является администратором");
	RemoveAdmin(params[0], GetName(params[0]));
	new string[128];
	format(string, sizeof(string), "[Внимание] %s[%i] снял %s с должности администратора", GetName(playerid), playerid, GetName(params[0]));
	SendAdminMessageEx(COLOR_RED, string, ADM_CHIEF);
	format(string, sizeof(string), "%s снял %s с должности администратора", GetName(playerid), GetName(params[0]));
	WriteLog("DeleteAdmin", string);
	return 1;
}
CMD:admdown(playerid, params[])
{
    IsAdmin(ADM_CHIEF);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /admdown [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(pInfo[params[0]][pAdmin] < ADM_HELPER) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не является администратором");
	else if(pInfo[params[0]][pAdmin] > ADM_DEPUTY_CHIEF) return SendClientMessage(playerid, COLOR_GREY, "Этот администратор не может быть понижен");
	else if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Нельзя изменить свой уровень");
	new string[128];
	if(pInfo[params[0]][pAdmin] > 1)
	{
		pInfo[params[0]][pAdmin]--;
		MysqlUpdatePlayerInt(params[0], "admin", pInfo[params[0]][pAdmin]);
		format(string, sizeof(string), "%s понизил Ваш уровень администратора", GetName(playerid));
		SendClientMessage(params[0], COLOR_YELLOW, string);
		format(string, sizeof(string), "[A] %s[%d] понизил администратора %s[%d] до %d уровня", GetName(playerid), playerid, GetName(params[0]), params[0], pInfo[params[0]][pAdmin]);
		SendAdminMessageEx(COLOR_GRAD1, string, ADM_CHIEF);
		mysql_format(dbHandle, string, sizeof(string), "UPDATE "T_ADMIN" SET level = %d WHERE name = '%s' LIMIT 1", pInfo[params[0]][pAdmin], GetName(params[0]));
		mysql_tquery(dbHandle, string, "", "");
		format(string, sizeof(string), "%s понизил администратора %s до %d уровня", GetName(playerid), GetName(params[0]), pInfo[params[0]][pAdmin]);
		WriteLog("EditAdmin", string);
	}
	else if(pInfo[params[0]][pAdmin] == 1)
	{
	    RemoveAdmin(params[0], GetName(params[0]));
	    format(string, sizeof(string), "%s снял %s с должности администратора", GetName(playerid), GetName(params[0]));
		SendAdminMessageEx(COLOR_RED, string, ADM_CHIEF);
		WriteLog("DeleteAdmin", string);
	}
	return 1;
}
CMD:admup(playerid, params[])
{
    IsAdmin(ADM_CHIEF);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /admup [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(pInfo[params[0]][pAdmin] < ADM_HELPER) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не является администратором");
	else if(pInfo[params[0]][pAdmin] > ADM_DEPUTY_CHIEF) return SendClientMessage(playerid, COLOR_GREY, "Этот администратор не может быть повышен");
	else if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Нельзя изменить свой уровень");
	new string[128];
	pInfo[params[0]][pAdmin]++;
	MysqlUpdatePlayerInt(params[0], "admin", pInfo[params[0]][pAdmin]);
	format(string, sizeof(string), "%s повысил Ваш уровень администратора", GetName(playerid));
	SendClientMessage(params[0], COLOR_YELLOW, string);
	format(string, sizeof(string), "[A] %s[%d] повысил администратора %s[%d] до %d уровня", GetName(playerid), playerid, GetName(params[0]), params[0], pInfo[params[0]][pAdmin]);
	SendAdminMessageEx(COLOR_GRAD1, string, ADM_CHIEF);
	mysql_format(dbHandle, string, sizeof(string), "UPDATE "T_ADMIN" SET level = %d WHERE name = '%s' LIMIT 1", pInfo[params[0]][pAdmin], GetName(params[0]));
	mysql_tquery(dbHandle, string, "", "");
	format(string, sizeof(string), "%s повысил администратора %s до %d уровня", GetName(playerid), GetName(params[0]), pInfo[params[0]][pAdmin]);
	WriteLog("EditAdmin", string);
	return 1;
}
CMD:setleader(playerid, params[])
{
	IsAdmin(ADM_OLDER_ADMIN);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setleader [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(IsPlayerInAnyVehicle(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок не должен находиться в транспорте!");
	else if(pInfo[params[0]][pLevel] < 3) return SendClientMessage(playerid, COLOR_GREY, "У игрока нету 3 уровня!");
	else if((pInfo[params[0]][pAdmin] >= ADM_HELPER && pInfo[params[0]][pAdmin] <= ADM_CHIEF) && pInfo[playerid][pAdmin] != ADM_FOUNDER) return SendClientMessage(playerid, COLOR_GREY, "Администратора нельзя ставить на пост лидера!");
	else if(pInfo[playerid][pAdmin] != ADM_FOUNDER && pInfo[params[0]][pAdmin] == ADM_FOUNDER) return SendClientMessage(playerid, COLOR_GREY, "Администратора нельзя ставить на пост лидера!");
	else if(pInfo[params[0]][pTempLeader]) return SendClientMessage(playerid, COLOR_GREY, "Сначала снимите с себя права временного лидера!");
	if(pInfo[params[0]][pLeader])
	{
		LeaveFractionPlayer(params[0]);
		SendMes(playerid, COLOR_BLUE, "Вы сняли %s с должности лидера организации",GetName(params[0]));
		SendMes(params[0], COLOR_BLUE, "Администратор %s снял Вас с должности лидера организации", GetName(playerid));
		SendClientMessage(params[0], COLOR_GREEN, "[Подсказка] {FFFFFF}Местом спавна автоматически назначен вокзал. Изменить место спавна {AFAFAF}/setspawn");
	}
	else
	{
		if(pInfo[params[0]][pLeader] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок лидер другой организации!");
		if(pInfo[params[0]][pMember] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не состоит в Вашей организации!");
		stringer[0] = EOS;
		for(new i = 1; i < MAX_FRACTIONS; i++) format(stringer, 1000, "%s№%i - %s\n", stringer, i, Fraction_Name[i]);
		SetPVarInt(playerid, "actplayerid", params[0]);
		ShowPlayerDialog(playerid, dFracMenu, 2, "{FFCC00}Выберите организацию", stringer, "Принять", "Отмена");
	}
	return 1;
}
CMD:templeader(playerid)
{
	IsAdmin(ADM_MODER);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	if(pInfo[playerid][pTempLeader])
	{
		if(pInfo[playerid][pTempLeader] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не являетесь временным лидером!");
		LeaveFractionPlayer(playerid);
		pInfo[playerid][pTempLeader] = TEAM_NONE;
		MysqlUpdatePlayerInt(playerid, "templeader", pInfo[playerid][pTempLeader]);
		SendClientMessage(playerid, COLOR_BLUE, "Вы сняли себя с должности временного лидера организации");
	}
	else
	{
		stringer[0] = EOS;
		for(new i = 1; i < MAX_FRACTIONS; i++) format(stringer, 1000, "%s№%i - %s\n", stringer, i, Fraction_Name[i]);
		ShowPlayerDialog(playerid, dTempLeader, 2, "{FFCC00}Выберите организацию", stringer, "Принять", "Отмена");
	}
	return 1;
}
CMD:f(playerid, params[])
{
	if(pInfo[playerid][pMember] >= 7 && pInfo[playerid][pMember] <= 11 || pInfo[playerid][pMember] >= 13 && pInfo[playerid][pMember] <= 17)
	{
		if(pInfo[playerid][pMuted] > 0) return SendMuteMessage(playerid);
		else if(!(pInfo[playerid][pSettings] & setFractionChat)) return SendClientMessage(playerid, COLOR_GREY, "Ваш чат организации отключен!");
		else if(pCuff[playerid][pCuffee] == playerid) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] На Вас надеты наручники!");
		else if(isnull(params)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /f [текст]");
		else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendClientMessage(playerid,COLOR_GREY,"Не флуди");
        else if(IsAIP(params[0])) return 0;
		else if(CheckString(params[0], 2)) return PlayerGetsChatBan(playerid, params[0]);
		new string[128], mesid[128];
		format(string, sizeof(string), "[F] %s %s: %s", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid), params[0]);
		format(mesid, sizeof(mesid), "[F] %s %s[%d]: %s", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid), playerid, params[0]);
		if(!(pInfo[playerid][pSettings] & setPlayerIDChat)) SendFMes(pInfo[playerid][pMember], 0x4682B4AA, string);
		else SendFMes(pInfo[playerid][pMember], 0x4682B4AA, mesid);
		SetString(OldMessage[playerid], params[0]);
		TextReset[playerid] = gettime()+3;
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return 1;
}

CMD:fn(playerid, params[])
{
	if(pInfo[playerid][pMember] >= 7 && pInfo[playerid][pMember] <= 11 || pInfo[playerid][pMember] >= 13 && pInfo[playerid][pMember] <= 17)
	{
		if(pInfo[playerid][pMuted] > 0) return SendMuteMessage(playerid);
		else if(!(pInfo[playerid][pSettings] & setFractionChat)) return SendClientMessage(playerid, COLOR_GREY, "Ваш чат организации отключен!");
		else if(isnull(params)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /fn [текст]");
		else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendClientMessage(playerid,COLOR_GREY,"Не флуди");
        else if(IsAIP(params[0])) return 0;
		else if(CheckString(params[0], 2)) return PlayerGetsChatBan(playerid, params[0]);
		new string[128], mesid[128];
		if(pInfo[playerid][pAdmin] == ADM_NONE)
		{
			format(string, sizeof(string), "(( [F] %s %s: %s ))", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid), params[0]);
			format(mesid, sizeof(mesid), "(( [F] %s %s[%d]: %s ))", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid), playerid, params[0]);
		}
		else
		{
		    format(string, sizeof(string), "(( [F] Администратор %s: %s ))", GetName(playerid), params[0]);
			format(mesid, sizeof(mesid), "(( [F] Администратор %s[%d]: %s ))", GetName(playerid), playerid, params[0]);
		}
		if(!(pInfo[playerid][pSettings] & setPlayerIDChat)) SendFMes(pInfo[playerid][pMember], 0x4682B4AA, string);
		else SendFMes(pInfo[playerid][pMember], 0x4682B4AA, mesid);
		SetString(OldMessage[playerid], params[0]);
		TextReset[playerid] = gettime()+3;
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return 1;
}

CMD:r(playerid, params[])
{
	if(IsACop(playerid) || pInfo[playerid][pMember] == TEAM_NG || IsAMedic(playerid) || IsAMayor(playerid) || pInfo[playerid][pMember] == TEAM_AUTOSCHOOL || IsANews(playerid))
	{
		if(pInfo[playerid][pMuted] > 0) return SendMuteMessage(playerid);
		else if(!(pInfo[playerid][pSettings] & setFractionChat)) return SendClientMessage(playerid, COLOR_GREY, "Ваш чат организации отключен!");
		else if(pCuff[playerid][pCuffee] == playerid) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] На Вас надеты наручники!");
		else if(isnull(params)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /r [текст]");
		else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendClientMessage(playerid,COLOR_GREY,"Не флуди");
        else if(IsAIP(params[0])) return 0;
		else if(CheckString(params[0], 2)) return PlayerGetsChatBan(playerid, params[0]);
		new string[128], mesid[128];
		format(string, sizeof(string), "[R] %s %s: %s", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid), params[0]);
		format(mesid, sizeof(mesid), "[R] %s %s[%d]: %s", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid), playerid, params[0]);
		if(!(pInfo[playerid][pSettings] & setPlayerIDChat)) SendFMes(pInfo[playerid][pMember], 0x5da130FF, string);
		else SendFMes(pInfo[playerid][pMember], 0x5da130FF, mesid);
		SetPlayerChatBubble(playerid,"сообщает в рацию",COLOR_PURPLE,30.0,10000);
		SetString(OldMessage[playerid], params[0]);
		TextReset[playerid] = gettime()+3;
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return 1;
}

CMD:rn(playerid, params[])
{
	if(IsACop(playerid) || pInfo[playerid][pMember] == TEAM_NG || IsAMedic(playerid) || IsAMayor(playerid) || pInfo[playerid][pMember] == TEAM_AUTOSCHOOL || IsANews(playerid))
	{
		if(pInfo[playerid][pMuted] > 0) return SendMuteMessage(playerid);
		else if(!(pInfo[playerid][pSettings] & setFractionChat)) return SendClientMessage(playerid, COLOR_GREY, "Ваш чат организации отключен!");
		else if(isnull(params)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /rn [текст]");
		else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendClientMessage(playerid,COLOR_GREY,"Не флуди");
        else if(IsAIP(params[0])) return 0;
		else if(CheckString(params[0], 2)) return PlayerGetsChatBan(playerid, params[0]);
		new string[128], mesid[128];
		if(pInfo[playerid][pAdmin] == ADM_NONE)
		{
		    format(string, sizeof(string), "(( [R] %s %s: %s ))", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid), params[0]);
			format(mesid, sizeof(mesid), "(( [R] %s %s[%d]: %s ))", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid), playerid, params[0]);
		}
		else
		{
		    format(string, sizeof(string), "(( [R] Администратор %s: %s ))", GetName(playerid), params[0]);
			format(mesid, sizeof(mesid), "(( [R] Администратор %s[%d]: %s ))", GetName(playerid), playerid, params[0]);
		}
		if(!(pInfo[playerid][pSettings] & setPlayerIDChat)) SendFMes(pInfo[playerid][pMember], 0x5da130FF, string);
		else SendFMes(pInfo[playerid][pMember], 0x5da130FF, mesid);
		SetPlayerChatBubble(playerid,"сообщает в рацию",COLOR_PURPLE,30.0,10000);
		SetString(OldMessage[playerid], params[0]);
		TextReset[playerid] = gettime()+3;
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return 1;
}

CMD:d(playerid, params[])
{
	if(IsACop(playerid) || pInfo[playerid][pMember] == TEAM_NG || IsAMedic(playerid) || IsAMayor(playerid) || pInfo[playerid][pMember] == TEAM_AUTOSCHOOL || IsANews(playerid))
	{
		if(pInfo[playerid][pMuted] > 0) return SendMuteMessage(playerid);
		else if(!(pInfo[playerid][pSettings] & setFractionChat)) return SendClientMessage(playerid, COLOR_GREY, "Ваш чат организации отключен!");
		else if(GetPVarInt(playerid,"dep") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Следующее сообщение вы сможете отправить через 15 секунд!");
		else if(isnull(params)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /d [текст]");
		else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendClientMessage(playerid,COLOR_GREY,"Не флуди");
        else if(IsAIP(params[0])) return 0;
		else if(CheckString(params[0], 2)) return PlayerGetsChatBan(playerid, params[0]);
		new string[128], mesid[128];
		if(pInfo[playerid][pAdmin] == ADM_NONE)
		{
			format(string, sizeof(string), "[D] [%s] %s %s: %s", Fraction_Name[pInfo[playerid][pMember]], Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid), params[0]);
			format(mesid, sizeof(mesid), "[D] [%s] %s %s[%d]: %s", Fraction_Name[pInfo[playerid][pMember]], Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid), playerid, params[0]);
		}
		else
		{
		    format(string, sizeof(string), "[D] Администратор %s: %s", GetName(playerid), params[0]);
			format(mesid, sizeof(mesid), "[D] Администратор %s[%d]: %s", GetName(playerid), playerid, params[0]);
		}
		if(!(pInfo[playerid][pSettings] & setPlayerIDChat)) SendDMes(0x007FFFFF, string);
		else SendDMes(0x007FFFFF, mesid);
		SetPlayerChatBubble(playerid,"сообщает в депортамент",COLOR_PURPLE,30.0,10000);
		SetPVarInt(playerid,"dep",gettime() + 15);
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return 1;
}

CMD:uninviteoff(playerid, params[])
{
    if(!pInfo[playerid][pTempLeader])
	{
		if(!IsAbleToUninvite(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	}
	else
	{
	    if(pInfo[playerid][pAdmin] < ADM_ADMIN) return SendClientMessage(playerid, COLOR_GREY, "Данная возможность доступна для администраторов 4 уровня и выше");
	}
    new playername[MAX_PLAYER_NAME];
    if(sscanf(params, "s[24]", playername)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /uninviteoff [ник игрока]");
    else if(GetPlayerID(playername) != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок в сети, используйте команду /uninvite");
    mysql_query_string[0] = EOS;
	format(mysql_query_string, sizeof(mysql_query_string), "SELECT templeader,member,leader FROM "T_ACCOUNTS" WHERE name = '%s' LIMIT 1", playername);
    mysql_tquery(dbHandle, mysql_query_string, "@OfflineUninvite", "is", playerid, playername);
	return 1;
}
CMD:showall(playerid)
{
	if(!pInfo[playerid][pLeader]) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	ShowPlayerDialog(playerid, dShowAll, DIALOG_STYLE_LIST, "{3399FF}Выберите тип сортировки списка", "1. В алфавитном порядке\n2. По возрастанию ранга\n3. По убыванию ранга\n4. По возрастанию уровня\n5. По убыванию уровня", "Выбрать", "Закрыть");
	return 1;
}

CMD:fwarn(playerid, params[])
{
    if(!pInfo[playerid][pTempLeader])
	{
		if(!IsAbleToInvite(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	}
	else
	{
	    if(pInfo[playerid][pAdmin] < ADM_ADMIN) return SendClientMessage(playerid, COLOR_GREY, "Данная возможность доступна для администраторов 4 уровня и выше");
	}
	new targetid, reason[32];
	if(sscanf(params, "ds[32]", targetid, reason)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /fwarn [id игрока] [причина]");
	else if(targetid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[targetid]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(!pInfo[targetid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Игрок не состоит в организации!");
	else if(pInfo[targetid][pLeader]) return SendClientMessage(playerid, COLOR_GREY, "Лидеру нельзя выдать выговор!");
	else if(pInfo[targetid][pMember] != pInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Игрок не состоит в Вашей организации!");
	else if(playerid == targetid) return SendClientMessage(playerid, COLOR_GREY, "Самому себя нельзя выдать выговор!");
	new string[120];
	if(pInfo[targetid][pMemberWarn] == 3)
	{
	    format(string, sizeof(string), "Вы выдали выговор %s [3/3]. Причина: %s", GetName(targetid), reason);
		SendClientMessage(playerid, COLOR_BLUE, string);
		format(string, sizeof(string), "%s %s выдал%s Вам выговор [3/3]. Причина: %s", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid), (pInfo[playerid][pSex]==1)?(""):("а"), reason);
		SendClientMessage(targetid, COLOR_BLUE, string);
		format(string, sizeof(string), "%s %s выдал%s выговор игроку %s [3/3]. Причина: %s. Игрок уволен", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid), (pInfo[playerid][pSex]==1)?(""):("а"), GetName(targetid), reason);
		SendFMes(pInfo[playerid][pMember], COLOR_YELLOW, string);
		LeaveFractionPlayer(targetid);
		SendClientMessage(targetid, COLOR_RED, "Вы были уволены с организации по причине трёх выговоров!");
		SendClientMessage(targetid, COLOR_GREEN, "[Подсказка] {FFFFFF}Местом спавна автоматически назначен вокзал. Изменить место спавна {AFAFAF}/setspawn");
	}
	else
	{
	    pInfo[targetid][pMemberWarn] ++;
        MysqlUpdatePlayerInt(targetid, "memberwarn", pInfo[targetid][pMemberWarn]);
	    format(string, sizeof(string), "Вы выдали выговор %s [%d/3]. Причина: %s", GetName(targetid), pInfo[targetid][pMemberWarn], reason);
		SendClientMessage(playerid, COLOR_BLUE, string);
        format(string, sizeof(string), "%s %s выдал%s Вам выговор [%d/3]. Причина: %s", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid), (pInfo[playerid][pSex]==1)?(""):("а"), pInfo[targetid][pMemberWarn], reason);
		SendClientMessage(targetid, COLOR_BLUE, string);
		format(string, sizeof(string), "%s %s выдал%s выговор игроку %s [%d/3]. Причина: %s", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid), (pInfo[playerid][pSex]==1)?(""):("а"), GetName(targetid), pInfo[targetid][pMemberWarn], reason);
		SendFMes(pInfo[playerid][pMember], COLOR_YELLOW, string);
	}
	return 1;
}

CMD:funwarn(playerid, params[])
{
    if(!pInfo[playerid][pTempLeader])
	{
		if(!IsAbleToInvite(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	}
	else
	{
	    if(pInfo[playerid][pAdmin] < ADM_ADMIN) return SendClientMessage(playerid, COLOR_GREY, "Данная возможность доступна для администраторов 4 уровня и выше");
	}
	new targetid, reason[32];
	if(sscanf(params, "ds[32]", targetid, reason)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /fuwarn [id игрока] [причина]");
	else if(targetid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[targetid]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(!pInfo[targetid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Игрок не состоит в организации!");
	else if(pInfo[targetid][pLeader]) return SendClientMessage(playerid, COLOR_GREY, "Лидеру нельзя снять выговор!");
	else if(pInfo[targetid][pMember] != pInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Игрок не состоит в Вашей организации!");
	else if(playerid == targetid) return SendClientMessage(playerid, COLOR_GREY, "Самому себя нельзя снять выговор!");
	else if(!pInfo[targetid][pMemberWarn]) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет выговора!");
	new string[128];
	format(string, sizeof(string), "Вы сняли выговор %s. Причина: %s", GetName(targetid), reason);
	SendClientMessage(playerid, COLOR_BLUE, string);
    format(string, sizeof(string), "%s %s снял%s Вам выговор. Причина: %s", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid), (pInfo[playerid][pSex]==1)?(""):("а"), reason);
	SendClientMessage(targetid, COLOR_BLUE, string);
	pInfo[targetid][pMemberWarn] --;
	MysqlUpdatePlayerInt(targetid, "memberwarn", pInfo[targetid][pMemberWarn]);
	return 1;
}
CMD:find(playerid) {
	if(pInfo[playerid][pMember] == 0) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	new full, text[20] = "None\t\t";
	stringer[0] = EOS;
    strcat(stringer, "{EAD86A}ID\tУровень\tТелефон\tРанг\tВыговоры\tИмя игрока\n\n");
	foreach(new i:Player) {
		if(!gPlayerLogged[i] || pInfo[i][pAdmin] || pInfo[i][pMember] != pInfo[playerid][pMember] || pInfo[i][pRank]<1 || pInfo[i][pMember]<1) continue;
	    if(pInfo[i][pPhoneNumber]>1) format(text, sizeof(text), "%i\t\t", pInfo[i][pPhoneNumber]);
	    if(GetPVarInt(i, "AFK_Time") > 1) {
	    	format(stringer, sizeof(stringer), "%s{FFFFFF}%i\t%i\t\t%s%i\t%d/3\t\t%s {FF9900}[AFK: %s]\n", stringer, i, pInfo[i][pLevel], text, pInfo[i][pRank], pInfo[i][pMemberWarn], GetName(i), Converts(GetPVarInt(i, "AFK_Time")));
    	}
    	else {
    	    format(stringer, sizeof(stringer), "%s{FFFFFF}%i\t%i\t\t%s%i\t%d/3\t\t%s %s\n", stringer, i, pInfo[i][pLevel], text, pInfo[i][pRank], pInfo[i][pMemberWarn], GetName(i));
    	}
		full++;
	}
	format(stringer,sizeof(stringer),"%s\n\n{FFFFFF}Всего Online: {EAD86A}%i",stringer,full);
	ShowPlayerDialog(playerid, dNull, DIALOG_STYLE_MSGBOX, "{FFCC00}Члены организации в сети", stringer, "Закрыть", "");
	return 1;
}
CMD:leaders(playerid)
{
	new full, str[150], string[1024], text[20];
	strcat(string, "{FFFF00}Организация - Должность - Имя игрока - Телефон\n\n");
	foreach(new i: Player) {
		if(pInfo[i][pLeader] > 0) {
		    if(pInfo[i][pPhoneNumber] <= 1) format(text, sizeof(text), "None");
			else format(text, sizeof(text), "%i", pInfo[i][pPhoneNumber]);
			format(str, sizeof(str),"{FFFFFF}%s - %s - %s - %s\n", Fraction_Name[pInfo[i][pLeader]], Fraction_Rang[pInfo[i][pMember]][pInfo[i][pRank]], GetName(i), text);
			strcat(string, str);
			full++;
		}
	}
	ShowPlayerDialog(playerid, dNull, DIALOG_STYLE_MSGBOX, "{ffcc00}Лидеры организаций в сети", string, "Закрыть", "");
	return 1;
}

CMD:instructors(playerid)
{
	new str[128], text[20] = "None";
	SendClientMessage(playerid, COLOR_GREEN, "Инструкторы онлайн:");
	foreach(new i : Player)
	{
		if(!gPlayerLogged[i] || pInfo[i][pMember] != TEAM_AUTOSCHOOL || pInfo[i][pRank]<1 || pInfo[i][pAdmin]) continue;
		if(pInfo[i][pPhoneNumber]>1) format(text, sizeof(text), "%i", pInfo[i][pPhoneNumber]);
		if(GetPVarInt(i, "AFK_Time") > 1)
		{
		    format(str, sizeof(str), "%s %s | Номер телефона: {FF9900}%s [AFK: %s]", Fraction_Rang[pInfo[i][pMember]][pInfo[i][pRank]], GetName(i), text, Converts(GetPVarInt(i, "AFK_Time")));
		}
		else
		{
			format(str, sizeof(str), "%s %s | Номер телефона: {FF9900}%s", Fraction_Rang[pInfo[i][pMember]][pInfo[i][pRank]], GetName(i), text);
		}
		SendClientMessage(playerid, COLOR_WHITE, str);
	}
	return 1;
}
CMD:invite(playerid, params[])
{
    if(!pInfo[playerid][pTempLeader]){
		if(!IsAbleToInvite(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	}
	else{
	    if(pInfo[playerid][pAdmin] < ADM_ADMIN) return SendClientMessage(playerid, COLOR_GREY, "Данная возможность доступна для администраторов 4 уровня и выше");
	}
	new targetid;
	if(sscanf(params, "d", targetid)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /invite [id игрока]");
	else if(targetid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[targetid]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if((IsAGang(playerid) || IsAArmy(playerid)) && pInfo[targetid][pLevel] < 2) return SendClientMessage(playerid, COLOR_GREY, "У игрока нету 2 уровня!");
	else if((!IsAGang(playerid) && !IsAArmy(playerid)) && pInfo[targetid][pLevel] < 3) return SendClientMessage(playerid, COLOR_GREY, "У игрока нету 3 уровня!");
	else if(pInfo[targetid][pWarn] > 0) return SendClientMessage(playerid, COLOR_GREY, "У игрока предупреждение!");
	else if(pInfo[targetid][pLeader] > 0) return SendClientMessage(playerid, COLOR_GREY, "Лидера нельзя принимать в организацию!");
	else if(pInfo[targetid][pMember] > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не состоит в Вашей организации!");
	else if(IsPlayerInAnyVehicle(targetid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок не должен находиться в транспорте!");
	else if(!IsPlayerStream(8.0, playerid, targetid, 1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
	SendMes(playerid,COLOR_BLUE,"Вы предлагаете %s присоединиться в вашу организацию",GetName(targetid));
	new string[128];
	format(string,sizeof(string),"%s %s предлагает вам присоединиться к \"%s\"\n\nВы согласны?",Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid), Fraction_Name[pInfo[playerid][pMember]]);
	ShowPlayerDialog(targetid, dInviteFrac, 0, "{FFCC00}Вступление во фракцию",string,"Да","Нет");
	SetPVarInt(targetid, "offerfractionid", pInfo[playerid][pMember]);
	SetPVarInt(targetid, "offerplayer", playerid);
	SetPVarInt(playerid, "actplayerid", targetid);
	return 1;
}

CMD:setskin(playerid, params[]){
    if(!pInfo[playerid][pTempLeader]){
		if(!IsAbleToInvite(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	}
	else{
	    if(pInfo[playerid][pAdmin] < ADM_ADMIN) return SendClientMessage(playerid, COLOR_GREY, "Данная возможность доступна для администраторов 4 уровня и выше");
	}
    new targetid;
	if(sscanf(params, "d", targetid)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setskin [id игрока]");
	else if(targetid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[targetid]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(pInfo[targetid][pMember] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не состоит в организации!");
	else if(pInfo[targetid][pMember] != pInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Игрок не состоит в Вашей организации!");
    else if(GetPlayerDistanceToPlayer(playerid,targetid) > 5.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(targetid)) return SendClientMessage(playerid,COLOR_GREY,"Вы далеко друг от друга");
    else if(pInfo[targetid][pRank] > pInfo[playerid][pRank]) return SendClientMessage(playerid, COLOR_GREY, "Ваш ранг недостаточен");
    else if(pInfo[targetid][pAdmin]) return 0;
    SetPVarInt(playerid, "actplayerid", targetid);
	new fractionid = pInfo[playerid][pMember];
    new mes[128];
	for(new i; i < 9; i++) {
		new skinid = Fraction_Skin[fractionid][i];
		if(!skinid) break;
		if(!i) format(mes, sizeof(mes), "Скин %d [%d]", i+1, skinid);
		else format(mes, sizeof(mes), "%s\nСкин %d [%d]", mes, i+1, skinid);
	}
	ShowPlayerDialog(playerid, dFracMenu+3, 2, "{FFCC00}Выбор скина", mes, "Принять",!"");
	return 1;
}

CMD:leave(playerid, params[])
{
	if(pInfo[playerid][pImprove][1] || pInfo[playerid][pVip])
	{
		if(pInfo[playerid][pMember] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в организации!");
		else if(pInfo[playerid][pLeader] > 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не должны быть лидером!");
		else if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не должны находиться в транспорте!");
		new string[256];
		format(string, sizeof(string), "{FFFFFF}Вы состоите в организации: \"%s\",\nи вы хотите покинуть её по собственному желанию.\nПри этом все Ваши достижения в организации останутся позади.\n\nВы уверены что хотите уволится из организации?",Fraction_Name[pInfo[playerid][pMember]]);
		ShowPlayerDialog(playerid, dLeave, 0, "{FF6600}Предупреждение", string, "Да", "Нет");
	}
	else SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У Вас не развита саморешительность или вы не имеете VIP статус");
	return 1;
}

CMD:quitjob(playerid, params[])
{
    if(!pInfo[playerid][pVip]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы не имеете VIP статус");
    else if(!pInfo[playerid][pJob]) return SendClientMessage(playerid, COLOR_GREY, "Вы нигде не работаете!");
	pInfo[playerid][pJob] = JOB_NONE;
	MysqlUpdatePlayerInt(playerid, "job", pInfo[playerid][pJob]);
	SendClientMessage(playerid, COLOR_BLUE, "Вы уволились с работы");
	return 1;
}

CMD:uninvite(playerid, params[])
{
    if(!pInfo[playerid][pTempLeader])
	{
		if(!IsAbleToUninvite(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	}
	else
	{
	    if(pInfo[playerid][pAdmin] < ADM_ADMIN) return SendClientMessage(playerid, COLOR_GREY, "Данная возможность доступна для администраторов 4 уровня и выше");
	}
	new targetid, reason[32];
	if(sscanf(params, "ds[32]", targetid, reason)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /uninvite [id игрока] [причина]");
	else if(targetid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[targetid]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(pInfo[targetid][pMember] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не состоит в организации!");
	else if(pInfo[targetid][pLeader] > 0) return SendClientMessage(playerid, COLOR_GREY, "Лидера нельзя увольнять из организации!");
	else if(pInfo[targetid][pMember] != pInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Игрок не состоит в Вашей организации!");
	else if(playerid == targetid) return SendClientMessage(playerid, COLOR_GREY, "Самого себя нельзя уволить!");
	SendMes(playerid, COLOR_BLUE, "Вы уволили %s из организации. Причина: %s",GetName(targetid),reason);
	SendMes(targetid, COLOR_BLUE, "%s %s уволил%s Вас из организации. Причина: %s", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]],GetName(playerid),(pInfo[playerid][pSex]==1)?(""):("а"),reason);
	LeaveFractionPlayer(targetid);
	SendClientMessage(targetid, COLOR_GREEN, "[Подсказка] {FFFFFF}Местом спавна автоматически назначен вокзал. Изменить место спавна {AFAFAF}/setspawn");
	return 1;
}

CMD:auninvite(playerid, params[])
{
	IsAdmin(ADM_OLDER_ADMIN);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	new targetid, reason[32];
	if(sscanf(params, "ds[32]", targetid, reason)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /auninvite [id игрока] [причина]");
	else if(targetid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[targetid]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(pInfo[targetid][pMember] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не состоит в организации!");
	else if(pInfo[targetid][pLeader] > 0) return SendClientMessage(playerid, COLOR_GREY, "Лидера нельзя увольнять из организации!");
	new string[128];
	format(string, sizeof(string), "Вы уволили %s из организации. Причина: %s", GetName(targetid), reason);
	SendClientMessage(playerid, COLOR_BLUE, string);
	format(string, sizeof(string), "Администратор %s уволил Вас из организации. Причина: %s", GetName(playerid), reason);
	SendClientMessage(targetid, COLOR_BLUE, string);
	format(string, sizeof(string), "[A] %s[%i] уволил %s[%d] из %s. Причина: %s", GetName(playerid), playerid, GetName(targetid), targetid, Fraction_Name[pInfo[targetid][pMember]], reason);
	SendAdminMessage(COLOR_GRAD1, string);
	LeaveFractionPlayer(targetid);
	SendClientMessage(targetid, COLOR_GREEN, "[Подсказка] {FFFFFF}Местом спавна автоматически назначен вокзал. Изменить место спавна {AFAFAF}/setspawn");
	return 1;
}

CMD:rang(playerid, params[])
{
    if(!pInfo[playerid][pTempLeader])
	{
		if(!IsAbleToRang(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	}
	else
	{
	    if(pInfo[playerid][pAdmin] < ADM_ADMIN) return SendClientMessage(playerid, COLOR_GREY, "Данная возможность доступна для администраторов 4 уровня и выше");
	}
    new targetid;
	if(sscanf(params, "d", targetid)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /rang [id игрока]");
	else if(targetid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[targetid]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(targetid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете дать себе ранг!");
	else if(pInfo[targetid][pMember] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не состоит в организации!");
	else if(pInfo[targetid][pLeader] > 0) return SendClientMessage(playerid, COLOR_GREY, "Лидеру нельзя изменять ранг!");
	else if(!IsPlayerStream(8.0, playerid, targetid, 1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
	else if(pInfo[targetid][pMember] != pInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Игрок не состоит в Вашей организации!");
	else if(pInfo[targetid][pRank] >= pInfo[playerid][pRank]) return SendClientMessage(playerid, COLOR_GREY, "Игрок выше Вас рангом или Вашего ранга");
	stringer[0] = EOS;
	if(pInfo[playerid][pRank] == Number_Fraction_Rang[pInfo[playerid][pMember]])
    {
        for(new i = 1; i <= Number_Fraction_Rang[pInfo[playerid][pMember]]-1; i++)
        {
        	format(stringer, 1000, "%s%s%s (%i)\n", stringer, (pInfo[targetid][pRank] == i) ? ("{EAD86A}") : (""), Fraction_Rang[pInfo[playerid][pMember]][i], i);
     		ShowPlayerDialog(playerid, dFracMenu+1, DIALOG_STYLE_LIST, "{FFCC00}Выберите ранг", stringer, "Выбрать", "Отмена");
        }
        SetPVarInt(playerid, "PlayerRank", targetid);
    }
    else if(pInfo[playerid][pRank] == Number_Fraction_Rang[pInfo[playerid][pMember]]-(Number_Fraction_Rang[pInfo[playerid][pMember]]-pInfo[playerid][pRank]))
    {
		for(new i = 1; i <= Number_Fraction_Rang[pInfo[playerid][pMember]]-2; i++)
        {
     		format(stringer, 1000, "%s%s%s (%i)\n", stringer, (pInfo[targetid][pRank] == i) ? ("{EAD86A}") : (""), Fraction_Rang[pInfo[playerid][pMember]][i], i);
     		ShowPlayerDialog(playerid, dFracMenu+1, DIALOG_STYLE_LIST, "{FFCC00}Выберите ранг", stringer, "Выбрать", "Отмена");
        }
        SetPVarInt(playerid, "PlayerRank", targetid);
    }
	return 1;
}

CMD:arang(playerid, params[])
{
	IsAdmin(ADM_DEPUTY_CHIEF);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	new targetid;
	if(sscanf(params, "d", targetid)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /arang [id игрока]");
	else if(targetid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[targetid]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(pInfo[targetid][pMember] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не состоит в организации!");
	else if(pInfo[targetid][pLeader] > 0) return SendClientMessage(playerid, COLOR_GREY, "Лидеру нельзя изменять ранг!");
	stringer[0] = EOS;
	if(pInfo[playerid][pRank] == Number_Fraction_Rang[pInfo[playerid][pMember]])
    {
        for(new i = 1; i <= Number_Fraction_Rang[pInfo[playerid][pMember]]-1; i++)
        {
        	format(stringer, 1000, "%s%s%s (%i)\n", stringer, (pInfo[targetid][pRank] == i) ? ("{EAD86A}") : (""), Fraction_Rang[pInfo[playerid][pMember]][i], i);
     		ShowPlayerDialog(playerid, dFracMenu+2, DIALOG_STYLE_LIST, "{FFCC00}Выберите ранг", stringer, "Выбрать", "Отмена");
        }
        SetPVarInt(playerid, "PlayerRank", targetid);
    }
    else if(pInfo[playerid][pRank] == Number_Fraction_Rang[pInfo[playerid][pMember]]-(Number_Fraction_Rang[pInfo[playerid][pMember]]-pInfo[playerid][pRank]))
    {
		for(new i = 1; i <= Number_Fraction_Rang[pInfo[playerid][pMember]]-2; i++)
        {
     		format(stringer, 1000, "%s%s%s (%i)\n", stringer, (pInfo[targetid][pRank] == i) ? ("{EAD86A}") : (""), Fraction_Rang[pInfo[playerid][pMember]][i], i);
     		ShowPlayerDialog(playerid, dFracMenu+2, DIALOG_STYLE_LIST, "{FFCC00}Выберите ранг", stringer, "Выбрать", "Отмена");
        }
        SetPVarInt(playerid, "PlayerRank", targetid);
    }
	return 1;
}

CMD:setspawn(playerid)
{
	ShowPlayerDialog(playerid, dSetSpawn, DIALOG_STYLE_LIST, "{FFCC00}Изменение места появления в игре", "1. На вокзале\n2. В собственном доме\n3. На базе организации", "Выбрать", "Отмена");
	return 1;
}

CMD:salelic(playerid, params[])
{
	if(pInfo[playerid][pMember] != TEAM_AUTOSCHOOL) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	else if(sscanf(params, "dd", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /salelic [id игрока] [id лицензии (1-водительские,2-водные,3-воздушные,4-оружие,5-бизнес)]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(!IsPlayerStream(10.0, playerid, params[0], 1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
	else if(!(1 <= params[1] <= 5)) return 0;
	else if(2 <= params[1] <= 5)
	{
	    if(pInfo[playerid][pRank] < 2) return SendClientMessage(playerid, COLOR_GREY, "Вы можете продавать только водительские права");
	}
	else if(ZapretDice[params[0]] == 1) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У игрока уже есть одно активное предложение!");
    else if(pTemp[playerid][pSelectPlayer] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас уже есть одно активное предложение. Чтобы отказаться от него введите /cancel");
	else if(pTemp[params[0]][pTargetPlayer] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У игрока уже есть одно активное предложение!");
	new bool:dostup;
	switch(params[1])
	{
		case 1:	if(GetLicCar(params[0])) dostup = true;
		case 2: if(GetLicWater(params[0])) dostup = true;
		case 3: if(GetLicPlane(params[0])) dostup = true;
		case 4: if(GetLicWeapon(params[0])) dostup = true;
		case 5:
		{
		    new i = pInfo[params[0]][pBiz];
			if(BizInfo[i][bLic]) dostup = true;
		}
	}
	if(params[1] == 5 && !pInfo[params[0]][pBiz]) return SendClientMessage(playerid, COLOR_GREY, "Игрок не имеет бизнеса!");
	if(dostup == true) return SendClientMessage(playerid, COLOR_GREY, "У игрока есть данная лицензия");
	new type[24], price;
	switch(params[1])
	{
		case 1: type = "водительские права", price = 1000;
		case 2: type = "лицензию на судоходство", price = 3000;
		case 3: type = "лицензию на полеты", price = 10000;
		case 4: type = "лицензию на оружие", price = 30000;
		case 5: type = "лицензию на бизнес", price = 50000;
	}
	new string[144];
	format(string, sizeof(string), "Вы предлагаете %s купить %s. Цена: %i$", GetName(params[0]), type, price);
	SendClientMessage(playerid, COLOR_BLUE, string);
	format(string, sizeof(string), "%s предлагает Вам купить %s. Цена: %i$", GetName(playerid), type, price);
	SendClientMessage(params[0], COLOR_BLUE, string);
	SendClientMessage(params[0], COLOR_WHITE, PlayerAccess);
	pTemp[playerid][pSelectPlayer] = params[0];
	pTemp[params[0]][pTargetPlayer] = playerid;
	pTemp[params[0]][pTargetAction] = ACTION_SELL_LIC;
	pTemp[params[0]][pSellLicType] = params[1];
	pTemp[params[0]][pActionPrice] = price;
	return 1;
}

CMD:agivelic(playerid, params[])
{
	IsAdmin(ADM_DEPUTY_CHIEF);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /agivelic [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	ShowPlayerDialog(playerid, dLic+2, 2, "{FFCC00}Выдача лицензий", "- Водительские права\n- Лицензия на судоходство\n- Лицензия на полеты\n- Лицензия на оружие\n- Лицезния на бизнес\n- Пакет лицензий", "Выбрать", "Отмена");
	SetPVarInt(playerid, "LicName", params[0]);
	return 1;
}

CMD:takegun(playerid, params[])
{
	if((pInfo[playerid][pMember] == TEAM_DPS || pInfo[playerid][pMember] == TEAM_SFPD || pInfo[playerid][pMember] == TEAM_LVPD || pInfo[playerid][pMember] == TEAM_FBI) && pInfo[playerid][pRank] >= 6)
	{
		if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /takegun [id игрока]");
		else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
		else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
		else if(!IsPlayerStream(8.0, playerid, params[0], 1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
      	ResetPlayerWeaponsEx(params[0]);
	  	SendMes(playerid, COLOR_LIME, "Вы забрали оружие у %s",GetName(params[0]));
	  	SendMes(params[0], COLOR_LIME, "%s забрал у вас оружие",GetName(playerid));
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return 1;
}

CMD:take(playerid, params[])
{
	if((pInfo[playerid][pMember] == TEAM_DPS || pInfo[playerid][pMember] == TEAM_SFPD || pInfo[playerid][pMember] == TEAM_LVPD || pInfo[playerid][pMember] == TEAM_FBI) && pInfo[playerid][pRank] >= 6)
	{
		if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /take [id игрока]");
		else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
		else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
		else if(!IsPlayerStream(8.0, playerid, params[0], 1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
		ShowPlayerDialog(playerid, dLic+1, 2, "{FFCC00}Изъять", "Водительские права\nЛицензию на судоходство\nЛицензию на полеты\nЛицензию на оружие\nПатроны\nМеталл\nНаркотики", "Принять", "Отмена");
		SetPVarInt(playerid, "LicName", params[0]);
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return 1;
}

CMD:atake(playerid, params[])
{
	IsAdmin(ADM_ADMIN);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /atake [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	ShowPlayerDialog(playerid, dLic+3, 2, "{FFCC00}Изъять", "Водительские права\nЛицензию на судоходство\nЛицензию на полеты\nЛицензию на оружие\nПатроны\nМеталл\nНаркотики", "Принять", "Отмена");
	SetPVarInt(playerid, "LicName", params[0]);
	return 1;
}

CMD:radio(playerid, params[])
{
	ShowPlayerDialog(playerid, dNewsMenu+3, 2, "{FFCC00}Радио", "Радио №1 - СМИ г.Южный\nРадио №2 - СМИ пгт.Батырево\n{AFAFAF}Выключить", "Принять", "Отмена");
	return 1;
}

CMD:dial(playerid, params[])
{
	if(!IsANews(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
 	new vehicleid = GetPVarInt(playerid, "VehicleEnters");
	if(vehicleid)
	{
		if(pInfo[playerid][pMember] == TEAM_LSNEWS && vehicleid >= aNewsLS[0] && vehicleid <= aNewsLS[5]) NewsPanel(playerid);
		else if(pInfo[playerid][pMember] == TEAM_SFNEWS && vehicleid >= aNewsSF[0] && vehicleid <= aNewsSF[3]) NewsPanel(playerid);
		else if(pInfo[playerid][pMember] == TEAM_LVNEWS && vehicleid >= aNewsLV[0] && vehicleid <= aNewsLV[4]) NewsPanel(playerid);
		else SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в офисе или служебном транспорте!");
	}
	else
	{
	    if(IsPlayerInRangeOfPoint(playerid, 70.0, -108.1242,461.7322,3013.1499)) NewsPanel(playerid);
	    else SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в офисе или служебном транспорте!");
	}
	return 1;
}

CMD:edit(playerid)
{
    if(!IsANews(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	else if(pInfo[playerid][pRank] < 2) return SendClientMessage(playerid, COLOR_GREY, "Доступно со 2 ранга!");
 	new vehicleid = GetPVarInt(playerid, "VehicleEnters");
	if(vehicleid)
	{
	    if(pInfo[playerid][pMember] == TEAM_LSNEWS && vehicleid >= aNewsLS[0] && vehicleid <= aNewsLS[5]) AdvertList(playerid);
		else if(pInfo[playerid][pMember] == TEAM_SFNEWS && vehicleid >= aNewsSF[0] && vehicleid <= aNewsSF[3]) AdvertList(playerid);
		else if(pInfo[playerid][pMember] == TEAM_LVNEWS && vehicleid >= aNewsLV[0] && vehicleid <= aNewsLV[4]) AdvertList(playerid);
		else SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в офисе или служебном транспорте!");
	}
	else
	{
	    if(IsPlayerInRangeOfPoint(playerid, 70.0, -108.1242,461.7322,3013.1499)) AdvertList(playerid);
	    if(IsPlayerInRangeOfPoint(playerid, 70.0, -1077.7986,2206.5925,1002.0000)) AdvertList(playerid);
	    else SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в офисе или служебном транспорте!");
	}
	return 1;
}

CMD:ad(playerid, params[])
{
	if(pInfo[playerid][pMuted] > 0) return SendMuteMessage(playerid);
	else if(pInfo[playerid][pTime] < 4) return SendClientMessage(playerid, COLOR_GREY, "Вы должны играть на сервере более 4 часов!");
	else if(pInfo[playerid][pPhoneNumber] <= 1) return SendClientMessage(playerid, COLOR_GREY, "У вас нет мобильного телефона или SIM-карты!");
	else if(pInfo[playerid][pNews] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть переключены на какую-либо станцию!");
	else if(TOTALADVERT[pInfo[playerid][pNews]-1] >= 30) return SendClientMessage(playerid, COLOR_GREY, "Линия заполнена, обратитесь позже!");
	else if(AdvertTime_ > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Посылать объявление можно раз в 15 секунд!");
	else if(sscanf(params, "s[100]", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /ad [текст]");
	else if(GetCash(playerid) < strlen(params[0])*AdvertPrice[pInfo[playerid][pNews]-1]) return SendClientMessage(playerid, COLOR_GREY, NoMoney);
	TOTALADVERT[pInfo[playerid][pNews]-1]++;
	strmid(AdvertInfo[TOTALADVERT[pInfo[playerid][pNews]-1]][pInfo[playerid][pNews]-1][aText],params[0],0,strlen(params[0]),128);
	strmid(AdvertInfo[TOTALADVERT[pInfo[playerid][pNews]-1]][pInfo[playerid][pNews]-1][aName],GetName(playerid),0,strlen(GetName(playerid)),MAX_PLAYER_NAME);
	AdvertInfo[TOTALADVERT[pInfo[playerid][pNews]-1]][pInfo[playerid][pNews]-1][aPhone] = pInfo[playerid][pPhoneNumber];
	TransferMoney(playerid, -1, strlen(params[0]) * AdvertPrice[pInfo[playerid][pNews]-1]);
	FracBank[pInfo[playerid][pNews]+7] += strlen(params[0]) * AdvertPrice[pInfo[playerid][pNews]-1];
	new string[128];
	format(string, sizeof(string), "~g~Paid %d$~n~~y~Message contained: %d Characters", strlen(params[0]) * AdvertPrice[pInfo[playerid][pNews]-1], strlen(params[0]));
	GameTextForPlayer(playerid, string, 5000, 5);
	SendClientMessage(playerid, COLOR_GREEN, "Ваше объявление было отправлено на обработку");
	format(string, sizeof(string), "[R] Пришло новое объявление от {FFFFFF}%s[%i]{3399FF}. Подробнее: /edit", GetName(playerid), playerid);
	SendFMes(18, COLOR_BLUE, string);
	AdvertTime_ = gettime() + 15;
	return 1;
}

CMD:fprice(playerid)
{
	if(IsANews(playerid) && pInfo[playerid][pLeader])
	{
	    stringer[0] = EOS;
	    format(stringer, 512, "\
	    	{FFFFFF}- Установить цену за звонок {63BD4E}(%i$)\n\
	    	{FFFFFF}- Установить цену за СМС {63BD4E}(%i$)\n\
	    	{FFFFFF}- Установить цену за объявление {63BD4E}(%i$)", CallPrice[pInfo[playerid][pMember]-18], SmsPrice[pInfo[playerid][pMember]-18], AdvertPrice[pInfo[playerid][pMember]-18]);
		ShowPlayerDialog(playerid, dNewsMenu+4, 2, "{FFCC00}Управление ценами", stringer, "Принять", "Отмена");
	}
	return 1;
}

CMD:sms(playerid, params[])
{
    if(pInfo[playerid][pPhoneNumber] <= 1) return SendClientMessage(playerid, COLOR_GREY, "У вас нет мобильного телефона или SIM-карты!");
    else if(pInfo[playerid][pMuted] > 0) return SendMuteMessage(playerid);
	else if(pInfo[playerid][pJail] > 0) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас изъяли телефон!");
	else if(pCuff[playerid][pCuffee] == playerid) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] На Вас надеты наручники!");
   	else if(Mobile[playerid] != -1) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы разговариваете по телефону!");
   	else if(!Phone[playerid]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас выключен телефон!");
    else if(sscanf(params, "ds[100]", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /sms [номер телефона] [сообщение]");
	else if(!(100 <= params[0] <= 9999999)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Неверный номер телефона!");
	else if(params[0] == pInfo[playerid][pPhoneNumber]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Ты не можешь писать смс самому себе!");
	else if(IsAIP(params[1])) return 0;
	else if(CheckString(params[1], 2)) return PlayerGetsChatBan(playerid, params[1]);
	new nidx = -1, plidx = -1;
	for(new i; i < MAX_PLAYERS; i++)
	{
	    if(!IsPlayerConnected(i) || !gPlayerLogged[i]) continue;
	    if(params[0] == LSNEWS_NUMBER || params[0] == SFNEWS_NUMBER || params[0] == LVNEWS_NUMBER)
	    {
	    	nidx = i;
	    	break;
    	}
    	else if(params[0] == pInfo[i][pPhoneNumber])
 	    {
 	        plidx = i;
 	        break;
 	    }
 	}
 	new string[200];
 	if(nidx > -1)
 	{
 	    new select_radio = (params[0] == LSNEWS_NUMBER)?(1):(params[0] == SFNEWS_NUMBER)?(2):(3);
		if(pInfo[playerid][pNews] != select_radio) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы должны переключиться на волну этой студии!");
 	    else if(!Ether[nidx] && pInfo[nidx][pMember] == pInfo[playerid][pNews]+17) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Радио не принимает СМС!");
 	    new news_name[24];
 	    news_name = (pInfo[playerid][pNews] == 1)?("СМИ г.Южный Тел.: 555"):(pInfo[playerid][pNews] == 2)?("СМИ пгт.Батырево Тел.: 666"):("Закрыто Тел.: 777");
 	    if(!EtherSms[pInfo[playerid][pNews]-1]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Радио не принимает СМС!");
    	if(pInfo[playerid][pPhoneBalance] < SmsPrice[pInfo[playerid][pNews]-1]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] На вашем счету в банке не хватает денег!");
		pInfo[playerid][pPhoneBalance] -= SmsPrice[pInfo[playerid][pNews]-1];
        FracBank[pInfo[playerid][pNews]+7] += SmsPrice[pInfo[playerid][pNews]-1];
        PlayerPlaySound(nidx, 1052, 0.0, 0.0, 0.0);
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		format(string, sizeof(string), "SMS: %s Отправитель: %s Тел.: %i", params[1], GetName(playerid), pInfo[playerid][pPhoneNumber]);
		SendClientMessage(nidx, COLOR_YELLOW, string);
		format(string, sizeof(string), "SMS: %s Получатель: %s", params[1], news_name);
		SendClientMessage(playerid, COLOR_YELLOW, string);
		SendClientMessage(playerid, COLOR_WHITE, "Ваше сообщение доставлено");
		MeAction(playerid, "достаёт мобильный телефон");
		SetPlayerChatBubble(playerid, (pInfo[playerid][pSex] == 1)?("Отправил СМС"):("Отправила СМС"), COLOR_YELLOW, 13.0, 10000);
 	}
 	else if(plidx > -1)
 	{
 	    if(!Phone[plidx]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Игрок выключил телефон!");
	    if(pInfo[plidx][pJail] > 0) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Абонент временно недоступен!");
		PlayerPlaySound(plidx, 1052, 0.0, 0.0, 0.0);
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		format(string, sizeof(string), "SMS: %s Отправитель: %s Тел.: %i", params[1], GetName(playerid), pInfo[playerid][pPhoneNumber]);
		SendClientMessage(plidx, COLOR_YELLOW, string);
		format(string, sizeof(string), "SMS: %s Получатель: %s Тел.: %i", params[1], GetName(plidx), pInfo[plidx][pPhoneNumber]);
		SendClientMessage(playerid, COLOR_YELLOW, string);
		foreach(new x:Player)
		{
			if(AdminInfo[x][admSmsEars])
			{
			    format(string, sizeof(string), "[A][SMS] %s[%i] отправил%s %s[%i]: %s", GetName(playerid), playerid, (pInfo[playerid][pSex]==1)?(""):("а"), GetName(plidx), plidx, params[1]);
			    SendClientMessage(x, COLOR_YELLOW, string);
			}
		}
		pInfo[playerid][pPhoneBalance] -= 10;
		SendClientMessage(playerid, COLOR_WHITE, "Ваше сообщение доставлено");
		MeAction(playerid, "достаёт мобильный телефон");
		SetPlayerChatBubble(playerid, (pInfo[playerid][pSex] == 1)?("Отправил СМС"):("Отправила СМС"), COLOR_YELLOW, 13.0, 10000);
 	}
 	else SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Указанный Вами номер не существует!");
	return 1;
}

CMD:call(playerid)
{
    if(pInfo[playerid][pPhoneNumber] <= 1) return SendClientMessage(playerid, COLOR_GREY, "У вас нет мобильного телефона или SIM-карты!");
    else if(pInfo[playerid][pMuted] > 0) return SendMuteMessage(playerid);
	else if(pInfo[playerid][pJail] > 0) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас изъяли телефон!");
   	else if(Mobile[playerid] != -1) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы разговариваете по телефону!");
   	else if(pCuff[playerid][pCuffee] == playerid) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] На Вас надеты наручники!");
   	else if(!Phone[playerid]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас выключен телефон!");
 	else if(Ether[playerid]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Действие невозможно!");
	ShowPlayerDialog(playerid, dPhone+2, DIALOG_STYLE_INPUT, "{FFCC00}Номер телефона", "\
		{EAD86A}Номера государственных служб:\n\n\
		{FFFFFF}Автомеханик:\t\t{FF9900}111\n\
		{FFFFFF}Такси:\t\t\t{FF9900}222\n\
		{FFFFFF}Скорая помощь:\t{FF9900}103\n\
		{FFFFFF}Полиция:\t\t{FF9900}102", "Принять", "Назад");
	return 1;
}
CMD:c(playerid) return cmd_call(playerid);

CMD:togphone(playerid, params[])
{
    if(pInfo[playerid][pPhoneNumber] <= 1) return SendClientMessage(playerid, COLOR_GREY, "У вас нет мобильного телефона или SIM-карты!");
    else if(pCuff[playerid][pCuffee] == playerid) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] На Вас надеты наручники!");
    else if(Mobile[playerid] != -1) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы разговариваете по телефону!");
	if(Phone[playerid])
    {
        Phone[playerid] = false;
        SendClientMessage(playerid, COLOR_RED, "Вы выключили телефон");
        SetPlayerChatBubble(playerid, (pInfo[playerid][pSex]==1)?("выключил телефон"):("выключила телефон"), COLOR_PURPLE, 13.0, 10000);
    }
    else
    {
        Phone[playerid] = true;
        SendClientMessage(playerid, COLOR_GREEN, "Вы включили телефон");
        SetPlayerChatBubble(playerid, (pInfo[playerid][pSex]==1)?("включил телефон"):("включила телефон"), COLOR_PURPLE, 13.0, 10000);
    }
    return 1;
}

CMD:pickup(playerid)
{
    if(pCuff[playerid][pCuffee] == playerid) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] На Вас надеты наручники!");
	else if(Mobile[playerid] != -1) return SendClientMessage(playerid, COLOR_GREY, "Вы разговариваете по телефону!");
	foreach(new i : Player)
	{
		if(!gPlayerLogged[i]) continue;
		if(Mobile[i] == playerid)
		{
			if(Ether[playerid]) CallNews[pInfo[playerid][pNews]-1]++, EtherCalled[i] = true;
			Mobile[playerid] = i;
			SendMes(i, COLOR_GRAD2, "%s поднял трубку мобильного", GetName(playerid));
			pInfo[i][pPhoneBalance] -= 10;
			MeAction(playerid, "ответил на звонок");
			if(!IsPlayerInAnyVehicle(playerid)) SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
			return 1;
		}
	}
	return 1;
}
CMD:p(playerid) return cmd_pickup(playerid);

CMD:hangup(playerid)
{
    if(pCuff[playerid][pCuffee] == playerid) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] На Вас надеты наручники!");
	else if(Mobile[playerid] == -1) return SendClientMessage(playerid, COLOR_GREY, "Вы не разговариваете по телефону!");
	new callerid = Mobile[playerid];
	SendClientMessage(callerid, COLOR_GRAD2, "Абонент положил трубку");
	SetPlayerSpecialAction(callerid,SPECIAL_ACTION_STOPUSECELLPHONE);
	CellTime[callerid] = CellTime[playerid] = Mobile[callerid] = Mobile[playerid] = -1;
	if(EtherCalled[playerid]) EtherCalled[playerid] = false;
	if(EtherCalled[callerid]) EtherCalled[callerid] = false;
	SendClientMessage(playerid, COLOR_GRAD2, "Вы положили трубку");
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
	DeletePVar(playerid, "CallTime");
	DeletePVar(callerid, "CallTime");
	return 1;
}
CMD:h(playerid) return cmd_hangup(playerid);

CMD:phonebook(playerid)
{
    if(pInfo[playerid][pPhoneNumber] <= 1) return SendClientMessage(playerid, COLOR_GREY, "У вас нет мобильного телефона или SIM-карты!");
    else if(pCuff[playerid][pCuffee] == playerid) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] На Вас надеты наручники!");
	ShowPlayerDialog(playerid, dPhone+1, DIALOG_STYLE_LIST, "{FFCC00}Контакты", "1. Список контактов\n2. Добавить контакт\n3. Удалить контакт", "Выбрать", "Назад");
	return 1;
}

CMD:number(playerid, params[])
{
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /number [id/имя игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(pInfo[params[0]][pPhoneNumber] <= 1) return SendClientMessage(playerid, COLOR_GREY, "Игрок не владеет телефоном или у него нету SIM-карты!");
	new string[128];
	format(string, sizeof(string), "Номер игрока %s[%d]: {33CCFF}%i", GetName(params[0]), params[0], pInfo[params[0]][pPhoneNumber]);
	SendClientMessage(playerid, COLOR_WHITE, string);
	return 1;
}

CMD:bpanel(playerid)
{
	if(!pInfo[playerid][pBiz]) return SendClientMessage(playerid, COLOR_GREY, "Вы не владеете бизнесом!");
	ShowPlayerDialog(playerid, dHeal+1, 2, "{FFCC00}Панель управления бизнесом", "1. Статистика бизнеса\n2. Открыть бизнес\n3. Установить цену за товар\n4. Установить цену за вход\n5. Заказать продукты\n6. Улучшения бизнеса", "Принять", "Отмена");
	return 1;
}

CMD:addm(playerid)
{
    IsAdmin(ADM_FOUNDER);
    else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
    ShowPlayerDialog(playerid, dAddWarehouse, DIALOG_STYLE_LIST, "{FFCC00}Пополнение складов", "- Склады работ\n- Склады армии\n- Склады банд\n- Склады мафий\n- Склады больниц", "Выбрать", "Отмена");
	return 1;
}

CMD:asellhouse(playerid, params[])
{
    IsAdmin(ADM_FOUNDER);
    else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	new houseid;
	if(sscanf(params, "d", houseid)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /asellhouse [номер дома]");
	else if(!(1 <= houseid <= TOTALHOUSE)) return SendClientMessage(playerid, COLOR_GREY, "Такого дома нет");
	new string[100];
	ClearPlayerHouse(houseid, 2);
	format(string, sizeof(string), "Вы продали дом №%i", houseid);
	SendClientMessage(playerid, COLOR_WHITE, string);
	return 1;
}

CMD:sethgarage(playerid, params[])
{
    if(GetString(GetName(playerid), NAME_FULL_ACCESS_1) || GetString(GetName(playerid), NAME_FULL_ACCESS_2) || GetString(GetName(playerid), NAME_FULL_ACCESS_3) || GetString(GetName(playerid), NAME_FULL_ACCESS_4))
    {
        new houseid;
		if(sscanf(params, "d", houseid)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /sethgarage [номер дома]");
		else if(!(1 <= houseid <= TOTALHOUSE)) return SendClientMessage(playerid, COLOR_GREY, "Такого дома нет");
		HouseInfo[houseid][hGarage] = (!HouseInfo[houseid][hGarage])?(1):(0);
		MysqlUpdateHouseInt(houseid, "hGarage", HouseInfo[houseid][hGarage]);
		new string[128];
		format(string, sizeof string, (!HouseInfo[houseid][hGarage])?("{F04245}Гараж удалён. Дом №%i"):("{97B96C}Гараж установлен. Дом №%i"), houseid);
		SendClientMessage(playerid, COLOR_WHITE, string);
	}
	return 1;
}

CMD:sethprice(playerid, params[])
{
	if(GetString(GetName(playerid), NAME_FULL_ACCESS_1) || GetString(GetName(playerid), NAME_FULL_ACCESS_2) || GetString(GetName(playerid), NAME_FULL_ACCESS_3) || GetString(GetName(playerid), NAME_FULL_ACCESS_4))
	{
        new houseid, price;
		if(sscanf(params, "ii", houseid, price)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /sethprice [номер дома] [стоимость]");
		else if(!(1 <= houseid <= TOTALHOUSE)) return SendClientMessage(playerid, COLOR_GREY, "Такого дома нет");
		HouseInfo[houseid][hPrice] = price;
		MysqlUpdateHouseInt(houseid, "hPrice", HouseInfo[houseid][hPrice]);
		new string[128];
		format(string, sizeof string, "Вы изменили дому №%i стоимость на %i$", houseid, price);
		SendClientMessage(playerid, COLOR_WHITE, string);
	}
	return 1;
}

CMD:sethpos(playerid, params[])
{
	if(GetString(GetName(playerid), NAME_FULL_ACCESS_1) || GetString(GetName(playerid), NAME_FULL_ACCESS_2) || GetString(GetName(playerid), NAME_FULL_ACCESS_3) || GetString(GetName(playerid), NAME_FULL_ACCESS_4))
	{
        new houseid;
		if(sscanf(params, "d", houseid)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /sethpos [номер дома]");
		else if(!(1 <= houseid <= TOTALHOUSE)) return SendClientMessage(playerid, COLOR_GREY, "Такого дома нет");
		new Float:x, Float:y, Float:z;
		GetPlayerPos(playerid, x, y, z);
		HouseInfo[houseid][hEntr][0] = x;
		HouseInfo[houseid][hEntr][1] = y;
		HouseInfo[houseid][hEntr][2] = z;
		UpdateHouse(houseid);
		mysql_query_string[0] = EOS;
		format(mysql_query_string, 200, "UPDATE "T_HOUSE" SET hEntrx = '%f', hEntry = '%f', hEntrz = '%f' WHERE id = %d LIMIT 1", HouseInfo[houseid][hEntr][0], HouseInfo[houseid][hEntr][1], HouseInfo[houseid][hEntr][2], houseid);
		mysql_tquery(dbHandle, mysql_query_string, "", "");
		new string[128];
		format(string, sizeof string, "Вы изменили позицию пикапа входа дому №%i", houseid);
		SendClientMessage(playerid, COLOR_WHITE, string);
	}
	return 1;
}

CMD:sethposgarage(playerid, params[])
{
	if(GetString(GetName(playerid), NAME_FULL_ACCESS_1) || GetString(GetName(playerid), NAME_FULL_ACCESS_2) || GetString(GetName(playerid), NAME_FULL_ACCESS_3) || GetString(GetName(playerid), NAME_FULL_ACCESS_4))
	{
        new houseid;
		if(sscanf(params, "d", houseid)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /sethposgarage [номер дома]");
		else if(!(1 <= houseid <= TOTALHOUSE)) return SendClientMessage(playerid, COLOR_GREY, "Такого дома нет");
		new Float:x, Float:y, Float:z, Float:fa;
		GetVehiclePos(GetPVarInt(playerid,"VehicleEnters"), x, y, z);
		GetVehicleZAngle(GetPVarInt(playerid,"VehicleEnters"), fa);
		HouseInfo[houseid][hCar][0] = x;
		HouseInfo[houseid][hCar][1] = y;
		HouseInfo[houseid][hCar][2] = z;
		HouseInfo[houseid][hCar][3] = fa;
		mysql_query_string[0] = EOS;
		format(mysql_query_string, 200, "UPDATE "T_HOUSE" SET carx = '%f', cary = '%f', carz = '%f', carfa = '%f' WHERE id = %d LIMIT 1", HouseInfo[houseid][hCar][0], HouseInfo[houseid][hCar][1], HouseInfo[houseid][hCar][2], HouseInfo[houseid][hCar][3], houseid);
		mysql_tquery(dbHandle, mysql_query_string, "", "");
		new string[128];
		format(string, sizeof string, "Вы изменили позицию спавна транспорта дому №%i", houseid);
		SendClientMessage(playerid, COLOR_WHITE, string);
	}
	return 1;
}

CMD:asellbiz(playerid, params[])
{
    IsAdmin(ADM_FOUNDER);
    else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	new bizid;
	if(sscanf(params, "d", bizid)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /asellbiz [номер бизнеса]");
	else if(!(1 <= bizid <= TOTALBIZ)) return SendClientMessage(playerid, COLOR_GREY, "Такого бизнеса нет");
	new string[100];
	ClearPlayerBiz(bizid, 2);
	format(string, sizeof(string), "Вы продали бизнес %s (%i)", BizInfo[bizid][bName], bizid);
	SendClientMessage(playerid, COLOR_WHITE, string);
	return 1;
}

CMD:setbprod(playerid, params[])
{
    IsAdmin(ADM_FOUNDER);
    else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
    new bizid, count;
	if(sscanf(params, "ii", bizid, count)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setbprod [номер бизнеса] [количество продуктов]");
	else if(!(1 <= bizid <= TOTALBIZ)) return SendClientMessage(playerid, COLOR_GREY, "Такого бизнеса нет");
	else if(count < 0) return 0;
	BizInfo[bizid][bProduct] = count;
	MysqlUpdateBizInt(bizid, "product", count);
	new string[128];
	format(string, sizeof(string), "Вы изменили бизнесу %s (%i) продуктов на %d", BizInfo[bizid][bName], bizid, count);
	SendClientMessage(playerid, COLOR_WHITE, string);
	return 1;
}

CMD:setbpos(playerid, params[])
{
	if(GetString(GetName(playerid), NAME_FULL_ACCESS_1) || GetString(GetName(playerid), NAME_FULL_ACCESS_2) || GetString(GetName(playerid), NAME_FULL_ACCESS_3) || GetString(GetName(playerid), NAME_FULL_ACCESS_4))
	{
        new bizid;
		if(sscanf(params, "d", bizid)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setbpos [номер бизнеса]");
		else if(!(1 <= bizid <= TOTALBIZ)) return SendClientMessage(playerid, COLOR_GREY, "Такого бизнеса нет");
		new Float:x, Float:y, Float:z;
		GetPlayerPos(playerid, x, y, z);
		BizInfo[bizid][bEntr][0] = x;
		BizInfo[bizid][bEntr][1] = y;
		BizInfo[bizid][bEntr][2] = z;
		DestroyDynamicPickup(BizInfo[bizid][bIcon]);
		BizInfo[bizid][bIcon] = CreateDynamicMapIcon(BizInfo[bizid][bEntr][0],BizInfo[bizid][bEntr][1],BizInfo[bizid][bEntr][2], BizInfo[bizid][bMIcon], 0,-1,-1,-1,200.0);
		if(BizInfo[bizid][bType] != 2 && BizInfo[bizid][bType] != 7)
		{
			DestroyDynamicPickup(BizInfo[bizid][bPickup]);
			DestroyDynamicArea(BizInfo[bizid][bAreaEnter]);
			BizInfo[bizid][bPickup] = CreateDynamicPickup(19132,1,BizInfo[bizid][bEntr][0],BizInfo[bizid][bEntr][1],BizInfo[bizid][bEntr][2]);
			BizInfo[bizid][bAreaEnter] = CreateDynamicSphere(BizInfo[bizid][bEntr][0],BizInfo[bizid][bEntr][1],BizInfo[bizid][bEntr][2],1.0,0,0);
		}
		if(IsValidDynamic3DTextLabel(LABELBIZ[bizid]))
		{
			DestroyDynamic3DTextLabel(LABELBIZ[bizid]);
			LABELBIZ[bizid] = Text3D:INVALID_3DTEXT_ID;
		}
		new string[200], fee[32] = "Вход свободный";
		if(BizInfo[bizid][bEnter] != 0) format(fee, sizeof(fee), "Стоимость входа: {FFFFFF}%d$", BizInfo[bizid][bEnter]);
		switch(BizInfo[bizid][bType])
		{
			case 2:
			{
				if(GetString(BizInfo[bizid][bOwner],"None")) format(string, sizeof(string), "{63BD4E}Название: {FFFFFF}%s (%i)\n{63BD4E}Заправка продаётся\n{63BD4E}Цена: {FFFFFF}%d$\n{63BD4E}Цена за 1 литр - {FFFFFF}%i$\nИспользуйте сигнал {AFAFAF}(Caps Lock / H)", BizInfo[bizid][bName], bizid, BizInfo[bizid][bPrice], BizInfo[bizid][bTill]);
				else format(string, sizeof(string), "{63BD4E}Название: {FFFFFF}%s (№%i)\n{63BD4E}Владелец: {3399FF}%s\n{63BD4E}Цена за 1 литр - {FFFFFF}%i$\nИспользуйте сигнал {AFAFAF}(Caps Lock / H)", BizInfo[bizid][bName], bizid, BizInfo[bizid][bOwner], BizInfo[bizid][bTill]);
				LABELBIZ[bizid] = CreateDynamic3DTextLabel(string,-1,BizInfo[bizid][bEntr][0], BizInfo[bizid][bEntr][1], BizInfo[bizid][bEntr][2],20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
			}
			case 7:
			{
				if(GetString(BizInfo[bizid][bOwner],"None")) format(string, sizeof(string), "{63BD4E}Название: {FFFFFF}%s (%i)\n{63BD4E}СТО продаётся\n{63BD4E}Цена: {FFFFFF}%d$\n{63BD4E}Цена за 1 запчасть - {FFFFFF}%i$\nИспользуйте сигнал {AFAFAF}(Caps Lock / H)", BizInfo[bizid][bName], bizid, BizInfo[bizid][bPrice], BizInfo[bizid][bTill]);
				else format(string, sizeof(string), "{63BD4E}Название: {FFFFFF}%s (№%i)\n{63BD4E}Владелец: {FFFFFF}%s\n{63BD4E}Цена за 1 запчасть - {FFFFFF}%i$\nИспользуйте сигнал {AFAFAF}(Caps Lock / H)",  BizInfo[bizid][bName], bizid, BizInfo[bizid][bOwner], BizInfo[bizid][bTill]);
				LABELBIZ[bizid] = CreateDynamic3DTextLabel(string,-1,BizInfo[bizid][bEntr][0], BizInfo[bizid][bEntr][1], BizInfo[bizid][bEntr][2],20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
			}
			default:
			{
			    if(GetString(BizInfo[bizid][bOwner],"None")) format(string, sizeof(string), "{63BD4E}Название: {FFFFFF}%s (%i)\n{63BD4E}Бизнес продаётся\n{63BD4E}Цена: {FFFFFF}%d$", BizInfo[bizid][bName], bizid, BizInfo[bizid][bPrice]);
				else format(string, sizeof(string), "{63BD4E}Название: {FFFFFF}%s (№%i)\n{63BD4E}Владелец: {FFFFFF}%s\n{63BD4E}%s", BizInfo[bizid][bName], bizid, BizInfo[bizid][bOwner], fee);
				LABELBIZ[bizid] = CreateDynamic3DTextLabel(string,-1,BizInfo[bizid][bEntr][0], BizInfo[bizid][bEntr][1], BizInfo[bizid][bEntr][2],20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
			}
		}
		mysql_query_string[0] = EOS;
		format(mysql_query_string, 200, "UPDATE "T_BIZ" SET x = '%f', y = '%f', z = '%f' WHERE id = %d LIMIT 1", BizInfo[bizid][bEntr][0], BizInfo[bizid][bEntr][1], BizInfo[bizid][bEntr][2], bizid);
		mysql_tquery(dbHandle, mysql_query_string, "", "");
		new str[128];
		format(str, sizeof str, "Вы изменили позицию пикапа входа бизнесу %s (%i)", BizInfo[bizid][bName], bizid);
		SendClientMessage(playerid, COLOR_WHITE, str);
	}
	return 1;
}

CMD:setbprice(playerid, params[])
{
    if(GetString(GetName(playerid), NAME_FULL_ACCESS_1) || GetString(GetName(playerid), NAME_FULL_ACCESS_2) || GetString(GetName(playerid), NAME_FULL_ACCESS_3) || GetString(GetName(playerid), NAME_FULL_ACCESS_4))
    {
        new bizid, price;
		if(sscanf(params, "ii", bizid, price)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setbprice [номер бизнеса] [стоимость]");
		else if(!(1 <= bizid <= TOTALBIZ)) return SendClientMessage(playerid, COLOR_GREY, "Такого бизнеса нет");
		else if(price < 0) return 0;
		BizInfo[bizid][bPrice] = price;
		MysqlUpdateBizInt(bizid, "price", price);
		UpdateBizStats(bizid);
		new string[128];
		format(string, sizeof(string), "Вы изменили бизнесу %s (%i) стоимость на %d$", BizInfo[bizid][bName], bizid, price);
		SendClientMessage(playerid, COLOR_WHITE, string);
	}
	return 1;
}

CMD:setbbank(playerid, params[])
{
    if(GetString(GetName(playerid), NAME_FULL_ACCESS_1) || GetString(GetName(playerid), NAME_FULL_ACCESS_2) || GetString(GetName(playerid), NAME_FULL_ACCESS_3) || GetString(GetName(playerid), NAME_FULL_ACCESS_4))
    {
        new bizid, money;
		if(sscanf(params, "ii", bizid, money)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setbbank [номер бизнеса] [количество денег]");
		else if(!(1 <= bizid <= TOTALBIZ)) return SendClientMessage(playerid, COLOR_GREY, "Такого бизнеса нет");
		else if(money < 0) return 0;
		BizInfo[bizid][bMoney] = money;
		MysqlUpdateBizInt(bizid, "money", money);
		new string[128];
		format(string, sizeof(string), "Вы изменили бизнесу %s (%i) баланс на %d$", BizInfo[bizid][bName], bizid, money);
		SendClientMessage(playerid, COLOR_WHITE, string);
	}
	return 1;
}

CMD:setbname(playerid, params[])
{
    if(GetString(GetName(playerid), NAME_FULL_ACCESS_1) || GetString(GetName(playerid), NAME_FULL_ACCESS_2) || GetString(GetName(playerid), NAME_FULL_ACCESS_3) || GetString(GetName(playerid), NAME_FULL_ACCESS_4))
    {
        new bizid, bname[32];
		if(sscanf(params, "is[32]", bizid, bname)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setbname [номер бизнеса] [новое имя]");
		else if(!(1 <= bizid <= TOTALBIZ)) return SendClientMessage(playerid, COLOR_GREY, "Такого бизнеса нет");
		new string[128];
		format(string, sizeof(string), "Вы изменили имя бизнесу %s (%i) на %s", BizInfo[bizid][bName], bizid, bname);
		SendClientMessage(playerid, COLOR_WHITE, string);
		format(BizInfo[bizid][bName], sizeof(bname), bname);
		MysqlUpdateBizStr(bizid, "name", bname);
		UpdateBizStats(bizid);
	}
	return 1;
}

CMD:buybiz(playerid, params[])
{
	if(pInfo[playerid][pBiz] != 0) return SendClientMessage(playerid, COLOR_GREY, "Вы уже владеете бизнесом!");
	new idx = -1;
	for(new i = 1; i <= TOTALBIZ; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, BizInfo[i][bEntr][0], BizInfo[i][bEntr][1], BizInfo[i][bEntr][2]))
		{
		    idx = i;
		    break;
  		}
	}
	if(idx == -1) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться рядом с бизнесом!");
	if(!GetString(BizInfo[idx][bOwner],"None")) return SendClientMessage(playerid, COLOR_GREY, "Бизнес уже имеет владельца!");
	if(pInfo[playerid][pCash] < BizInfo[idx][bPrice]) return SendClientMessage(playerid, COLOR_GREY, NoMoney);
    pInfo[playerid][pBiz] = idx;
	pInfo[playerid][pCash] -= BizInfo[idx][bPrice];
	BizInfo[idx][bBuyPrice] = (BizInfo[idx][bPrice]/100)*75;
	BizInfo[idx][bProduct] = 100;
	BizInfo[idx][bMoney] = 0;
	BizInfo[idx][bDays] = 2;
	BizInfo[idx][bEnter] = BizInfo[idx][bVisitors] = BizPay[idx] = BizPayLastHour[idx] = BizPayForDay[idx] = 0;
	BizInfo[idx][bTill] = 50;
	new string[128];
	format(string, sizeof(string), "Вы приобрели бизнес %s (%i) за %i$", BizInfo[idx][bName], idx, BizInfo[idx][bPrice]);
	SendClientMessage(playerid, COLOR_GREEN, string);
	SendClientMessage(playerid, COLOR_YELLOW, "[Информация] {FFFFFF}Аренда бизнеса оплачена на 2 дня, не забывайте регулярно продлевать её");
	SendClientMessage(playerid, COLOR_YELLOW, "[Информация] {FFFFFF}Приобретите лицензию на ваш бизнес, если в течении 12 часов этого не будет, он будет продан государству");
	strmid(BizInfo[idx][bOwner],GetName(playerid), 0, strlen(GetName(playerid)), MAX_PLAYER_NAME);
    mysql_query_string[0] = EOS;
	format(mysql_query_string,sizeof(mysql_query_string),"UPDATE "T_BIZ" SET owner = '%s', buyprice = %i, product = %i, money = %i, bDays = %d WHERE id = %d LIMIT 1",BizInfo[idx][bOwner],BizInfo[idx][bBuyPrice],BizInfo[idx][bProduct],BizInfo[idx][bMoney],BizInfo[idx][bDays],idx);
	mysql_tquery(dbHandle,mysql_query_string,"","");
	UpdateBizStats(idx);
	return 1;
}
CMD:audios(playerid, params[]){
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, -1, "Вы не в автомобиле!");
	new music[256], mc[256], dist;
	if(cMusicActive == true){
		foreach(new i:Player){
			if(!gPlayerLogged[i] || !cActiveMusic[i]) continue;
			cActiveMusic[i] = false;
			StopAudioStreamForPlayer(i);
		}
		format(music,sizeof(music), "Вы отключили музыку в машине!", GetName(playerid));
		SendClientMessage(playerid, -1, music);
		SetPlayerChatBubble(playerid, "выключает музыку в машине", COLOR_PURPLE, 13.0, 10000);
		cMusicActive = false;
	}
	if(sscanf(params, "s[256]d", music, dist)) return SendClientMessage(playerid, -1, "/audios [URL] [Dist]");
	else if(!(10 <= strlen(music) <= 256)) return SendClientMessage(playerid, -1, "Неверное кол-во символов в URL!");
	else if(!(5 <= dist <= 75)) return SendClientMessage(playerid, -1, "Дистанция может быть от 5 до 75 метров!");
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid, X, Y, Z);
	cMusicActive = true;
	cMusicPosX = X;
	cMusicPosY = Y;
	cMusicPosZ = Z;
	cMusicDistance = dist;
	strmid(cMusicURL, music, 0, strlen(music), 256);
	cActiveMusic[playerid] = true;

	SetPlayerChatBubble(playerid, "включает музыку в машине", COLOR_PURPLE, 13.0, 10000);
	format(mc, sizeof(mc), "%s поставил музыку в авто (дистанция %d м)", GetName(playerid), dist);
	SendClientMessage(playerid, -1, mc);
	foreach(new i : Player) PlayAudioStreamForPlayer(i, music, X, Y, Z, dist, 1);
	return true;
}
CMD:play(playerid, params[])
{
    if(pInfo[playerid][pMusic] == 0) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас нет плеера, купить его можно в магазине 24/7");
	ShowPlayerDialog(playerid, 9345, DIALOG_STYLE_LIST, "{FFCC00}Выберите радиостанцию", "{63BD4E}1. Name FM\n{FFFFFF}2. Радио Шансон\n3. Наше Радио\n4. Радио Рекорд\n5. Зайцев.FM (Pop)\n6. Зайцев.FM (RnB)\n7. TRAP.FM\n8. Love Radio\n9. Europa+ \n10. Flux Radio\n11. Выключить радио", "Выбор", "Выход");
	return 1;
}

CMD:hpanel(playerid)
{
	if(!pInfo[playerid][pHouse]) return SendClientMessage(playerid, COLOR_GREY, "У вас нет дома!");
	new i = pInfo[playerid][pHouse];
	if(GetString(GetName(playerid), HouseInfo[i][hOwner]))
	{
	    new _c = HouseInfo[i][hClass], _i = HouseInfo[i][hInt];
		if((IsPlayerInRangeOfPoint(playerid, 60.0, HintsInfo[_c][_i][hiExitX], HintsInfo[_c][_i][hiExitY], HintsInfo[_c][_i][hiExitZ])
		|| IsPlayerInRangeOfPoint(playerid, 10.0, 2934.4077, 2967.4949, 3176.5769))
		&& GetPlayerVirtualWorld(playerid) == HouseInfo[i][hID])
		{
		    stringer[0] = EOS;
		    format(stringer, 350, "\
				{FFFFFF}1. Открыть / закрыть дом\n\
				2. Гардероб\n\
				3. Оплачено дней: {FF9900}%i\n\
				{FFFFFF}4. Аптечек в доме: {EAD86A}%i шт\n\
				{FFFFFF}5. Улучшения дома\n\
				6. Доставить транспорт к дому {63BD4E}550$",
				HouseInfo[i][hDays], HouseInfo[i][hHeal]);
			ShowPlayerDialog(playerid, dHome, 2, "{FFCC00}Панель управления домом", stringer, "Принять", "Отмена");
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в вашем доме!");
	}
	return 1;
}

CMD:bizlist(playerid)
{
	if(!IsAMafia(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	SendClientMessage(playerid, COLOR_GREEN, "Завоеванные бизнесы:");
	new string[128];
	for(new h = 0; h < MAX_BIZ; h++)
	{
		new mafiapay = BizPay[h] / 10;
		switch(pInfo[playerid][pMember])
		{
			case TEAM_RM:
			{
				if(BizInfo[h][bMafia] == TEAM_RM)
				{
				    format(string, sizeof(string), "- %s, прибыль: %d", BizInfo[h][bName], mafiapay);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
				}
			}
			case TEAM_YAKUZA:
			{
				if(BizInfo[h][bMafia] == TEAM_YAKUZA)
				{
				    format(string, sizeof(string), "- %s, прибыль: %d", BizInfo[h][bName], mafiapay);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
				}
			}
			case TEAM_LCN:
			{
				if(BizInfo[h][bMafia] == TEAM_LCN)
				{
				    format(string, sizeof(string), "- %s, прибыль: %d", BizInfo[h][bName], mafiapay);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
				}
			}
		}
	}
	return 1;
}

CMD:bizwar(playerid, params[])
{
	if(!IsAMafia(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	if(startwar == true) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Война уже начата!");
	if(FrakCDm != 0)
	{
		new fd[128];
		format(fd,sizeof(fd),"Следующий захват возможен через %d мин", FrakCDm/60);
		return SendClientMessage(playerid,COLOR_GREY,fd);
	}
	new playerposed, string[64];
	for(new h = 0; h < MAX_BIZ; h++)
	{
		if(pInfo[playerid][pMember] == TEAM_LCN && pInfo[playerid][pRank] >= 7 || pInfo[playerid][pMember] == TEAM_RM && pInfo[playerid][pRank] >= 7 || pInfo[playerid][pMember] == TEAM_YAKUZA && pInfo[playerid][pRank] >= 7)
		{
			if(IsPlayerInRangeOfPoint(playerid, 6.0, BizInfo[h][bEntr][0],BizInfo[h][bEntr][1],BizInfo[h][bEntr][2]))
    		{
    		    playerposed = 1;
    			if(BizInfo[h][bMafia] == pInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Бизнес принадлежит вам!");
				if(BizInfo[h][bMafia] == 0)
				{
					BizInfo[h][bMafia] = pInfo[playerid][pMember];
					switch(BizInfo[h][bMafia])
					{
					   	case TEAM_LCN: MafiaTotalBiz[0]++;
					   	case TEAM_YAKUZA: MafiaTotalBiz[1]++;
					   	case TEAM_RM: MafiaTotalBiz[2]++;
					}
					SendFMes(pInfo[playerid][pMember], AZTECAS_COLOR, "[F] Ваша мафия захватила новый бизнес!");
					MysqlUpdateBizInt(h, "mafia", BizInfo[h][bMafia]);
					return 1;
				}
				if(BizInfo[h][bMafia] > 0)
				{
					startwar = true;
					format(string,sizeof(string),"%s назначил стрелу за %s мафии %s",GetName(playerid),BizInfo[h][bName],BizInfo[h][bMafia]);
					SendFMes(pInfo[playerid][pMember],COLOR_RED,string);
					format(string,sizeof(string),"Мафия %s назначила вам стрелу за бизнес %s",Fraction_Name[pInfo[playerid][pMember]],BizInfo[h][bName]);
					SendFMes(BizInfo[h][bMafia],COLOR_RED,string);
					SendFMes(BizInfo[h][bMafia],COLOR_WHITE,"Место встречи - Заброшенный аэропорт");
					SendFMes(BizInfo[h][bMafia],COLOR_WHITE,"У Вас есть 10 минут, чтобы отбить бизнес!");
					BizInfo[h][bZahvat] = 1;
					MZSafeTime[0] = 600;
					FrakCDm = 7200;
					MZInfo[0][mNapad] = pInfo[playerid][pMember];
					MZInfo[0][mFrakVlad] = BizInfo[h][bMafia];
					ZoneTimerm[0] = 130;
					ZoneOnBattlem[0] = 1;
					zons = GangZoneCreate(328.755706, 2412.644531, 448.755706, 2564.644531);
					GangZoneShowForAll(zons, COLOR_NEWS);
					GangZoneFlashForAll(zons, COLOR_RED);
				}
			}
		}
	}
	if(playerposed == 0) SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы находитесь далеко от бизнеса!");
    return 1;
}

CMD:break(playerid, params[])
{
    if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в Полиции/ФСБ");
    else if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Нельзя использовать в машине");
    if(GetPVarInt(playerid,"objectcop"))
    {
        DestroyDynamicObject(GetPVarInt(playerid,"objectcop"));
		DeletePVar(playerid, "objectcop");
		SendClientMessage(playerid, COLOR_RED, "Вы убрали установленный объект");
        if(Ships[playerid]) DestroyDynamicArea(Ships[playerid]);
		return 1;
    }
    ShowPlayerDialog(playerid, dBreak, DIALOG_STYLE_LIST, "{FFCC00}Установка объекта", "Шипы\nОграждение №1\nОграждение №2\nОграждение №3", "Выбрать", "Отмена");
    return 1;
}
CMD:flight(playerid, params[])
{
    if(IsACop(playerid) || pInfo[playerid][pMember] == TEAM_NG)
	{
	   if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Нельзя использовать в машине.");
       else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /flight [тип 1-2]");
       if(params[0] == 0)
       {
           if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
		   if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
		   SendClientMessage(playerid, COLOR_LIGHTGREEN, "Вы спрятали фонарик в карман.");
       }
       else if(params[0] == 1)
	   {
	       if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
	       if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
	       SendClientMessage(playerid, COLOR_LIGHTGREEN, "Вы достали фонарик малой дальности!");
	       SetPlayerAttachedObject(playerid, 1, 18656, 5, 0.1, 0.038, -0.1, -90.0, 180.0, 0.0, 0.03, 0.03, 0.03);
	       return SetPlayerAttachedObject(playerid, 2, 18641, 5, 0.1, 0.02, -0.05, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0);
       }
       else if(params[0] == 2)
       {
	       if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
	       if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
	       SendClientMessage(playerid, COLOR_LIGHTGREEN, "Вы достали фонарик повышенной дальности!");
	       SetPlayerAttachedObject(playerid, 1, 18656, 5, 0.1, 0.038, -0.01, -90.0, 180.0, 0.0, 0.03, 0.1, 0.03);
	       return SetPlayerAttachedObject(playerid, 2, 18641, 5, 0.1, 0.02, -0.05, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0);
       }
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return 1;
}

CMD:suspect(playerid, params[])
{
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	else if(pInfo[playerid][pRank] < 2) return SendClientMessage(playerid, COLOR_GREY, "Подавать в розыск можно со 2 ранга!");
	else if(sscanf(params, "dds[32]", params[0], params[1], params[2])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /suspect [id игрока] [количество] [причина]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(pInfo[params[0]][pJail] > 0) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок уже находиться в тюрьме!");
	else if(IsACop(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок полицейский/агент ФСБ!");
	else if(params[1] < 1) return SendClientMessage(playerid, COLOR_GREY, "Нельзя выдавать меньше 1-ой звезды розыска!");
	else if(pInfo[params[0]][pWanted]+params[1] >= 6) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете дать более 6-ти звезд!");
	pInfo[params[0]][pWanted] += params[1];
	SetPlayerWantedLevel(params[0], pInfo[params[0]][pWanted]);
	pInfo[params[0]][pCrimes]++;
	if(pInfo[params[0]][pZakon] > 1) pInfo[params[0]][pZakon]--;
	strmid(pInfo[params[0]][pWantedWho], GetName(playerid), 0, strlen(GetName(playerid)), MAX_PLAYER_NAME);
	strmid(pInfo[params[0]][pWantedReason], params[2], 0, strlen(params[2]), 32);
	mysql_query_string[0] = EOS;
	format(mysql_query_string, 300, "UPDATE "T_ACCOUNTS" SET wanted = %i, crimes = %i, zakon = %i, wantedwho = '%s', wantedreason = '%s' WHERE id = %i", pInfo[params[0]][pWanted], pInfo[params[0]][pCrimes], pInfo[params[0]][pZakon], pInfo[params[0]][pWantedWho], pInfo[params[0]][pWantedReason], pInfo[params[0]][pID]);
	mysql_tquery(dbHandle, mysql_query_string, "", "");
	new string[144];
	format(string, sizeof(string), "Вы совершили преступление: %s. Сообщает: %s.", params[2], GetName(playerid));
	SendClientMessage(params[0], COLOR_RED, string);
	format(string, sizeof(string), "Ваш уровень розыска: %i", pInfo[params[0]][pWanted]);
	SendClientMessage(params[0], COLOR_RED, string);
	foreach(new i : Player)
	{
		if(!gPlayerLogged[i]) continue;
		if(IsACop(i))
		{
		    format(string, sizeof(string), "[Внимание] %s объявлен в розыск +%i[{FFFFFF}%i{3399FF}]. Обвинитель: %s. Причина: %s", GetName(params[0]), params[1], pInfo[params[0]][pWanted], GetName(playerid), params[2]);
			SendClientMessage(i, 0x3399FFFF, string);
		}
	}
	return 1;
}
CMD:su(playerid, params[]) return cmd_suspect(playerid, params);

CMD:frisk(playerid, params[])
{
	if(IsACop(playerid) || pInfo[playerid][pMember] == TEAM_NG)
	{
		if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /frisk [id игрока]");
		else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
		else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
		else if(playerid == params[0]) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете обыскать себя!");
		else if(!IsPlayerStream(8.0, playerid, params[0], 1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
		SendMes(playerid, COLOR_WHITE, "Имущество %s", GetName(params[0]));
		SendMes(playerid, COLOR_GREY, "- %s", (pInfo[params[0]][pPatron]) ? ("Патроны") : ("Пусто"));
		SendMes(playerid, COLOR_GREY, "- %s", (pInfo[params[0]][pGunAmount]) ? ("Ед. оружия") : ("Пусто"));
		SendMes(playerid, COLOR_GREY, "- %s", (pInfo[params[0]][pDrugs]) ? ("Наркотики") : ("Пусто"));
		new string[128];
		format(string, sizeof(string), "достал%s перчатки и обыскал%s %s", (pInfo[playerid][pSex]==1)?(""):("а"), (pInfo[playerid][pSex]==1)?(""):("а"), GetName(params[0]));
		MeAction(playerid, string);
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return 1;
}

CMD:ticket(playerid, params[])
{
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	else if(sscanf(params, "dds[32]", params[0], params[1], params[2])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /ticket [id игрока] [сумма] [причина]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(!IsPlayerStream(8.0, playerid, params[0], 1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
	else if(!(1 <= params[1] <= 10000)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Сумма штрафа от 1$ до 10000$");
	else if(ZapretDice[params[0]] == 1) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У игрока уже есть одно активное предложение!");
    else if(pTemp[playerid][pSelectPlayer] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас уже есть одно активное предложение. Чтобы отказаться от него введите /cancel");
	else if(pTemp[params[0]][pTargetPlayer] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У игрока уже есть одно активное предложение!");
	SendMes(playerid, COLOR_BLUE, "Вы выписали штраф %s в размере %d$. Причина: %s", GetName(params[0]), params[1], params[2]);
	SendMes(params[0], COLOR_BLUE, "Офицер %s выписал вам штраф в размере %d$. Причина: %s", GetName(playerid), params[1], params[2]);
	SendClientMessage(params[0], COLOR_WHITE, PlayerAccess);
	pTemp[playerid][pSelectPlayer] = params[0];
	pTemp[params[0]][pTargetPlayer] = playerid;
	pTemp[params[0]][pTargetAction] = ACTION_TICKET;
	pTemp[params[0]][pActionPrice] = params[1];
	return 1;
}

CMD:dice(playerid, params[])
{
    if(!IsPlayerInDynamicArea(playerid, AreaInfo[arGreenZone][26])) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы должны находиться в казино!");
    else if(KostiMoney[playerid] !=0 || ZapretDice[playerid]!=0) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вам уже предлагают игру!");
    else if(sscanf(params, "dd", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /dice [id игрока] [ставка (в фишках)]");
    else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
    else if(!(20 <= params[1] <= 5000)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Минимальная ставка 20 фишек, максимальная 5000 фишек");
    else if(ZapretDice[params[0]] == 1) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У игрока уже есть одно активное предложение!");
    else if(pTemp[playerid][pSelectPlayer] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас уже есть одно активное предложение. Чтобы отказаться от него введите /cancel");
	else if(pTemp[params[0]][pTargetPlayer] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У игрока уже есть одно активное предложение!");
    else if(kostiKos[playerid]>0) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Сейчас вы не можете начать игру!");
	else if(!IsPlayerStream(6.0, playerid, params[0], 1)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Игрок не рядом с вами!");
    else if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Самому себе нельзя предлагать игру");
	else if(pInfo[playerid][pFishki] < params[1]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас недостаточно фишек. Вы можете купить фишки в обменнике казино");
	SendClientMessage(playerid, COLOR_YELLOW, "[Информация] {FFFFFF}Для того чтобы отказатся от своей ставки, введите /cancel");
    new string[128];
    format(string, sizeof(string), "Вы предлагаете %s бросить кости. Ставка: %i", GetName(params[0]), params[1]);
    SendClientMessage(playerid, COLOR_BLUE, string);
    format(string, sizeof(string), "%s предлагает бросить кости. Ставка: %i", GetName(playerid), params[1]);
    SendClientMessage(params[0], COLOR_BLUE, string);
    SendClientMessage(params[0], COLOR_WHITE, PlayerAccess);
	pTemp[params[0]][pTargetAction] = ACTION_DICE;
    ZapretDice[playerid] = 1;
    ZapretDice[params[0]] = 1;
    KostiName[playerid] = params[0];
    KostiName[params[0]] = playerid;
    KostiMoney[params[0]] = params[1];
    KostiMoney[playerid] = params[1];
    Predlog[playerid] = 1;
    return 1;
}

CMD:cancel(playerid)
{
    if(pTemp[playerid][pSelectPlayer] != INVALID_PLAYER_ID)
    {
	    new targetid = pTemp[playerid][pSelectPlayer];
	    SendClientMessage(playerid, COLOR_RED, "Вы отозвали своё предложение");
		SendClientMessage(targetid, COLOR_RED, "Игрок отозвал своё предложение");
		pTemp[targetid][pSelectPlayer] = INVALID_PLAYER_ID;
		pTemp[targetid][pTargetPlayer] = INVALID_PLAYER_ID;
		pTemp[playerid][pSelectPlayer] = INVALID_PLAYER_ID;
		pTemp[playerid][pTargetAction] = ACTION_NONE;
	}
	else if(KostiName[playerid] != INVALID_PLAYER_ID)
	{
		Predlog[playerid] = 0;
		Predlog[KostiName[playerid]] = 0;
		KostiMoney[playerid] = 0;
		KostiMoney[KostiName[playerid]] = 0;
		ZapretDice[playerid] = 0;
		ZapretDice[KostiName[playerid]] = 0;
		SendClientMessage(playerid, COLOR_RED, "Вы отозвали своё предложение");
		SendClientMessage(KostiName[playerid], COLOR_RED, "Игрок отозвал своё предложение");
		KostiName[KostiName[playerid]] = INVALID_PLAYER_ID;
		KostiName[playerid] = INVALID_PLAYER_ID;
		pTemp[playerid][pTargetAction] = ACTION_NONE;
	}
	else SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы никому ничего не предлагали!");
	return 1;
}

CMD:history(playerid, params[])
{
	new nickname[MAX_PLAYER_NAME];
	if(sscanf(params, "s[24]", nickname)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /history [имя игрока]");
	stringer[0] = EOS;
	format(stringer, 128, "SELECT id FROM "T_ACCOUNTS" WHERE name = '%s'", nickname);
	mysql_tquery(dbHandle, stringer, "@OnPlayerHistoryName", "d", playerid);
	return 1;
}

CMD:winlist(playerid)
{
	if(!IsPlayerInRangeOfPoint(playerid, 50.0, 1795.1968,2037.9357,16.2072)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы не на месте регистрации");
	ShowPlayerDialog(playerid, dNull, DIALOG_STYLE_MSGBOX, "{FFCC00}Список победителей", RaceText, "Закрыть", "");
	return 1;
}

CMD:st(playerid) return cmd_start(playerid);
CMD:start(playerid)
{
	if(!IsAPlane(GetPVarInt(playerid,"VehicleEnters"))) return 0;
	new vehicleid = GetPVarInt(playerid,"VehicleEnters");
	new arend_id = INVALID_PLAYER_ID;
	if(GetArendCarID(vehicleid, arend_id) != (-1))
    {
        new rc = GetArendCarID(vehicleid);
        if(ArendInfo[rc][aPlayerID] != playerid) return 1;
    }
	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(vehicleid, (engine)?(false):(true), lights, alarm, doors, bonnet, boot, objective);
	return 1;
}

CMD:hunger(playerid)
{
	new string[256], Stats_Level[40];
	switch(pInfo[playerid][pHunger])
	{
	    case 81..100: Stats_Level = "{63BD4E}[Вы сыты]";
	    case 51..80: Stats_Level = "{CCFF00}[Вы сыты]";
	    case 31..50: Stats_Level = "{FDE910}[Вы немного проголодались]";
	    case 16..30: Stats_Level = "{FF8800}[Вы голодны]";
	    case 0..15: Stats_Level = "{FF0600}[Вы очень голодны]";
	}
	format(string, sizeof(string), "{FFFFFF}%d%% %s\n\n{FFFFFF}Пополнить сытость можно в любой закусочной штата\nЕсли долго не есть ваше здоровье начнет ухудшаться", pInfo[playerid][pHunger], Stats_Level);
	ShowPlayerDialog(playerid, dNull, DIALOG_STYLE_MSGBOX, "{FFCC00}Уровень сытости игрока", string, "Закрыть", "");
	return 1;
}

CMD:menu(playerid) {
	ShowPlayerDialog(playerid, dMainMenu, DIALOG_STYLE_LIST, "{FFCC00}Игровое меню", "\
		1. Статистика персонажа\n\
		2. Команды сервера\n\
		3. Репорт\n\
		4. Настройки\n\
		5. Безопасность\n\
		6. Улучшения персонажа\n7. {63BD4E}Смена NonRP ника", "Выбрать", "Отмена");
	return 1;
}
CMD:mn(playerid) return cmd_menu(playerid);
CMD:mm(playerid) return cmd_menu(playerid);
CMD:vcar(playerid, params[])
{
	new Float:x,Float:y,Float:z,Float:a;
	GetPlayerFacingAngle(playerid, a);
	GetPlayerPos(playerid, x, y, z);
	
	if(sscanf(params, "d", params[0])) return SEND_CM(playerid , -1 , "Используйте: /vcar [ID Car]");
	if(params[0] < 400 && params[0] > 611) return SEND_CM(playerid , -1 , "ID Авто может быть только лишь от 400 до 611 !");
	if(VIPCarUse[playerid] == 15) return SEND_CM(playerid, -1, "[Примечание] Вы не можете больше создать временных VIP Авто!");
	
    VIPCar[playerid] = CreateVehicleEx(params[0], x, y, z, a, 0, 0, -1);
	PutPlayerInVehicle(playerid, VIPCar[playerid], 0);
    
    SetNumberPlate(params[1], "VIP CARS");
    VIPCarUse[playerid] ++;
	return 1;
}
CMD:viphelp(playerid)
{
	if(!pInfo[playerid][pVip]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы не имеете VIP статус");
    stringer[0] = EOS;
	new str[70],
		year, month, day;
	new current_date = getdate(year, month, day);
	new time_left = pInfo[playerid][pVipTime] - current_date;
	format(str, sizeof(str), "{EAD86A}Вы владеете VIP статусом. Осталось дней: %i\n\n", time_left);
	strcat(stringer, str);
	strcat(stringer, "{FFFFFF}Ниже приведены ваши преимущества.\n");
	strcat(stringer, "1) Ускоренное лечение в больнице\n");
	strcat(stringer, "2) Удаление тюнинга с личного транспорта (/removetuning)\n");
	strcat(stringer, "3) Возможность покинуть организацию самому (/leave)\n");
	strcat(stringer, "4) Каждую 4-ую зарплату +1 очко опыта\n");
	strcat(stringer, "5) Прокачка скиллов в 2 раза быстрей\n");
	strcat(stringer, "6) Проявление чувства голода у персонажа в 2 раза реже\n");
	strcat(stringer, "7) Уменьшенное время на отправку вопроса/репорта\n");
	strcat(stringer, "8) Возможность уволиться с работы не на месте устройства (/quitjob)\n");
	strcat(stringer, "9) Возможность общаться с остальными VIP игроками в VIP чате (/v)\n");
	strcat(stringer, "10) Время в игре для получения опыта в конце часа уменьшается в 2 раза\n");
	strcat(stringer, "11) Возможность создавать временные автомобили (/vcar).");
	ShowPlayerDialog(playerid, dNull, DIALOG_STYLE_MSGBOX, "{FFCC00}VIP статус ", stringer, "Закрыть", "");
	return 1;
}
CMD:ahelp(playerid){
	IsAdmin(ADM_HELPER);
	if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	ShowPlayerDialog(playerid, dAhelp, DIALOG_STYLE_LIST, "Помощь по командам администратора",
		"1 Уровень\n 2 Уровень\n 3 Уровень\n 4 Уровень\n 5 Уровень\n 6 Уровень\n 7 Уровень\n 8 Уровень", "Выбрать", "Закрыть");
	return true;
}
CMD:apanel(playerid)
{
	IsAdmin(ADM_HELPER);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
  	stringer[0] = EOS;
	strcat(stringer, "{ff6347}[1]{FFFFFF} VIP игроки в сети[1]\n");
	strcat(stringer, "{ff6347}[2]{FFFFFF} Администрация в сети[1]\n");
	strcat(stringer, "{ff6347}[3]{FFFFFF} Список админ команд[1]\n");
	strcat(stringer, "{ff6347}[4]{FFFFFF} Блатеры[1]\n");
	if(pInfo[playerid][pAdmin] >= ADM_MODER)
	{
		strcat(stringer, "{ff6347}[5]{FFFFFF} Заспавниться[2]\n");
		strcat(stringer, "{ff6347}[6]{FFFFFF} Очистить чат[2]\n");
		strcat(stringer, "{ff6347}[7]{FFFFFF} Настройки администратора[2]\n");
	}
	if(pInfo[playerid][pAdmin] >= ADM_OLDER_MODER)
	{
	    strcat(stringer, "{ff6347}[8]{FFFFFF} Спавн транспорта[3]\n");
	    strcat(stringer, "{ff6347}[9]{FFFFFF} Список забаненных[3]\n");
	    strcat(stringer, "{ff6347}[10]{FFFFFF} Дома с деньгами[3]\n");
	}
	if(pInfo[playerid][pAdmin] >= ADM_ADMIN)
	{
	    strcat(stringer, "{ff6347}[11]{FFFFFF} Заправить машины[4]\n");
	}
	if(pInfo[playerid][pAdmin] >= ADM_OLDER_ADMIN)
	{
	    strcat(stringer, "{ff6347}[12]{FFFFFF} Сохранить сервер[5]\n");
	    strcat(stringer, "{ff6347}[13]{FFFFFF} Перезапустить бизнесы[5]\n");
	    strcat(stringer, "{ff6347}[14]{FFFFFF} Пополнить склады[5]\n");
	}
	if(pInfo[playerid][pAdmin] >= ADM_DEPUTY_CHIEF)
	{
	    strcat(stringer, "{ff6347}[15]{FFFFFF} Настройки сервера[6]\n");
	    strcat(stringer, "{ff6347}[16]{FFFFFF} Статистика администрации[6]\n");
		strcat(stringer, "{ff6347}[17]{FFFFFF} Мероприятия[6]\n");
		strcat(stringer, "{ff6347}[18]{FFFFFF} Активировать PayDay[6]\n");
	}
	if(pInfo[playerid][pAdmin] >= ADM_CHIEF)
	{
	    strcat(stringer, "{ff6347}[19]{FFFFFF} Организации[7]\n");
	    strcat(stringer, "[ff6347}[20]{FFFFFF} Все лидеры[7]\n");
	}
	if(pInfo[playerid][pAdmin] >= ADM_FOUNDER)
	{
		strcat(stringer, "{ff6347}[21]{FFFFFF} Статистика посещаемости[8]\n");
		strcat(stringer, "{ff6347}[22]{FFFFFF} Промокоды[8]\n");
		strcat(stringer, "{ff6347}[23]{FFFFFF} Перезапустить сервер[8]\n");
		strcat(stringer, "{ff6347}[24]{FFFFFF} Телепорт ютуберов[8]");
	}
   	ShowPlayerDialog(playerid, dAdminPanel, 2, "{ff6347}Панель администратора", stringer, "Выбрать", "Отмена");
	return 1;
}
CMD:fly(playerid) {
    IsAdmin(ADM_MODER);
    else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
    else if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Для начала выйдите из транспорта");
    else if(pInfo[playerid][Spectating][0] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Для начала выйдите из режима слежки{80CCFF}(/specoff){FFFFFF}!");
	if(FlyInfo[playerid][fType] == 1)
		ShowPlayerDialog(playerid, dExitFly, DIALOG_STYLE_LIST, "{FFCC00}Режим полёта", "- Спавн в текущем места\n- Спавн на месте старта", "Выбрать", "Отмена");
	else
		SetPlayerCamera(playerid);
	return 1;
}
CMD:money(playerid, params[])
{
    IsAdmin(ADM_MODER);
    else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
    else if(isnull(params)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /money [id игрока]");
    mysql_query_string[0] = EOS;
	format(mysql_query_string, 200, "SELECT * FROM "T_BANK" WHERE Owner = '%s' LIMIT 4", GetName(strval(params)));
	mysql_tquery(dbHandle, mysql_query_string, "@CheckPlayerMoney", "ii", playerid, strval(params));
	return 1;
}
@CheckPlayerMoney(playerid, targetid);
@CheckPlayerMoney(playerid, targetid)
{
    #if MYSQL_R41_2 == true

    new rows;
	cache_get_row_count(rows);
	new name[15], id, money, str[256];
	for(new i; i < rows; i++)
	{
	    cache_get_value_index_int(i, 0, id);
	    cache_get_value_index(i, 1, name, 15);
	    cache_get_value_index_int(i, 3, money);
	    format(str, sizeof(str), "%s%s [№%d] - %d$\n", str, name, id, money);
	}

    #else

    new rows, fields;
	cache_get_data(rows, fields);
	new name[15], id, money, str[256];
    for(new i; i < rows; i++)
	{
	    id = cache_get_row_int(i, 0);
	    cache_get_row(i, 1, name, dbHandle, 15);
	    money = cache_get_row_int(i, 3);
	    format(str, sizeof(str), "%s%s [№%d] - %d$\n", str, name, id, money);
	}

    #endif

    stringer[0] = EOS;
    format(stringer, sizeof(stringer), "\
        {63BD4E}Основная информация{FFFFFF}\n\n\
        Ник:\t\t%s\n\
        Наличные:\t%d$\n\
		Банк:\t\t%d$\n\n\
		{3399FF}Доп. банковские счета{FFFFFF}\n\n\
		%s", GetName(targetid), pInfo[targetid][pCash], pInfo[targetid][pBank], str);
	ShowPlayerDialog(playerid, dNull, DIALOG_STYLE_MSGBOX, " ", stringer, "Закрыть", "");

	return 1;
}
CMD:get(playerid, params[]) {
    IsAdmin(ADM_OLDER_MODER);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	new targetid;
	if(sscanf(params, "d", targetid)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /get [id игрока]");
	else if(targetid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[targetid]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(CheckExceptionName(GetName(targetid))) return 0;
	new country[64], city[64], country2[64], city2[64];
	stringer[0] = EOS;
	GetIPCountry(pInfo[targetid][pRegIP], country, sizeof(country));
	GetIPCity(pInfo[targetid][pRegIP], city, sizeof(city));
	GetIPCountry(pInfo[targetid][pLastIP], country2, sizeof(country2));
	GetIPCity(pInfo[targetid][pLastIP], city2, sizeof(city2));
	format(stringer, sizeof(stringer), "\
		{63BD4E}Основная информация{FFFFFF}\n\n\
		Ник:\t\t\t\t%s\n\
		Номер аккаунта:\t\t%i\n\
		Наличные:\t\t\t%i$\n\
		Осн. банк счёт:\t\t%i$\n\
		Уровень:\t\t\t%i\n\
		Донат:\t\t\t\t%i\n\
		Реферал:\t\t\t%s\n\
		Узнал о сервере:\t\t%s\n\n\
		IP адрес (регис.):\t\t%s\n\
		{AFAFAF}Страна, город:\t\t%s, %s{FFFFFF}\n\
		IP адрес (последн.):\t\t%s\n\
		{AFAFAF}Страна, город:\t\t%s, %s{FFFFFF}\n\n\
		Дата регистрации:\t\t%s\n\
		Дата последн. входа:\t\t%s\n\n\
		{3399FF}Статистика онлайна{FFFFFF}\n\n\
		Время в игре за сегодня: %s\n\
		Время в игре за вчера: %s\n\
		{AFAFAF}AFK за сегодня: %s\n\
		{AFAFAF}AFK за вчера %s",
		GetName(targetid), pInfo[targetid][pID], pInfo[targetid][pCash], pInfo[targetid][pBank],
		pInfo[targetid][pLevel], pInfo[targetid][pCredits], pInfo[targetid][pReferal], pInfo[targetid][pSearchServ],
		pInfo[targetid][pRegIP], country, city, pInfo[targetid][pLastIP], country2, city2,
		pInfo[targetid][pRegData], pInfo[targetid][pVhData],
		ConvertsCmdTime(gOnlinePlayer[targetid][0]), ConvertsCmdTime(gOnlinePlayer[targetid][1]),
		ConvertsCmdTime(gOnlinePlayerAFK[targetid][0]), ConvertsCmdTime(gOnlinePlayerAFK[targetid][1]));
	ShowPlayerDialog(playerid, dNull, DIALOG_STYLE_MSGBOX, " ", stringer, "Закрыть", "");
	return 1;
}

CMD:offget(playerid, params[])
{
    IsAdmin(ADM_OLDER_MODER);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	new playername[MAX_PLAYER_NAME];
	if(sscanf(params, "s[24]", playername)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /offget [имя игрока]");
	else if(CheckExceptionName(playername)) return 0;
	else if(GetPlayerID(playername) != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок в сети, используйте команду /get");
    mysql_query_string[0] = EOS;
	format(mysql_query_string, sizeof(mysql_query_string), "SELECT id,cash,bank,level,regip,ip,datareg,credits,datavhod,referal,searchserv FROM "T_ACCOUNTS" WHERE name = '%s'", playername);
	mysql_tquery(dbHandle, mysql_query_string, "@OnPlayerOffget", "is", playerid, playername);
	return 1;
}

CMD:amusic(playerid,params[])
{
    IsAdmin(ADM_OLDER_ADMIN);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
    new radio[256], distance;
	if(gMusicActive == true)
	{
	    foreach(new i : Player)
		{
		    if(!gPlayerLogged[i] || !gActiveMusic[i]) continue;
		    gActiveMusic[i] = false;
			StopAudioStreamForPlayer(i);
		}
		format(radio, sizeof radio, "[A] %s[%d] выключил музыку", GetName(playerid), playerid);
		SendAdminMessage(COLOR_GRAD1, radio);
		gMusicActive = false;
	    return 1;
	}
	if(sscanf(params, "s[256]d", radio, distance)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /amusic [url] [дистанция]");
	else if(!(10 <= strlen(radio) <= 256)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Неверное количество символов в URL!");
	else if(!(2 <= distance <= 100)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Неверно указана дистанция. От 2 до 100 метров!");
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid, X, Y, Z);
	gMusicActive = true;
	gMusicPosX = X;
	gMusicPosY = Y;
	gMusicPosZ = Z;
	gMusicDistance = distance;
	strmid(gMusicURL, radio, 0, strlen(radio), 256);
	gActiveMusic[playerid] = true;
	foreach(new i : Player) PlayAudioStreamForPlayer(i, radio, X, Y, Z, distance, 1);
	format(radio, sizeof radio, "[A] %s[%d] поставил музыку (дистанция %d м)", GetName(playerid), playerid, distance);
    SendAdminMessage(COLOR_GRAD1, radio);
	return 1;
}

CMD:ears(playerid,params[])
{
    IsAdmin(ADM_OLDER_ADMIN);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
    if(!AdminInfo[playerid][admSmsEars])
    {
        SendClientMessage(playerid, COLOR_BLUE, "Вы включили прослушку SMS сообщений");
        AdminInfo[playerid][admSmsEars] = 1;
    }
    else
    {
        SendClientMessage(playerid, COLOR_BLUE, "Вы отключили прослушку SMS сообщений");
        AdminInfo[playerid][admSmsEars] = 0;
    }
    return 1;
}

CMD:mp(playerid)
{
    IsAdmin(ADM_OLDER_ADMIN);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	stringer[0] = EOS;
	format(stringer, sizeof(stringer), "\
		1. %s {FFFFFF}телепорт на мероприятие\n\
		2. Указать количество участников\n\
		3. {63BD4E}Выдать {FFFFFF}здоровье в радиусе\n\
		4. {63BD4E}Выдать {FFFFFF}броню в радиусе\n\
		5. {63BD4E}Выдать {FFFFFF}оружие в радиусе\n\
		6. {F04245}Забрать {FFFFFF}броню в радиусе\n\
		7. {F04245}Забрать {FFFFFF}оружие в радиусе\n\
		8. Заспавнить игроков в радиусе\n\
		9. Выдать временные скиллы в радиусе",
		(!gEvent[eventStatus])?("{63BD4E}Открыть"):("{F04245}Закрыть"));
	ShowPlayerDialog(playerid, dEvent, DIALOG_STYLE_LIST, "{FFCC00}Управление мероприятием", stringer, "Далее", "Закрыть");
	return 1;
}

CMD:gomp(playerid)
{
	if(!gEvent[eventStatus]) return 0;
	else if(gEventIn[playerid] != -1) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы уже телепортировались на мероприятие!");
	else if(pInfo[playerid][pJailTime]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Заключённым нельзя телепортироваться!");
	if(!PlayerLie[playerid] && !gym_cloakroom[playerid] && !pTemp[playerid][pWork])
	{
	    gEventIn[playerid] = 1;
	    if(gEvent[eventVirtualWorld] == 30 || gEvent[eventVirtualWorld] == 31)
			SetPlayerPos(playerid, gEvent[eventPos][0], gEvent[eventPos][1], gEvent[eventPos][2], 1);
	    else
			SetPlayerPos(playerid, gEvent[eventPos][0], gEvent[eventPos][1], gEvent[eventPos][2]);
	    SetPlayerVirtualWorld(playerid, gEvent[eventVirtualWorld]);
	    SetPlayerInterior(playerid, gEvent[eventInterior]);
		if(CanUse[playerid]>0) CanUse[playerid]=0;
		SendClientMessage(playerid, COLOR_YELLOW, "[Информация] {FFFFFF}Вы успешно телепортировались на место проведения мероприятия");
	}
	else SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Необходимо завершить все начатые работы и активные действия!");
	return 1;
}

CMD:open(playerid)
{
	if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return 1;
	if(TextResetCMD[playerid] > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Не флуди");
    if(IsPlayerInRangeOfPoint(playerid,12.0,286.0616,1821.0507,17.2128))
	{
		if(IsACop(playerid) || pInfo[playerid][pMember] == TEAM_NG)
		{
		    if(opengate[playerid][0]) return 1;
		    opengate[playerid][0] = true;
			MoveDynamicObject(Gate[4],285.62500000,1811.20446777,18.36432266,3.0,0.00000000,0.00000000,270.00000000);
			MoveDynamicObject(Gate[5],285.62500000,1830.82177734,18.27965546,3.0,0.00000000,0.00000000,270.00000000);
			SetTimerEx("@CloseGate", 10000, false, "dd", 0, playerid);
			SendClientMessage(playerid,COLOR_BLUE,"Ворота закроются через 10 секунд!");
			SetPlayerChatBubble(playerid, "открывает ворота", COLOR_PURPLE, 13.0, 10000);
	    }
	    else SendClientMessage(playerid,COLOR_GREY,"У вас нет ключей от ворот!");
    }
    if(IsPlayerInRangeOfPoint(playerid,12.0,131.0000000,1940.5000000,18.7000000))
    {
	    if(IsACop(playerid) || pInfo[playerid][pMember] == TEAM_NG)
	    {
	        if(opengate[playerid][1]) return 1;
		    opengate[playerid][1] = true;
		    MoveDynamicObject(Gate[6],125.0000000,1940.5000000,18.7000000,3.0,0.00000000,0.00000000,0.00000000);
		    MoveDynamicObject(Gate[7],144.8999900,1940.5000000,18.7000000,3.0,0.00000000,0.00000000,0.00000000);
		    SetTimerEx("@CloseGate", 10000, false, "dd", 1, playerid);
		    SendClientMessage(playerid, COLOR_BLUE, "Ворота закроются через 10 секунд!");
		    SetPlayerChatBubble(playerid, "открывает ворота", COLOR_PURPLE, 13.0, 10000);
	    }
	    else SendClientMessage(playerid, COLOR_GREY, "У вас нет ключей от ворот!");
    }
    if(IsPlayerInRangeOfPoint(playerid,7.0,-1701.8092,683.8960,24.8906))
    {
	    if(IsACop(playerid) || pInfo[playerid][pMember] == TEAM_NG)
	    {
		    if(opengate[playerid][2]) return 1;
		    opengate[playerid][2] = true;
		    MoveDynamicObject(Gate[0], -1701.43395996,687.69000244,24.65999794+0.004,0.004,0.00000000,0.00000000,270.00000000);
		    SetTimerEx("@CloseGate", 10000, false, "dd", 2, playerid);
		    SendClientMessage(playerid, COLOR_BLUE, "Шлагбаум опустится через 10 секунд!");
		    SetPlayerChatBubble(playerid, "открывает шлагбаум", COLOR_PURPLE, 13.0, 10000);
	    }
	    else SendClientMessage(playerid, COLOR_GREY, "У вас нет ключей от шлагбаума!");
    }
	if(IsPlayerInRangeOfPoint(playerid,7.0,-1572.5665,662.4639,7.1875))
	{
		if(IsACop(playerid) || pInfo[playerid][pMember] == TEAM_NG)
		{
			if(opengate[playerid][3]) return 1;
		    opengate[playerid][3] = true;
			MoveDynamicObject(Gate[1], -1572.18994141,658.70001221,6.89099789+0.004,0.004,0.00000000,0.00000000,90.00000000);
			SetTimerEx("@CloseGate", 10000, false, "dd", 3, playerid);
			SendClientMessage(playerid, COLOR_BLUE, "Шлагбаум опустится через 10 секунд!");
			SetPlayerChatBubble(playerid, "открывает шлагбаум", COLOR_PURPLE, 13.0, 10000);
        }
        else SendClientMessage(playerid, COLOR_GREY, "У вас нет ключей от шлагбаума!");
    }
	if(IsPlayerInRangeOfPoint(playerid,7.0,1545.0767,-1626.9976,13.3828))
	{
		if(IsACop(playerid) || pInfo[playerid][pMember] == TEAM_NG)
		{
			if(opengate[playerid][4]) return 1;
		    opengate[playerid][4] = true;
			MoveDynamicObject(Gate[2], 1544.69006348,-1630.90002441,13.13999939+0.004,0.004,0.00000000,0.00000000,90.00000000);
			SetTimerEx("@CloseGate", 10000, false, "dd", 4, playerid);
			SendClientMessage(playerid, COLOR_BLUE, "Шлагбаум опустится через 10 секунд!");
			SetPlayerChatBubble(playerid, "открывает шлагбаум", COLOR_PURPLE, 13.0, 10000);
        }
        else SendClientMessage(playerid,COLOR_GREY, "У вас нет ключей от шлагбаума!");
    }
	if(IsPlayerInRangeOfPoint(playerid,7.0,2238.5742,2454.0466,10.8203))
	{
		if(IsACop(playerid) || pInfo[playerid][pMember] == TEAM_NG)
		{
			if(opengate[playerid][5]) return 1;
		    opengate[playerid][5] = true;
			MoveDynamicObject(Gate[3], 2238.19995117,2450.29980469,10.65000057+0.004,0.004,0.00000000,0.00000000,90.00000000);
			SetTimerEx("@CloseGate", 10000, false, "dd", 5, playerid);
			SendClientMessage(playerid, COLOR_BLUE, "Шлагбаум опустится через 10 секунд!");
			SetPlayerChatBubble(playerid, "открывает шлагбаум", COLOR_PURPLE, 13.0, 10000);
        }
        else SendClientMessage(playerid, COLOR_GREY, "У вас нет ключей от шлагбаума!");
    }
	if(IsPlayerInRangeOfPoint(playerid,10.0,-1526.37366,481.38431,6.90630))
	{
	    if(opengate[playerid][6]) return 1;
	    opengate[playerid][6] = true;
		MoveDynamicObject(Gate[8],-1526.37366,481.38431,6.90630+0.004,0.004,0.00000000,0.00000000,0.00000000);
		SetTimerEx("@CloseGate", 10000, false, "dd", 6, playerid);
		SendClientMessage(playerid, COLOR_BLUE, "Шлагбаум опустится через 10 секунд!");
		SetPlayerChatBubble(playerid, "открывает шлагбаум", COLOR_PURPLE, 13.0, 10000);
	}
	if(IsPlayerInRangeOfPoint(playerid,10.0,1558.0261,-1572.6226,13.7400))
	{
	    if(IsAMedic(playerid))
	    {
	        if(opengate[playerid][7]) return 1;
		    opengate[playerid][7] = true;
			MoveDynamicObject(Gate[9],1558.0261,-1572.6226,11.3000,3.0,0.00000000,0.00000000,178.4990);
			SetTimerEx("@CloseGate", 10000, false, "dd", 7, playerid);
			SendClientMessage(playerid, COLOR_BLUE, "Ворота закроются через 10 секунд!");
			SetPlayerChatBubble(playerid, "открывает ворота", COLOR_PURPLE, 13.0, 10000);
		}
        else SendClientMessage(playerid, COLOR_GREY, "У вас нет ключей от ворот!");
	}
	if(IsPlayerInRangeOfPoint(playerid,10.0,-2436.8125,495.46875,29.6797))
	{
	    if(pInfo[playerid][pMember] == TEAM_FBI)
	    {
	        if(opengate[playerid][8]) return 1;
		    opengate[playerid][8] = true;
			MoveDynamicObject(Gate[10],-2436.8125,495.46875,29.6797+0.004,0.004,0.0,90.0,24.999);
			SetTimerEx("@CloseGate", 10000, false, "dd", 8, playerid);
			SendClientMessage(playerid, COLOR_BLUE, "Шлагбаум опустится через 10 секунд!");
			SetPlayerChatBubble(playerid, "открывает шлагбаум", COLOR_PURPLE, 13.0, 10000);
		}
        else SendClientMessage(playerid, COLOR_GREY, "У вас нет ключей от шлагбаума!");
	}
	if(IsPlayerInRangeOfPoint(playerid,10.0,-1037.111,-587.939,31.663))
	{
        if(opengate[playerid][9]) return 1;
	    opengate[playerid][9] = true;
		MoveDynamicObject(Gate[11],-1037.111,-587.939,31.663+0.004,0.004,0.00,0.00,0.00);
		SetTimerEx("@CloseGate", 10000, false, "dd", 9, playerid);
		SendClientMessage(playerid, COLOR_BLUE, "Шлагбаум опустится через 10 секунд!");
		SetPlayerChatBubble(playerid, "открывает шлагбаум", COLOR_PURPLE, 13.0, 10000);
	}
	if(IsPlayerInRangeOfPoint(playerid,3.0,468.609,1141.930,1019.555))
	{
	    if(IsAMedic(playerid))
	    {
	        if(!opendoors[playerid][0])
	        {
	            opendoors[playerid][0] = true;
	            MoveDynamicObject(Doors[0],468.609,1141.930,1019.555,3.0,0.00000000,0.00000000,-90.00000000);
				SetPlayerChatBubble(playerid, "открывает дверь", COLOR_PURPLE, 13.0, 10000);
	        }
	        else
	        {
	            opendoors[playerid][0] = false;
	            MoveDynamicObject(Doors[0],468.609,1141.930,1019.555,3.0,0.00000000,0.00000000,0.00000000);
				SetPlayerChatBubble(playerid, "закрывает дверь", COLOR_PURPLE, 13.0, 10000);
	        }
		}
        else SendClientMessage(playerid, COLOR_GREY, "У вас нет ключей от этой двери!");
	}
	if(IsPlayerInRangeOfPoint(playerid,3.0,466.029,1122.338,1020.821))
	{
	    if(IsAMedic(playerid))
	    {
	        if(!opendoors[playerid][1])
	        {
	            opendoors[playerid][1] = true;
	            MoveDynamicObject(Doors[1],466.029,1122.338,1020.821,3.0,0.00000000,0.00000000,0.00000000);
				SetPlayerChatBubble(playerid, "открывает дверь", COLOR_PURPLE, 13.0, 10000);
	        }
	        else
	        {
	            opendoors[playerid][1] = false;
	            MoveDynamicObject(Doors[1],466.029,1122.338,1020.821,3.0,0.00000000,0.00000000,90.00000000);
				SetPlayerChatBubble(playerid, "закрывает дверь", COLOR_PURPLE, 13.0, 10000);
	        }
		}
        else SendClientMessage(playerid, COLOR_GREY, "У вас нет ключей от этой двери!");
	}
	if(IsPlayerInRangeOfPoint(playerid,3.0,-413.611,1027.006,1341.185))
	{
	    if(IsAMayor(playerid))
	    {
	        if(!opendoors[playerid][2])
	        {
	            opendoors[playerid][2] = true;
	            MoveDynamicObject(Doors[2],-413.611,1027.006,1341.185,3.0,0.00000000,0.00000000,-90.00000000);
				SetPlayerChatBubble(playerid, "открывает дверь", COLOR_PURPLE, 13.0, 10000);
	        }
	        else
	        {
	            opendoors[playerid][2] = false;
	            MoveDynamicObject(Doors[2],-413.611,1027.006,1341.185,3.0,0.00000000,0.00000000,0.00000000);
				SetPlayerChatBubble(playerid, "закрывает дверь", COLOR_PURPLE, 13.0, 10000);
	        }
		}
        else SendClientMessage(playerid, COLOR_GREY, "У вас нет ключей от этой двери!");
	}
	if(IsPlayerInRangeOfPoint(playerid,3.0,1076.011,569.865,1016.473))
	{
	    if(IsACop(playerid))
	    {
	        if(!opendoors[playerid][3])
	        {
	            opendoors[playerid][3] = true;
	            MoveDynamicObject(Doors[3],1076.011,569.865,1016.473,3.0,0.00000000,0.00000000,90.00000000);
				SetPlayerChatBubble(playerid, "открывает дверь", COLOR_PURPLE, 13.0, 10000);
	        }
	        else
	        {
	            opendoors[playerid][3] = false;
	            MoveDynamicObject(Doors[3],1076.011,569.865,1016.473,3.0,0.00000000,0.00000000,0.00000000);
				SetPlayerChatBubble(playerid, "закрывает дверь", COLOR_PURPLE, 13.0, 10000);
	        }
		}
        else SendClientMessage(playerid, COLOR_GREY, "У вас нет ключей от этой двери!");
	}
	if(IsPlayerInRangeOfPoint(playerid,3.0,1049.280,574.205,1016.473))
	{
	    if(IsACop(playerid))
	    {
	        if(!opendoors[playerid][4])
	        {
	            opendoors[playerid][4] = true;
	            MoveDynamicObject(Doors[4],1049.280,574.205,1016.473,3.0,0.00000000,0.00000000,90.00000000);
				SetPlayerChatBubble(playerid, "открывает дверь", COLOR_PURPLE, 13.0, 10000);
	        }
	        else
	        {
	            opendoors[playerid][4] = false;
	            MoveDynamicObject(Doors[4],1049.280,574.205,1016.473,3.0,0.00000000,0.00000000,0.00000000);
				SetPlayerChatBubble(playerid, "закрывает дверь", COLOR_PURPLE, 13.0, 10000);
	        }
		}
        else SendClientMessage(playerid, COLOR_GREY, "У вас нет ключей от этой двери!");
	}
	if(IsPlayerInRangeOfPoint(playerid,3.0,1049.280,582.489,1016.473))
	{
	    if(IsACop(playerid))
	    {
	        if(!opendoors[playerid][5])
	        {
	            opendoors[playerid][5] = true;
	            MoveDynamicObject(Doors[5],1049.280,582.489,1016.473,3.0,0.00000000,0.00000000,-90.00000000);
				SetPlayerChatBubble(playerid, "открывает дверь", COLOR_PURPLE, 13.0, 10000);
	        }
	        else
	        {
	            opendoors[playerid][5] = false;
	            MoveDynamicObject(Doors[5],1049.280,582.489,1016.473,3.0,0.00000000,0.00000000,0.00000000);
				SetPlayerChatBubble(playerid, "закрывает дверь", COLOR_PURPLE, 13.0, 10000);
	        }
		}
        else SendClientMessage(playerid, COLOR_GREY, "У вас нет ключей от этой двери!");
	}
	if(IsPlayerInRangeOfPoint(playerid,3.0,1043.025,572.772,1016.473))
	{
	    if(IsACop(playerid))
	    {
	        if(!opendoors[playerid][6])
	        {
	            opendoors[playerid][6] = true;
	            MoveDynamicObject(Doors[6],1043.025,572.772,1016.473,3.0,0.00000000,0.00000000,90.00000000);
				SetPlayerChatBubble(playerid, "открывает дверь", COLOR_PURPLE, 13.0, 10000);
	        }
	        else
	        {
	            opendoors[playerid][6] = false;
	            MoveDynamicObject(Doors[6],1043.025,572.772,1016.473,3.0,0.00000000,0.00000000,0.00000000);
				SetPlayerChatBubble(playerid, "закрывает дверь", COLOR_PURPLE, 13.0, 10000);
	        }
		}
        else SendClientMessage(playerid, COLOR_GREY, "У вас нет ключей от этой двери!");
	}
	if(IsPlayerInRangeOfPoint(playerid,3.0,1035.160,573.761,1016.473))
	{
	    if(IsACop(playerid))
	    {
	        if(!opendoors[playerid][7])
	        {
	            opendoors[playerid][7] = true;
	            MoveDynamicObject(Doors[7],1035.160,573.761,1016.473,3.0,0.00000000,0.00000000,90.00000000);
				SetPlayerChatBubble(playerid, "открывает дверь", COLOR_PURPLE, 13.0, 10000);
	        }
	        else
	        {
	            opendoors[playerid][7] = false;
	            MoveDynamicObject(Doors[7],1035.160,573.761,1016.473,3.0,0.00000000,0.00000000,0.00000000);
				SetPlayerChatBubble(playerid, "закрывает дверь", COLOR_PURPLE, 13.0, 10000);
	        }
		}
        else SendClientMessage(playerid, COLOR_GREY, "У вас нет ключей от этой двери!");
	}
	if(IsPlayerInRangeOfPoint(playerid,3.0,1018.288,577.744,1016.473))
	{
	    if(IsACop(playerid))
	    {
	        if(!opendoors[playerid][8])
	        {
	            opendoors[playerid][8] = true;
	            MoveDynamicObject(Doors[8],1018.288,577.744,1016.473,3.0,0.00000000,0.00000000,0.00000000);
				SetPlayerChatBubble(playerid, "открывает дверь", COLOR_PURPLE, 13.0, 10000);
	        }
	        else
	        {
	            opendoors[playerid][8] = false;
	            MoveDynamicObject(Doors[8],1018.288,577.744,1016.473,3.0,0.00000000,0.00000000,90.00000000);
				SetPlayerChatBubble(playerid, "закрывает дверь", COLOR_PURPLE, 13.0, 10000);
	        }
		}
        else SendClientMessage(playerid, COLOR_GREY, "У вас нет ключей от этой двери!");
	}
	return 1;
}

CMD:unmask(playerid, params[])
{
    if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вам недоступна эта команда!");
    if(UnMaskReset[playerid] > 0) return 1;
	UnMaskReset[playerid] = 3;
	foreach(new i : Player)
	{
 		if(!gPlayerLogged[i]) continue;
		if(IsPlayerStream(2.0, playerid, i) && GetPlayerFaceToPlayer(playerid, i, 30.0))
		{
		    if(pCuff[i][pCuffee] == i)
 			{
 			    if(!PlayerUseMask[i]) continue;
				new string[100];
				PlayerUseMask[i] = false;
				format(string, sizeof(string), "Вы сняли маску с игрока %s", GetName(i));
				SendClientMessage(playerid, COLOR_BLUE, string);
				format(string, sizeof(string), "%s снял с вас маску", GetName(playerid));
				SendClientMessage(i, COLOR_BLUE, string);
				format(string, sizeof(string), "снял маску с игрока %s", GetName(i));
				MeAction(playerid, string);
				break;
			}
			else SendClientMessage(playerid, COLOR_GREY, "Игрок должен быть в наручниках");
	    }
    }
	return 1;
}

CMD:cuff(playerid, params[])
{
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	else if(PlayerTied[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Вы связаны, вы не можете одеть наручники!");
	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /cuff [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(!IsPlayerStream(8.0, playerid, params[0], 1)) return SendClientMessage(playerid, COLOR_GREY, "Вы далеко друг от друга");
	else if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете надеть наручники на себя!");
	else if(IsACop(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок полицейский/агент ФСБ!");
	else if(pCuff[params[0]][pCuffee] == params[0]) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже в наручниках!");
	else if(pInfo[params[0]][pWanted] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не находиться в розыске");
	if(GetPVarInt(params[0], "Tazer") > 0)
	{
		SetPVarInt(params[0], "Tazer", 0);
		TogglePlayerControllable(params[0], 1);
		SetPlayerSpecialAction(params[0], SPECIAL_ACTION_NONE);
	}
	SendMes(playerid, COLOR_BLUE, "Вы надели наручники на %s", GetName(params[0]));
	SendMes(params[0], COLOR_BLUE, "%s надел%s на вас наручники", GetName(playerid), (pInfo[playerid][pSex]==1)?(""):("а"));
	SetPlayerSpecialAction(params[0], SPECIAL_ACTION_CUFFED);
	SetPlayerAttachedObject(params[0], 0, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
	pCuff[params[0]][pCuffee] = pCuff[playerid][pCuffee] = params[0];
	pCuff[params[0]][pCuffer] = pCuff[playerid][pCuffer] = playerid;
	GameTextForPlayer(playerid, "~r~cuffed", 5000, 5);
	GameTextForPlayer(params[0], "~r~cuffed", 5000, 5);
	new string[64];
	format(string, sizeof(string), "надел%s наручники на %s", (pInfo[playerid][pSex]==1)?(""):("а"), GetName(params[0]));
	MeAction(playerid, string);
	return 1;
}

CMD:uncuff(playerid, params[])
{
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /uncuff [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(!IsPlayerStream(8.0, playerid, params[0], 1)) return SendClientMessage(playerid, COLOR_GREY, "Вы далеко друг от друга");
	else if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете снять наручники с себя!");
	else if(pCuff[params[0]][pCuffer] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Игрок не в наручниках!");
	SendMes(playerid, COLOR_BLUE, "Вы сняли наручники с %s", GetName(params[0]));
	SendMes(params[0], COLOR_BLUE, "%s снял%s с вас наручники", GetName(playerid), (pInfo[playerid][pSex]==1)?(""):("а"));
	SetPlayerSpecialAction(params[0], SPECIAL_ACTION_NONE);
	RemovePlayerAttachedObject(params[0], 0);
 	pCuff[params[0]][pCuffer] = pCuff[params[0]][pCuffee] = pCuff[playerid][pCuffee] = pCuff[playerid][pCuffer] = INVALID_PLAYER_ID;
	GameTextForPlayer(playerid, "~g~uncuffed", 5000, 5);
	GameTextForPlayer(params[0], "~g~uncuffed", 5000, 5);
	TogglePlayerControllable(params[0], 1);
	new string[64];
	format(string, sizeof(string), "снял%s наручники с %s", (pInfo[playerid][pSex]==1)?(""):("а"), GetName(params[0]));
	MeAction(playerid, string);
	return 1;
}

CMD:search(playerid, params[])
{
	new string[109];
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /search [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(!pInfo[params[0]][pWanted]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Игрок не находиться в розыске!");
	format(string, sizeof(string), "Вы отметили на карте {FF9900}%s[%i]", GetName(params[0]), params[0]);
	SendClientMessage(playerid, COLOR_GREEN, string);
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(params[0], X, Y, Z);
	DisablePlayerRaceCheckpoint(playerid);
	SetPlayerRaceCheckpoint(playerid, 1, X, Y, Z, 0.0, 0.0, 0.0, 5);
	UseGPS[playerid] = true;
	for(new i; i < 2; i++) TextDrawShowForPlayer(playerid, enable_gps_TD[i]);
	return 1;
}

CMD:arrest(playerid, params[])
{
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
 	if(pInfo[playerid][pMember] == TEAM_DPS && (IsPlayerInRangeOfPoint(playerid,20.0,898.7244,2085.5872,2721.8101) && GetPlayerVirtualWorld(playerid)==1))
	{
		if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /arrest [id игрока]");
		else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
		else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
		else if(!IsPlayerStream(8.0, playerid, params[0], 1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
		else if(pInfo[params[0]][pJail] > 0) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок уже находиться в тюрьме!");
		else if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете арестовать самого себя!");
		else if(IsACop(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок полицейский/агент ФСБ!");
		else if(pInfo[params[0]][pWanted] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен иметь хотя бы 1 уровень розыска!");
		ResetPlayerWeaponsEx(params[0]);
		pInfo[params[0]][pJailTime] = ((pInfo[params[0]][pWanted]*10)*60);
		pInfo[params[0]][pWanted] = 0;
		SetPlayerWantedLevel(params[0], pInfo[params[0]][pWanted]);
		if(pInfo[params[0]][pZakon] > 1) pInfo[params[0]][pZakon] --;
		if(pCuff[params[0]][pCuffer] != INVALID_PLAYER_ID)
		{
			new cuffer = pCuff[params[0]][pCuffer];
			SetPlayerSpecialAction(params[0], SPECIAL_ACTION_NONE);
			RemovePlayerAttachedObject(params[0], 0);
			pCuff[params[0]][pCuffer] = pCuff[params[0]][pCuffee] = pCuff[cuffer][pCuffee] = pCuff[cuffer][pCuffer] = INVALID_PLAYER_ID;
		}
		SendMes(playerid, COLOR_BLUE, "Вы посадили в камеру %s[%i] на %i мин", GetName(params[0]), params[0], pInfo[params[0]][pJailTime]/60);
		SendMes(params[0], COLOR_BLUE, "%s %s[%i] посадил Вас в камеру на %i мин", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid), playerid, pInfo[params[0]][pJailTime]/60);
        new rand_coord = random(sizeof(JailSpawn));
	    SetPlayerPos(params[0], JailSpawn[rand_coord][0], JailSpawn[rand_coord][1], JailSpawn[rand_coord][2], 1);
	    SetPlayerFacingAngle(params[0], JailSpawn[rand_coord][3]);
		SetPlayerInterior(params[0], 1);
		SetPlayerVirtualWorld(params[0], 1);
		pInfo[params[0]][pJail] = 1;
		mysql_query_string[0] = EOS;
		format(mysql_query_string, 200, "UPDATE "T_ACCOUNTS" SET jail = %i, jailtime = %i, wanted = 0, zakon = %i WHERE id = %i", pInfo[params[0]][pJail], pInfo[params[0]][pJailTime], pInfo[params[0]][pZakon], pInfo[params[0]][pID]);
		mysql_tquery(dbHandle, mysql_query_string, "", "");
	}
	else if(pInfo[playerid][pMember] == TEAM_SFPD && (IsPlayerInRangeOfPoint(playerid,20.0,2208.3813,-502.7921,-7.4141) && GetPlayerVirtualWorld(playerid)==2))
	{
		if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /arrest [id игрока]");
		else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
		else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
		else if(!IsPlayerStream(8.0, playerid, params[0], 1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
		else if(pInfo[params[0]][pJail] > 0) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок уже находиться в тюрьме!");
		else if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете арестовать самого себя!");
		else if(IsACop(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок полицейский/агент ФСБ!");
		else if(pInfo[params[0]][pWanted] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен иметь хотя бы 1 уровень розыска!");
		ResetPlayerWeaponsEx(params[0]);
		pInfo[params[0]][pJailTime] = ((pInfo[params[0]][pWanted]*10)*60);
		pInfo[params[0]][pWanted] = 0;
		SetPlayerWantedLevel(params[0], pInfo[params[0]][pWanted]);
		if(pInfo[params[0]][pZakon] > 1) pInfo[params[0]][pZakon] --;
		if(pCuff[params[0]][pCuffer] != INVALID_PLAYER_ID)
		{
			new cuffer = pCuff[params[0]][pCuffer];
			SetPlayerSpecialAction(params[0], SPECIAL_ACTION_NONE);
			RemovePlayerAttachedObject(params[0], 0);
			pCuff[params[0]][pCuffer] = pCuff[params[0]][pCuffee] = pCuff[cuffer][pCuffee] = pCuff[cuffer][pCuffer] = INVALID_PLAYER_ID;
		}
		SendMes(playerid, COLOR_BLUE, "Вы посадили в камеру %s[%i] на %i мин", GetName(params[0]), params[0], pInfo[params[0]][pJailTime]/60);
		SendMes(params[0], COLOR_BLUE, "%s %s[%i] посадил Вас в камеру на %i мин", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid), playerid, pInfo[params[0]][pJailTime]/60);
		new rand_coord = random(sizeof(JailSpawn));
	    SetPlayerPos(params[0], JailSpawn[rand_coord][0], JailSpawn[rand_coord][1], JailSpawn[rand_coord][2], 1);
	    SetPlayerFacingAngle(params[0], JailSpawn[rand_coord][3]);
		SetPlayerInterior(params[0], 1);
		SetPlayerVirtualWorld(params[0], 2);
		pInfo[params[0]][pJail] = 2;
		mysql_query_string[0] = EOS;
		format(mysql_query_string, 200, "UPDATE "T_ACCOUNTS" SET jail = %i,jailtime = %i,wanted = 0,zakon = %i WHERE id = %i", pInfo[params[0]][pJail], pInfo[params[0]][pJailTime], pInfo[params[0]][pZakon], pInfo[params[0]][pID]);
		mysql_tquery(dbHandle, mysql_query_string, "", "");
	}
	else if(pInfo[playerid][pMember] == TEAM_LVPD && (IsPlayerInRangeOfPoint(playerid,20.0,898.7244,2085.5872,2721.8101) && GetPlayerVirtualWorld(playerid)==3))
	{
		if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /arrest [id игрока]");
		else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
		else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
		else if(!IsPlayerStream(8.0, playerid, params[0], 1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
		else if(pInfo[params[0]][pJail] > 0) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок уже находиться в тюрьме!");
		else if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете арестовать самого себя!");
		else if(IsACop(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок полицейский/агент ФСБ!");
		else if(pInfo[params[0]][pWanted] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен иметь хотя бы 1 уровень розыска!");
		ResetPlayerWeaponsEx(params[0]);
		pInfo[params[0]][pJailTime] = ((pInfo[params[0]][pWanted]*10)*60);
		pInfo[params[0]][pWanted] = 0;
		SetPlayerWantedLevel(params[0], pInfo[params[0]][pWanted]);
		if(pInfo[params[0]][pZakon] > 1) pInfo[params[0]][pZakon] --;
		if(pCuff[params[0]][pCuffer] != INVALID_PLAYER_ID)
		{
			new cuffer = pCuff[params[0]][pCuffer];
			SetPlayerSpecialAction(params[0], SPECIAL_ACTION_NONE);
			RemovePlayerAttachedObject(params[0], 0);
			pCuff[params[0]][pCuffer] = pCuff[params[0]][pCuffee] = pCuff[cuffer][pCuffee] = pCuff[cuffer][pCuffer] = INVALID_PLAYER_ID;
		}
		SendMes(playerid, COLOR_BLUE, "Вы посадили в камеру %s[%i] на %i мин", GetName(params[0]), params[0], pInfo[params[0]][pJailTime]/60);
		SendMes(params[0], COLOR_BLUE, "%s %s[%i] посадил Вас в камеру на %i мин", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid), playerid, pInfo[params[0]][pJailTime]/60);
		new rand_coord = random(sizeof(JailSpawn));
	    SetPlayerPos(params[0], JailSpawn[rand_coord][0], JailSpawn[rand_coord][1], JailSpawn[rand_coord][2], 1);
	    SetPlayerFacingAngle(params[0], JailSpawn[rand_coord][3]);
		SetPlayerInterior(params[0], 1);
		SetPlayerVirtualWorld(params[0], 3);
		pInfo[params[0]][pJail] = 3;
		mysql_query_string[0] = EOS;
		format(mysql_query_string, 200, "UPDATE "T_ACCOUNTS" SET jail = %i, jailtime = %i, wanted = 0, zakon = %i WHERE id = %i", pInfo[params[0]][pJail], pInfo[params[0]][pJailTime], pInfo[params[0]][pZakon], pInfo[params[0]][pID]);
		mysql_tquery(dbHandle, mysql_query_string, "", "");
	}
	else if(pInfo[playerid][pMember] == TEAM_FBI && (
	IsPlayerInRangeOfPoint(playerid,20.0,898.7244,2085.5872,2721.8101) && GetPlayerVirtualWorld(playerid)==1 ||
	IsPlayerInRangeOfPoint(playerid,20.0,2208.3813,-502.7921,-7.4141) && GetPlayerVirtualWorld(playerid)==2 ||
	IsPlayerInRangeOfPoint(playerid,20.0,898.7244,2085.5872,2721.8101) && GetPlayerVirtualWorld(playerid)==3))
	{
		if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /arrest [id игрока]");
		else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
		else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
		else if(!IsPlayerStream(8.0, playerid, params[0], 1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
		else if(pInfo[params[0]][pJail] > 0) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок уже находиться в тюрьме!");
		else if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете арестовать самого себя!");
		else if(IsACop(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок полицейский/агент ФСБ!");
		else if(pInfo[params[0]][pWanted] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен иметь хотя бы 1 уровень розыска!");
		ResetPlayerWeaponsEx(params[0]);
		pInfo[params[0]][pJailTime] = ((pInfo[params[0]][pWanted]*10)*60);
		pInfo[params[0]][pWanted] = 0;
		SetPlayerWantedLevel(params[0], pInfo[params[0]][pWanted]);
		if(pInfo[params[0]][pZakon] > 1) pInfo[params[0]][pZakon] --;
		if(pCuff[params[0]][pCuffer] != INVALID_PLAYER_ID)
		{
			new cuffer = pCuff[params[0]][pCuffer];
			SetPlayerSpecialAction(params[0], SPECIAL_ACTION_NONE);
			RemovePlayerAttachedObject(params[0], 0);
			pCuff[params[0]][pCuffer] = pCuff[params[0]][pCuffee] = pCuff[cuffer][pCuffee] = pCuff[cuffer][pCuffer] = INVALID_PLAYER_ID;
		}
		SendMes(playerid, COLOR_BLUE, "Вы посадили в камеру %s[%i] на %i мин", GetName(params[0]), params[0], pInfo[params[0]][pJailTime]/60);
		SendMes(params[0], COLOR_BLUE, "%s %s[%i] посадил Вас в камеру на %i мин", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid), playerid, pInfo[params[0]][pJailTime]/60);
		if(IsPlayerInRangeOfPoint(playerid,20.0,898.7244,2085.5872,2721.8101) && GetPlayerVirtualWorld(playerid)==1)
		{
			new rand_coord = random(sizeof(JailSpawn));
		    SetPlayerPos(params[0], JailSpawn[rand_coord][0], JailSpawn[rand_coord][1], JailSpawn[rand_coord][2], 1);
		    SetPlayerFacingAngle(params[0], JailSpawn[rand_coord][3]);
			SetPlayerInterior(params[0], 1);
			SetPlayerVirtualWorld(params[0], 1);
			pInfo[params[0]][pJail] = 1;
		}
		if(IsPlayerInRangeOfPoint(playerid,20.0,2208.3813,-502.7921,-7.4141) && GetPlayerVirtualWorld(playerid)==2)
		{
			new rand_coord = random(sizeof(JailSpawn));
		    SetPlayerPos(params[0], JailSpawn[rand_coord][0], JailSpawn[rand_coord][1], JailSpawn[rand_coord][2], 1);
		    SetPlayerFacingAngle(params[0], JailSpawn[rand_coord][3]);
			SetPlayerInterior(params[0], 1);
			SetPlayerVirtualWorld(params[0], 2);
			pInfo[params[0]][pJail] = 2;
		}
		if(IsPlayerInRangeOfPoint(playerid,20.0,898.7244,2085.5872,2721.8101) && GetPlayerVirtualWorld(playerid)==3)
		{
			new rand_coord = random(sizeof(JailSpawn));
		    SetPlayerPos(params[0], JailSpawn[rand_coord][0], JailSpawn[rand_coord][1], JailSpawn[rand_coord][2], 1);
		    SetPlayerFacingAngle(params[0], JailSpawn[rand_coord][3]);
			SetPlayerInterior(params[0], 1);
			SetPlayerVirtualWorld(params[0], 3);
			pInfo[params[0]][pJail] = 3;
		}
		mysql_query_string[0] = EOS;
		format(mysql_query_string, 200, "UPDATE "T_ACCOUNTS" SET jail = %i, jailtime = %i, wanted = 0, zakon = %i WHERE id = %i", pInfo[params[0]][pJail], pInfo[params[0]][pJailTime], pInfo[params[0]][pZakon], pInfo[params[0]][pID]);
		mysql_tquery(dbHandle, mysql_query_string, "", "");
	}
	else SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться рядом с тюрьмой!");
	return 1;
}

CMD:megaphone(playerid, params[])
{
    if(pInfo[playerid][pMuted] > 0) return SendMuteMessage(playerid);
	else if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	else if(isnull(params)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /m [текст]");
	else if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в транспорте!");
	else if(IsAIP(params[0])) return 0;
	else if(CheckString(params[0], 1)) return PlayerGetsChatBan(playerid, params[0]);
	new vehicleid = GetPVarInt(playerid,"VehicleEnters");
	if((aLSPD[0] <= vehicleid <= aLSPD[16])
	|| (aSFPD[0] <= vehicleid <= aSFPD[9])
	|| (aLVPD[0] <= vehicleid <= aLVPD[18])
	|| (aFBI[0] <= vehicleid <= aFBI[4]))
	{
	    if(isnull(params)) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /megaphone [текст]");
	    new string[128];
		format(string, sizeof(string), "[Мегафон] %s %s: %s",Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]],GetName(playerid),params[0]);
		SendStreamMessage(45.0, playerid, string, COLOR_YELLOW);
	}
	else SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в служебном транспорте");
	return 1;
}
CMD:m(playerid, params[]) return cmd_megaphone(playerid, params);

CMD:clear(playerid, params[])
{
	if(!IsACop(playerid) && pInfo[playerid][pRank] < 4) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /clear [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете снять себе розыск!");
	else if(!pInfo[params[0]][pWanted]) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен находиться в розыске!");
	SendMes(playerid, COLOR_BLUE, "Вы сняли розыск с %s", GetName(params[0]));
	SendMes(params[0], COLOR_BLUE, "%s %s снял вам розыск", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid));
	pInfo[params[0]][pWanted] = 0;
	SetPlayerWantedLevel(params[0], pInfo[params[0]][pWanted]);
	MysqlUpdatePlayerInt(params[0], "wanted", pInfo[params[0]][pWanted]);
	return 1;
}

CMD:cput(playerid, params[])
{
    if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	else if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть в авто!");
	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /cput [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(!IsPlayerStream(10.0, playerid, params[0], 1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок не рядом с вами!");
	else if(IsPlayerInAnyVehicle(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок не должен находиться в транспорте!");
	else if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете затащить в автомобиль самого себя!");
	new vehicleid = GetPVarInt(playerid,"VehicleEnters");
	if((aLSPD[0] <= vehicleid <= aLSPD[16])
	|| (aSFPD[0] <= vehicleid <= aSFPD[9])
	|| (aLVPD[0] <= vehicleid <= aLVPD[18])
	|| (aFBI[0] <= vehicleid <= aFBI[4]))
	{
	    new seat = GetFreeSeat(vehicleid);
		if(seat == -1) return SendClientMessage(playerid, COLOR_GREY, "В машине нет свободных мест");
		PutPlayerInVehicle(params[0], vehicleid, seat);
		new string[90];
		format(string, sizeof(string), "затащил%s в авто %s", (pInfo[playerid][pSex]==1)?(""):("а"), GetName(params[0]));
		MeAction(playerid, string);
		if(pCuff[params[0]][pCuffee] == params[0]) TogglePlayerControllable(params[0], 0);
	}
	else SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в служебном транспорте");
	return 1;
}

CMD:cout(playerid, params[])
{
    if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	else if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть в авто!");
	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /cout [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
    new vehicleid = GetPVarInt(playerid,"VehicleEnters"), targetvehicleid = GetPVarInt(params[0],"VehicleEnters");
	if((aLSPD[0] <= vehicleid <= aLSPD[16])
	|| (aSFPD[0] <= vehicleid <= aSFPD[9])
	|| (aLVPD[0] <= vehicleid <= aLVPD[18])
	|| (aFBI[0] <= vehicleid <= aFBI[4]))
	{
	    if(vehicleid != targetvehicleid) return SendClientMessage(playerid, COLOR_GREY, "Человек не в Вашем авто");
	    new string[128];
		if(IsPlayerInRangeOfPoint(playerid, 10.0, 2582.0603,-2411.6267,22.0003))
		{
		    RemovePlayerFromVehicle(params[0]);
		    SetPVarInt(params[0], "player_cout_lspd", 1);
		    OnPlayerPickUpDynamicPickup(params[0], lspdpic[2]);
		    format(string, sizeof(string), "%s %s высадил %s Вас в Полицию г.Южного", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid), (pInfo[playerid][pSex]==1)?(""):("а"));
		    SendClientMessage(playerid, COLOR_GREY, string);
		    format(string, sizeof(string), "Вы высадили %s в Полицию г.Южного", GetName(params[0]));
		    SendClientMessage(playerid, COLOR_GREY, string);
		    format(string, sizeof(string), "высадил %s %s в Полицию г.Южного", (pInfo[playerid][pSex]==1)?(""):("а"), GetName(params[0]));
		    MeAction(playerid, string);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 10.0, 1939.5189,2164.4802,15.7060))
		{
		    RemovePlayerFromVehicle(params[0]);
		    SetPVarInt(params[0], "player_cout_sfpd", 1);
		    OnPlayerPickUpDynamicPickup(params[0], sfpdpic[2]);
		    format(string, sizeof(string), "%s %s высадил%s Вас в Полицию пгт.Батырево", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid), (pInfo[playerid][pSex]==1)?(""):("а"));
		    SendClientMessage(playerid, COLOR_GREY, string);
		    format(string, sizeof(string), "Вы высадили %s в Полицию пгт.Батырево", GetName(params[0]));
		    SendClientMessage(playerid, COLOR_GREY, string);
		    format(string, sizeof(string), "высадил%s %s в Полицию пгт.Батырево", (pInfo[playerid][pSex]==1)?(""):("а"), GetName(params[0]));
		    MeAction(playerid, string);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 10.0, 790.8638,757.5550,12.0000))
		{
		    RemovePlayerFromVehicle(params[0]);
		    SetPVarInt(params[0], "player_cout_lvpd", 1);
		    OnPlayerPickUpDynamicPickup(params[0], lvpdpic[0]);
		    format(string, sizeof(string), "%s %s высадил%s Вас в Полицию г.Арзамаса", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid), (pInfo[playerid][pSex]==1)?(""):("а"));
		    SendClientMessage(playerid, COLOR_GREY, string);
		    format(string, sizeof(string), "Вы высадили %s в Полицию г.Арзамаса", GetName(params[0]));
		    SendClientMessage(playerid, COLOR_GREY, string);
		    format(string, sizeof(string), "высадил%s %s в Полицию г.Арзамаса", (pInfo[playerid][pSex]==1)?(""):("а"), GetName(params[0]));
		    MeAction(playerid, string);
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вы должны находится в гараже любого из полицейских департаментов");
	}
	else SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в служебном транспорте");
	return 1;
}

CMD:ram(playerid, params[])
{
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	new idx = -1, string[128];
	for(new i = 1; i <= TOTALHOUSE; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, HouseInfo[i][hEntr][0], HouseInfo[i][hEntr][1], HouseInfo[i][hEntr][2]))
		{
		    idx = i;
		    break;
		}
	}
	if(idx == -1) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться рядом с домом!");
    format(string, sizeof(string), "Вы выбили дверь дома (Владелец: %s)", HouseInfo[idx][hOwner]);
	SendClientMessage(playerid, COLOR_GREEN, string);
	MeAction(playerid, (pInfo[playerid][pSex]==1)?("выбил дверь дома"):("выбила дверь дома"));
	new _c = HouseInfo[idx][hClass], _i = HouseInfo[idx][hInt];
	SetPlayerPos(playerid, HintsInfo[_c][_i][hiExitX], HintsInfo[_c][_i][hiExitY], HintsInfo[_c][_i][hiExitZ], 1);
    SetPlayerFacingAngle(playerid, HintsInfo[_c][_i][hiExitFA]);
	SetCameraBehindPlayer(playerid);
	SetPlayerInterior(playerid, HintsInfo[_c][_i][hiInt]);
	SetPlayerVirtualWorld(playerid, HouseInfo[idx][hID]);
	return 1;
}

CMD:lic(playerid, params[])
{
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /lic [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(!IsPlayerStream(8.0, playerid, params[0], 1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
	else if(ZapretDice[params[0]] == 1) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У игрока уже есть одно активное предложение!");
    else if(pTemp[playerid][pSelectPlayer] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас уже есть одно активное предложение. Чтобы отказаться от него введите /cancel");
	else if(pTemp[params[0]][pTargetPlayer] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У игрока уже есть одно активное предложение!");
	if(params[0] == playerid)
	{
		new string[100];
		stringer[0] = EOS;
		format(string, sizeof(string), "{FFCC00}Лицензии %s", GetName(playerid));
		format(stringer, 120, "{FFFFFF}Водительские права: %s\nЛицензия на полеты: %s\nЛицензия на оружие: %s\nЛицензия на судоходство: %s",(!GetLicCar(playerid))?("Нет"):("Есть"),(!GetLicPlane(playerid))?("Нет"):("Есть"),(!GetLicWeapon(playerid))?("Нет"):("Есть"),(!GetLicWater(playerid))?("Нет"):("Есть"));
		ShowPlayerDialog(params[0], dNull, DIALOG_STYLE_MSGBOX, string, stringer, "Закрыть", "");
		format(string, sizeof(string), "показал%s свои лицензии %s", (pInfo[playerid][pSex]==1)?(""):("а"), GetName(params[0]));
		MeAction(playerid, string);
	}
	else
	{
	    SendMes(playerid, COLOR_BLUE, "Вы предлагаете %s показать свои лицензии", GetName(params[0]));
		SendMes(params[0], COLOR_BLUE, "%s предлагает Вам показать свои лицензии", GetName(playerid));
		SendClientMessage(params[0], COLOR_WHITE, PlayerAccess);
		pTemp[playerid][pSelectPlayer] = params[0];
		pTemp[params[0]][pTargetPlayer] = playerid;
		pTemp[params[0]][pTargetAction] = ACTION_SHOW_LIC;
	}
	return 1;
}

CMD:pass(playerid, params[])
{
    #if MYSQL_R41_2 == true

    if(!strlen(IsValidPassport(playerid))) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У Вас нет паспорта");

    #else

    if(!IsValidPassport(playerid)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У Вас нет паспорта");

    #endif

	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /pass [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(!IsPlayerStream(8.0, playerid, params[0], 1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
	else if(ZapretDice[params[0]] == 1) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У игрока уже есть одно активное предложение!");
    else if(pTemp[playerid][pSelectPlayer] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас уже есть одно активное предложение. Чтобы отказаться от него введите /cancel");
	else if(pTemp[params[0]][pTargetPlayer] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У игрока уже есть одно активное предложение!");
	if(params[0] == playerid)
	{
		new text[20] = "Не имеется", mtext[MAX_PLAYER_NAME] = "Нет";
		if(pInfo[playerid][pMarried]) format(mtext, sizeof(mtext), "%s", pInfo[playerid][pWhoMarried]);
		if(pInfo[playerid][pPhoneNumber] > 1) format(text, sizeof(text), "%i", pInfo[playerid][pPhoneNumber]);
		stringer[0] = EOS;
		format(stringer, 500, "{FFFFFF}Имя: %s\nПроживание в штате: %i\nСерия: %i\nНомер: %i\nТелефон: %s\nБрак: %s\nВоенный билет: %s\nОрганизация: %s\nДолжность: %s",
		GetName(playerid), pInfo[playerid][pLevel], PassInfo[playerid][psSeria], PassInfo[playerid][psNumber], text, mtext,
		(pInfo[playerid][pVoennik]) ? ("Имеется") : ("Не имеется"), Fraction_Name[pInfo[playerid][pMember]], Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]]);
		ShowPlayerDialog(params[0], dNull, DIALOG_STYLE_MSGBOX, "{FFCC00}Паспорт", stringer, "Закрыть", "");
		new string[64];
		format(string, sizeof(string), "показал%s свой паспорт %s", (pInfo[playerid][pSex]==1)?(""):("а"), GetName(params[0]));
		MeAction(playerid, string);
	}
	else
	{
	    SendMes(playerid, COLOR_BLUE, "Вы предлагаете %s показать свой паспорт", GetName(params[0]));
		SendMes(params[0], COLOR_BLUE, "%s предлагает Вам показать свой паспорт", GetName(playerid));
		SendClientMessage(params[0], COLOR_WHITE, PlayerAccess);
		pTemp[playerid][pSelectPlayer] = params[0];
		pTemp[params[0]][pTargetPlayer] = playerid;
		pTemp[params[0]][pTargetAction] = ACTION_SHOW_PASS;
	}
	return 1;
}

CMD:showmc(playerid, params[])
{
    #if MYSQL_R41_2 == true

    if(!strlen(IsValidPassport(playerid))) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У Вас нет этого документа");

    #else

    if(!IsValidPassport(playerid)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У Вас нет этого документа");

    #endif

    else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /showmc [id игрока]");
    else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(!IsPlayerStream(8.0, playerid, params[0], 1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
	else if(ZapretDice[params[0]] == 1) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У игрока уже есть одно активное предложение!");
    else if(pTemp[playerid][pSelectPlayer] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас уже есть одно активное предложение. Чтобы отказаться от него введите /cancel");
	else if(pTemp[params[0]][pTargetPlayer] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У игрока уже есть одно активное предложение!");
	if(params[0] == playerid)
	{
	    new med_status[25];
		switch(PassInfo[playerid][mcState])
		{
		    case -1: return SendClientMessage(playerid, COLOR_GREY, "У вас нет мед. карты");
		   	case 0: med_status = "не определен";
		   	case 1: med_status = "психически не здоров(-а)";
		   	case 2: med_status = "наблюдаются отклонения";
		   	case 3: med_status = "полностью здоровый(-ая)";
		}
		stringer[0] = EOS;
		format(stringer, 300, "{FFFFFF}Имя: %s\nВозраст: %d\nПол: %s\nСтатус: %s\n",
		GetName(playerid), pInfo[playerid][pAge], (pInfo[playerid][pSex] == 1) ? ("Мужчина") : ("Женщина"), med_status);
		ShowPlayerDialog(params[0], dNull, DIALOG_STYLE_MSGBOX, "{FFCC00}Мед. карта", stringer, "Закрыть", "");
        new string[64];
		format(string, sizeof(string), "показал%s свою мед. карту %s", (pInfo[playerid][pSex]==1)?(""):("а"), GetName(params[0]));
		MeAction(playerid, string);
	}
	else
	{
	    SendMes(playerid, COLOR_BLUE, "Вы предлагаете %s показать свою мед. карту", GetName(params[0]));
		SendMes(params[0], COLOR_BLUE, "%s предлагает Вам показать свою мед. карту", GetName(playerid));
		SendClientMessage(params[0], COLOR_WHITE, PlayerAccess);
		pTemp[playerid][pSelectPlayer] = params[0];
		pTemp[params[0]][pTargetPlayer] = playerid;
		pTemp[params[0]][pTargetAction] = ACTION_SHOW_MED;
	}
	return 1;
}

CMD:medcard(playerid, params[])
{
	if(!IsAMedic(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
    if(pInfo[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Ваш ранг недостаточно высок для этого");
    if(sscanf(params, "dd", params[0], params[1]))
	{
		SendClientMessage(playerid, COLOR_WHITE, "Введите: /medcard [id игрока] [статус]");
		SendClientMessage(playerid, COLOR_GREEN, "Допустимые статусы:");
		SendClientMessage(playerid, COLOR_GREY, "-1. Нет мед. карты");
		SendClientMessage(playerid, COLOR_GREY, " 0. Не определен");
		SendClientMessage(playerid, COLOR_GREY, " 1. Психически не здоров(а)");
		SendClientMessage(playerid, COLOR_GREY, " 2. Наблюдаются отклонения");
		SendClientMessage(playerid, COLOR_GREY, " 3. Полностью здоровый(ая)");
		return 1;
	}
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(!IsPlayerStream(8.0, playerid, params[0], 1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");

	#if MYSQL_R41_2 == true

	else if(!strlen(IsValidPassport(params[0]))) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У этого игрока нет паспорта");

	#else

	else if(!IsValidPassport(params[0])) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У этого игрока нет паспорта");

	#endif

	else if(pInfo[params[0]][pLevel] < 2) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Получать мед.карту могут игроки 2 уровня и выше");

    new Med[25];
    PassInfo[params[0]][mcState] = params[1];
	switch(PassInfo[params[0]][mcState])
	{
	    case -1: Med = "нет мед. карты";
	    case 0: Med = "не определен";
	    case 1: Med = "психически не здоров(-а)";
	    case 2: Med = "наблюдаются отклонения";
	    case 3: Med = "полностью здоровый(-ая)";
	}
    new string[128];
    format(string, sizeof(string), "%s %s выдал Вам медицинскую карту: {FFFFFF}%s", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid), Med);
    SendClientMessage(params[0], COLOR_GREEN, string);
    format(string, sizeof(string), "Вы выдали медицинскую карту %s: {FFFFFF}%s", GetName(params[0]), Med);
    SendClientMessage(playerid, COLOR_GREEN, string);
    format(string, sizeof(string), "UPDATE "T_PASSPORTS" SET McState = %d WHERE Name = '%s'", PassInfo[params[0]][mcState], GetName(params[0]));
    mysql_tquery(dbHandle, string, "", "");
	return 1;
}

CMD:eject(playerid, params[])
{
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в транспорте!");
	else if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться за рулем транспорт!");
	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /eject [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(playerid == params[0]) return SendClientMessage(playerid, COLOR_GREY, "Ты не можешь выкинуть себя!");
	else if(!IsPlayerInVehicle(params[0],GetPVarInt(playerid,"VehicleEnters"))) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен находиться в вашем транспорте!");
	new string[100];
	format(string, sizeof(string), "Вы выкинули из транспорта %s", GetName(params[0]));
	SendClientMessage(playerid, COLOR_BLUE, string);
	format(string, sizeof(string), "%s выкинул%s Вас из транспорта", GetName(playerid), (pInfo[playerid][pSex]==1)?(""):("а"));
	SendClientMessage(params[0], COLOR_BLUE, string);
	format(string, sizeof(string), "выкинул%s из транспорта %s", (pInfo[playerid][pSex]==1)?(""):("а"), GetName(params[0]));
	MeAction(playerid, string);
	RemovePlayerFromVehicle(params[0]);
	return 1;
}

CMD:stopcapture(playerid)
{
    IsAdmin(ADM_ADMIN);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(!CaptureStatus) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] В данный момент не происходит захват территории!");
	new string[128];
	format(string, sizeof(string), "[A] %s[%d] остановил войну банд за территорию", GetName(playerid), playerid);
	SendAdminMessage(COLOR_FADE1, string);
	new i = CaptureZone;
	format(string,sizeof(string),"Администратор остановил войну банд за территорию {FFFFFF}(%s против %s)",GetGangName(GZInfo[i][gNapad]),GetGangName(GZInfo[i][gFrak]));
	SendGhettoMes(COLOR_ORANGE, string);
    CaptureStatus = 0;
    CaptureZone = 0;
    CaptureTime = 0;
	CaptureEnd(GZInfo[i][gNapad], GZInfo[i][gFrak]);
	GangZoneStopFlashForAll(GangZone[i]);
	GangZoneHideForAll(GangZone[i]);
	GangZoneShowForAll(GangZone[i],TeamColors[GZInfo[i][gFrak]]);
	GangInfo[GZInfo[i][gNapad]][capture] =
	GangInfo[GZInfo[i][gNapad]][score] =
	GangInfo[GZInfo[i][gFrak]][capture] =
	GangInfo[GZInfo[i][gFrak]][score] =
	GangInfo[GZInfo[i][gNapad]][gangnumber] =
	GangInfo[GZInfo[i][gFrak]][gangnumber] = 0;
	GZInfo[i][gFrak] = GZInfo[i][gFrak];
	GZInfo[i][gNapad] = 0;
	CaptureStatus = 0;
	SaveGZ(i);
	foreach(new x : Player)
	{
		if(!gPlayerLogged[x] || (pInfo[i][pMember] != GZInfo[i][gNapad] && pInfo[i][pMember] != GZInfo[i][gFrak])) continue;
	//	ClearDeathMessage(i);
	}
	return 1;
}

CMD:offcapture(playerid, params[])
{
    IsAdmin(ADM_DEPUTY_CHIEF);
    else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	ShowDialogGhetto(playerid);
	return 1;
}

CMD:settext(playerid)
{
    IsAdmin(ADM_HELPER);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	if(!GetPVarInt(playerid, "settext"))
	{
		SetPVarInt(playerid, "settext", 1);
		if(CaptureStatus)
		{
			CaptureShow(playerid, GZInfo[CaptureZone][gNapad], GZInfo[CaptureZone][gFrak], 1);
		}
		SendClientMessage(playerid, COLOR_GREEN, "Вы включили режим отображения табличек"); // переключили
	}
	else
	{
	    CaptureShow(playerid, GZInfo[CaptureZone][gNapad], GZInfo[CaptureZone][gFrak], 0);
	    SendClientMessage(playerid, COLOR_RED, "Вы выключили отображение каптов"); // / боёв за бизнесы
	}
	return 1;
}

CMD:pay(playerid, params[])
{
    if(GetPVarInt(playerid, "payer") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Не флуди");
	else if(sscanf(params, "dd", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /pay [id игрока] [сумма]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Нельзя передавать деньги самому себе");
	else if(!IsPlayerStream(3.0, playerid, params[0], 1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
	else if(params[1] < 1 || GetCash(playerid) < params[1]) return SendClientMessage(playerid, COLOR_GREY, NoMoney);
	else if(pInfo[playerid][pLevel] == 1 && params[1] > 200) return SendClientMessage(playerid, COLOR_GREY, "Игроки ниже 2 уровня могут передавать только по 200$");
	else if(pInfo[playerid][pAdmin] < ADM_CHIEF && params[1] > 10000) return SendClientMessage(playerid, COLOR_GREY, "Нельзя передавать больше 10000$");
	TransferMoney(playerid, params[0], params[1]);
	new string[128];
	format(string,sizeof(string),"%s передал игроку %s %d$", GetName(playerid), GetName(params[0]), params[1]);
	WriteLog("PayLog",string);
	SendMes(params[0], COLOR_GREY, "Игрок %s передал вам %d$", GetName(playerid), params[1]);
	SendMes(playerid, COLOR_GREY, "Вы передали %d$ игроку %s", params[1], GetName(params[0]));
	format(string, sizeof(string), "достал%s деньги и передал%s их %s", (pInfo[playerid][pSex]==1)?(""):("а"), (pInfo[playerid][pSex]==1)?(""):("а"), GetName(params[0]));
	MeAction(playerid, string);
	ApplyAnimation(playerid, "INT_SHOP", "shop_pay", 4.1, 0, 0, 0, 0, 0, 1);
	SetPVarInt(playerid, "payer", gettime()+2);
	return 1;
}

CMD:heal(playerid, params[])
{
	if(!IsAMedic(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	if(!IsPlayerInAnyVehicle(playerid))
	{
		if(!IsPlayerInDynamicArea(playerid, AreaInfo[arGreenZone][16])) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находится в больнице либо в карете скорой помощи!");
		else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /heal [id игрока]");
		else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
		else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
		else if(!Medicines[playerid]) return SendClientMessage(playerid, COLOR_GREY, "У вас нет с собой медикаментов!");
		else if(playerid == params[0]) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете вылечить себя!");
		else if(!IsPlayerStream(5.0, playerid, params[0], 1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
		else if(PlayerLie[params[0]]) SendClientMessage(playerid, COLOR_GREY, "Пациент уже проходит курс лечения!");
		else if(ZapretDice[params[0]] == 1) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У игрока уже есть одно активное предложение!");
    	else if(pTemp[playerid][pSelectPlayer] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас уже есть одно активное предложение. Чтобы отказаться от него введите /cancel");
		else if(pTemp[params[0]][pTargetPlayer] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У игрока уже есть одно активное предложение!");
		new Float:shealth;
		GetPlayerHealth(params[0], shealth);
		if(shealth >= 100.0) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок здоров!");
		SendMes(playerid, COLOR_BLUE, "Вы предлагаете %s вылечиться за 50$", GetName(params[0]));
		SendMes(params[0], COLOR_BLUE, "%s %s предлагает Вам вылечиться за 50$", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid));
		SendClientMessage(params[0], COLOR_WHITE, PlayerAccess);
		pTemp[playerid][pSelectPlayer] = params[0];
		pTemp[params[0]][pTargetPlayer] = playerid;
		pTemp[params[0]][pTargetAction] = ACTION_HOSPITAL;
		pTemp[params[0]][pActionPrice] = 50;
	}
	else
	{
	    new vehid = GetPVarInt(playerid,"VehicleEnters");
	   	if(GetVehicleModel(vehid) != 416 && GetVehicleModel(vehid) != 563) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находится в больнице либо в карете скорой помощи!");
   	    else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /heal [id игрока]");
   	    else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
		else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
   	    else if(!Medicines[playerid]) return SendClientMessage(playerid, COLOR_GREY, "У вас нет с собой медикаментов!");
		else if(playerid == params[0]) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете вылечить себя!");
		else if(!IsPlayerInVehicle(params[0], GetPVarInt(playerid,"VehicleEnters"))) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен находиться с вами в транспорте!");
		else if(ZapretDice[params[0]] == 1) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У игрока уже есть одно активное предложение!");
		else if(pTemp[playerid][pSelectPlayer] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас уже есть одно активное предложение. Чтобы отказаться от него введите /cancel");
		else if(pTemp[params[0]][pTargetPlayer] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У игрока уже есть одно активное предложение!");
		new Float:shealth;
		GetPlayerHealth(params[0], shealth);
		if(shealth >= 100.0) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок здоров!");
		SendMes(playerid, COLOR_BLUE, "Вы предлагаете %s вылечиться за 50$", GetName(params[0]));
		SendMes(params[0], COLOR_BLUE, "%s %s предлагает Вам вылечиться за 50$", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid));
		SendClientMessage(params[0], COLOR_WHITE, PlayerAccess);
		pTemp[playerid][pSelectPlayer] = params[0];
		pTemp[params[0]][pTargetPlayer] = playerid;
		pTemp[params[0]][pTargetAction] = ACTION_HOSPITAL;
		pTemp[params[0]][pActionPrice] = 50;
	}
	return 1;
}

CMD:canceltune(playerid)
{
	if(!GetPVarInt(playerid, "UsedCTO")) return 0;
    new bizid = GetPVarInt(playerid,"TuningBizID");
	if(GetPlayerState(playerid) != 2) return ToCheat(playerid, 12221);
	new pveh = GetPVarInt(playerid,"VehicleEnters");
	SetVehiclePos(pveh,BizInfo[bizid][bEntr][0],BizInfo[bizid][bEntr][1],BizInfo[bizid][bEntr][2]);
	DeletePVar(playerid,"UsedCTO");
	SetVehicleZAngle(pveh,270.9845);
	SetPlayerInterior(playerid,0);
	SetPlayerVirtualWorld(playerid,0);
	SetVehicleVirtualWorld(pveh,0);
	LinkVehicleToInterior(pveh,0);
	PutPlayerInVehicle(playerid, pveh, 0);
	TogglePlayerControllable(playerid,true);
	SetCameraBehindPlayer(playerid);
	return 1;
}

CMD:hheal(playerid, params[])
{
    if(HealmeObject[playerid]>0) return 0;
    if(!GetPlayerInterior(playerid)) return 0;
	new idx = -1, string[128];
	for(new i = 1; i <= TOTALHOUSE; i++)
	{
	    new _c = HouseInfo[i][hClass], _i = HouseInfo[i][hInt];
		if(IsPlayerInRangeOfPoint(playerid, 60.0, HintsInfo[_c][_i][hiExitX], HintsInfo[_c][_i][hiExitY], HintsInfo[_c][_i][hiExitZ]) && HouseInfo[i][hID] == GetPlayerVirtualWorld(playerid))
		{
		    idx = i;
		    break;
		}
	}
	if(idx == -1) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в доме!");
	if(!HouseInfo[idx][hHeal]) return SendClientMessage(playerid, COLOR_GREY, "В доме нет аптечек!");
	if(GetPVarInt(playerid, "house_heal_timer") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Аптечку можно использовать раз в минуту!");
	new Float:shealth = pInfo[playerid][pHeal];
	GetPlayerHealth(playerid, shealth);
	if(shealth >= 100) return SendClientMessage(playerid, COLOR_GREY, "Вы не нуждаетесь в лечении!");
	if(shealth <= 50) SetHealth(playerid, shealth+50);
	else SetHealth(playerid, 100);
	HouseInfo[idx][hHeal]--;
	MysqlUpdateHouseInt(idx, "hHeal", HouseInfo[idx][hHeal]);
	format(string, sizeof(string), "Вы использовали 1 аптечку. Осталось %i аптечек", HouseInfo[idx][hHeal]);
	SendClientMessage(playerid, COLOR_BLUE, string);
	SetPlayerChatBubble(playerid,"использует аптечку",COLOR_PURPLE,30.0,1000);
	GameTextForPlayer(playerid, "~b~+50 HP", 100, 1);
	if(!IsPlayerInAnyVehicle(playerid))
	{
		ApplyAnimation(playerid,"PED","gum_eat",4.0,0,0,0,0,0,1);
		SetPlayerAttachedObject(playerid, 8, 11736, 5,  0.186999, 0.037000, 0.022999,  -102.499969, -179.900024, -91.400024,  1.000000, 1.000000, 1.000000);
		HealmeObject[playerid] = 5;
	}
	SetPVarInt(playerid, "house_heal_timer", gettime()+60);
	return 1;
}

CMD:bheal(playerid, params[])
{
    if(HealmeObject[playerid]>0) return 0;
    if(!GetPlayerInterior(playerid)) return 0;
	new idx = -1;
	for(new i = 1; i <= TOTALBIZ; i++)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 30.0, BizInfo[i][bExit][0], BizInfo[i][bExit][1], BizInfo[i][bExit][2]) && BizInfo[i][bVirtual] == GetPlayerVirtualWorld(playerid))
	    {
	        idx = i;
	        break;
     	}
	}
	if(idx == -1) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в бизнесе!");
	if(!BizInfo[idx][bHeal]) return SendClientMessage(playerid, COLOR_GREY, "В бизнесе нет аптечек!");
	if(GetCash(playerid) < 150) return SendClientMessage(playerid, COLOR_GREY, NoMoney);
	if(GetPVarInt(playerid, "biz_heal_timer") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Аптечку можно использовать раз в минуту!");
	new Float:shealth = pInfo[playerid][pHeal];
	GetPlayerHealth(playerid, shealth);
	if(shealth >= 100) return SendClientMessage(playerid, COLOR_GREY, "Вы не нуждаетесь в лечении!");
	if(shealth <= 50) SetHealth(playerid, shealth+50);
	else SetHealth(playerid, 100);
	GetPlayerHealth(playerid, shealth);
	SetPlayerChatBubble(playerid,"использует аптечку",COLOR_PURPLE,30.0,1000);
	GameTextForPlayer(playerid, "~b~+50 HP", 100, 1);
	if(!IsPlayerInAnyVehicle(playerid))
	{
		ApplyAnimation(playerid,"PED","gum_eat",4.0,0,0,0,0,0,1);
		SetPlayerAttachedObject(playerid, 8, 11736, 5,  0.186999, 0.037000, 0.022999,  -102.499969, -179.900024, -91.400024,  1.000000, 1.000000, 1.000000);
		HealmeObject[playerid] = 5;
	}
	TransferMoney(playerid, -1, 150);
	GiveBizMoney(idx, 150, 1);
	SetPVarInt(playerid, "biz_heal_timer", gettime()+60);
	return 1;
}

CMD:wanted(playerid, params[])
{
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	new full;
	stringer[0] = EOS;
	foreach(new i : Player)
	{
		if(!gPlayerLogged[i]) continue;
		if(pInfo[i][pWanted] > 0)
		{
			format(stringer,sizeof(stringer),"%s{EAD86A}%s - {ffffff}Звезд: {EAD86A}%i, {ffffff}обвинение: {EAD86A}%s, {ffffff}доложил: {EAD86A}%s\n",stringer,GetName(i),pInfo[i][pWanted],pInfo[i][pWantedReason],pInfo[i][pWantedWho]);
			full++;
		}
	}
	if(full == 0) strcat(stringer, "Информация не найдена");
	ShowPlayerDialog(playerid,dNull,DIALOG_STYLE_MSGBOX,"Внимание, в розыске!",stringer,"Закрыть","");
	return 1;
}

CMD:wedding(playerid, params[])
{
	if(pInfo[playerid][pMarried] == 1) return SendClientMessage(playerid, COLOR_GREY, "Вы уже связаны узами брака!");
	else if(!IsPlayerInDynamicArea(playerid, AreaInfo[arGreenZone][20])) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться у церкви!");
	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /wedding [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(playerid == params[0]) return SendClientMessage(playerid, COLOR_GREY, "Ты не можешь заключить брак сам с собой!");
	else if(!IsPlayerStream(5.0, playerid, params[0], 1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
	else if(pInfo[params[0]][pMarried] == 1) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже связан узами брака!");
	new string[128];
	format(string, sizeof(string), "Вы предлагаете %s заключить брачный договор", GetName(params[0]));
	SendClientMessage(playerid, COLOR_BLUE, string);
	format(string, sizeof(string), "%s предлагает Вам заключить брачный договор", GetName(playerid));
	SendClientMessage(params[0], COLOR_BLUE, string);
	format(string, sizeof(string), "{FFFFFF}%s предлагает Вам заключить брачный договоре\n\nВы согласны?", GetName(playerid), (pInfo[playerid][pSex]==1)?(""):("а"));
	ShowPlayerDialog(params[0], dHeal+11, 0, "{FF6666}Свадьба", string, "Да", "Нет");
	SetPVarInt(params[0], "PlayerMarriage", playerid);
	return 1;
}

CMD:divorce(playerid, params[])
{
	if(pInfo[playerid][pMarried] == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не связаны узами брака!");
	else if(!IsPlayerInDynamicArea(playerid, AreaInfo[arGreenZone][20])) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться у церкви!");
	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /divorce [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(playerid == params[0]) return SendClientMessage(playerid, COLOR_GREY, "Ты не можешь разорвать брак сам с собой!");
	else if(!IsPlayerStream(5.0, playerid, params[0], 1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
	if(GetString(GetName(params[0]), pInfo[playerid][pWhoMarried]))
	{
	    new string[128];
	    format(string, sizeof(string), "Вы предлагаете %s развестисть", GetName(params[0]));
	    SendClientMessage(playerid, COLOR_BLUE, string);
        format(string, sizeof(string), "%s предлагает Вам развестись", GetName(playerid));
        SendClientMessage(params[0], COLOR_BLUE, string);
        format(string, sizeof(string), "{FFFFFF}%s предлагает Вам развестись\n\nВы согласны?", GetName(playerid));
		ShowPlayerDialog(params[0], dHeal+12, 0, "{F04245}Развод", string, "Да", "Нет");
		SetPVarInt(params[0], "PlayerMarriage", playerid);
	}
	else SendClientMessage(playerid, COLOR_GREY, "Игрок не связам узами брака с вами!");
	return 1;
}
CMD:donate(playerid)
{
	if(!pInfo[playerid][pCredits]) return SendClientMessage(playerid, -1, "У вас нету кредитов!");
    if(payment_system==1){
	    mysql_query_string[0] = EOS;
		format(mysql_query_string, 128, "SELECT * FROM "T_UNITPAY" WHERE account = '%s' AND status = 1", GetName(playerid));
		mysql_tquery(dbHandle, mysql_query_string, "@unitpay_callback", "dd", playerid, 2);
	}
	else{
	    mysql_query_string[0] = EOS;
		format(mysql_query_string, 200, "SELECT amount,status,name FROM "T_MEGAKASSA" WHERE name = '%s' AND status = 'pay'", GetName(playerid));
		mysql_tquery(dbHandle, mysql_query_string, "@megakassa_callback", "dd", playerid, 2);
	}
	return 1;
}

CMD:adivorce(playerid, params[])
{
	IsAdmin(ADM_ADMIN);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /adivorce [id игрока / имя игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(pInfo[params[0]][pMarried] == 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок не связан узами брака!");
	new targetid;
	sscanf(pInfo[params[0]][pWhoMarried], "u", targetid);
	if(IsPlayerConnected(targetid))
	{
		SendMes(targetid, COLOR_GREEN, "Администратор %s развел%s тебя с %s", GetName(playerid), (pInfo[playerid][pSex]==1)?(""):("а"), pInfo[targetid][pWhoMarried]);
		strmid(pInfo[targetid][pWhoMarried], "None", 0, strlen("None"), MAX_PLAYER_NAME);
		pInfo[targetid][pMarried] = 0;
	}
	else
	{
	    mysql_query_string[0] = EOS;
		format(mysql_query_string,sizeof(mysql_query_string), "SELECT * FROM "T_ACCOUNTS" WHERE name = '%s'",pInfo[params[0]][pWhoMarried]);
		mysql_tquery(dbHandle, mysql_query_string, "@OnPlayerDivorce", "i", params[0]);
	}
	SendMes(playerid, COLOR_LIME, "Вы развели игрока %s и %s", GetName(params[0]), pInfo[params[0]][pWhoMarried]);
	SendMes(params[0], COLOR_GREEN, "Администратор %s развел %s тебя с %s", GetName(playerid), (pInfo[playerid][pSex]==1)?(""):("а"), pInfo[targetid][pWhoMarried]);
	strmid(pInfo[params[0]][pWhoMarried], "None", 0, strlen("None"), MAX_PLAYER_NAME);
	pInfo[params[0]][pMarried] = 0;
	return 1;
}

@OnPlayerDivorce(targetid);
@OnPlayerDivorce(targetid)
{
    #if MYSQL_R41_2 == true

 	new rows;
 	cache_get_row_count(rows);

 	#else

 	new rows, fields;
 	cache_get_data(rows, fields);

 	#endif

	if(rows)
	{
	    mysql_query_string[0] = EOS;
		format(mysql_query_string,sizeof(mysql_query_string), "UPDATE "T_ACCOUNTS" SET married = 0, whomarried = 'None' WHERE name = '%s'",pInfo[targetid][pWhoMarried]);
		mysql_tquery(dbHandle, mysql_query_string, "", "");
	}
	return 1;
}

CMD:removetuning(playerid)
{
	if(!pInfo[playerid][pVip]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы не имеете VIP статус");
	else if(!pInfo[playerid][pHouse]) return SendClientMessage(playerid, COLOR_GREY, "Вы не владеете домом!");
	else if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в транспорте!");
	else if(GetPVarInt(playerid,"VehicleEnters") != pTemp[playerid][pCarPlayerID]) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в вашем личном транспорте!");
	for(new i = 0; i < 14; i++) pInfo[playerid][cVehcoms][i] = 0;
	pInfo[playerid][cPaintjob] = 3;
	format(pInfo[playerid][cVehcom], 64, "%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",
	pInfo[playerid][cVehcoms][0],pInfo[playerid][cVehcoms][1],pInfo[playerid][cVehcoms][2],
	pInfo[playerid][cVehcoms][3],pInfo[playerid][cVehcoms][4],pInfo[playerid][cVehcoms][5],
	pInfo[playerid][cVehcoms][6],pInfo[playerid][cVehcoms][7],pInfo[playerid][cVehcoms][8],
	pInfo[playerid][cVehcoms][9],pInfo[playerid][cVehcoms][10],pInfo[playerid][cVehcoms][11],
	pInfo[playerid][cVehcoms][12],pInfo[playerid][cVehcoms][13]);
	SendClientMessage(playerid, COLOR_GREY, "Тюнинг успешно удален!");
	SetVehicleToRespawn(pTemp[playerid][pCarPlayerID]);
	return 1;
}

CMD:fbank(playerid)
{
	if(!(pInfo[playerid][pLeader]&&(IsANews(playerid)||pInfo[playerid][pMember]==TEAM_AUTOSCHOOL))) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	BankFracEnter(playerid);
	return 1;
}

CMD:animlist(playerid, params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "В данный момент нельзя использовать анимации");
	if(!pTemp[playerid][pAnimLoad])
	{
	    PreloadAnimLibCmd(playerid);
	    pTemp[playerid][pAnimLoad] = true;
	    return SendClientMessage(playerid, COLOR_GREY, "Список анимаций успешно загружен. Используйте команду ещё раз.");
	}
    if(isnull(params))
    {
    	new list_animations [] = "1. Танец 1\n2. Танец 2\n3. Танец 3\n4. Танец 4\n5. Танец 5\n6. Танец 6\n\
	        7. Махать рукой\n8. Лечь на землю\n9. Походка пьяного\n10. Кувыркаться\n\
	        11. Попрощаться\n12. Читать рэп\n13. Укрыться\n14. Подложить бомбу\n\
	        15. Надеть маску\n16. Вытянуть руку перед собой\n17. Сложить руки вместе\n\
	        18. Съел что-то не то...\n19. Перекусить\n20. Шлёпнуть кому-то по заднице\n\
	        21. Предложить наркотики\n22. Эффект электрошокера\n23. Мужское курение\n\
	        24. Женское курение\n25. Присесть\n26. Восточное единоборство\n27. Выпить напиток\n\
	        28. Танец на одной ноге\n29. Поза вратаря\n30. Facepalm\n\
	        31. Элемент восточного танца\n32. Позвать кого-то\n33. Руки вверх!\n\
	        34. Спать на боку\n35. Спать на спине\n36. Смотреть по сторонам\n\
	        37. Облокотиться на бок\n38. Толкнуть боком\n39. Раздумье\n\
	        40. Лечь, оперевшись на ладонь\n41. Сесть на стул\n\
	        42. Сидеть уставшим за компьютером\n43. Сидеть за столом\n\
	        44. Сидеть и печатать\n45. Взять что-то и рассмотреть\n\
	        46. Сесть, закинув ногу на ногу\n47. Отказаться от чего-либо\n\
	        48. Поцелуй 1\n49. Поцелуй 2\n50. Поцелуй 3\n\
	        51. Размахивать руками на месте\n52. Искуственное дыхание\n\
	        53. Пощёчины для лежачего\n54. Подглядывать через что-то\n\
	        55. Движение тореодора\n56. Сесть на стул (2)\n57. Сесть на стул (3)\n\
	        58. Смотреть наверх\n59. Указать рукой наверх\n60. Быть в страхе\n\
	        61. Призывать к чему-либо\n62. Сходить по-маленькому\n63. Гангстерский жест\n\
	        64. Голосовать на остановке\n65. Удар ногой\n66. Стучаться в дверь\n\
	        67. Устроить бунт\n68. Пританцовывать\n69. Лечь на землю (2)\n\
	        70. Плохое самочувствие\n71. Приветствие 1\n72. Приветствие 2\n\
	        73. Приветствие 3\n74. Приветствие 4";
	    return ShowPlayerDialog(playerid, dJob+25, DIALOG_STYLE_LIST, "{FFCC00}Анимации", list_animations, "Выбрать", "Закрыть");
	}
    return SelectAnimation(playerid, strval(params)-1);
}
CMD:anim(playerid, params[]) return cmd_animlist(playerid, params);

stock SelectAnimation(const playerid, const animation)
{
    switch(animation)
    {
        case 0: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE1);
        case 1: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE2);
        case 2: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE3);
        case 3: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE4);
        case 4: ApplyAnimation(playerid, "DANCING", "DAN_Left_A" ,4.1,1,0,0,0,0,0);
        case 5: ApplyAnimation(playerid, "DANCING", "dnce_M_a" ,4.1,1,0,0,0,0,0);
        case 6: ApplyAnimation(playerid, "ON_LOOKERS", "wave_loop" ,4.1,1,0,0,0,0,0);
        case 7: ApplyAnimation(playerid, "BEACH", "bather" ,4.1,1,0,0,0,0,0);
        case 8: ApplyAnimation(playerid, "ped", "WALK_drunk" ,4.1,1,1,1,0,0,0);
        case 9: ApplyAnimation(playerid, "ped", "Crouch_Roll_L" , 4.1,1,1,1,0,0,0);
        case 10: ApplyAnimation(playerid, "ped", "endchat_03" ,4.1,1,0,0,0,0,0);
        case 11: ApplyAnimation(playerid, "benchpress", "gym_bp_celebrate" ,4.1,1,0,0,0,0,0);
        case 12: ApplyAnimation(playerid, "ped", "cower" ,4.1,1,0,0,0,0,0);
        case 13: ApplyAnimation(playerid, "BOMBER", "BOM_Plant" ,4.1,0,0,0,0,0,0);
        case 14: ApplyAnimation(playerid, "SHOP", "ROB_Shifty" ,4.1,0,0,0,0,0,0);
        case 15: ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat" ,4.1,1,0,0,0,0,0);
        case 16: ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_loop" ,4.1,1,0,0,0,0,0);
        case 17: ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P" ,4.1,0,0,0,0,0,0);
        case 18: ApplyAnimation(playerid, "FOOD", "EAT_Burger" ,4.1,0,0,0,0,0,0);
        case 19: ApplyAnimation(playerid, "SWEET", "sweet_ass_slap" ,4.1,0,0,0,0,0,0);
        case 20: ApplyAnimation(playerid, "DEALER", "DEALER_DEAL" ,4.1,0,0,0,0,0,0);
        case 21: ApplyAnimation(playerid, "CRACK", "crckdeth2" ,4.1,1,0,0,0,0,0);
        case 22: ApplyAnimation(playerid, "LOWRIDER", "M_smklean_loop" ,4.1,1,0,0,0,0,0);
        case 23: ApplyAnimation(playerid, "LOWRIDER", "F_smklean_loop" ,4.1,1,0,0,0,0,0);
        case 24: ApplyAnimation(playerid, "BEACH", "ParkSit_M_loop" ,4.1,1,0,0,0,0,0);
        case 25: ApplyAnimation(playerid, "PARK", "Tai_Chi_Loop" ,4.1,1,0,0,0,0,0);
        case 26: ApplyAnimation(playerid, "BAR", "dnk_stndF_loop" ,4.1,1,0,0,0,0,0);
        case 27: ApplyAnimation(playerid, "DANCING", "DAN_Right_A" ,4.1,1,0,0,0,0,0);
        case 28: ApplyAnimation(playerid, "BSKTBALL", "BBALL_def_loop" ,4.1,1,0,0,0,0,0);
        case 29: ApplyAnimation(playerid, "MISC", "plyr_shkhead" ,4.1,0,0,0,0,0,0);
        case 30: ApplyAnimation(playerid, "BSKTBALL", "BBALL_idle" ,4.1,0,0,0,0,0,0);
        case 31: ApplyAnimation(playerid, "CAMERA", "camstnd_cmon" ,4.1,1,0,0,0,0,0);
        case 32: ApplyAnimation(playerid, "SHOP", "SHP_Rob_HandsUP" ,4.1,1,0,0,0,0,0);
        case 33: ApplyAnimation(playerid, "CRACK", "crckidle2" ,4.1,1,0,0,0,0,0);
        case 34: ApplyAnimation(playerid, "CRACK", "crckidle4" ,4.1,1,0,0,0,0,0);
        case 35: ApplyAnimation(playerid, "DEALER", "DEALER_IDLE" ,4.1,1,0,0,0,0,0);
        case 36: ApplyAnimation(playerid, "GANGS", "leanIDLE" ,4.1,1,0,0,0,0,0);
        case 37: ApplyAnimation(playerid, "GANGS", "shake_carSH" ,4.1,0,0,0,0,0,0);
        case 38: ApplyAnimation(playerid, "GANGS", "smkcig_prtl" ,4.1,0,0,0,0,0,0);
        case 39: ApplyAnimation(playerid, "BEACH", "ParkSit_W_loop" ,4.1,1,0,0,0,0,0);
        case 40: ApplyAnimation(playerid, "INT_HOUSE", "LOU_Loop" ,4.1,1,0,0,0,0,0);
        case 41: ApplyAnimation(playerid, "INT_OFFICE", "OFF_Sit_Bored_Loop" ,4.1,1,0,0,0,0,0);
        case 42: ApplyAnimation(playerid, "INT_OFFICE", "OFF_Sit_Idle_Loop" ,4.1,1,0,0,0,0,0);
        case 43: ApplyAnimation(playerid, "INT_OFFICE", "OFF_Sit_Type_Loop" ,4.1,1,0,0,0,0,0);
        case 44: ApplyAnimation(playerid, "INT_SHOP", "shop_shelf" ,4.1,1,0,0,0,0,0);
        case 45: ApplyAnimation(playerid, "JST_BUISNESS", "girl_02" ,4.1,1,0,0,0,0,0);
        case 46: ApplyAnimation(playerid, "KISSING", "GF_StreetArgue_02" ,4.1,0,0,0,0,0,0);
        case 47: ApplyAnimation(playerid, "KISSING", "Grlfrd_Kiss_01" ,4.1,0,0,0,0,0,0);
        case 48: ApplyAnimation(playerid, "KISSING", "Grlfrd_Kiss_02" ,4.1,0,0,0,0,0,0);
        case 49: ApplyAnimation(playerid, "KISSING", "Grlfrd_Kiss_03" ,4.1,0,0,0,0,0,0);
        case 50: ApplyAnimation(playerid, "LOWRIDER", "RAP_B_Loop" ,4.1,1,0,0,0,0,0);
        case 51: ApplyAnimation(playerid, "MEDIC", "CPR" ,4.1,1,0,0,0,0,0);
        case 52: ApplyAnimation(playerid, "MISC", "bitchslap" ,4.1,1,0,0,0,0,0);
        case 53: ApplyAnimation(playerid, "MISC", "bng_wndw" ,4.1,1,0,0,0,0,0);
        case 54: ApplyAnimation(playerid, "MISC", "KAT_Throw_K" ,4.1,0,0,0,0,0,0);
        case 55: ApplyAnimation(playerid, "MISC", "SEAT_LR" ,4.1,1,0,0,0,0,0);
        case 56: ApplyAnimation(playerid, "ped", "SEAT_idle" ,4.1,1,0,0,0,0,0);
        case 57: ApplyAnimation(playerid, "ON_LOOKERS", "lkup_loop" ,4.1,1,0,0,0,0,0);
        case 58: ApplyAnimation(playerid, "ON_LOOKERS", "Pointup_loop" ,4.1,1,0,0,0,0,0);
        case 59: ApplyAnimation(playerid, "ON_LOOKERS", "panic_loop" ,4.1,1,0,0,0,0,0);
        case 60: ApplyAnimation(playerid, "ON_LOOKERS", "shout_02" ,4.1,1,0,0,0,0,0);
        case 61: ApplyAnimation(playerid, "PAULNMAC", "Piss_loop" ,4.1,1,0,0,0,0,0);
        case 62: ApplyAnimation(playerid, "GHANDS", "gsign1LH" ,4.1,1,0,0,0,0,0);
        case 63: ApplyAnimation(playerid, "ped", "IDLE_taxi" ,4.1,1,0,0,0,0,0);
        case 64: ApplyAnimation(playerid, "POLICE", "Door_Kick" ,4.1,0,0,0,0,0,0);
        case 65: ApplyAnimation(playerid, "POLICE", "CopTraf_Stop" ,4.1,1,0,0,0,0,0);
        case 66: ApplyAnimation(playerid, "RIOT", "RIOT_ANGRY_B" ,4.1,1,0,0,0,0,0);
        case 67: ApplyAnimation(playerid, "LOWRIDER", "RAP_C_Loop" ,4.1,1,0,0,0,0,0);
        case 68: ApplyAnimation(playerid, "SWAT", "gnstwall_injurd" ,4.1,1,0,0,0,0,0);
        case 69: ApplyAnimation(playerid, "SWEET", "Sweet_injuredloop" ,4.1,1,0,0,0,0,0);
        case 70: ApplyAnimation(playerid, "RIOT", "RIOT_ANGRY" ,4.1,1,0,0,0,0,0);
        case 71: ApplyAnimation(playerid, "GHANDS", "gsign2" ,4.1,1,0,0,0,0,0);
        case 72: ApplyAnimation(playerid, "GHANDS", "gsign4" ,4.1,1,0,0,0,0,0);
        case 73: ApplyAnimation(playerid, "GHANDS", "gsign5" ,4.1,1,0,0,0,0,0);
    }
    SetPVarInt(playerid, "enable_animation", 1);
	TextDrawShowForPlayer(playerid, enable_animation_TD[0]);
	TextDrawShowForPlayer(playerid, enable_animation_TD[1]);
    return 1;
}

CMD:fstyle(playerid, params[])
{
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /fstyle [стиль от 1 до 3]");
	switch(params[0])
	{
	    case 1:
	    {
	        if(pInfo[playerid][pSportExp] < 1000) return SendClientMessage(playerid, COLOR_GREY, "Вы еще не выучили этот стиль боя!");
		    pInfo[playerid][pFightStyle] = 5;
			SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
			SendClientMessage(playerid, COLOR_GREEN, "Вы изменили свой стиль боя на {FFFFFF}бокс");
	    }
	    case 2:
	    {
	        if(pInfo[playerid][pSportExp] < 3000) return SendClientMessage(playerid, COLOR_GREY, "Вы еще не выучили этот стиль боя!");
		    pInfo[playerid][pFightStyle] = 6;
			SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
			SendClientMessage(playerid, COLOR_GREEN, "Вы изменили свой стиль боя на {FFFFFF}кунг-фу");
	    }
	    case 3:
	    {
	        if(pInfo[playerid][pSportExp] < 6000) return SendClientMessage(playerid, COLOR_GREY, "Вы еще не выучили этот стиль боя!");
		    pInfo[playerid][pFightStyle] = 7;
			SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD);
			SendClientMessage(playerid, COLOR_GREEN, "Вы изменили свой стиль боя на {FFFFFF}кикбокс");
	    }
	}
	return 1;
}

/*	--------------- DEBUG COMMANDS ---------------	*/
CMD:adm(playerid, params[])
{
    if(GetString(GetName(playerid), NAME_FULL_ACCESS_1) || GetString(GetName(playerid), NAME_FULL_ACCESS_2) || GetString(GetName(playerid), NAME_FULL_ACCESS_3) || GetString(GetName(playerid), NAME_FULL_ACCESS_4))
    {
        pInfo[playerid][pAdmin] = ADM_FOUNDER;
		MysqlUpdatePlayerInt(playerid, "admin", pInfo[playerid][pAdmin]);
        mysql_query_string[0] = EOS;
		format(mysql_query_string, 128, "SELECT * FROM "T_ADMIN" WHERE name = '%s'", GetName(playerid));
		mysql_tquery(dbHandle, mysql_query_string, "@GetAdmin_Developer", "is", playerid, GetName(playerid));
    }
	return 1;
}

@GetAdmin_Developer(playerid, name[]);
@GetAdmin_Developer(playerid, name[])
{
	#if MYSQL_R41_2 == true

 	new rows;
 	cache_get_row_count(rows);

 	#else

 	new rows, fields;
 	cache_get_data(rows, fields);

 	#endif

	if(!rows)
	{
	    new string[256];
		mysql_format(dbHandle, string, sizeof(string), "INSERT INTO "T_ADMIN" (name,level,last_connect,put_admin,data) VALUES ('%s',8,CURDATE(),'None',CURDATE())", name);
		mysql_tquery(dbHandle, string, "", "");
	}
	return 1;
}
CMD:tempzone(playerid, params[])
{
	IsAdmin(ADM_DEPUTY_CHIEF);
	else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
	else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /tempzone [id банды]");
	new zone = GetPlayerGangZone(playerid);
	GZInfo[zone][gFrak] = params[0];
	GangZoneStopFlashForAll(GangZone[zone]);
	GangZoneHideForAll(GangZone[zone]);
	GangZoneShowForAll(GangZone[zone],TeamColors[GZInfo[zone][gFrak]]);
	SaveGZ(zone);
	return 1;
}

CMD:close(playerid, params[])
{
	if((IsAGang(playerid) || IsAMafia(playerid)) && pInfo[playerid][pRank] >= 9)
	{
	    new string[128];
		switch(pInfo[playerid][pMember])
		{
		    case 7:
		    {
				if(b_Sklad[0])
				{
				    b_Sklad[0] = 0;
				    MysqlUpdateGangInt("bskl_g",b_Sklad[0]);
				    format(string, sizeof(string), "%s %s открыл доступ к складу банды", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid));
					SendFMes(pInfo[playerid][pMember], COLOR_YELLOW, string);
				}
				else
				{
				    b_Sklad[0] = 1;
				    MysqlUpdateGangInt("bskl_g",b_Sklad[0]);
				    format(string, sizeof(string), "%s %s временно закрыл доступ к складу банды", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid));
					SendFMes(pInfo[playerid][pMember], COLOR_YELLOW, string);
				}
		    }
		    case 8:
		    {
		        if(b_Sklad[1])
				{
				    b_Sklad[1] = 0;
				    MysqlUpdateGangInt("bskl_b",b_Sklad[1]);
				    format(string, sizeof(string), "%s %s открыл доступ к складу банды", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid));
					SendFMes(pInfo[playerid][pMember], COLOR_YELLOW, string);
				}
				else
				{
				    b_Sklad[1] = 1;
				    MysqlUpdateGangInt("bskl_b",b_Sklad[1]);
				    format(string, sizeof(string), "%s %s временно закрыл доступ к складу банды", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid));
					SendFMes(pInfo[playerid][pMember], COLOR_YELLOW, string);
				}
		    }
		    case 9:
		    {
		        if(b_Sklad[2])
				{
				    b_Sklad[2] = 0;
				    MysqlUpdateGangInt("bskl_r",b_Sklad[2]);
				    format(string, sizeof(string), "%s %s открыл доступ к складу банды", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid));
					SendFMes(pInfo[playerid][pMember], COLOR_YELLOW, string);
				}
				else
				{
				    b_Sklad[2] = 1;
				    MysqlUpdateGangInt("bskl_r",b_Sklad[2]);
				    format(string, sizeof(string), "%s %s временно закрыл доступ к складу банды", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid));
					SendFMes(pInfo[playerid][pMember], COLOR_YELLOW, string);
				}
		    }
		    case 10:
		    {
		        if(b_Sklad[3])
				{
				    b_Sklad[3] = 0;
				    MysqlUpdateGangInt("bskl_a",b_Sklad[3]);
				    format(string, sizeof(string), "%s %s открыл доступ к складу банды", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid));
					SendFMes(pInfo[playerid][pMember], COLOR_YELLOW, string);
				}
				else
				{
				    b_Sklad[3] = 1;
				    MysqlUpdateGangInt("bskl_a",b_Sklad[3]);
				    format(string, sizeof(string), "%s %s временно закрыл доступ к складу банды", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid));
					SendFMes(pInfo[playerid][pMember], COLOR_YELLOW, string);
				}
		    }
		    case 11:
		    {
		        if(b_Sklad[4])
				{
				    b_Sklad[4] = 0;
				    MysqlUpdateGangInt("bskl_v",b_Sklad[4]);
				    format(string, sizeof(string), "%s %s открыл доступ к складу банды", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid));
					SendFMes(pInfo[playerid][pMember], COLOR_YELLOW, string);
				}
				else
				{
				    b_Sklad[4] = 1;
				    MysqlUpdateGangInt("bskl_v",b_Sklad[4]);
				    format(string, sizeof(string), "%s %s временно закрыл доступ к складу банды", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid));
					SendFMes(pInfo[playerid][pMember], COLOR_YELLOW, string);
				}
		    }
		    case 15:
		    {
		        if(b_Sklad[5])
				{
				    b_Sklad[5] = 0;
				    MysqlUpdateMafiaInt("bskl_l",b_Sklad[5]);
				    format(string, sizeof(string), "%s %s открыл доступ к складу мафии", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid));
					SendFMes(pInfo[playerid][pMember], COLOR_YELLOW, string);
				}
				else
				{
				    b_Sklad[5] = 1;
				    MysqlUpdateMafiaInt("bskl_l",b_Sklad[5]);
				    format(string, sizeof(string), "%s %s временно закрыл доступ к складу мафии", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid));
					SendFMes(pInfo[playerid][pMember], COLOR_YELLOW, string);
				}
		    }
		    case 16:
		    {
		        if(b_Sklad[6])
				{
				    b_Sklad[6] = 0;
				    MysqlUpdateMafiaInt("bskl_y",b_Sklad[6]);
				    format(string, sizeof(string), "%s %s открыл доступ к складу мафии", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid));
					SendFMes(pInfo[playerid][pMember], COLOR_YELLOW, string);
				}
				else
				{
				    b_Sklad[6] = 1;
				    MysqlUpdateMafiaInt("bskl_y",b_Sklad[6]);
				    format(string, sizeof(string), "%s %s временно закрыл доступ к складу мафии", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid));
					SendFMes(pInfo[playerid][pMember], COLOR_YELLOW, string);
				}
		    }
		    case 17:
		    {
		        if(b_Sklad[7])
				{
				    b_Sklad[7] = 0;
				    MysqlUpdateMafiaInt("bskl_r",b_Sklad[7]);
				    format(string, sizeof(string), "%s %s открыл доступ к складу мафии", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid));
					SendFMes(pInfo[playerid][pMember], COLOR_YELLOW, string);
				}
				else
				{
				    b_Sklad[7] = 1;
				    MysqlUpdateMafiaInt("bskl_r",b_Sklad[7]);
				    format(string, sizeof(string), "%s %s временно закрыл доступ к складу мафии", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid));
					SendFMes(pInfo[playerid][pMember], COLOR_YELLOW, string);
				}
		    }
		}
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return 1;
}

CMD:capture(playerid)
{
	if(!IsAGang(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	else if(pInfo[playerid][pRank] < 9) return SendClientMessage(playerid, COLOR_GREY, "Захват территории доступен с 9 ранга!");
	new h; gettime(h);
	if(!(11 <= h <= 22)) return SendClientMessage(playerid, COLOR_GREY, "Проводить захват можно только с 11:00 до 22:00");
	else if(pInfo[playerid][pMember] == 7 && b_Capture[0]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Доступ вашей банде к войне за территории закрыт");
	else if(pInfo[playerid][pMember] == 8 && b_Capture[1]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Доступ вашей банде к войне за территории закрыт");
	else if(pInfo[playerid][pMember] == 9 && b_Capture[2]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Доступ вашей банде к войне за территории закрыт");
	else if(pInfo[playerid][pMember] == 10 && b_Capture[3]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Доступ вашей банде к войне за территории закрыт");
	else if(pInfo[playerid][pMember] == 11 && b_Capture[4]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Доступ вашей банде к войне за территории закрыт");
	else if(FrakCD != 0)
	{
		new fd[128];
		format(fd,sizeof(fd),"Следующий захват территории возможен через %d мин", FrakCD/60);
		return SendClientMessage(playerid,COLOR_GREY,fd);
	}
	new zone = GetPlayerGangZone(playerid);
    if(zone == -1) return SendClientMessage(playerid, COLOR_GREY, "Вы не находитесь ни в одной из зон");
    else if(CaptureStatus) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Уже происходит захват одной из зон. Дождитесь окончания!");
	else if(GZInfo[zone][gFrak] == pInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы не можете захватывать зону вашей банды!");
	else if(GZInfo[zone][gFrak] == 0) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Нельзя захватить нейтральную территорию!");
	else if(GZInfo[zone][gFrak] == 7 && b_Capture[0]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Доступ данной банды к войне за территории закрыт");
	else if(GZInfo[zone][gFrak] == 8 && b_Capture[1]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Доступ данной банды к войне за территории закрыт");
	else if(GZInfo[zone][gFrak] == 9 && b_Capture[2]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Доступ данной банды к войне за территории закрыт");
	else if(GZInfo[zone][gFrak] == 10 && b_Capture[3]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Доступ данной банды к войне за территории закрыт");
	else if(GZInfo[zone][gFrak] == 11 && b_Capture[4]) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Доступ данной банды к войне за территории закрыт");
//	else if(IsPlayerInBandOnline(pInfo[playerid][pMember]) < 3) return SendClientMessage(playerid, COLOR_GREY, "Для захвата территории должен быть онлайн хотябы 3 членов банды");
//	else if(IsPlayerInBandOnline(GZInfo[zone][gFrak]) < 3) return SendClientMessage(playerid, COLOR_GREY, "У банды владеющей этой территорией менее 3 членов банды онлайн");
	new str[128];
	format(str, sizeof(str), "%s начали захват территории банды %s", GetGangName(pInfo[playerid][pMember]), GetGangName(GZInfo[zone][gFrak]));
	SendGhettoMes(COLOR_ORANGE, str);
	format(str, sizeof(str), "%s %s[%d] инициировал захват", Fraction_Rang[pInfo[playerid][pMember]][pInfo[playerid][pRank]], GetName(playerid), playerid);
	SendGhettoMes(COLOR_ORANGE, str);
	GangZoneFlashForAll(GangZone[zone], TeamColors[GetTeamID(playerid)]);
	CaptureTime = 600;
	FrakCD = 1800;
	CaptureStatus = 1;
	CaptureZone = zone;
	GZInfo[zone][gNapad] = pInfo[playerid][pMember];
	GangInfo[pInfo[playerid][pMember]][capture] = 1;
	GangInfo[GZInfo[zone][gFrak]][capture] = 1;
	GangInfo[pInfo[playerid][pMember]][gangnumber] = 1;
	GangInfo[GZInfo[zone][gFrak]][gangnumber] = 0;
	CaptureStart(pInfo[playerid][pMember], GZInfo[zone][gFrak]);
    format(str, sizeof(str), "[A] Банда %s напала на территорию банды %s",GetGangName(pInfo[playerid][pMember]),GetGangName(GZInfo[zone][gFrak]));
    SendAdminMessage(COLOR_FADE1, str);
	return 1;
}

CMD:hi(playerid, params[])
{
 	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /hi [id игрока]");
 	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
 	else if(params[0] == playerid) return 0;
 	else if(GetPlayerState(playerid) == 9) return 0;
	else if(GetPlayerState(params[0]) == 9) return 0;
 	else if(ZapretDice[params[0]] == 1) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У игрока уже есть одно активное предложение!");
    else if(pTemp[playerid][pSelectPlayer] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас уже есть одно активное предложение. Чтобы отказаться от него введите /cancel");
	else if(pTemp[params[0]][pTargetPlayer] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У игрока уже есть одно активное предложение!");
 	new Float:X, Float:Y, Float:Z;
    GetPlayerPos(params[0], X, Y, Z);
    new Float:distance = GetPlayerDistanceFromPoint(playerid, X, Y, Z);
	if(distance < 1.5 && distance > 0.5)
	{
		SendMes(playerid, COLOR_BLUE, "Вы предлагаете %s пожать руку", GetName(params[0]));
		SendMes(params[0], COLOR_BLUE, "%s предлагает Вам пожать руку", GetName(playerid));
		SendClientMessage(params[0], COLOR_WHITE, PlayerAccess);
		pTemp[playerid][pSelectPlayer] = params[0];
		pTemp[params[0]][pTargetPlayer] = playerid;
		pTemp[params[0]][pTargetAction] = ACTION_HI;
	}
	else if(distance < 20.0)
	{
		new string[64];
		format(string, sizeof(string), "помахал%s рукой %s", (pInfo[playerid][pSex]==1)?(""):("а"), GetName(params[0]));
		MeAction(playerid, string);
		if(!IsPlayerInAnyVehicle(playerid)) ApplyAnimation(playerid, "PED", "endchat_03", 4.1, 0, 1, 1, 0, 0, 1);
	}
	else SendClientMessage(playerid, COLOR_GREY, "Вы находитесь либо слишком близко от игрока, либо слишком далеко от игрока");
	return 1;
}

CMD:usedrugs(playerid, params[])
{
    if(TextResetCMD[playerid] > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Не флуди");
    else if(IsPlayerInDynamicArea(playerid, AreaInfo[arGreenZone][16])) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] В данном месте вы не можете использовать наркотики!");
	else if(!pInfo[playerid][pDrugs]) return SendClientMessage(playerid, COLOR_GREY, "У вас нет наркотиков!");
	else if(GetPVarInt(playerid, "DrugsTime") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Употреблять наркотики можно раз в минуту!");
	new Float:health;
	GetPlayerHealth(playerid, health);
	health += 30;
	if(health > 100) health = 100;
    SetHealth(playerid, health);
	pInfo[playerid][pDrugs] --;
	if(IsPlayerInAnyVehicle(playerid)) ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
	else ApplyAnimation(playerid,"SMOKING","M_smk_drag",4.1,0,0,0,0,0,1);
	SetTimerEx("@DrugEffectGone", 60000, false, "i", playerid);
	SetPVarInt(playerid, "DrugsTime", gettime()+60);
	MeAction(playerid, "принимает дозу наркотиков");
	SetPlayerTime(playerid,17,0);
	SetPlayerDrunkLevel(playerid, 3000);
	SetPlayerWeather(playerid, -68);
	return 1;
}

CMD:dropdrugs(playerid, params[])
{
	if(!pInfo[playerid][pDrugs]) return SendClientMessage(playerid, COLOR_GREY, "У вас нет наркотиков!");
	pInfo[playerid][pDrugs] = 0;
	if(pInfo[playerid][pSex] == 1) MeAction(playerid, "скинул пакетик с неизвестным содержимым");
	else MeAction(playerid, "скинула пакетик с неизвестным содержимым");
	return 1;
}

CMD:setdsell(playerid, params[])
{
    if(sscanf(params,"d",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /setdsell [цена за грамм]");
    if(!IsPlayerInRangeOfPoint(playerid,20.0,301.5917,1340.1898,702.0700)) return SendClientMessage(playerid,COLOR_GREY,"[Ошибка] Вы не находитесь в вашем наркопритоне!");
    if(CanUse[playerid]==0)return SendClientMessage(playerid,COLOR_GREY,"[Ошибка] Вы не имеете возможности управлять этим наркопритоном!");
    if(params[0]<1)return 1;
    if(params[0]>50)return SendClientMessage(playerid,COLOR_GREY,"[Ошибка] Вы не можете установить такую цену!");
    if(pInfo[playerid][pRank]<9)return 1;
    if(GetPlayerVirtualWorld(playerid)!=1) return SendClientMessage(playerid,COLOR_GREY,"[Ошибка] Вы не находитесь в вашем наркопритоне!");
    SendClientMessage(playerid,COLOR_GREEN,"Окей, будем продавать траву по такой цене!");
    PriceNarko=params[0];
	stringer[0] = EOS;
	format(stringer, 300, "Наркопритон\n\n{FFFFFF}На балансе: {63BD4E}%d$\n{FFFFFF}Стоимость наркотиков: {63BD4E}%d$", BankNarko, PriceNarko);
    UpdateDynamic3DTextLabelText(NarkoText, COLOR_YELLOW, stringer);
	return 1;
}

CMD:getmoney(playerid, params[])
{
    if(sscanf(params,"d",params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /getmoney [количество]");
    if(!IsPlayerInRangeOfPoint(playerid,20.0,301.5917,1340.1898,702.0700)) return SendClientMessage(playerid,COLOR_GREY,"[Ошибка] Вы не находитесь в вашем наркопритоне!");
    if(CanUse[playerid]==0)return SendClientMessage(playerid,COLOR_GREY,"[Ошибка] Вы не имеете возможности управлять этим наркопритоном!");
	if(params[0]<1)return 1;
	if(pInfo[playerid][pRank]<9)return 1;
    if(GetPlayerVirtualWorld(playerid)!=1) return SendClientMessage(playerid,COLOR_GREY,"[Ошибка] Вы не находитесь в вашем наркопритоне!");
    if(BankNarko<params[0]) return SendClientMessage(playerid,COLOR_GREY,"В банке наркопритона нет такой суммы!");
	TransferMoney(-1, playerid, params[0]);
	BankNarko-=params[0];
	SendClientMessage(playerid,COLOR_GREEN,"Вот, держи свою прибыль!");
	stringer[0] = EOS;
	format(stringer, 300, "Наркопритон\n\n{FFFFFF}На балансе: {63BD4E}%d$\n{FFFFFF}Стоимость наркотиков: {63BD4E}%d$", BankNarko, PriceNarko);
    UpdateDynamic3DTextLabelText(NarkoText, COLOR_YELLOW, stringer);
	return 1;
}

CMD:selldrugs(playerid, params[])
{
	if(!IsAGang(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	if(pInfo[playerid][pRank] < 2) return SendClientMessage(playerid, COLOR_GREY, "Продажа наркотиков доступна со 2 ранга!");
	new zone = GetPlayerGangZone(playerid);
	if(GZInfo[zone][gFrak] != pInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Продавать наркотики можно только на своих территориях!");
	else if(sscanf(params, "ddd", params[0], params[1], params[2])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /selldrugs [id игрока] [грамм] [цена]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(pInfo[playerid][pJailTime]>0) return SendClientMessage(playerid, COLOR_GREY, "В тюрьме это действие невозможно!");
	else if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Самому себе нельзя продавать оружие!");
    else if(!IsPlayerStream(8.0, playerid, params[0], 1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
	else if(!(1 <= params[1] <= 100)) return SendClientMessage(playerid, COLOR_GREY, "Количество грамм от 1 до 100");
	else if(!(1 <= params[2] <= 10000)) return SendClientMessage(playerid, COLOR_GREY, "Цена от 1 до 10000$");
	else if(pInfo[playerid][pDrugs] < params[1]) return SendClientMessage(playerid, COLOR_GREY, "У вас нет столько наркотиков!");
	else if(ZapretDice[params[0]] == 1) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У игрока уже есть одно активное предложение!");
    else if(pTemp[playerid][pSelectPlayer] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас уже есть одно активное предложение. Чтобы отказаться от него введите /cancel");
	else if(pTemp[params[0]][pTargetPlayer] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У игрока уже есть одно активное предложение!");
	SendMes(playerid, COLOR_BLUE, "Вы предлагаете %s купить наркотики (%i гр.). Цена: %i$", GetName(params[0]), params[1], params[2]);
	SendMes(params[0], COLOR_BLUE, "%s предлагает Вам купить наркотики (%i гр.). Цена: %i$", GetName(playerid), params[1], params[2]);
	SendClientMessage(params[0], COLOR_WHITE, PlayerAccess);
	pTemp[playerid][pSelectPlayer] = params[0];
	pTemp[params[0]][pTargetPlayer] = playerid;
	pTemp[params[0]][pTargetAction] = ACTION_SELL_DRUGS;
	pTemp[params[0]][pSellDrugsGramm] = params[1];
	pTemp[params[0]][pActionPrice] = params[2];
	return 1;
}

CMD:sellgun(playerid, params[])
{
	if(!IsAGang(playerid)) return 1;
	else if(pInfo[playerid][pRank] < 3) return SendClientMessage(playerid, COLOR_GREY, "Функция доступна с 3 ранга и выше!");
	new zone = GetPlayerGangZone(playerid);
	if(CaptureZone == zone) return SendClientMessage(playerid, COLOR_GREY, "Нельзя продавать оружие на территории на которой происходит захват");
	else if(GZInfo[zone][gFrak] != pInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Продавать оружие можно только на своих территориях!");
	new targetid, gunname[24], ammo, price;
	if(sscanf(params, "ds[24]ii", targetid, gunname, ammo, price))
	{
		SendClientMessage(playerid, COLOR_WHITE, "Введите: /sellgun [id игрока] [название] [патроны] [цена]");
		return SendClientMessage(playerid, COLOR_WHITE, "Названия: colt,sdpistol,deagle,shotgun,mp5,m4,ak47,uzi");
	}
	else if(targetid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[targetid]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(pInfo[playerid][pJailTime]>0) return SendClientMessage(playerid, COLOR_GREY, "В тюрьме это действие невозможно!");
	else if(targetid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Самому себе нельзя продавать оружие!");
	else if(!(1 <= ammo <= 300)) return SendClientMessage(playerid, COLOR_GREY, "Количество патронов от 1 до 300");
	else if(!(1 <= price <= 15000)) return SendClientMessage(playerid, COLOR_GREY, "Цена от 1 до 15000$");
	else if(!IsPlayerStream(6.0, playerid, targetid, 1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
	else if(ZapretDice[targetid] == 1) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У игрока уже есть одно активное предложение!");
    else if(pTemp[playerid][pSelectPlayer] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас уже есть одно активное предложение. Чтобы отказаться от него введите /cancel");
	else if(pTemp[targetid][pTargetPlayer] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У игрока уже есть одно активное предложение!");
	if(ammo > 0 && price > 0)
	{
	    if(GetString(gunname,"colt"))
		{
			if(pInfo[playerid][pPatron] < ammo) return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно материалов!");
			SendMes(playerid, COLOR_BLUE, "Вы предлагаете %s купить оружие Colt 45 (22) с %i патронами. Цена: %i$", GetName(targetid), ammo, price);
			SendMes(targetid, COLOR_BLUE, "%s предлагает Вам купить оружие Colt 45 (22) с %i патронами. Цена: %i$", GetName(playerid), ammo, price);
			SendClientMessage(targetid, COLOR_WHITE, PlayerAccess);
			pTemp[playerid][pSelectPlayer] = targetid;
			pTemp[targetid][pTargetPlayer] = playerid;
			pTemp[targetid][pTargetAction] = ACTION_SELL_GUN;
			pTemp[targetid][pSellGunAmmo] = ammo;
			pTemp[targetid][pActionPrice] = price;
			pTemp[targetid][pSellGunWeapon] = 22;
		}
	    else if(GetString(gunname,"sdpistol"))
		{
			if(pInfo[playerid][pPatron] < ammo) return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно материалов!");
			SendMes(playerid, COLOR_BLUE, "Вы предлагаете %s купить оружие Silenced Pistol (23) с %i патронами. Цена: %i$", GetName(targetid), ammo, price);
			SendMes(targetid, COLOR_BLUE, "%s предлагает Вам купить оружие Silenced Pistol (23) с %i патронами. Цена: %i$", GetName(playerid), ammo, price);
			SendClientMessage(targetid, COLOR_WHITE, PlayerAccess);
            pTemp[playerid][pSelectPlayer] = targetid;
			pTemp[targetid][pTargetPlayer] = playerid;
			pTemp[targetid][pTargetAction] = ACTION_SELL_GUN;
			pTemp[targetid][pSellGunAmmo] = ammo;
			pTemp[targetid][pActionPrice] = price;
			pTemp[targetid][pSellGunWeapon] = 23;
		}
	    else if(GetString(gunname,"deagle"))
		{
			if(pInfo[playerid][pPatron] < ammo) return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно материалов!");
			SendMes(playerid, COLOR_BLUE, "Вы предлагаете %s купить оружие Desert Eagle (24) с %i патронами. Цена: %i$", GetName(targetid), ammo, price);
			SendMes(targetid, COLOR_BLUE, "%s предлагает Вам купить оружие Desert Eagle (24) с %i патронами. Цена: %i$", GetName(playerid), ammo, price);
			SendClientMessage(targetid, COLOR_WHITE, PlayerAccess);
			pTemp[playerid][pSelectPlayer] = targetid;
			pTemp[targetid][pTargetPlayer] = playerid;
			pTemp[targetid][pTargetAction] = ACTION_SELL_GUN;
			pTemp[targetid][pSellGunAmmo] = ammo;
			pTemp[targetid][pActionPrice] = price;
			pTemp[targetid][pSellGunWeapon] = 24;
		}
		else if(GetString(gunname,"shotgun"))
		{
			if(pInfo[playerid][pPatron] < ammo) return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно материалов!");
			SendMes(playerid, COLOR_BLUE, "Вы предлагаете %s купить оружие Shotgun (25) с %i патронами. Цена: %i$", GetName(targetid), ammo, price);
			SendMes(targetid, COLOR_BLUE, "%s предлагает Вам купить оружие Shotgun (25) с %i патронами. Цена: %i$", GetName(playerid), ammo, price);
			SendClientMessage(targetid, COLOR_WHITE, PlayerAccess);
			pTemp[playerid][pSelectPlayer] = targetid;
			pTemp[targetid][pTargetPlayer] = playerid;
			pTemp[targetid][pTargetAction] = ACTION_SELL_GUN;
			pTemp[targetid][pSellGunAmmo] = ammo;
			pTemp[targetid][pActionPrice] = price;
			pTemp[targetid][pSellGunWeapon] = 25;
		}
		else if(GetString(gunname,"mp5"))
		{
			if(pInfo[playerid][pPatron] < ammo) return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно материалов!");
			SendMes(playerid, COLOR_BLUE, "Вы предлагаете %s купить оружие MP5 (29) с %i патронами. Цена: %i$", GetName(targetid), ammo, price);
			SendMes(targetid, COLOR_BLUE, "%s предлагает Вам купить оружие MP5 (29) с %i патронами. Цена: %i$", GetName(playerid), ammo, price);
			SendClientMessage(targetid, COLOR_WHITE, PlayerAccess);
			pTemp[playerid][pSelectPlayer] = targetid;
			pTemp[targetid][pTargetPlayer] = playerid;
			pTemp[targetid][pTargetAction] = ACTION_SELL_GUN;
			pTemp[targetid][pSellGunAmmo] = ammo;
			pTemp[targetid][pActionPrice] = price;
			pTemp[targetid][pSellGunWeapon] = 29;
		}
		else if(GetString(gunname,"m4"))
		{
			if(pInfo[playerid][pPatron] < ammo) return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно материалов!");
			SendMes(playerid, COLOR_BLUE, "Вы предлагаете %s купить оружие M4 (31) с %i патронами. Цена: %i$", GetName(targetid), ammo, price);
			SendMes(targetid, COLOR_BLUE, "%s предлагает Вам купить оружие M4 (31) с %i патронами. Цена: %i$", GetName(playerid), ammo, price);
			SendClientMessage(targetid, COLOR_WHITE, PlayerAccess);
			pTemp[playerid][pSelectPlayer] = targetid;
			pTemp[targetid][pTargetPlayer] = playerid;
			pTemp[targetid][pTargetAction] = ACTION_SELL_GUN;
			pTemp[targetid][pSellGunAmmo] = ammo;
			pTemp[targetid][pActionPrice] = price;
			pTemp[targetid][pSellGunWeapon] = 31;
		}
		else if(GetString(gunname,"ak47"))
		{
			if(pInfo[playerid][pPatron] < ammo) return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно материалов!");
			SendMes(playerid, COLOR_BLUE, "Вы предлагаете %s купить оружие AK47 (30) с %i патронами. Цена: %i$", GetName(targetid), ammo, price);
			SendMes(targetid, COLOR_BLUE, "%s предлагает Вам купить оружие AK47 (30) с %i патронами. Цена: %i$", GetName(playerid), ammo, price);
			SendClientMessage(targetid, COLOR_WHITE, PlayerAccess);
			pTemp[playerid][pSelectPlayer] = targetid;
			pTemp[targetid][pTargetPlayer] = playerid;
			pTemp[targetid][pTargetAction] = ACTION_SELL_GUN;
			pTemp[targetid][pSellGunAmmo] = ammo;
			pTemp[targetid][pActionPrice] = price;
			pTemp[targetid][pSellGunWeapon] = 30;
		}
		else if(GetString(gunname,"uzi"))
		{
			if(pInfo[playerid][pPatron] < ammo) return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно материалов!");
			SendMes(playerid, COLOR_BLUE, "Вы предлагаете %s купить оружие UZI (28) с %i патронами. Цена: %i$", GetName(params[0]),params[2], params[3]);
			SendMes(targetid, COLOR_BLUE, "%s предлагает Вам купить оружие UZI (28) с %i патронами. Цена: %i$", GetName(playerid), ammo, price);
			SendClientMessage(targetid, COLOR_WHITE, PlayerAccess);
			pTemp[playerid][pSelectPlayer] = targetid;
			pTemp[targetid][pTargetPlayer] = playerid;
			pTemp[targetid][pTargetAction] = ACTION_SELL_GUN;
			pTemp[targetid][pSellGunAmmo] = ammo;
			pTemp[targetid][pActionPrice] = price;
			pTemp[targetid][pSellGunWeapon] = 28;
		}
		else return 0;
	}
	return 1;
}

CMD:makegun(playerid, params[])
{
	if(IsAGang(playerid))
	{
	    new zone = GetPlayerGangZone(playerid);
	    if(GZInfo[zone][gFrak] != pInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться на территории своей банды!");
		if(!pInfo[playerid][pPatron]) return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно патронов");
		ShowMakeGunList(playerid);
	}
	else if(IsAMafia(playerid))
	{
		if(GetPlayerInterior(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Использовать можно только на улице");
		else if(!pInfo[playerid][pPatron]) return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно патронов");
		ShowMakeGunList(playerid);
	}
	else if(IsAArmy(playerid))
	{
		if(GetPlayerInterior(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Использовать можно только на улице");
		else if(!pInfo[playerid][pPatron]) return SendClientMessage(playerid, COLOR_GREY, "У вас недостаточно патронов");
		ShowMakeGunList(playerid);
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return 1;
}

CMD:load(playerid)
{
	if(IsAArmy(playerid) || IsAMafia(playerid))
	{
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "Необходимо находиться за рулём транспорта");
		new vehicleid = GetPVarInt(playerid,"VehicleEnters");
		if(gVehicleGun[vehicleid][vGunLoading] || gVehicleGun[vehicleid][vGunUnloading]) return SendClientMessage(playerid, COLOR_GREY, "Авто уже стоит на загрузке / разгрузке");
		gVehicleGun[vehicleid][vGunLoading] = true;
		RemovePlayerFromVehicle(playerid);
		new Float:x, Float:y, Float:z;
		GetVehiclePos(vehicleid, x, y, z);
		new string[128];
		switch(GetVehicleModel(vehicleid))
		{
		    case 433:
		    {
		        GetVehicleShiftPos(vehicleid, 1, x, y, z, 6.0);
				gVehicleGun[vehicleid][vGunPickup] = CreateDynamicPickup(19133, 1, x, y, z-0.5); //Пикап грузовиков
				format(string, sizeof(string), "Ящиков с боеприпасами:\n{63BD4E}%d/20", gVehicleGun[vehicleid][vGunAmmo]);
				gVehicleGun[vehicleid][vGunText] = CreateDynamic3DTextLabel(string, 0xFFFFFFFF, x, y+0.1, z+0.5, 20.0);
		    }
		    case 467,587,550,489,580,491:
		    {
		        GetVehicleShiftPos(vehicleid, 1, x, y, z, 4.0);
				gVehicleGun[vehicleid][vGunPickup] = CreateDynamicPickup(19133, 1, x, y, z); //Пикап для легковых авто
				format(string, sizeof(string), "Ящиков с боеприпасами:\n{63BD4E}%d/20", gVehicleGun[vehicleid][vGunAmmo]);
				gVehicleGun[vehicleid][vGunText] = CreateDynamic3DTextLabel(string, 0xFFFFFFFF, x, y+0.1, z+0.7, 20.0);
			}
		    case 470,500,482,526:
		    {
		        GetVehicleShiftPos(vehicleid, 1, x, y, z, 3.0);
				gVehicleGun[vehicleid][vGunPickup] = CreateDynamicPickup(19133, 1, x, y, z); //Пикап для легковых авто
				format(string, sizeof(string), "Ящиков с боеприпасами:\n{63BD4E}%d/20", gVehicleGun[vehicleid][vGunAmmo]);
				gVehicleGun[vehicleid][vGunText] = CreateDynamic3DTextLabel(string, 0xFFFFFFFF, x, y+0.1, z+0.7, 20.0);
		    }
		    default: return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы должны быть в машине предназначенной для загрузки!");
		}
		gVehicleGun[vehicleid][vGunArea] = CreateDynamicSphere(x, y, z, 1.0);
		Iter_Add(VehicleGun, vehicleid);
		SendClientMessage(playerid, COLOR_GREEN, "Загрузка началась");
	}
	else if(IsAMedic(playerid))
	{
	    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в транспорте!");
		new vehicleid = GetPVarInt(playerid,"VehicleEnters");
		if(gVehicleMed[vehicleid][vMedLoading] || gVehicleMed[vehicleid][vMedUnloading]) return SendClientMessage(playerid, COLOR_GREY, "Авто уже стоит на загрузке / разгрузке");
		gVehicleMed[vehicleid][vMedLoading] = true;

		RemovePlayerFromVehicle(playerid);
		new Float:x, Float:y, Float:z;
		GetVehiclePos(vehicleid, x, y, z);
		GetVehicleShiftPos(vehicleid, 1, x, y, z, 5.0);
		switch(GetVehicleModel(vehicleid))
		{
		    case 416: gVehicleMed[vehicleid][vMedPickup] = CreateDynamicPickup(19133, 1, x, y, z);
		    default: return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы должны быть в машине предназначенной для загрузки!");
		}
		new string[128];
		format(string, sizeof(string), "Медикаментов:\n{63BD4E}%d/100", gVehicleMed[vehicleid][vMedCount]);
		gVehicleMed[vehicleid][vMedText] = CreateDynamic3DTextLabel(string, 0xFFFFFFFF, x, y+0.1, z+0.7, 20.0);
		gVehicleMed[vehicleid][vMedArea] = CreateDynamicSphere(x, y, z, 1.0);
		Iter_Add(VehicleMed, vehicleid);
		SendClientMessage(playerid, COLOR_GREEN, "Загрузка началась");
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return 1;
}

CMD:unload(playerid)
{
	if(IsAArmy(playerid) || IsAMafia(playerid))
	{
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "Необходимо находиться за рулём транспорта");
		new vehicleid = GetPVarInt(playerid,"VehicleEnters");
		if(gVehicleGun[vehicleid][vGunLoading] || gVehicleGun[vehicleid][vGunUnloading]) return SendClientMessage(playerid, COLOR_GREY, "Транспорт уже стоит на загрузке / разгрузке");
		gVehicleGun[vehicleid][vGunUnloading] = true;
		RemovePlayerFromVehicle(playerid);
		new Float:x, Float:y, Float:z;
		GetVehiclePos(vehicleid, x, y, z);
		new string[128];
    	switch(GetVehicleModel(vehicleid))
		{
		    case 433:
		    {
		        GetVehicleShiftPos(vehicleid, 1, x, y, z, 6.0);
				gVehicleGun[vehicleid][vGunPickup] = CreateDynamicPickup(19133, 1, x, y, z-0.5); //Пикап грузовиков
				format(string, sizeof(string), "Ящиков с боеприпасами:\n{63BD4E}%d/20", gVehicleGun[vehicleid][vGunAmmo]);
				gVehicleGun[vehicleid][vGunText] = CreateDynamic3DTextLabel(string, 0xFFFFFFFF, x, y+0.1, z+0.5, 20.0);
		    }
		    case 467,587,550,489,580,491:
		    {
		        GetVehicleShiftPos(vehicleid, 1, x, y, z, 4.0);
				gVehicleGun[vehicleid][vGunPickup] = CreateDynamicPickup(19133, 1, x, y, z); //Пикап для легковых авто
				format(string, sizeof(string), "Ящиков с боеприпасами:\n{63BD4E}%d/20", gVehicleGun[vehicleid][vGunAmmo]);
				gVehicleGun[vehicleid][vGunText] = CreateDynamic3DTextLabel(string, 0xFFFFFFFF, x, y+0.1, z+0.7, 20.0);
			}
		    case 470,500,482,526:
		    {
		        GetVehicleShiftPos(vehicleid, 1, x, y, z, 3.0);
				gVehicleGun[vehicleid][vGunPickup] = CreateDynamicPickup(19133, 1, x, y, z); //Пикап для легковых авто
				format(string, sizeof(string), "Ящиков с боеприпасами:\n{63BD4E}%d/20", gVehicleGun[vehicleid][vGunAmmo]);
				gVehicleGun[vehicleid][vGunText] = CreateDynamic3DTextLabel(string, 0xFFFFFFFF, x, y+0.1, z+0.7, 20.0);
		    }
		    default: return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы должны быть в машине предназначенной для загрузки!");
		}
		gVehicleGun[vehicleid][vGunArea] = CreateDynamicSphere(x, y, z, 1.0);
		Iter_Add(VehicleGun, vehicleid);
		if(IsAArmy(playerid)) SendClientMessage(playerid, COLOR_GREEN, "Разгрузка началась. Относите ящики на склад армии");
		else if(IsAMafia(playerid)) SendClientMessage(playerid, COLOR_GREEN, "Разгрузка началась. Относите ящики на склад мафии {AFAFAF}(отмечен на карте иконкой грузовика)");
	}
	else if(IsAMedic(playerid))
	{
	    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "Необходимо находиться за рулём транспорта");
		new vehicleid = GetPVarInt(playerid,"VehicleEnters");
		if(gVehicleMed[vehicleid][vMedLoading] || gVehicleMed[vehicleid][vMedUnloading]) return SendClientMessage(playerid, COLOR_GREY, "Транспорт уже стоит на загрузке / разгрузке");
		gVehicleMed[vehicleid][vMedUnloading] = true;
		RemovePlayerFromVehicle(playerid);
		new Float:x, Float:y, Float:z;
		GetVehiclePos(vehicleid, x, y, z);
		GetVehicleShiftPos(vehicleid, 1, x, y, z, 5.0);
    	switch(GetVehicleModel(vehicleid))
		{
		    case 416: gVehicleMed[vehicleid][vMedPickup] = CreateDynamicPickup(19133, 1, x, y, z);
		    default: return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы должны быть в машине предназначенной для загрузки!");
		}
		new string[128];
		format(string, sizeof(string), "Медикаментов:\n{63BD4E}%d/100", gVehicleMed[vehicleid][vMedCount]);
		gVehicleMed[vehicleid][vMedText] = CreateDynamic3DTextLabel(string, 0xFFFFFFFF, x, y+0.1, z+0.7, 20.0);
		gVehicleMed[vehicleid][vMedArea] = CreateDynamicSphere(x, y, z, 1.0);
		Iter_Add(VehicleMed, vehicleid);
		SendClientMessage(playerid, COLOR_GREEN, "Разгрузка началась. Относите медикаменты на склад больницы");
	}
	else SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	return 1;
}

CMD:givecig(playerid, params[])
{
	if(sscanf(params, "dd", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /givecig [id игрока] [количество]");
	else if(!IsPlayerStream(8.0, playerid, params[0], 1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(params[1] < 0) return SendClientMessage(playerid, COLOR_GREY, "Неверное количество!");
	else if(pInfo[playerid][pCiggare] < params[1]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько сигарет!");
	else if(pInfo[params[0]][pCiggare] >= 2 && !pInfo[params[0]][pImprove][2]) return SendClientMessage(playerid, COLOR_GREY, "У игрока уже достаточно сигарет!");
	else if(pInfo[params[0]][pCiggare] >= 4 && pInfo[params[0]][pImprove][2]) return SendClientMessage(playerid, COLOR_GREY, "У игрока уже достаточно сигарет!");
	pInfo[playerid][pCiggare] -= params[1];
	pInfo[params[0]][pCiggare] += params[1];
	MysqlUpdatePlayerInt(playerid, "ciggare", pInfo[playerid][pCiggare]);
	MysqlUpdatePlayerInt(params[0], "ciggare", pInfo[params[0]][pCiggare]);
	new string[128];
	format(string, sizeof(string), "передал%s %s %s", GetName(params[0]), (pInfo[playerid][pSex]==1)?(""):("а"), (params[1]==1)?("сигарету"):(params[1]<5)?("сигареты"):("сигарет"));
	MeAction(playerid, string);
	format(string, sizeof(string), "Вы передали %s %d %s", GetName(params[0]), params[1], (params[1]==1)?("сигарету"):(params[1]<5)?("сигареты"):("сигарет"));
	SendClientMessage(playerid, COLOR_WHITE, string);
	format(string, sizeof(string), "%s передал%s Вам %d %s", GetName(playerid), (pInfo[playerid][pSex]==1)?(""):("а"), params[1], (params[1]==1)?("сигарету"):(params[1]<5)?("сигареты"):("сигарет"));
	SendClientMessage(params[0], COLOR_WHITE, string);
	return 1;
}

CMD:giveguns(playerid, params[])
{
	if(sscanf(params, "dd", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /giveguns [id игрока] [количество]");
	else if(!IsPlayerStream(8.0, playerid, params[0], 1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(params[1] < 0) return SendClientMessage(playerid, COLOR_GREY, "Неверное количество!");
	else if(pInfo[playerid][pGunAmount] < params[1]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько ед. оружия!");
	else if(pInfo[params[0]][pGunAmount]+params[1] > 500 && !pInfo[playerid][pImprove][2]) return SendClientMessage(playerid, COLOR_GREY, "У игрока уже достаточно ед. оружия!");
	else if(pInfo[params[0]][pGunAmount]+params[1] > 1000 && pInfo[playerid][pImprove][2]) return SendClientMessage(playerid, COLOR_GREY, "У игрока уже достаточно ед. оружия!");
	pInfo[playerid][pGunAmount] -= params[1];
	pInfo[params[0]][pGunAmount] += params[1];
	MysqlUpdatePlayerInt(playerid, "gunamount", pInfo[playerid][pGunAmount]);
	MysqlUpdatePlayerInt(params[0], "gunamount", pInfo[params[0]][pGunAmount]);
	new string[128];
	format(string, sizeof(string), "передал%s ед. оружия %s", GetName(params[0]), (pInfo[playerid][pSex]==1)?(""):("а"));
	MeAction(playerid, string);
	format(string, sizeof(string), "Вы передали %s %d ед. оружия", GetName(params[0]), params[1]);
	SendClientMessage(playerid, COLOR_WHITE, string);
	format(string, sizeof(string), "%s передал%s Вам %d ед. оружия", GetName(playerid), (pInfo[playerid][pSex]==1)?(""):("а"), params[1]);
	SendClientMessage(params[0], COLOR_WHITE, string);
	return 1;
}

CMD:givepatr(playerid, params[])
{
	if(sscanf(params, "dd", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /givepatr [id игрока] [количество]");
	else if(!IsPlayerStream(8.0, playerid, params[0], 1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(params[1] < 0) return SendClientMessage(playerid, COLOR_GREY, "Неверное количество!");
	else if(pInfo[playerid][pPatron] < params[1]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько патрон!");
	else if(pInfo[params[0]][pPatron]+params[1] > 500 && !pInfo[playerid][pImprove][2]) return SendClientMessage(playerid, COLOR_GREY, "У игрока уже достаточно патрон!");
	else if(pInfo[params[0]][pPatron]+params[1] > 1000 && pInfo[playerid][pImprove][2]) return SendClientMessage(playerid, COLOR_GREY, "У игрока уже достаточно патрон!");
	pInfo[playerid][pPatron] -= params[1];
	pInfo[params[0]][pPatron] += params[1];
	MysqlUpdatePlayerInt(playerid, "patron", pInfo[playerid][pPatron]);
	MysqlUpdatePlayerInt(params[0], "patron", pInfo[params[0]][pPatron]);
	new string[128];
	format(string, sizeof(string), "передал%s патроны %s", GetName(params[0]), (pInfo[playerid][pSex]==1)?(""):("а"));
	MeAction(playerid, string);
	format(string, sizeof(string), "Вы передали %s %d пт", GetName(params[0]), params[1]);
	SendClientMessage(playerid, COLOR_WHITE, string);
	format(string, sizeof(string), "%s передал%s Вам %d пт", GetName(playerid), (pInfo[playerid][pSex]==1)?(""):("а"), params[1]);
	SendClientMessage(params[0], COLOR_WHITE, string);
	return 1;
}

CMD:giveflowers(playerid, params[])
{
    if(!HaveWeapon(playerid, 14)) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас нет цветов!");
    else if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /giveflowers [id игрока]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(!IsPlayerStream(8.0, playerid, params[0], 1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
	else if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Самому себе нельзя передавать!");
	else if(HaveWeapon(params[0], 14)) return SendClientMessage(playerid, COLOR_GREY, "У игрока уже есть цветы!");
	SetPlayerArmedWeapon(playerid, 0);
	SetPlayerAmmoEx(playerid, 14, 0);
	GivePlayerWeaponEx(params[0], 14, 1);
	new string[128];
	format(string, sizeof(string), "передал цветы %s", GetName(params[0]));
	MeAction(playerid, string);
	format(string, sizeof(string), "Вы передали %s цветы", GetName(params[0]), params[1]);
	SendClientMessage(playerid, COLOR_WHITE, string);
	format(string, sizeof(string), "%s передал Вам цветы", GetName(playerid), params[1]);
	SendClientMessage(params[0], COLOR_WHITE, string);
	return 1;
}

CMD:sellsim(playerid, params[])
{
	if(pInfo[playerid][pPhoneNumber] <= 1) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас нет SIM-карты!");
	new i = GetPVarInt(playerid, "UseBiz");
	if(GetPlayerVirtualWorld(playerid) == BizInfo[i][bVirtual] && BizInfo[i][bType] == 1)
	{
		if(sscanf(params, "dd", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /sellsim [id игрока] [цена]");
		else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
		else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
		else if(playerid == params[0]) return SendClientMessage(playerid, COLOR_GREY, "Самому себе нельзя продавать SIM-карту!");
		else if(!IsPlayerStream(8.0, playerid, params[0], 1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
		else if(!(1 <= params[1] <= 1000000)) return SendClientMessage(playerid, COLOR_GREY, "Стоимость от 1$ до 1 млн.");
		else if(ZapretDice[params[0]] == 1) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У игрока уже есть одно активное предложение!");
	    else if(pTemp[playerid][pSelectPlayer] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас уже есть одно активное предложение. Чтобы отказаться от него введите /cancel");
		else if(pTemp[params[0]][pTargetPlayer] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У игрока уже есть одно активное предложение!");
		new string[144];
		format(string, sizeof(string), "Вы предлагаете %s купить SIM-карту. Цена: %i$", GetName(params[0]), params[1]);
		SendClientMessage(playerid, COLOR_BLUE, string);
		format(string, sizeof(string), "%s предлагает Вам купить SIM-карту. Цена: %i$", GetName(playerid), params[1]);
		SendClientMessage(params[0], COLOR_BLUE, string);
		SendClientMessage(params[0], COLOR_WHITE, PlayerAccess);
		pTemp[playerid][pSelectPlayer] = params[0];
		pTemp[params[0]][pTargetPlayer] = playerid;
		pTemp[params[0]][pTargetAction] = ACTION_SELL_SIM;
		pTemp[params[0]][pActionPrice] = params[1];
	}
	else
	{
	    SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Продавать сим-карту возможно только в магазине 24/7!");
	}
	return 1;
}

CMD:sellzone(playerid, params[])
{
	if(!(pInfo[playerid][pLeader] && IsAGang(playerid))) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	new zone = GetPlayerGangZone(playerid);
	if(GZInfo[zone][gFrak] != pInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете продать чужую зону!");
	else if(CaptureZone == zone) return SendClientMessage(playerid, COLOR_GREY, "Эту зону уже захватывают");
	else if(sscanf(params, "dd", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /sellzone [id игрока] [цена]");
	else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
	else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
	else if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете продать зону себе!");
	else if(!IsPlayerStream(8.0, playerid, params[0], 1)) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
	else if(!IsAGang(params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен состоять в какой-нибудь банде!");
	else if(!pInfo[params[0]][pLeader]) return SendClientMessage(playerid, COLOR_GREY, "Игрок не руководитель банды!");
	else if(!(1 <= params[1] <= 100000)) return SendClientMessage(playerid, COLOR_GREY, "Цена от 1 до 100000$");
	else if(ZapretDice[params[0]] == 1) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У игрока уже есть одно активное предложение!");
    else if(pTemp[playerid][pSelectPlayer] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас уже есть одно активное предложение. Чтобы отказаться от него введите /cancel");
	else if(pTemp[params[0]][pTargetPlayer] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У игрока уже есть одно активное предложение!");
	SendMes(playerid, COLOR_BLUE, "Вы предлагаете %s купить зону. Цена: %i$", GetName(params[0]), params[1]);
	SendMes(params[0], COLOR_BLUE, "%s предлагает Вам купить зону. Цена: %i$", GetName(playerid), params[1]);
	SendClientMessage(params[0], COLOR_WHITE, PlayerAccess);
	pTemp[playerid][pSelectPlayer] = params[0];
	pTemp[params[0]][pTargetPlayer] = playerid;
	pTemp[params[0]][pTargetAction] = ACTION_SELL_ZONE;
	pTemp[params[0]][pSellZoneID] = zone;
	pTemp[params[0]][pActionPrice] = params[1];
	return 1;
}

CMD:robhouse(playerid, params[])
{
	if(!IsAGang(playerid)) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	new idx = -1;
	for(new i = 1; i <= TOTALHOUSE; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, HouseInfo[i][hEntr][0], HouseInfo[i][hEntr][1], HouseInfo[i][hEntr][2]))
		{
			idx = i;
			break;
		}
	}
	if(idx == -1) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться рядом с домом!");
    new zone = GetPlayerGangZone(playerid);
	if(GZInfo[zone][gFrak] != pInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Грабить дома можно только на своей территории!");
	else if(GetString(HouseInfo[idx][hOwner], "None")) return SendClientMessage(playerid, COLOR_GREY, "У этого дома нет владельца!");
	else if(GetString(HouseInfo[idx][hOwner], GetName(playerid))) return SendClientMessage(playerid, COLOR_GREY, "Свой дом нельзя грабить!");
	else if(HouseInfo[idx][hRob]) return SendClientMessage(playerid, COLOR_GREY, "Этот дом уже грабили в этом часу!");
	else if(pInfo[playerid][pRobHouse]) return SendClientMessage(playerid, COLOR_GREY, "Нельзя так часто грабить дома. Попробуйте в следующем часу");
	new summa = RandomEx(500,700);
	new string[128];
	format(string, sizeof(string), "Вы ограбили дом на сумму %d$", summa);
	SendClientMessage(playerid, COLOR_GREEN, string);
	TransferMoney(-1, playerid, summa);
	new targetid;
	sscanf(HouseInfo[idx][hOwner], "u", targetid);
	if(targetid != INVALID_PLAYER_ID) SendClientMessage(targetid, COLOR_RED, "Ваш дом был ограблен неизвестными!");
	HouseInfo[idx][hRob] = true;
	pInfo[playerid][pRobHouse] = 1;
	pInfo[playerid][pWanted]++;
	if(pInfo[playerid][pWanted] >= 6) pInfo[playerid][pWanted] = 6;
	SetPlayerWantedLevel(playerid,pInfo[playerid][pWanted]);
	SetPlayerCriminal(playerid, "Неизвестный", "Ограбление", 1);
	return 1;
}

CMD:repair(playerid, params[])
{
	if(pInfo[playerid][pJob] != JOB_MECHANIC) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться за рулем эвакуатора!");
	new carid = GetPVarInt(playerid,"VehicleEnters");
	if(carid >= mechanic[0] && carid <= mechanic[9] || GetVehicleModel(carid) == 525)
	{
		if(sscanf(params, "dd", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /repair [id игрока] [цена]");
		else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
		else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
		else if(!(1 <= params[1] <= 1000)) return SendClientMessage(playerid, COLOR_GREY, "Цена от 1 до 1000$!");
		else if(!IsPlayerStream(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
		else if(GetPlayerState(params[0]) != 2) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен находиться за рулем транспорта!");
		else if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Ты не можешь починить машину себе!");
		SendMes(playerid, COLOR_BLUE, "Вы предлагаете %s починить его транспорт за %i$", GetName(params[0]), params[1]);
		SendMes(params[0], COLOR_BLUE, "%s преложил вам починить ваш транспорт за %i$", GetName(playerid), params[1]);
		new string[100];
		format(string, sizeof(string), "%s преложил вам починить ваш транспорт за %i$\n\nВы согласны?", GetName(playerid), params[1]);
		ShowPlayerDialog(params[0], dJob+16, 0, "Автомеханик", string, "Да", "Нет");
		SetPVarInt(playerid, "MechVehID", GetPVarInt(params[0],"VehicleEnters"));
		SetPVarInt(params[0], "PlayerMech", playerid);
		SetPVarInt(params[0], "MechanicPrice", params[1]);
	}
	else SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в эвакуаторе!");
	return 1;
}

CMD:refill(playerid, params[])
{
	if(pInfo[playerid][pJob] != JOB_MECHANIC) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться за рулем эвакуатора!");
	new carid = GetPVarInt(playerid,"VehicleEnters");
	if(carid >= mechanic[0] && carid <= mechanic[9] || GetVehicleModel(carid) == 525)
	{
		if(sscanf(params, "dd", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /refill [id игрока] [цена]");
		else if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotOnline);
		else if(!gPlayerLogged[params[0]]) return SendClientMessage(playerid, COLOR_GREY, PlayerIsNotAuthorized);
		else if(!(1 <= params[1] <= 5000)) return SendClientMessage(playerid, COLOR_GREY, "Цена от 1 до 5000$!");
		else if(!IsPlayerStream(8.0, playerid, params[0])) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко!");
		else if(GetPlayerState(params[0]) != 2) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен находиться за рулем транспорта!");
		else if(params[0] == playerid) return SendClientMessage(playerid, COLOR_GREY, "Ты не можешь заправить себе машин!");
		SendMes(playerid, COLOR_BLUE, "Вы предлагаете %s заправить его транспорт за %i$", GetName(params[0]), params[1]);
		SendMes(params[0], COLOR_BLUE, "%s преложил вам заправить ваш транспорт за %i$", GetName(playerid), params[1]);
		new string[100];
		format(string, sizeof(string), "%s преложил вам заправить ваш транспорт за %i$\n\nВы согласны?", GetName(playerid), params[1]);
		ShowPlayerDialog(params[0], dJob+18, 0, "Автомеханик", string, "Да", "Нет");
		SetPVarInt(params[0], "MechanicPlayer", playerid);
		SetPVarInt(params[0], "MechanicPrice", params[1]);
	}
	else SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в эвакуаторе!");
	return 1;
}

CMD:end(playerid, params[])
{
    if(pInfo[playerid][pJob] == JOB_BUS && pTemp[playerid][pBusID] != INVALID_VEHICLE_ID)
	{
		ShowPlayerDialog(playerid,dBusJob+3,DIALOG_STYLE_MSGBOX,"{FFCC00}Конец рабочего дня","{FFFFFF}Вы хотите завершить рабочий день?\nЗаработанные деньги будут перечислены на Ваш счет в банке во время зарплаты","Да","Нет");
	}
	if(pInfo[playerid][pJob] == JOB_TRUCKER && pTemp[playerid][pTruckID] != INVALID_VEHICLE_ID)
	{
		ShowPlayerDialog(playerid,dTruckJob+2,DIALOG_STYLE_MSGBOX,"{FFCC00}Конец рабочего дня","{FFFFFF}Вы хотите завершить рабочий день?","Да","Нет");
	}
	return 1;
}

CMD:fare(playerid, params[])
{
	if(pInfo[playerid][pJob] != JOB_TAXI) return SendClientMessage(playerid, COLOR_GREY, YouCanNot);
	if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться за рулем такси!");
	new carid = GetPVarInt(playerid,"VehicleEnters");
	if(carid >= taxicar[0] && carid <= taxicar[10])
	{
		if(GetPVarInt(playerid, "PriceTaxi") > 0)
		{
		    SendMes(playerid, COLOR_BLUE, "Вы закончили рабочий день. Всего заработано: {63BD4E}%i$", GetPVarInt(playerid, "TaxiMoney"));
		    if(doubling_salary) SendMes(playerid, COLOR_YELLOW, "[Информация] {FFFFFF}С учётом акции Вы заработали: {63BD4E}%i$", GetPVarInt(playerid, "TaxiMoney")*2);
			SendClientMessage(playerid, COLOR_WHITE, "Деньги будут перечислены на Ваш счет в банке во время зарплаты");
			DeletePVar(playerid, "PriceTaxi");
			DeletePVar(playerid, "TaxiMoney");
			if(IsValidDynamic3DTextLabel(TaxiText3D[playerid]))
			{
				DestroyDynamic3DTextLabel(TaxiText3D[playerid]);
				TaxiText3D[playerid] = Text3D:INVALID_3DTEXT_ID;
			}
			return 1;
		}
		ShowPlayerDialog(playerid, dJob+13, 1, "{FFCC00}Тариф", "{ffffff}Введите стоимость проезда:", "Принять", "Отмена");
	}
	// td
	else SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в такси!");
	return 1;
}

CMD:tpcoord(playerid,params[])
{
    IsAdmin(ADM_CHIEF);
    else if(!gAdminLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, YouAreNotLoggedInAsAdmin);
    new Float:px,Float:py,Float:pz,string[128];
    //if(sscanf(params,"p<,>fff",px,py,pz)) return SendClientMessage(playerid, 0xFFFFFFAA, "Введите: /tpcoord <x,y,z>");
    if(sscanf(params,"fff",px,py,pz)) return SendClientMessage(playerid, 0xFFFFFFAA, "Введите: /tpcoord x y z");
    SetPlayerPos(playerid,px,py,pz);
    format(string, sizeof(string), "Вы были телепортированы {FFFFFF}X:%f, Y:%f, Z:%f",px,py,pz);
    SendClientMessage(playerid, COLOR_GREY, string);
    return 1;
}

@GameModeExitDelay();
@GameModeExitDelay()
{
    SaveOther();
	GameModeExit();
}

public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
{
	if(!pInfo[playerid][pAdmin] && !pInfo[playerid][pSetMark])
	{
		ACInfo[playerid][acCheckMapTP] = 1;
		ACInfo[playerid][acMapTPLastClick] = GetTickCount();
		ACInfo[playerid][acMapTP][0] = fX;
		ACInfo[playerid][acMapTP][1] = fY;
		ACInfo[playerid][acMapTP][2] = fZ;
	}
	if(gAdminLogged[playerid])
	{
	    if(!pInfo[playerid][pSetMark] && pInfo[playerid][pAdmin] < ADM_ADMIN) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 4 уровня администратора");
		SetPlayerPosFindZ(playerid, fX, fY, fZ);
	}
	if(pInfo[playerid][pSetMark])
	{
	    SetPlayerPosFindZ(playerid, fX, fY, fZ);
	}
	return 1;
}
stock SetNumberPlate(vehid, text[])SetVehicleNumberPlate(vehid, text);
stock BedDefault(playerid)
{
    if(PlayerLie[playerid])
    {
        new bed = PlayerBed[playerid];
        PlayerLie[playerid] = false;
        SetString(HealInfo[PlayerBed[playerid]][hName],"The State");
		PlayerBed[playerid] = -1;
		UpdateDynamic3DTextLabelText(HealText[bed],0xFFFFFFFF,"{ffffff}Койка {63BD4E}[Свободна]\n{bbbbbb}Нажмите F чтобы занять");
    }
	return 1;
}

public OnVehicleDamageStatusUpdate(vehicleid, playerid)
{
    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
 	{
    	SetPVarInt(playerid,"EngineStalled",GetPVarInt(playerid,"EngineStalled")+1);
		if(GetPVarInt(playerid,"EngineStalled") >= 4 && GetEngineStat(vehicleid) == 1 && !pInfo[playerid][pImprove][3])
		{
		    new engine, lights, alarm, doors, bonnet, boot, objective;
			GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(vehicleid, false, lights, alarm, doors, bonnet, boot, objective);
			GameTextForPlayer(playerid, "~r~ENGINE OFF", 3000, 6);
			DeletePVar(playerid,"EngineStalled");
		}
		SetPVarInt(playerid,"DamageStatus",GetPVarInt(playerid,"DamageStatus")+1);
		if(GetPVarInt(playerid,"DamageStatus") >= 2 && GetPVarInt(playerid, "BeltStatus") == 0)
		{
		    new Float:health;
			GetPlayerHealth(playerid, health);
			SetHealth(playerid, health-5.0);
			DeletePVar(playerid, "DamageStatus");
		}
		if(vehicleid >= aBus[0] && vehicleid <= aBus[12])
		{
			for(new i;i<MAX_PLAYERS;i++)
			{
				if(pTemp[i][pBusID] == vehicleid) { GetVehicleHealth(vehicleid,pTemp[i][pBusDamage]); break; }
			}
		}
    }
	return 1;
}
stock IsInAllowedM(mnumbers)
{
	for(new i = 0; i < sizeof(allowedmfactions); i++)
	{
		if(mnumbers == allowedmfactions[i]) return 1;
	}
	return 0;
}

stock emptyMessage(string[])
{
    for(new i; string[i] != 0x0; i++)
    {
        switch(string[i])
        {
            case 0x20: continue;
            default: return 0;
        }
    }
    return 1;
}

stock SetPlayerSkills(playerid)
{
	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, 		pInfo[playerid][pGunSkill][0]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, 		pInfo[playerid][pGunSkill][1]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, 				pInfo[playerid][pGunSkill][2]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, 					pInfo[playerid][pGunSkill][3]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, 				pInfo[playerid][pGunSkill][4]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, 					pInfo[playerid][pGunSkill][5]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, 				pInfo[playerid][pGunSkill][6]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_MICRO_UZI, 			pInfo[playerid][pGunSkill][7]*10);
	return 1;
}

stock OnPlayerGiveWeaponSkill(playerid, weaponid)
{
	switch(weaponid)
	{
	    case 22:
		{
		    Shot[playerid][6]++;
			if(Shot[playerid][6] >= AMMO_PISTOL && pInfo[playerid][pGunSkill][6] < 100 && (!pInfo[playerid][pVip] && !doubling_skills))
			{
				pInfo[playerid][pGunSkill][6]++;
				if(pInfo[playerid][pGunSkill][6] == 100) SetPlayerSkills(playerid);
				Shot[playerid][6] = 0;
			}
			else if(Shot[playerid][6] >= AMMO_PISTOL_VIP && pInfo[playerid][pGunSkill][6] < 100 && (pInfo[playerid][pVip] || doubling_skills))
			{
				pInfo[playerid][pGunSkill][6]++;
				if(pInfo[playerid][pGunSkill][6] == 100) SetPlayerSkills(playerid);
				Shot[playerid][6] = 0;
			}
		}
	    case 23:
		{
		    Shot[playerid][0]++;
			if(Shot[playerid][0] >= AMMO_SDPISTOL && pInfo[playerid][pGunSkill][0] < 100 && (!pInfo[playerid][pVip] && !doubling_skills))
			{
				pInfo[playerid][pGunSkill][0]++;
				if(pInfo[playerid][pGunSkill][0] == 100) SetPlayerSkills(playerid);
				Shot[playerid][0] = 0;
			}
			else if(Shot[playerid][0] >= AMMO_SDPISTOL_VIP && pInfo[playerid][pGunSkill][0] < 100 && (pInfo[playerid][pVip] || doubling_skills))
			{
				pInfo[playerid][pGunSkill][0]++;
				if(pInfo[playerid][pGunSkill][0] == 100) SetPlayerSkills(playerid);
				Shot[playerid][0] = 0;
			}
		}
		case 24:
		{
		    Shot[playerid][1]++;
			if(Shot[playerid][1] >= AMMO_DEAGLE && pInfo[playerid][pGunSkill][1] < 100 && (!pInfo[playerid][pVip] && !doubling_skills))
			{
				pInfo[playerid][pGunSkill][1]++;
				if(pInfo[playerid][pGunSkill][1] == 100) SetPlayerSkills(playerid);
				Shot[playerid][1] = 0;
			}
			else if(Shot[playerid][1] >= AMMO_DEAGLE_VIP && pInfo[playerid][pGunSkill][1] < 100 && (pInfo[playerid][pVip] || doubling_skills))
			{
				pInfo[playerid][pGunSkill][1]++;
				if(pInfo[playerid][pGunSkill][1] == 100) SetPlayerSkills(playerid);
				Shot[playerid][1] = 0;
			}
		}
		case 25:
		{
		    Shot[playerid][2]++;
			if(Shot[playerid][2] >= AMMO_SHOTGUN && pInfo[playerid][pGunSkill][2] < 100 && (!pInfo[playerid][pVip] && !doubling_skills))
			{
				pInfo[playerid][pGunSkill][2]++;
				if(pInfo[playerid][pGunSkill][2] == 100) SetPlayerSkills(playerid);
				Shot[playerid][2] = 0;
			}
			else if(Shot[playerid][2] >= AMMO_SHOTGUN_VIP && pInfo[playerid][pGunSkill][2] < 100 && (pInfo[playerid][pVip] || doubling_skills))
			{
				pInfo[playerid][pGunSkill][2]++;
				if(pInfo[playerid][pGunSkill][2] == 100) SetPlayerSkills(playerid);
				Shot[playerid][2] = 0;
			}
		}
		case 28:
		{
		    Shot[playerid][7]++;
			if(Shot[playerid][7] >= AMMO_MICROUZI && pInfo[playerid][pGunSkill][7] < 100 && (!pInfo[playerid][pVip] && !doubling_skills))
			{
				pInfo[playerid][pGunSkill][7]++;
				if(pInfo[playerid][pGunSkill][7] == 100) SetPlayerSkills(playerid);
				Shot[playerid][7] = 0;
			}
			else if(Shot[playerid][7] >= AMMO_MICROUZI_VIP && pInfo[playerid][pGunSkill][7] < 100 && (pInfo[playerid][pVip] || doubling_skills))
			{
				pInfo[playerid][pGunSkill][7]++;
				if(pInfo[playerid][pGunSkill][7] == 100) SetPlayerSkills(playerid);
				Shot[playerid][7] = 0;
			}
		}
		case 29:
		{
		    Shot[playerid][3]++;
			if(Shot[playerid][3] >= AMMO_MP5 && pInfo[playerid][pGunSkill][3] < 100 && (!pInfo[playerid][pVip] && !doubling_skills))
			{
				pInfo[playerid][pGunSkill][3]++;
				if(pInfo[playerid][pGunSkill][3] == 100) SetPlayerSkills(playerid);
				Shot[playerid][3] = 0;
			}
			else if(Shot[playerid][3] >= AMMO_MP5_VIP && pInfo[playerid][pGunSkill][3] < 100 && (pInfo[playerid][pVip] || doubling_skills))
			{
				pInfo[playerid][pGunSkill][3]++;
				if(pInfo[playerid][pGunSkill][3] == 100) SetPlayerSkills(playerid);
				Shot[playerid][3] = 0;
			}
		}
		case 30:
		{
		    Shot[playerid][4]++;
			if(Shot[playerid][4] >= AMMO_AK47 && pInfo[playerid][pGunSkill][4] < 100 && (!pInfo[playerid][pVip] && !doubling_skills))
			{
				pInfo[playerid][pGunSkill][4]++;
				if(pInfo[playerid][pGunSkill][4] == 100) SetPlayerSkills(playerid);
				Shot[playerid][4] = 0;
			}
			else if(Shot[playerid][4] >= AMMO_AK47_VIP && pInfo[playerid][pGunSkill][4] < 100 && (pInfo[playerid][pVip] || doubling_skills))
			{
				pInfo[playerid][pGunSkill][4]++;
				if(pInfo[playerid][pGunSkill][4] == 100) SetPlayerSkills(playerid);
				Shot[playerid][4] = 0;
			}
		}
		case 31:
		{
		    Shot[playerid][5]++;
			if(Shot[playerid][5] >= AMMO_M4A1 && pInfo[playerid][pGunSkill][5] < 100 && (!pInfo[playerid][pVip] && !doubling_skills))
			{
				pInfo[playerid][pGunSkill][5]++;
				if(pInfo[playerid][pGunSkill][5] == 100) SetPlayerSkills(playerid);
				Shot[playerid][5] = 0;
			}
			else if(Shot[playerid][5] >= AMMO_M4A1_VIP && pInfo[playerid][pGunSkill][5] < 100 && (pInfo[playerid][pVip] || doubling_skills))
			{
				pInfo[playerid][pGunSkill][5]++;
				if(pInfo[playerid][pGunSkill][5] == 100) SetPlayerSkills(playerid);
				Shot[playerid][5] = 0;
			}
		}
	}
	return 1;
}

stock WriteLog(const file[],string[])
{
	new hour, minute, second, year, month, day, write[256];
	gettime(hour, minute, second);
	getdate(year, month, day);
	format(write, sizeof(write), "[Logs]/%s.log", file);
	new File:hFile = fopen(write, io_append);
	format(write, sizeof(write), "[%d.%02d.%02d|%02d:%02d:%02d] %s\r\n", day, month, year, hour, minute, second, string);
	for(new i; i < strlen(write); i ++) fputchar(hFile, write[i], false);
 	fclose(hFile);
}

stock iswheelmodel(modelid)
{
	static const wheelmodels[17] = {1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1096,1097,1098};
	for(new i = 0; i < 17; i++)
	{
		if(modelid == wheelmodels[i])
		return 1;
	}
	return 0;
}

stock IllegalCarNitroIde(carmodel)
{
	static const illegalvehs[29] = {581,523,462,521,463,522,461,448,468,586,509,481,510,472,473,493,595,484,430,453,452,446,454,590,569,537,538,570,449};
	for(new i = 0; i < 29; i++)
	{
		if(carmodel == illegalvehs[i])
		return 1;
	}
	return 0;
}

stock illegal_nos_vehicle(playerid)
{
	new carid = GetPVarInt(playerid,"VehicleEnters");
	new model = GetVehicleModel(carid);
	return IllegalCarNitroIde(model);
}

stock islegalcarmod(vehicleide, componentid)
{
	new modok = false;
	if((iswheelmodel(componentid)) || (componentid == 1086) || (componentid == 1087) || ((componentid >= 1008) && (componentid <= 1010)))
	{
		new nosblocker = IllegalCarNitroIde(vehicleide);
		if(!nosblocker) modok = true;
	}
	else
	{
		for(new i = 0; i < 48; i++)
		{
			if(legalmods[i][0] == vehicleide)
			{
				for(new j = 1; j < 22; j++)
				{
					if(legalmods[i][j] == componentid) modok = true;
				}
			}
		}
	}
	return modok;
}

stock GetPlayerID(string[])
{
    new testname[MAX_PLAYER_NAME];
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(!IsPlayerConnected(i)) continue;
		GetPlayerName(i, testname, sizeof(testname));
		if(strcmp(testname, string, true, strlen(string)) == 0) return i;
	}
	return INVALID_PLAYER_ID;
}

stock CaptureUpdate(gangid)
{
	new string[64];
	if(GangInfo[gangid][gangnumber] == 1)
	{
		format(string, sizeof(string), "%d", GangInfo[gangid][score]);
		TextDrawSetString(panel_capture_TD[5], string);
	}
	else
	{
		format(string, sizeof(string), "%d", GangInfo[gangid][score]);
		TextDrawSetString(panel_capture_TD[6], string);
	}
}

stock CaptureShow(playerid, gangid, scdgangid, status)
{
    new string[64];
	if(status == 1)
	{
	    GangZoneFlashForPlayer(playerid, GangZone[CaptureZone], gangid);
		for(new s; s < 7; s++) TextDrawShowForPlayer(playerid, panel_capture_TD[s]);
		format(string, sizeof(string), "%s", GetGangName(gangid));
		TextDrawSetString(panel_capture_TD[3], string);
		format(string, sizeof(string), "%s", GetGangName(scdgangid));
		TextDrawSetString(panel_capture_TD[4], string);
		format(string, sizeof(string), "%d", GangInfo[gangid][score]);
		TextDrawSetString(panel_capture_TD[5], string);
		format(string, sizeof(string), "%d", GangInfo[scdgangid][score]);
		TextDrawSetString(panel_capture_TD[6], string);
	}
	else if(status == 0)
	{
	    if(GetPVarInt(playerid, "settext") == 1) DeletePVar(playerid, "settext");
	    GangZoneStopFlashForPlayer(playerid, GangZone[CaptureZone]);
	//	ClearDeathMessage(playerid);
		for(new s; s < 7; s++) TextDrawHideForPlayer(playerid, panel_capture_TD[s]);
	}
}

stock CaptureStart(gangid, scdgangid)
{
	new string[64];
	foreach(new i : Player)
	{
		if(!gPlayerLogged[i]) continue;
		if(pInfo[i][pMember] == gangid || pInfo[i][pMember] == scdgangid)
		{
		    if(pInfo[i][pAdmin]) SetPVarInt(i, "settext", 1);
			for(new s; s < 7; s++) TextDrawShowForPlayer(i, panel_capture_TD[s]);
			format(string, sizeof(string), "%s", GetGangName(gangid));
			TextDrawSetString(panel_capture_TD[3], string);
			format(string, sizeof(string), "%s", GetGangName(scdgangid));
			TextDrawSetString(panel_capture_TD[4], string);
			TextDrawSetString(panel_capture_TD[5], "0");
			TextDrawSetString(panel_capture_TD[6], "0");
		}
	}
}

stock CaptureEnd(gangid, scdgangid)
{
	foreach(new i : Player)
	{
		if(pInfo[i][pMember] == gangid || pInfo[i][pMember] == scdgangid || GetPVarInt(i, "settext") == 1)
		{
			if(GetPVarInt(i, "settext") == 1) DeletePVar(i, "settext");
		    for(new s; s < 7; s++) TextDrawHideForPlayer(i, panel_capture_TD[s]);
		}
	}
}

GetVehicleState(vehicleid) return VehicleState[vehicleid];
stock IsABoat(carid) return (GetVehicleState(carid) == VEHICLE_STATE_BOAT);
stock IsAVel(carid) return (GetVehicleState(carid) == VEHICLE_STATE_VELIK);
stock IsAPlane(carid) return (GetVehicleState(carid) == VEHICLE_STATE_PLANE);
stock IsABike(carid) return (GetVehicleState(carid) == VEHICLE_STATE_BIKE);
stock IsAMoped(carid) return (GetVehicleState(carid) == VEHICLE_STATE_MOPED);
stock IsACar(carid) return (GetVehicleState(carid) == VEHICLE_STATE_CAR);

stock IsLoginInvalid(text[])
{
	if(strfind(text, "none", false) != -1) return 1;
	if(strfind(text, "'", true) != -1) return 1;
	if(strfind(text, "/", true) != -1) return 1;
	if(strfind(text, "%", true) != -1) return 1;
	if(strfind(text, "&", true) != -1) return 1;
	if(strfind(text, "*", true) != -1) return 1;
	if(strfind(text, "(", true) != -1) return 1;
	if(strfind(text, ")", true) != -1) return 1;
	if(strfind(text, "1", true) != -1) return 1;
	if(strfind(text, "2", true) != -1) return 1;
	if(strfind(text, "3", true) != -1) return 1;
	if(strfind(text, "4", true) != -1) return 1;
	if(strfind(text, "5", true) != -1) return 1;
	if(strfind(text, "6", true) != -1) return 1;
	if(strfind(text, "7", true) != -1) return 1;
	if(strfind(text, "8", true) != -1) return 1;
	if(strfind(text, "9", true) != -1) return 1;
	return 0;
}

stock IsTextInvalid(text[])
{
	if(strfind(text, "'", true) != -1) return 1;
	if(strfind(text, "%", true) != -1) return 1;
	if(strfind(text, "&", true) != -1) return 1;
	if(strfind(text, "*", true) != -1) return 1;
	if(strfind(text, "(", true) != -1) return 1;
	if(strfind(text, ")", true) != -1) return 1;
	return 0;
}

stock IsTextRussian(text[])
{
	if(strfind(text, "а", true) != -1) return 1;
	if(strfind(text, "б", true) != -1) return 1;
	if(strfind(text, "в", true) != -1) return 1;
	if(strfind(text, "г", true) != -1) return 1;
	if(strfind(text, "д", true) != -1) return 1;
	if(strfind(text, "е", true) != -1) return 1;
	if(strfind(text, "ё", true) != -1) return 1;
	if(strfind(text, "ж", true) != -1) return 1;
	if(strfind(text, "з", true) != -1) return 1;
	if(strfind(text, "и", true) != -1) return 1;
	if(strfind(text, "й", true) != -1) return 1;
	if(strfind(text, "к", true) != -1) return 1;
	if(strfind(text, "л", true) != -1) return 1;
	if(strfind(text, "м", true) != -1) return 1;
	if(strfind(text, "н", true) != -1) return 1;
	if(strfind(text, "о", true) != -1) return 1;
	if(strfind(text, "п", true) != -1) return 1;
	if(strfind(text, "р", true) != -1) return 1;
	if(strfind(text, "с", true) != -1) return 1;
	if(strfind(text, "т", true) != -1) return 1;
	if(strfind(text, "у", true) != -1) return 1;
	if(strfind(text, "ф", true) != -1) return 1;
	if(strfind(text, "х", true) != -1) return 1;
	if(strfind(text, "ц", true) != -1) return 1;
	if(strfind(text, "ч", true) != -1) return 1;
	if(strfind(text, "ш", true) != -1) return 1;
	if(strfind(text, "щ", true) != -1) return 1;
	if(strfind(text, "ъ", true) != -1) return 1;
	if(strfind(text, "ы", true) != -1) return 1;
	if(strfind(text, "ь", true) != -1) return 1;
	if(strfind(text, "э", true) != -1) return 1;
	if(strfind(text, "ю", true) != -1) return 1;
	if(strfind(text, "я", true) != -1) return 1;
	return 0;
}

stock GetVehicleType(vehicleid)
{
	switch(GetVehicleModel(vehicleid))
	{
	    case 483,534,535,536,558,559,560,561,562,565,567,575,576: return 1;
	    default: return 0;
	}
	return 0;
}

stock IsACop(playerid)
{
	switch(GetTeamID(playerid))
	{
	    case TEAM_DPS,TEAM_SFPD,TEAM_LVPD,TEAM_FBI: return 1;
	    default: return 0;
	}
	return 0;
}

stock IsAArmy(playerid)
{
	switch(GetTeamID(playerid))
	{
	    case TEAM_NG: return 1;
	    default: return 0;
	}
	return 0;
}

stock IsAGang(playerid)
{
	switch(GetTeamID(playerid))
	{
	    case TEAM_GROVE,TEAM_BALLAS,TEAM_RIFA,TEAM_AZTECAS,TEAM_VAGOS: return 1;
	    default: return 0;
	}
	return 0;
}

stock IsAMafia(playerid)
{
	switch(GetTeamID(playerid))
	{
	    case TEAM_LCN,TEAM_YAKUZA,TEAM_RM: return 1;
	    default: return 0;
	}
	return 0;
}

stock IsANews(playerid)
{
	switch(GetTeamID(playerid))
	{
	    case TEAM_LSNEWS,TEAM_SFNEWS,TEAM_LVNEWS: return 1;
	    default: return 0;
	}
	return 0;
}

stock IsAMedic(playerid)
{
	switch(GetTeamID(playerid))
	{
	    case TEAM_LSHOSPITAL,TEAM_SFHOSPITAL,TEAM_LVHOSPITAL: return 1;
	    default: return 0;
	}
	return 0;
}

stock IsAMayor(playerid)
{
	switch(GetTeamID(playerid))
	{
	    case TEAM_LSMAYOR,TEAM_SFMAYOR,TEAM_LVMAYOR: return 1;
	    default: return 0;
	}
	return 0;
}

stock SaveGZ(idx)
{
    mysql_query_string[0] = EOS;
	format(mysql_query_string, 100, "UPDATE "T_GANGZONE" SET fraction = %i WHERE id = %i", GZInfo[idx][gFrak], idx);
	mysql_tquery(dbHandle, mysql_query_string, "", "");
	return 1;
}

stock SetPlayerCriminal(playerid, killerid[], reason[], count)
{
	pInfo[playerid][pCrimes]++;
	if(pInfo[playerid][pZakon] > 1) pInfo[playerid][pZakon]--;
	strmid(pInfo[playerid][pWantedWho], killerid, 0, strlen(killerid), MAX_PLAYER_NAME);
	strmid(pInfo[playerid][pWantedReason], reason, 0, strlen(reason), 32);
	mysql_query_string[0] = EOS;
	format(mysql_query_string, 300, "UPDATE "T_ACCOUNTS" SET wanted = %i, crimes = %i, zakon = %i, wantedwho = '%s', wantedreason = '%s' WHERE id = %i", pInfo[playerid][pWanted], pInfo[playerid][pCrimes], pInfo[playerid][pZakon], pInfo[playerid][pWantedWho], pInfo[playerid][pWantedReason], pInfo[playerid][pID]);
	mysql_tquery(dbHandle, mysql_query_string, "", "");
	new string[128];
	format(string, sizeof(string), "Вы совершили преступление: %s. Сообщает: %s.", reason, killerid);
	SendClientMessage(playerid, COLOR_RED, string);
	format(string, sizeof(string), "Ваш уровень розыска: %i", pInfo[playerid][pWanted]);
	SendClientMessage(playerid, COLOR_RED, string);
	foreach(new i : Player)
	{
		if(!gPlayerLogged[i]) continue;
		if(IsACop(i))
		{
		    format(string, sizeof(string), "[Внимание] %s объявлен в розыск (+%i). Причина: %s", GetName(playerid), count, reason);
			SendClientMessage(i, COLOR_BLUE, string);
		}
	}
	return 1;
}

stock GetPlayerSpeed(playerid)
{
	new Float:ST[4];
	if(!IsPlayerInAnyVehicle(playerid)) GetPlayerVelocity(playerid,ST[0],ST[1],ST[2]);
	else GetVehicleVelocity(GetPVarInt(playerid,"VehicleEnters"),ST[0],ST[1],ST[2]);
	ST[3] = floatsqroot(floatpower(floatabs(ST[0]), 2.0) + floatpower(floatabs(ST[1]), 2.0) + floatpower(floatabs(ST[2]), 2.0)) * 100.0;
	return floatround(ST[3]);
}

stock GetVehicleSpeed(playerid)
{
	new Float:ST[4];
	GetVehicleVelocity(GetPVarInt(playerid,"VehicleEnters"),ST[0],ST[1],ST[2]);
	ST[3] = floatsqroot(floatpower(floatabs(ST[0]), 2.0) + floatpower(floatabs(ST[1]), 2.0) + floatpower(floatabs(ST[2]), 2.0)) * 100.0;
	return floatround(ST[3]);
}
stock GetVehicleSpeedEx(vehicleid, get3d) {
        new Float:x, Float:y, Float:z;
        GetVehicleVelocity(vehicleid, x, y, z);
        return SpeedCheck(x, y, z, 100.0, get3d);
}
stock PlayerTimer()
{
	new hour, minute, second;
	gettime(hour, minute, second);

	new Float: FloatParam;
	new Float: TelePos[3];

    foreach(new i : Player)
	{
	    if(!gPlayerLogged[i])
	    {
		    SetPVarInt(i, "login_timer", GetPVarInt(i, "login_timer") - 1);
	  		if(GetPVarInt(i, "login_timer") == 0)
			{
				SendClientMessage(i, COLOR_RED, LoggedTimeOver);
			    SKick(i, 21122);
			}
		}

		if(!gPlayerLogged[i]) continue;

		if(hour == 0 && minute == 0 && second == 0)
		{
		    gOnlinePlayer[i][1] = gOnlinePlayer[i][0];
			gOnlinePlayerAFK[i][1] = gOnlinePlayerAFK[i][0];
			gOnlinePlayer[i][0] = 0;
			gOnlinePlayerAFK[i][0] = 0;
		}

		new weaponid = GetPlayerWeapon(i);
	    if(!WeaponInfo[i][weaponid] && weaponid != 40 && weaponid > 0 && weaponid != 46)
		{
			SetPlayerAmmoEx(i, weaponid, 0);
	  		ToCheat(i, 8129);
	    }

	    if(!CheckOutMoney[i])
		{
			if(pInfo[i][pCash] < GetPlayerMoney(i))
			{
			    ResetPlayerMoney(i);
			    GivePlayerMoney(i,pInfo[i][pCash]);
			}
		}
		else CheckOutMoney[i] = false;

		if(!PlayerUseHeal[i])
		{
			GetPlayerHealth(i, FloatParam);
			if(pInfo[i][pHeal] < FloatParam) SetPlayerHealth(i, pInfo[i][pHeal]);
			else pInfo[i][pHeal] = FloatParam;
		}

		if(PlayerLie[i] && IsPlayerInDynamicArea(i, AreaInfo[arGreenZone][16] ))
	    {
	       	if(pInfo[i][pHeal] < 99.00)
	       	{
				if(pInfo[i][pVip])
				{
				    GameTextForPlayer(i,"~w~+ 3 HP",300,4);
					SetHealth(i,pInfo[i][pHeal] + 3.0);
				}
				else
				{
				    GameTextForPlayer(i,"~w~+ 1 HP",300,4);
				    SetHealth(i,pInfo[i][pHeal] + 1.0);
				}
				PlayerPlaySound(i, 17803, 0.0, 0.0, 0.0);
			}
			else
			{
			   BedDefault(i);
			   pInfo[i][pCity] = 0;
			   PlayerDied[i] = false;
			   SendClientMessage(i, COLOR_GREEN, "Курс лечения пройден!");
			}
		}
  		if(PlayerLie[i] && IsPlayerInDynamicArea(i, AreaInfo[arGreenZone][30] ))
	    {
	       	if(pInfo[i][pHeal] < 99.00)
	       	{
				if(pInfo[i][pVip])
				{
				    GameTextForPlayer(i,"~w~+ 3 HP",300,4);
					SetHealth(i,pInfo[i][pHeal] + 3.0);
				}
				else
				{
				    GameTextForPlayer(i,"~w~+ 1 HP",300,4);
				    SetHealth(i,pInfo[i][pHeal] + 1.0);
				}
				PlayerPlaySound(i, 17803, 0.0, 0.0, 0.0);
			}
			else
			{
			   BedDefault(i);
			   pInfo[i][pCity] = 0;
			   PlayerDied[i] = false;
			   SendClientMessage(i, COLOR_GREEN, "Курс лечения пройден!");
			}
		}

		GetPlayerArmour(i, FloatParam);
		if(PlayerArmour[i] < FloatParam) SetPlayerArmour(i, PlayerArmour[i]);
		else PlayerArmour[i] = FloatParam;

	    GetPlayerVelocity(i,TelePos[0],TelePos[1],TelePos[2]);
	    if(TelePos[0] > 1.7 || TelePos[1] > 1.7)
	    {
	   		SetPVarInt(i, "Pizdorvanka", GetPVarInt(i, "Pizdorvanka") + 1);
	      	if(GetPVarInt(i, "Pizdorvanka") > 2)
	      	{
	     		SetPVarInt(i, "Pizdorvanka", 0);
			    ToCheat(i, 1532);
	      	}
	   	}

		if(GetPVarInt(i,"AC_ANTIFLOOD") >= gettime()+15) return ToCheat(i, 3299);

	 	new vehicleid = GetPVarInt(i,"VehicleEnters");

	   	if(gMusicActive && !gActiveMusic[i] && IsPlayerInRangeOfPoint(i, gMusicDistance, gMusicPosX, gMusicPosY, gMusicPosZ))
	    {
			PlayAudioStreamForPlayer(i, gMusicURL, gMusicPosX, gMusicPosY, gMusicPosZ, gMusicDistance, 1);
			gActiveMusic[i] = true;
			SendClientMessage(i, COLOR_GREEN, "Вы попали в зону проигрывания музыки.");
			SendClientMessage(i, COLOR_GREEN, "Во избежании недоразумений, сделайте пожалуйста громкость колонок тише.");
			SendClientMessage(i, COLOR_GREEN, "В песне, возможно, будет использована нецензурная брань.");
	    }
	    if(gMusicActive && gActiveMusic[i] && !IsPlayerInRangeOfPoint(i, gMusicDistance, gMusicPosX, gMusicPosY, gMusicPosZ))
	    {
			gActiveMusic[i] = false;
			StopAudioStreamForPlayer(i);
			SendClientMessage(i, COLOR_RED, "Вы покинули зону прослушивания музыки!");
	    }

	    if(cMusicActive && !cActiveMusic[i] && IsPlayerInRangeOfPoint(i, cMusicDistance, cMusicPosX, cMusicPosY, cMusicPosZ))
	    {
			PlayAudioStreamForPlayer(i, cMusicURL, cMusicPosX, cMusicPosY, cMusicPosZ, cMusicDistance, 1);
			cActiveMusic[i] = true;
			SendClientMessage(i, COLOR_GREEN, "Вы попали в зону проигрывания музыки.");
			SendClientMessage(i, COLOR_GREEN, "Во избежании недоразумений, сделайте пожалуйста громкость колонок тише.");
			SendClientMessage(i, COLOR_GREEN, "В песне, возможно, будет использована нецензурная брань.");
	    }
	    if(cMusicActive && cActiveMusic[i] && !IsPlayerInRangeOfPoint(i, cMusicDistance, cMusicPosX, cMusicPosY, cMusicPosZ))
	    {
			cActiveMusic[i] = false;
			StopAudioStreamForPlayer(i);
			SendClientMessage(i, COLOR_RED, "Вы покинули зону прослушивания музыки!");
	    }

	    if(!IsACop(i) && !IsAArmy(i) && !IsAMayor(i) && !gAdminLogged[i])
		{
			for(new z; z < sizeof(AreaInfo[arGreenZone]); z++)
			{
			    if(IsPlayerInDynamicArea(i, AreaInfo[arGreenZone][z]))
			    {
			     	if(GetPlayerState(i) == PLAYER_STATE_ONFOOT && weaponid > 0 && weaponid != 43)
					{
					    SetPlayerArmedWeapon(i, 0);
					}
			    }
			}
		}

        if(GetPVarInt(i, "AFK_Tick") > 10000)
		{
			SetPVarInt(i, "AFK_Tick", 1);
			SetPVarInt(i, "AFK_Check", 0);
		}
		if(GetPVarInt(i, "AFK_Use") == 1 && GetPVarInt(i, "AFK_Time") <= 2)
		{
			SetPVarInt(i, "AFK_Use", 0);
		}
		if(GetPVarInt(i, "AFK_Check") < GetPVarInt(i, "AFK_Tick") && GetPlayerState(i))
		{
			SetPVarInt(i, "AFK_Check", GetPVarInt(i, "AFK_Tick"));
			SetPVarInt(i, "AFK_Time", 0);
		}
		if(GetPVarInt(i, "AFK_Check") == GetPVarInt(i, "AFK_Tick") && GetPlayerState(i))
		{
			SetPVarInt(i, "AFK_Time", GetPVarInt(i, "AFK_Time") + 1);
			if(GetPVarInt(i, "AFK_Time") > 2)
			{
				new CB[32];
				Convert(GetPVarInt(i, "AFK_Time")-2, CB);
				strins(CB, "Игрок на паузе: ", 0);
				SetPlayerChatBubble(i, CB, COLOR_YELLOW, 10.0, 1600);
				SetPVarInt(i, "AFK_Use", 1);
			}
			if(GetPVarInt(i, "AFK_Time") >= 1200 && !pInfo[i][pAdmin])
			{
				SendClientMessage(i, COLOR_RED, "Вы были кикнуты т.к находились долгое время в АФК");
				SKick(i, 1828);
			}
		}

		if(pInfo[i][Spectating][1] != INVALID_PLAYER_ID)
		{
			new Float:values[3];
			GetPlayerHealth(pInfo[i][Spectating][0], values[0]);
			GetPlayerArmour(pInfo[i][Spectating][0], values[1]);
			GetVehicleHealth(GetPVarInt(pInfo[i][Spectating][0],"VehicleEnters"), values[2]);
			stringer[0] = EOS;
			format(stringer, sizeof(stringer), "%s~n~ID: %d~n~Ping: %d~n~HP: %.1f~n~Armour: %.1f~n~Speed: %d~n~CarHP: %.1f~n~Ammo: %i:%i~n~Warns: %d~n~Cash: %d",
			GetName(pInfo[i][Spectating][0]), pInfo[i][Spectating][0], GetPlayerPing(pInfo[i][Spectating][0]),
			values[0], values[1], GetPlayerSpeed(pInfo[i][Spectating][0]), values[2],
			GetPlayerWeapon(pInfo[i][Spectating][0]), GetPlayerAmmo(pInfo[i][Spectating][0]),
			pInfo[pInfo[i][Spectating][0]][pWarn], pInfo[pInfo[i][Spectating][0]][pCash]);
			PlayerTextDrawSetString(pInfo[i][Spectating][1], pTemp[pInfo[i][Spectating][1]][SpecTxt], stringer);
		}

		if(pInfo[i][pSettings] & setShowKeis)
		{
			if(GetCash(i) >= 1000000)
			{
			    if(!GetPVarInt(i, "keis"))
			    {
		        	SetPlayerAttachedObject(i,8,1210,5,0.299999,0.099999,0.000000,0.000000,-83.000000,0.000000,1.000000,1.000000,1.000000);
		        	SetPVarInt(i, "keis", true);
				}
				if(GetPVarInt(i, "keis"))
				{
				    if(weaponid > 0 || GetPlayerState(i) != PLAYER_STATE_ONFOOT || pTemp[i][pWork])
				    {
				        if(IsPlayerAttachedObjectSlotUsed(i, 8)) RemovePlayerAttachedObject(i, 8);
				    }
				    else
				    {
				        if(!IsPlayerAttachedObjectSlotUsed(i, 8)) SetPlayerAttachedObject(i,8,1210,5,0.299999,0.099999,0.000000,0.000000,-83.000000,0.000000,1.000000,1.000000,1.000000);
				    }
				}
			}
			else if(GetCash(i) < 1000000)
			{
				if(IsPlayerAttachedObjectSlotUsed(i, 8))
				{
				    if(GetPVarInt(i, "keis"))
				    {
		      			RemovePlayerAttachedObject(i, 8);
		      			DeletePVar(i, "keis");
					}
				}
			}
		}

		if(TazerTime[i] > 0)
		{
		    TazerTime[i]--;
		    ApplyAnimation(i, "CRACK", "crckdeth2", 4.0, 0, 1, 1, 1, 0, 1);
			TogglePlayerControllable(i, 0);
		    if(TazerTime[i] == 0)
			{
		    	SetPVarInt(i, "Tazer", 0);
				ApplyAnimation(i, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0, 0);
				TogglePlayerControllable(i, 1);
				TazerTime[i] = 0;
			}
		}

		if(kostiKos[i] > 0)
		{
		    kostiKos[i]--;
		    CarryAnim(i);
		    if(kostiKos[i] == 0)
		    {
		        if(IsPlayerAttachedObjectSlotUsed(i,7)) RemovePlayerAttachedObject(i,7);
		        ApplyAnimation(i, "BD_FIRE", "BD_Fire1", 4.1, 0, 0, 0, 0, 1, 1);
		        kostiKos[i] = 0;
		    }
		}

		if(HealmeObject[i] > 0)
		{
		    HealmeObject[i]--;
		    if(HealmeObject[i] == 0)
		    {
		        if(IsPlayerAttachedObjectSlotUsed(i,1)) RemovePlayerAttachedObject(i,1);
		        if(IsPlayerAttachedObjectSlotUsed(i,8)) RemovePlayerAttachedObject(i,8);
		        HealmeObject[i] = 0;
		    }
		}

		armyjobcheck++;
		if(armyjobcheck == 60 && pTemp[i][pArmyJob])
		{
		    armyjobcheck = 0;
			pInfo[i][pPayCheck] += 50;
			MysqlUpdatePlayerInt(i,"paycheck",pInfo[i][pPayCheck]);
			GameTextForPlayer(i,"~g~+50$",2000,1);
		}

		if(pInfo[i][pWarn] > 0 && pInfo[i][pTimeToLastWarn] + (3600 * 24 * 10) < gettime())
		{
		    pInfo[i][pWarn]--;
		    pInfo[i][pTimeToLastWarn] = gettime();
		    SendClientMessage(i, COLOR_GREEN, "Прошло 10 дней. Одно предупреждение снято");
		}

		if(GetPlayerSpeed(i) > 1400) ToCheat(i, 2123);

		if(ACInfo[i][acCheckMapTP] == 1)
		{
			new Float:dis = GetPlayerDistanceFromPoint(i, ACInfo[i][acMapTP][0], ACInfo[i][acMapTP][1], ACInfo[i][acMapTP][2]);
			if(dis < 5.0)
			{
				new Float:disd = GetPlayerDistanceFromPoint(i, ACInfo[i][acLastOnFootPos][0], ACInfo[i][acLastOnFootPos][1], ACInfo[i][acLastOnFootPos][2]);
				if(disd > 25.0) ToCheat(i, 1942);
			}
			ACInfo[i][acCheckMapTP] = 0;
		}
		GetPlayerPos(i, ACInfo[i][acLastOnFootPos][0], ACInfo[i][acLastOnFootPos][1], ACInfo[i][acLastOnFootPos][2]);

		if(GetPVarInt(i, "TimeCar") > 0) SetPVarInt(i, "TimeCar", GetPVarInt(i, "TimeCar") - 1);

		pInfo[i][pTimeHour]++;
		gOnlinePlayer[i][0]++;
		if(GetPVarInt(i, "AFK_Time") > 1) gOnlinePlayerAFK[i][0]++;
		if(pInfo[i][pAdmin] && gAdminLogged[i]) AdminInfo[i][admPlayTime]++;
	    if(Ether[i]) pTemp[i][pLiveTime]++;

		if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
		{
			new model = GetVehicleModel(vehicleid);
			if(GetVehicleSpeed(i) > VehStats[model-400][vMaxSpeed]+30 && model != 537 && model != 538 && !IsABoat(vehicleid) && !IsAPlane(vehicleid))
			{
				pTemp[i][pSpeedhack][0]++;
				if(pTemp[i][pSpeedhack][1] > 1)
				{
				    if(AntiCheatMessage[i] == 0)
					{
					    new string[128];
						format(string, sizeof(string), "[A] %s[%d] возможно использует SpeedHack (%d|%d)", GetName(i), i, GetVehicleSpeed(i), VehStats[model-400][vMaxSpeed]);
						SendAdminMessage(COLOR_ORANGE, string);
						WriteLog("CheatLog", string);
					}
					AntiCheatMessage[i] = 10;
				}
				if(pTemp[i][pSpeedhack][0] >= 5)
				{
					pTemp[i][pSpeedhack][0] = 0;
					pTemp[i][pSpeedhack][1] += 16;
				}
			}
			if(GetVehicleSpeed(i) > VehStats[model-400][vMaxSpeed]+45 && model != 537 && model != 538 && !IsABoat(vehicleid) && !IsAPlane(vehicleid))
			{
				pTemp[i][pSpeedhack][0]++;
				if(pTemp[i][pSpeedhack][1] > 1)// ToCheat(i, 1188);
				if(pTemp[i][pSpeedhack][0] >= 5)
				{
					pTemp[i][pSpeedhack][0] = 0;
					pTemp[i][pSpeedhack][1] += 16;
				}
			}
		}

		if((GetPlayerWeapon(i) != WEAPON_PARACHUTE && GetPlayerState(i) == PLAYER_STATE_ONFOOT && GetPlayerSpeed(i) > 25)
 		&& (GetPlayerSurfingObjectID(i) == INVALID_OBJECT_ID && GetPlayerSurfingVehicleID(i) == INVALID_VEHICLE_ID))
	    {
	        new Float: health, Float: velocity_pos_xx, Float: velocity_pos_yy, Float: velocity_pos_zz;
	        GetPlayerVelocity(i, velocity_pos_xx, velocity_pos_yy, velocity_pos_zz);
         	if(velocity_pos_zz > -0.2 && (floatcmp(floatabs(velocity_pos_xx), 0.3) == 1
	        || floatcmp(floatabs(velocity_pos_yy), 0.3) == 1))
	        {
				GetPlayerHealth(i, health);
	            SetTimerEx("@CheckSurfing", 2100, false, "if", i, health, vehicleid);
	        }
	    }

		if(IsPlayerInRangeOfPoint(i,1.0,1314.1771,1619.0148,759.3867))
		{
			if(IsAArmy(i) || IsAGang(i)) @StealMats(i);
		}

		if(GetPlayerSpecialAction(i) == SPECIAL_ACTION_USEJETPACK) return ToCheat(i, 1702);

		if(Mobile[i] != -1 && !EtherCalled[i])
		{
			SetPVarInt(i, "CallTime", GetPVarInt(i, "CallTime") + 1);
			if(GetPVarInt(i, "CallTime") >= 10)
			{
				if(pInfo[i][pBank] > PHONE_PRICE)
				{
					pInfo[i][pBank] -= PHONE_PRICE;
					SetPVarInt(i, "CallTime", 0);
				}
				else
				{
					new callerid = Mobile[i];
					SendClientMessage(callerid, COLOR_GRAD2, "Абонент положил трубку");
					SetPlayerSpecialAction(callerid,SPECIAL_ACTION_STOPUSECELLPHONE);
					CellTime[callerid] = -1;
					CellTime[i] = -1;
					SendClientMessage(i,  COLOR_GRAD2, "Недостаточно денег на мобильном счету!");
					Mobile[i] = -1;
					SetPlayerSpecialAction(i,SPECIAL_ACTION_STOPUSECELLPHONE);
					DeletePVar(i, "CallTime");
					DeletePVar(callerid, "CallTime");
				}
			}
		}

		if(GetPVarInt(i, "TimeTaxi") > 0)
		{
			SetPVarInt(i, "TimeTaxi", GetPVarInt(i, "TimeTaxi") - 1);
			if(GetPVarInt(i, "TimeTaxi") == 0)
			{
				if(GetCash(i) > GetPVarInt(i, "TaxiPrice"))
				{
				    new string[32];
					format(string, sizeof(string), "~r~-%i$", GetPVarInt(i, "TaxiPrice"));
					GameTextForPlayer(i, string, 5000, 1);
					if(doubling_salary) format(string, sizeof(string), "~b~+%i$", GetPVarInt(i, "TaxiPrice")*2);
					else format(string, sizeof(string), "~b~+%i$", GetPVarInt(i, "TaxiPrice"));
					GameTextForPlayer(GetPVarInt(i, "PlayerTaxi"), string, 5000, 1);
					TransferMoney(i, -1, GetPVarInt(i, "TaxiPrice"));
					if(doubling_salary) pInfo[GetPVarInt(i, "PlayerTaxi")][pPayCheck] += GetPVarInt(i, "TaxiPrice")*2;
					else pInfo[GetPVarInt(i, "PlayerTaxi")][pPayCheck] += GetPVarInt(i, "TaxiPrice");
					SetPVarInt(i, "TimeTaxi", 30);
					SetPVarInt(GetPVarInt(i, "PlayerTaxi"), "TaxiMoney", GetPVarInt(GetPVarInt(i, "PlayerTaxi"), "TaxiMoney") + GetPVarInt(i, "TaxiPrice"));
				}
				else
				{
					SendClientMessage(i, COLOR_GREY, NoMoney);
					RemovePlayerFromVehicle(i);
				}
			}
		}

		if(EtherCalled[i])
		{
		    new newsid = pInfo[i][pNews]-1;
			if(pInfo[i][pPhoneBalance] > CallPrice[newsid])
			{
				pInfo[i][pPhoneBalance] -= CallPrice[newsid];
				switch(newsid)
				{
				    case 0: FracBank[8] += CallPrice[newsid];
				    case 1: FracBank[9] += CallPrice[newsid];
				    case 2: FracBank[10] += CallPrice[newsid];
				}
			}
			else
			{
				new callerid = Mobile[i];
				SendClientMessage(callerid, COLOR_GRAD2, "Абонент положил трубку");
				SetPlayerSpecialAction(callerid,SPECIAL_ACTION_STOPUSECELLPHONE);
				CellTime[callerid] = -1;
				CellTime[i] = -1;
				Mobile[callerid] = -1;
				if(EtherCalled[i]) EtherCalled[i] = false;
				if(EtherCalled[callerid]) EtherCalled[callerid] = false;
				SendClientMessage(i, COLOR_GRAD2, "Недостаточно денег на мобильном счету!");
				Mobile[i] = -1;
				SetPlayerSpecialAction(i,SPECIAL_ACTION_STOPUSECELLPHONE);
			}
		}

		if(pInfo[i][pJail] > 0)
		{
			pInfo[i][pJailTime]--;
			if(!pInfo[i][pJailTime])
			{
			    switch(pInfo[i][pJail])
			    {
			        case 1:
			        {
						SetPlayerPos(i, 1552.704467,-1675.532470,16.195312);
						SetPlayerFacingAngle(i, 13.8672);
					}
			        case 2:
           			{
						SetPlayerPos(i, -1605.4390,712.8561,13.8085);
						SetPlayerFacingAngle(i, 359.2197);
					}
			        case 3:
			        {
						SetPlayerPos(i, 2337.5330,2454.2747,14.9688);
						SetPlayerFacingAngle(i, 116.8034);
					}
			        case 4: SpawnPlayerEx(i);
			    }
			    SendClientMessage(i, COLOR_GRAD1, "Время заключения истекло, теперь Вы свободны");
				GameTextForPlayer(i, "~g~freedom", 5000, 1);
				pInfo[i][pJail] = 0;
				if(!GetString(pInfo[i][pJailReason], "None"))
				{
					strmid(pInfo[i][pJailReason], "None", 0, strlen("None"), 32);
					MysqlUpdatePlayerStr(i, "jailreason", pInfo[i][pJailReason]);
				}
				SetPlayerInterior(i, 0);
				SetPlayerVirtualWorld(i, 0);
			}
		}

		if(pInfo[i][pMuted] > 0)
		{
			pInfo[i][pMuted]--;
			if(!pInfo[i][pMuted])
			{
			    if(!GetString(pInfo[i][pMutedReason], "None"))
				{
					strmid(pInfo[i][pMutedReason], "None", 0, strlen("None"), 32);
					MysqlUpdatePlayerStr(i, "mutereason", pInfo[i][pMutedReason]);
				}
				SendClientMessage(i, COLOR_GREEN, "Блокировка чата автоматически снята сервером");
				SendClientMessage(i, COLOR_WHITE, "Соблюдайте правила сервера, чтобы избежать наказаний!");
			}
		}

		if(!pInfo[i][pAdmin])
		{
		    new speed = GetPlayerSpeed(i);
		    if(!speed) SetPVarInt(i, "HungerTime", GetPVarInt(i, "HungerTime") + 1);
		    else SetPVarInt(i, "HungerTime", GetPVarInt(i, "HungerTime") + 2);
		    if(pInfo[i][pHunger] > 0)
		    {
				if(GetPVarInt(i, "HungerTime") >= 240)
				{
					SetPVarInt(i, "HungerTime", 0);
					pInfo[i][pHunger] -= (pInfo[i][pVip]) ? (1) : (2);
					SetHunger(i, pInfo[i][pHunger]);
					switch(pInfo[i][pHunger])
					{
					    case 1,5,10,15: SendClientMessage(i, COLOR_YELLOW, "[Информация] {FFFFFF}Вы проголодались. Посетите закусочную!");
					}
				}
			}
			else
			{
			    new Float:shealth;
			    GetPlayerHealth(i, shealth);
				if(shealth > 0)
				{
					SetPVarInt(i, "HealthTime", GetPVarInt(i, "HealthTime") + 1);
					if(GetPVarInt(i, "HealthTime") >= 240)
					{
						SetPVarInt(i, "HealthTime", 0);
					    SetHealth(i, (pInfo[i][pImprove][0] == 1) ? (shealth-1.0) : (shealth-2.0));
						switch(shealth)
						{
						    case 1,5,10,15: SendClientMessage(i, COLOR_YELLOW, "[Информация] {FFFFFF}Ваше здоровье ухудшилось. Посетите больницу!");
						}
					}
				}
			}
		}

		if(GetPlayerDrunkLevel(i) > 0)
		{
			SetPVarInt(i, "DrunkTime", GetPVarInt(i, "DrunkTime") + 1);
			if(GetPVarInt(i, "DrunkTime") >= 100)
			{
				SetPlayerDrunkLevel(i, GetPlayerDrunkLevel(i) - 1000);
				SetPVarInt(i, "DrunkTime", 0);
			}
		}

		if(DrivingTestTime[i] > 0)
		{
			if(GetPlayerState(i) != 2)
			{
				DrivingTestTime[i]--;
				new string[12];
				format(string,12,"~r~%d",DrivingTestTime[i]);
				GameTextForPlayer(i, string, 2000, 6);
				if(DrivingTestTime[i] == 0)
				{
				    DrivingTestTime[i] = 0;
					SendClientMessage(i, COLOR_RED, "Время истекло, вы провалили экзамен на управление наземным транспортом");
					DeletePVar(i, "DrivingTest");
					DeletePVar(i, "DrivingTestHealth");
					DeletePVar(i, "DrivingTestError");
				}
			}
		}

		if(FlyTestTime[i] > 0)
		{
			if(GetPlayerState(i) != 2)
			{
				FlyTestTime[i]--;
				new string[12];
				format(string,12,"~r~%d",FlyTestTime[i]);
				GameTextForPlayer(i, string, 2000, 6);
				if(FlyTestTime[i] == 0)
				{
				    FlyTestTime[i] = 0;
					SendClientMessage(i, COLOR_RED, "Время истекло, вы провалили экзамен на управление воздушным транспортом");
					DeletePVar(i, "FlyTest");
					DeletePVar(i, "FlyTestHealth");
					DeletePVar(i, "FlyTestError");
				}
			}
		}

		if(WaterTestTime[i] > 0 && GetPVarInt(i, "WaterTestTimeOn"))
		{
   			if(GetPlayerState(i) != 2)
			{
				WaterTestTime[i]--;
				new string[12];
				format(string,12,"~r~%d",WaterTestTime[i]);
				GameTextForPlayer(i, string, 2000, 6);
				if(WaterTestTime[i] == 0)
				{
				    WaterTestTime[i] = 0;
					SendClientMessage(i, COLOR_RED, "Время истекло, вы провалили экзамен на управление водным транспортом");
					DeletePVar(i, "WaterTest");
					DeletePVar(i, "WaterTestTimeOn");
					DeletePVar(i, "WaterTestHealth");
					DeletePVar(i, "WaterTestError");
				}
			}
		}

		if(GetPlayerSurfingVehicleID(i) != INVALID_VEHICLE_ID)
		{
			new surfing_vehicleid = GetPlayerSurfingVehicleID(i);
			new model = GetVehicleModel(surfing_vehicleid);
			switch(model)
			{
				case 430,446,452,453,454,472,473,484,493,595,444,543,554,478: { return 1; }
				default: { }
			}
			new Float:x, Float:y, Float:z;
			GetPlayerPos(i, x, y, z);
			x -= 1.5;
			SetPlayerPos(i, x, y, z);
		}

		if(CellTime[i] > -1)
		{
			CellTime[i]++;
			if(Mobile[Mobile[i]] == -1 && CellTime[i] == 5)
			{
				CellTime[i] = 0;
				DoAction(Mobile[i], "Звонит мобильный телефон");
			}
		}

		if(pTemp[i][pWork] == 1 && pTemp[i][pMinerStatus]) if(pTemp[i][pMineAntiflood] > 0) pTemp[i][pMineAntiflood]--;
		if(pTemp[i][pWork] == 2 && pTemp[i][pLessStatus]) if(pTemp[i][pLessAntiflood] > 0) pTemp[i][pLessAntiflood]--;
		if(TransferReset[i] > 0) TransferReset[i]--;
		if(UnMaskReset[i] > 0) UnMaskReset[i]--;
		if(pTemp[i][pAbletoGun]) pTemp[i][pAbletoGun] --;
		if(AntiCheatMessage[i] != 0) AntiCheatMessage[i] --;
	}
	return 1;
}

stock GiveBizMoney(idx, cost, prod)
{
	if(BizPayForDay[idx] > 1000000) return 0;
	if(!BizInfo[idx][bProduct]) return 0;
    if(prod > 0)
	{
		BizInfo[idx][bProduct] -= prod;
    	MysqlUpdateBizInt(idx, "product", BizInfo[idx][bProduct]);
 	}
	BizInfo[idx][bMoney] += cost;
	MysqlUpdateBizInt(idx, "money", BizInfo[idx][bMoney]);
	BizPayForDay[idx] += cost;
	BizPay[idx] += cost;
	return 1;
}

stock GiveBankMoney(playerid, money, reason[] = "None")
{
    new string[100];
	pInfo[playerid][pBank] += (money);
	format(string,sizeof(string),"[%s] [%s]: [%d$] [%d$] [%s]",pInfo[playerid][pIP],GetName(playerid),money,pInfo[playerid][pBank],reason);
	WriteLog("BankMoneyLog",string);
	return 1;
}

stock TransferMoney(playerid, toplayerid, money, reason[] = "None", status = 0)
{
    if(GetPlayerMoney(playerid) < 0) ResetPlayerMoney(playerid);
	if(GetPlayerMoney(toplayerid) < 0) ResetPlayerMoney(toplayerid);
	if(toplayerid >= 0)
	{
	    if(status > 0)
		{
		    new string[100];
			format(string,sizeof(string),"[%s] [%s]: [+%d$] [%d$] [%s]",pInfo[toplayerid][pIP],GetName(toplayerid),money,pInfo[toplayerid][pCash],reason);
			WriteLog("MoneyLog",string);
		}
	    GivePlayerMoney(toplayerid, money);
		pInfo[toplayerid][pCash] = pInfo[toplayerid][pCash] + money;
		CheckOutMoney[toplayerid] = true;
	}
	if(playerid >= 0)
	{
	    if(status > 0)
		{
		    new string[100];
			format(string,sizeof(string),"[%s] [%s]: [-%d$] [%d$] [%s]",pInfo[playerid][pIP],GetName(playerid),money,pInfo[playerid][pCash],reason);
			WriteLog("MoneyLog",string);
		}
		GivePlayerMoney(playerid, -money);
		pInfo[playerid][pCash] = pInfo[playerid][pCash] - money;
		CheckOutMoney[playerid] = true;
	}
}

stock ResetPlayerMoneyEx(playerid)
{
	pInfo[playerid][pCash] = 0;
	ResetPlayerMoney(playerid);
}

stock PreloadAnimLib(playerid, animlib[])
{
	ApplyAnimation(playerid,animlib,"null",0.0,0,0,0,0,0);
	return 0;
}

stock ToCheat(playerid, accode = 0)
{
	if(playerid == INVALID_PLAYER_ID) return 1;
	stringer[0] = EOS;
	if(pInfo[playerid][pAdmin] != ADM_NONE)
	{
	    format(stringer, 128, "[A] Античит попытался Вас кикнуть {F04245}(ac-code %d)", accode);
		return SendClientMessage(playerid, COLOR_GREY, stringer);
	}
    switch(accode)
    {
        case 1532: format(stringer, 128, "[A] %s[%d] кикнут за Раскидывание #%i", GetName(playerid), playerid, accode);
        case 2123: format(stringer, 128, "[A] %s[%d] кикнут за быстрое перемещение (%d > 1400) #%i", GetName(playerid), playerid, GetPlayerSpeed(playerid), accode);
        case 9154, 18, 12, 62, 116, 117, 118: format(stringer, 128, "[A] %s[%d] кикнут за Crasher #%i", GetName(playerid), playerid, accode);
        case 4123: format(stringer, 128, "[A] %s[%d] кикнут за RapidFare #%i", GetName(playerid), playerid, accode);
        case 2746: format(stringer, 128, "[A] %s[%d] кикнут за SelfKill #%i", GetName(playerid), playerid, accode);
        case 2747: format(stringer, 128, "[A] %s[%d] кикнут за KillWithoutPlayer #%i", GetName(playerid), playerid, accode);
        case 2748, 2749, 5244, 5255: format(stringer, 128, "[A] %s[%d] кикнут за FakeKill #%i", GetName(playerid), playerid, accode);
        case 8881: format(stringer, 128, "[A] %s[%d] кикнут за MGInVeh #%i", GetName(playerid), playerid, accode);
        case 1132: format(stringer, 128, "[A] %s[%d] кикнут за CarFlood #%i", GetName(playerid), playerid, accode);
		case 3299: format(stringer, 128, "[A] %s[%d] кикнут за CarEnterFlood #%d", GetName(playerid), playerid, accode);
		case 3278: format(stringer, 128, "[A] %s[%d] кикнут за DriveNoRent #%d", GetName(playerid), playerid, accode);
        case 1701: format(stringer, 128, "[A] %s[%d] кикнут за Spectating #%i", GetName(playerid), playerid, accode);
        case 6344, 6345: format(stringer, 128, "[A] %s[%d] кикнут за TuneCar #%i", GetName(playerid), playerid, accode);
        case 1442: format(stringer, 128, "[A] %s[%d] кикнут за CarColorChange #%i", GetName(playerid), playerid, accode);
        case 8128, 8129, 8130, 8131: format(stringer, 128, "[A] %s[%d] кикнут за GunCheat #%i", GetName(playerid), playerid, accode);
        case 1188:
		{
		    new vehicleid = GetPVarInt(playerid,"VehicleEnters");
		    new model = GetVehicleModel(vehicleid);
			format(stringer, 128, "[A] %s[%d] кикнут за SpeedHack (%d|%d) #%i", GetName(playerid), playerid, GetVehicleSpeed(playerid), VehStats[model-400][vMaxSpeed], accode);
		}
        case 1702: format(stringer, 128, "[A] %s[%d] кикнут за JetPack #%i", GetName(playerid), playerid, accode);
        case 5214,5215: format(stringer, 128, "[A] %s[%d] кикнут за Teleport #%i", GetName(playerid), playerid, accode);
        case 5213: format(stringer, 128, "[A] %s[%d] кикнут за Metla #%i", GetName(playerid), playerid, accode);
        default: format(stringer, 128, "[A] %s[%d] кикнут. Код античита: #%i", GetName(playerid), playerid, accode);
    }
    SendAdminMessage(COLOR_ORANGE, stringer);
    WriteLog("CheatLog",stringer);
    format(stringer, 300, "{FFFFFF}Обнаружено использование чит-программ {F04245}(ac-code %d)\n{FFFFFF}Если Вы считаете, что Вас кикнуло ложно, то сообщите об этом на форум\n{AFAFAF}Форум находится по ссылке "SERVER_FORUM" (в техническом разделе)", accode);
    ShowPlayerDialog(playerid, dNull, DIALOG_STYLE_MSGBOX, "{FFCC00}Система безопасности", stringer, "Закрыть", "");
	Kick(playerid);
	return 1;
}

stock SaveVehicleTuning(playerid)
{
	pInfo[playerid][cVehcoms][0] = GetVehicleComponentInSlot(pTemp[playerid][pCarPlayerID], CARMODTYPE_SPOILER);
	pInfo[playerid][cVehcoms][1] = GetVehicleComponentInSlot(pTemp[playerid][pCarPlayerID], CARMODTYPE_HOOD);
	pInfo[playerid][cVehcoms][2] = GetVehicleComponentInSlot(pTemp[playerid][pCarPlayerID], CARMODTYPE_ROOF);
	pInfo[playerid][cVehcoms][3] = GetVehicleComponentInSlot(pTemp[playerid][pCarPlayerID], CARMODTYPE_SIDESKIRT);
	pInfo[playerid][cVehcoms][4] = GetVehicleComponentInSlot(pTemp[playerid][pCarPlayerID], CARMODTYPE_LAMPS);
	pInfo[playerid][cVehcoms][5] = GetVehicleComponentInSlot(pTemp[playerid][pCarPlayerID], CARMODTYPE_NITRO);
	pInfo[playerid][cVehcoms][6] = GetVehicleComponentInSlot(pTemp[playerid][pCarPlayerID], CARMODTYPE_EXHAUST);
	pInfo[playerid][cVehcoms][7] = GetVehicleComponentInSlot(pTemp[playerid][pCarPlayerID], CARMODTYPE_WHEELS);
	pInfo[playerid][cVehcoms][8] = GetVehicleComponentInSlot(pTemp[playerid][pCarPlayerID], CARMODTYPE_STEREO);
	pInfo[playerid][cVehcoms][9] = GetVehicleComponentInSlot(pTemp[playerid][pCarPlayerID], CARMODTYPE_HYDRAULICS);
	pInfo[playerid][cVehcoms][10] = GetVehicleComponentInSlot(pTemp[playerid][pCarPlayerID], CARMODTYPE_FRONT_BUMPER);
	pInfo[playerid][cVehcoms][11] = GetVehicleComponentInSlot(pTemp[playerid][pCarPlayerID], CARMODTYPE_REAR_BUMPER);
	pInfo[playerid][cVehcoms][12] = GetVehicleComponentInSlot(pTemp[playerid][pCarPlayerID], CARMODTYPE_VENT_RIGHT);
	pInfo[playerid][cVehcoms][13] = GetVehicleComponentInSlot(pTemp[playerid][pCarPlayerID], CARMODTYPE_VENT_LEFT);
	format(pInfo[playerid][cVehcom], 64, "%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",
	pInfo[playerid][cVehcoms][0], pInfo[playerid][cVehcoms][1], pInfo[playerid][cVehcoms][2],
	pInfo[playerid][cVehcoms][3], pInfo[playerid][cVehcoms][4], pInfo[playerid][cVehcoms][5],
	pInfo[playerid][cVehcoms][6], pInfo[playerid][cVehcoms][7], pInfo[playerid][cVehcoms][8],
	pInfo[playerid][cVehcoms][9], pInfo[playerid][cVehcoms][10], pInfo[playerid][cVehcoms][11],
	pInfo[playerid][cVehcoms][12], pInfo[playerid][cVehcoms][13]);
	return 1;
}

stock ShowTuningDialog(playerid)
{
	ShowPlayerDialog(playerid, dTuning+1, DIALOG_STYLE_LIST, "{FFCC00}Тюнинг меню", "1. Покраска\n2. Гидравлика\n3. Закись азота\n4. Диски\n5. Покрасочные работы\n{c0c0c0}6. Спойлер\n{c0c0c0}7. Передний бампер\n{c0c0c0}8. Задний бампер\n{c0c0c0}9. Боковые юбки\n{c0c0c0}10. Крыша", "Далее", "Выход");
	return 1;
}

@OnPlayerLogin(playerid);
@OnPlayerLogin(playerid)
{
	if(!GetPVarInt(playerid, "player_logged")) return 1;
	#if MYSQL_R41_2 == true

 	new rows;
 	cache_get_row_count(rows);

 	#else

 	new rows, fields;
 	cache_get_data(rows, fields);

 	#endif

	if(!rows) {
		gPlayerLogTries[playerid]++;
		if(gPlayerLogTries[playerid] == 3) {
			SendClientMessage(playerid,COLOR_RED, "Вы несколько раз ввели неверный пароль! Для выхода из игры введите: {ffffff}/q(uit)");
			return SKick(playerid, 52);
		}
        new string[100];
		format(string, sizeof(string), "{FFFFFF}Вы ввели неверный пароль!\nУ вас осталось {FF9900}%d {FFFFFF}попыток", 4 - gPlayerLogTries[playerid]);
		return ShowPlayerDialog(playerid, dErrorPassword, DIALOG_STYLE_MSGBOX, "{F04245}Ошибка", string, "Повтор", "Выйти");
	}
	mysql_query_string[0] = EOS;
	mysql_format(dbHandle, mysql_query_string, sizeof(mysql_query_string), "SELECT bandate,unbandate,whobanned,time,reason FROM "T_BANS" WHERE name = '%e' AND unbandate > CURDATE()", GetName(playerid));
	mysql_tquery(dbHandle, mysql_query_string, "@OnPlayerCheckBanlist", "i", playerid);
	return 1;
}
stock BuyFurgon(playerid, money){
	pInfo[playerid][pCash] -= money;
	pInfo[playerid][pFurgon] = 1;
	MysqlUpdatePlayerInt(playerid, "money", pInfo[playerid][pCash]);
	MysqlUpdatePlayerInt(playerid, "furgon", pInfo[playerid][pFurgon]);

	TransferMoney(playerid, -1, 500);
	pInfo[playerid][pFurgRent] = gettime()+(86400 * 30);
	pInfo[playerid][pFurgon] = cache_get_row_int(playerid, 0);
	pInfo[playerid][pFurgRent] = cache_get_row_int(playerid, 0);

	mysql_query_string[0] = EOS;
	new col = 1;
	format(mysql_query_string, sizeof(mysql_query_string),
	"UPDATE `accounts` SET 'furgon' = '%d' WHERE `id` = '%d'", col, pInfo[playerid][pID]);
	mysql_tquery(dbHandle, mysql_query_string, "", "");
 	return true;
}
@OnPlayerCheckBanlist(playerid);
@OnPlayerCheckBanlist(playerid)
{
    #if MYSQL_R41_2 == true

  	new rows;
 	cache_get_row_count(rows);
 	if(rows)
	{
	    new bandate[20], unbandate[20], whobanned[MAX_PLAYER_NAME], reason[32], timeban;
	    stringer[0] = EOS;
	    cache_get_value_name(0, "bandate", bandate);
	    cache_get_value_name(0, "unbandate", unbandate);
	    cache_get_value_name(0, "whobanned", whobanned);
	    cache_get_value_name_int(0, "time", timeban);
	    cache_get_value_name(0, "reason", reason);
		format(stringer, 1000, "\
			{F04245}Заблокировал: {FFFFFF}%s\n\
			{F04245}Дата разблокировки: {FFFFFF}%s\n\
			{F04245}Срок блокировки: {FFFFFF}%d дней\n\
			{F04245}Причина блокировки: {FFFFFF}%s",
			whobanned, unbandate, timeban, reason);
		ShowPlayerDialog(playerid, dNull, DIALOG_STYLE_MSGBOX, "{F04245}Ваш аккаунт заблокирован", stringer, "Ок", "");
		SKick(playerid, 28183);
	}
	else
	{
	    DeletePVar(playerid, "player_logged");
 		DeletePVar(playerid, "login_timer");
 		SendClientMessage(playerid, COLOR_REL, "Добро пожаловать на "SERVER_NAME".");
	    mysql_query_string[0] = EOS;
		mysql_format(dbHandle, mysql_query_string, 150, "SELECT * FROM "T_ACCOUNTS" WHERE name = '%e'", GetName(playerid));
		mysql_tquery(dbHandle, mysql_query_string, "@LoadPlayerData", "d", playerid);
	}

 	#else

 	new rows, fields;
 	cache_get_data(rows, fields);
 	if(rows)
	{
	    new bandate[20], unbandate[20], whobanned[MAX_PLAYER_NAME], reason[32], timeban;
	    stringer[0] = EOS;
	    cache_get_field_content(0, "bandate", bandate, dbHandle);
	    cache_get_field_content(0, "unbandate", unbandate, dbHandle);
	    cache_get_field_content(0, "whobanned", whobanned, dbHandle);
	    timeban = cache_get_field_content_int(0, "time");
	    cache_get_field_content(0, "reason", reason, dbHandle);
		format(stringer, 1000, "\
			{F04245}Заблокировал: {FFFFFF}%s\n\
			{F04245}Дата разблокировки: {FFFFFF}%s\n\
			{F04245}Срок блокировки: {FFFFFF}%d дней\n\
			{F04245}Причина блокировки: {FFFFFF}%s",
			whobanned, unbandate, timeban, reason);
		ShowPlayerDialog(playerid, dNull, DIALOG_STYLE_MSGBOX, "{F04245}Ваш аккаунт заблокирован", stringer, "Ок", "");
		SKick(playerid, 28183);
	}
	else
	{
	    DeletePVar(playerid, "player_logged");
 		DeletePVar(playerid, "login_timer");
 		SendClientMessage(playerid, COLOR_ORANGE, "Добро пожаловать на "SERVER_NAME".");
	    mysql_query_string[0] = EOS;
		mysql_format(dbHandle, mysql_query_string, 150, "SELECT * FROM "T_ACCOUNTS" WHERE name = '%e'", GetName(playerid));
		mysql_tquery(dbHandle, mysql_query_string, "@LoadPlayerData", "d", playerid);
	}

 	#endif

	return 1;
}

@LoadPlayerData(playerid);
@LoadPlayerData(playerid)
{
    if(!GetPVarInt(playerid,"Logged")) return 1;

    #if MYSQL_R41_2 == true

    cache_get_value_index_int(0, 0, pInfo[playerid][pID]); // id
	cache_get_value_index(0, 3, pInfo[playerid][pLastIP], 16); // ip
	cache_get_value_index(0, 4, pInfo[playerid][pNumberVehicle], 64); // veh_number
	cache_get_value_index_int(0, 5, pInfo[playerid][pRegVehicle]); // veh_reg
	cache_get_value_index_int(0, 6, pInfo[playerid][pAdmin]); // admin
	cache_get_value_index_int(0, 7, pInfo[playerid][pSecurityCode]); // securitycode
	cache_get_value_index_int(0, 8, pInfo[playerid][pCheckCode]); // checkcode
	cache_get_value_index(0, 9, pInfo[playerid][pMail], 64); // mail
	cache_get_value_index_int(0, 10, pInfo[playerid][pLevel]); // level
	cache_get_value_index_int(0, 11, pInfo[playerid][pCash]); // cash
	cache_get_value_index_int(0, 12, pInfo[playerid][pBank]); // bank
	cache_get_value_index_int(0, 13, pInfo[playerid][pExp]); // exp
	cache_get_value_index(0, 14, pInfo[playerid][pRegIP], 16); // regip
	cache_get_value_index(0, 15, pInfo[playerid][pRegData], 20); // datareg
	cache_get_value_index_int(0, 16, pInfo[playerid][pLeader]); // leader
	cache_get_value_index_int(0, 17, pInfo[playerid][pTempLeader]); // templeader
	cache_get_value_index_int(0, 18, pInfo[playerid][pMember]); // member
	cache_get_value_index_int(0, 19, pInfo[playerid][pRank]); // rank
	cache_get_value_index_int(0, 20, pInfo[playerid][pWarn]); // warn
	cache_get_value_index_int(0, 21, pInfo[playerid][pSex]); // sex
	cache_get_value_index_int(0, 22, pInfo[playerid][pAge]); // age
	cache_get_value_index_int(0, 23, pInfo[playerid][pModel]); // model
	cache_get_value_index_int(0, 24, pInfo[playerid][pMemberSkin]); // memberskin
	cache_get_value_index_int(0, 25, pInfo[playerid][pLicenses]); // licenses
	cache_get_value_index_int(0, 26, pInfo[playerid][pMuted]); // mute
	cache_get_value_index(0, 27, pInfo[playerid][pMutedReason], 32); // mutereason
	cache_get_value_index_int(0, 28, pInfo[playerid][pTimeHour]); // thour
	cache_get_value_index_int(0, 29, pInfo[playerid][pSetMark]); // setmark
	cache_get_value_index_int(0, 30, pInfo[playerid][pNews]); // news
	cache_get_value_index_int(0, 31, pInfo[playerid][pPhoneNumber]); // phonenumber
	cache_get_value_index_int(0, 32, pInfo[playerid][pGift]); // 1
    cache_get_value_index_int(0, 32, pInfo[playerid][pGift2]); // 2
    cache_get_value_index_int(0, 32, pInfo[playerid][pGift3]); // 3
    cache_get_value_index_int(0, 32, pInfo[playerid][pGift4]); // 4
    cache_get_value_index_int(0, 32, pInfo[playerid][pGift5]); // 5
    cache_get_value_index_int(0, 32, pInfo[playerid][pGift6]); // 6
    cache_get_value_index_int(0, 32, pInfo[playerid][pGift7]); // 7


	new texts[25];
	cache_get_value_index(0, 32, texts, 25); // text
	sscanf(texts, "p<,>a<i>[5]", pInfo[playerid][pText]);

	cache_get_value_index_int(0, 33, pInfo[playerid][pJail]); // jail
	cache_get_value_index_int(0, 34, pInfo[playerid][pJailTime]); // jailtime
	cache_get_value_index(0, 35, pInfo[playerid][pJailReason], 32); // jailreason
	cache_get_value_index_int(0, 36, pInfo[playerid][pWanted]); // wanted
	cache_get_value_index(0, 37, pInfo[playerid][pWantedWho], MAX_PLAYER_NAME); // wantedwho
	cache_get_value_index(0, 38, pInfo[playerid][pWantedReason], 32); // wantedreason
	cache_get_value_index_float(0, 39, pInfo[playerid][pHeal]); // heal
	cache_get_value_index_int(0, 40, pInfo[playerid][pDrugs]); // drugs
	cache_get_value_index_int(0, 41, pInfo[playerid][pPatron]); // patron
	cache_get_value_index_int(0, 42, pInfo[playerid][pGunAmount]); // gunamount
	cache_get_value_index_int(0, 43, pInfo[playerid][pCrimes]); // crimes
	cache_get_value_index_int(0, 44, pInfo[playerid][pJob]); // job
	cache_get_value_index_int(0, 45, pInfo[playerid][pMarried]); // married
	cache_get_value_index(0, 46, pInfo[playerid][pWhoMarried], MAX_PLAYER_NAME); // whomarried
	cache_get_value_index(0, 47, pInfo[playerid][pReferal], MAX_PLAYER_NAME); // referal
	cache_get_value_index_int(0, 48, pInfo[playerid][pPayCheck]); // paycheck
	cache_get_value_index_int(0, 49, pInfo[playerid][pCharity]); // charity
	cache_get_value_index_int(0, 50, pInfo[playerid][pVip]); // vip
	cache_get_value_index_int(0, 51, pInfo[playerid][pVipTime]); // viptime
	cache_get_value_index_int(0, 52, pInfo[playerid][pTime]); // time
	cache_get_value_index_int(0, 53, pInfo[playerid][pFightStyle]); // fstyle
	cache_get_value_index_int(0, 54, pInfo[playerid][pCredits]); // credits
	cache_get_value_index_int(0, 55, pInfo[playerid][pTotalCredits]); // totalcredits
	cache_get_value_index_int(0, 56, pInfo[playerid][pSkin][0]); // skin1
	cache_get_value_index_int(0, 57, pInfo[playerid][pSkin][1]); // skin2
	cache_get_value_index_int(0, 58, pInfo[playerid][pSkin][2]); // skin3
	cache_get_value_index_int(0, 59, pInfo[playerid][pSpawnChange]); // spawnchange
	cache_get_value_index_int(0, 60, pInfo[playerid][pGunSkill][0]); // sdpistol
	cache_get_value_index_int(0, 61, pInfo[playerid][pGunSkill][1]); // deserteagle
	cache_get_value_index_int(0, 62, pInfo[playerid][pGunSkill][2]); // shotgun
	cache_get_value_index_int(0, 63, pInfo[playerid][pGunSkill][3]); // mp5
	cache_get_value_index_int(0, 64, pInfo[playerid][pGunSkill][4]); // ak47
	cache_get_value_index_int(0, 65, pInfo[playerid][pGunSkill][5]); // m4
 	cache_get_value_index_int(0, 66, pInfo[playerid][pGunSkill][6]); // pistol
	cache_get_value_index_int(0, 67, pInfo[playerid][pGunSkill][7]); // microuzi
	cache_get_value_index_int(0, 68, pInfo[playerid][pHunger]); // hunger
	cache_get_value_index_int(0, 69, pInfo[playerid][pSportExp]); // sportexp
	cache_get_value_index_int(0, 71, pInfo[playerid][pZakon]); // zakon
	cache_get_value_index_int(0, 72, pInfo[playerid][pCity]); // city

	new repcars[16];
	cache_get_value_index(0, 73, repcars, 16); // repcar
	sscanf(repcars, "p<,>a<i>[2]", pInfo[playerid][pRepcar]);

	cache_get_value_index_int(0, 74, pInfo[playerid][pWatch]); // watch
	cache_get_value_index_int(0, 75, pInfo[playerid][pCiggare]); // ciggare
	cache_get_value_index_int(0, 76, pInfo[playerid][pSprunk]); // sprunk
	cache_get_value_index_int(0, 77, pInfo[playerid][pMask]); // mask
	cache_get_value_index_int(0, 78, pInfo[playerid][pPhoneBalance]); // phonebalance
	cache_get_value_index_int(0, 79, pInfo[playerid][pTruckSkill]); // truckskill
    cache_get_value_index_int(0, 80, pInfo[playerid][cModel]); // cModel
	cache_get_value_index_int(0, 81, pInfo[playerid][cClass]); // cClass
	cache_get_value_index_float(0, 82, pInfo[playerid][cFuel]); // cFuel
	cache_get_value_index_float(0, 83, pInfo[playerid][cMileage]); // cMileage
	cache_get_value_index_int(0, 84, pInfo[playerid][cColor][0]); // cColor1
	cache_get_value_index_int(0, 85, pInfo[playerid][cColor][1]); // cColor2
	cache_get_value_index_int(0, 86, pInfo[playerid][cCost]); // cCost

	cache_get_value_index(0, 87, pInfo[playerid][cVehcom], 64); // cVehcom
	sscanf(pInfo[playerid][cVehcom], "p<,>a<i>[14]",pInfo[playerid][cVehcoms]);

	cache_get_value_index_int(0, 88, pInfo[playerid][cPaintjob]); // cPaintjob
	cache_get_value_index_int(0, 89, pInfo[playerid][pAptechka]); // aptechka
	cache_get_value_index_int(0, 90, pInfo[playerid][pVoennik]); // Voennik
	cache_get_value_index_int(0, 91, pInfo[playerid][pMusic]); // music

	new improves[32];
	cache_get_value_index(0, 92, improves, 32); // improves
	sscanf(improves, "p<,>a<i>[4]", pInfo[playerid][pImprove]);

    cache_get_value_index(0, 93, pInfo[playerid][pVhData], 20); // datavhod
	cache_get_value_index_int(0, 94, pInfo[playerid][pSettings]); // settings
	cache_get_value_index_int(0, 95, pInfo[playerid][pPhoneNumbers][0]); // phnumber1
	cache_get_value_index_int(0, 96, pInfo[playerid][pPhoneNumbers][1]); // phnumber2
	cache_get_value_index_int(0, 97, pInfo[playerid][pPhoneNumbers][2]); // phnumber3
	cache_get_value_index_int(0, 98, pInfo[playerid][pPhoneNumbers][3]); // phnumber4
	cache_get_value_index_int(0, 99, pInfo[playerid][pPhoneNumbers][4]); // phnumber5
	cache_get_value_index_int(0, 100, pInfo[playerid][pPhoneNumbers][5]); // phnumber6
	cache_get_value_index_int(0, 101, pInfo[playerid][pPhoneNumbers][6]); // phnumber7
	cache_get_value_index_int(0, 102, pInfo[playerid][pPhoneNumbers][7]); // phnumber8
	cache_get_value_index_int(0, 103, pInfo[playerid][pMailConfirmed]); // mailconf
	cache_get_value_index_int(0, 104, pInfo[playerid][pFishki]); // fishki
	cache_get_value_index_int(0, 105, pInfo[playerid][pTimeToLastWarn]); // timewarn
	cache_get_value_index_int(0, 106, pInfo[playerid][pFine]); // fine
	cache_get_value_index_int(0, 107, pInfo[playerid][pFineAmount]); // fineamount
	cache_get_value_index_int(0, 108, pInfo[playerid][pFineTime]); // finetime
	cache_get_value_index_int(0, 109, pInfo[playerid][pFineUpgrade]); // fineupgrade
	cache_get_value_index_int(0, 110, pInfo[playerid][pHouse]); // house
	cache_get_value_index_int(0, 111, pInfo[playerid][pBiz]); // biz

	new querygun[256];
	cache_get_value_index(0, 112, querygun); // gun
 	SetPVarString(playerid, "mysqlgun", querygun);

 	cache_get_value_index(0, 113, pInfo[playerid][pSearchServ], 32); // searchserv
 	cache_get_value_index_int(0, 114, pInfo[playerid][pRobHouse]); // robhouse
 	cache_get_value_index_int(0, 115, pInfo[playerid][pMemberWarn]); // memberwarn
 	cache_get_value_index_int(0, 116, pInfo[playerid][pFamilyMember]); // fam_m

	#else

	pInfo[playerid][pID] = cache_get_row_int(0, 0); // id
	cache_get_row(0, 3, pInfo[playerid][pLastIP], dbHandle, 16); // ip
	cache_get_row(0, 4, pInfo[playerid][pNumberVehicle], dbHandle, 64); // veh_number
	pInfo[playerid][pRegVehicle] = cache_get_row_int(0, 5); // veh_reg
	pInfo[playerid][pAdmin] = cache_get_row_int(0, 6); // admin
	pInfo[playerid][pSecurityCode] = cache_get_row_int(0, 7); // securitycode
	pInfo[playerid][pCheckCode] = cache_get_row_int(0, 8); // checkcode
	cache_get_row(0, 9, pInfo[playerid][pMail], dbHandle, 64); // mail
	pInfo[playerid][pLevel] = cache_get_row_int(0, 10); // level
	pInfo[playerid][pCash] = cache_get_row_int(0, 11); // cash
	pInfo[playerid][pBank] = cache_get_row_int(0, 12); // bank
	pInfo[playerid][pExp] = cache_get_row_int(0, 13); // exp
	cache_get_row(0, 14, pInfo[playerid][pRegIP], dbHandle, 16); // regip
	cache_get_row(0, 15, pInfo[playerid][pRegData], dbHandle, 20); // datareg
	pInfo[playerid][pLeader] = cache_get_row_int(0, 16); // leader
	pInfo[playerid][pTempLeader] = cache_get_row_int(0, 17); // templeader
	pInfo[playerid][pMember] = cache_get_row_int(0, 18); // member
	pInfo[playerid][pRank] = cache_get_row_int(0, 19); // rank
	pInfo[playerid][pWarn] = cache_get_row_int(0, 20); // warn
	pInfo[playerid][pSex] = cache_get_row_int(0, 21); // sex
	pInfo[playerid][pAge] = cache_get_row_int(0, 22); // age
	pInfo[playerid][pModel] = cache_get_row_int(0, 23); // model
	pInfo[playerid][pMemberSkin] = cache_get_row_int(0, 24); // memberskin
	pInfo[playerid][pLicenses] = cache_get_row_int(0, 25); // licenses
	pInfo[playerid][pMuted] = cache_get_row_int(0, 26); // mute
	cache_get_row(0, 27, pInfo[playerid][pMutedReason], dbHandle, 32); // mutereason
	pInfo[playerid][pTimeHour] = cache_get_row_int(0, 28); //thour
	pInfo[playerid][pSetMark] = cache_get_row_int(0, 29); //setmark
	pInfo[playerid][pNews] = cache_get_row_int(0, 30); // news
	pInfo[playerid][pPhoneNumber] = cache_get_row_int(0, 31); // phonenumber

	new texts[25];
	cache_get_row(0, 32, texts, dbHandle, 25); // text
	sscanf(texts, "p<,>a<i>[5]", pInfo[playerid][pText]);

	pInfo[playerid][pJail] = cache_get_row_int(0, 33); // jail
	pInfo[playerid][pJailTime] = cache_get_row_int(0, 34); // jailtime
	cache_get_row(0, 37, pInfo[playerid][pJailReason], dbHandle, 35); // jailreason
	pInfo[playerid][pWanted] = cache_get_row_int(0, 36); // wanted
	cache_get_row(0, 37, pInfo[playerid][pWantedWho], dbHandle, MAX_PLAYER_NAME); // wantedwho
	cache_get_row(0, 38, pInfo[playerid][pWantedReason], dbHandle, 32); // wantedreason
	pInfo[playerid][pHeal] = cache_get_row_float(0, 39); // heal
	pInfo[playerid][pDrugs] = cache_get_row_int(0, 40); // drugs
	pInfo[playerid][pPatron] = cache_get_row_int(0, 41); // patron
	pInfo[playerid][pGunAmount] = cache_get_row_int(0, 42); // gunamount
	pInfo[playerid][pCrimes] = cache_get_row_int(0, 43); // crimes
	pInfo[playerid][pJob] = cache_get_row_int(0, 44); // job
	pInfo[playerid][pMarried] = cache_get_row_int(0, 45); // married
	cache_get_row(0, 46, pInfo[playerid][pWhoMarried], dbHandle, MAX_PLAYER_NAME); // whomarried
	cache_get_row(0, 47, pInfo[playerid][pReferal], dbHandle, MAX_PLAYER_NAME); // referal
	pInfo[playerid][pPayCheck] = cache_get_row_int(0, 48); // paycheck
	pInfo[playerid][pCharity] = cache_get_row_int(0, 49); // charity
	pInfo[playerid][pVip] = cache_get_row_int(0, 50); // vip
	pInfo[playerid][pVipTime] = cache_get_row_int(0, 51); // viptime
	pInfo[playerid][pTime] = cache_get_row_int(0, 52); // time
	pInfo[playerid][pFightStyle] = cache_get_row_int(0, 53); // fstyle
	pInfo[playerid][pCredits] = cache_get_row_int(0, 54); // credits
	pInfo[playerid][pTotalCredits] = cache_get_row_int(0, 55); // totalcredits
	pInfo[playerid][pSkin][0] = cache_get_row_int(0, 56); // skin1
	pInfo[playerid][pSkin][1] = cache_get_row_int(0, 57); // skin2
	pInfo[playerid][pSkin][2] = cache_get_row_int(0, 58); // skin3
	pInfo[playerid][pSpawnChange] = cache_get_row_int(0, 59); // spawnchange
	pInfo[playerid][pGunSkill][0] = cache_get_row_int(0, 60); // sdpistol
	pInfo[playerid][pGunSkill][1] = cache_get_row_int(0, 61); // deserteagle
	pInfo[playerid][pGunSkill][2] = cache_get_row_int(0, 62); // shotgun
	pInfo[playerid][pGunSkill][3] = cache_get_row_int(0, 63); // mp5
	pInfo[playerid][pGunSkill][4] = cache_get_row_int(0, 64); // ak47
	pInfo[playerid][pGunSkill][5] = cache_get_row_int(0, 65); // m4
 	pInfo[playerid][pGunSkill][6] = cache_get_row_int(0, 66); // pistol
	pInfo[playerid][pGunSkill][7] = cache_get_row_int(0, 67); // microuzi
	pInfo[playerid][pHunger] = cache_get_row_int(0, 68); // hunger
	pInfo[playerid][pSportExp] = cache_get_row_int(0, 69); // sportexp
	pInfo[playerid][pZakon] = cache_get_row_int(0, 71); // zakon
	pInfo[playerid][pCity] = cache_get_row_int(0, 72); // city

    new repcars[16];
	cache_get_row(0, 73, repcars, dbHandle, 16); // repcar
	sscanf(repcars, "p<,>a<i>[2]", pInfo[playerid][pRepcar]);

	pInfo[playerid][pWatch] = cache_get_row_int(0, 74); // watch
	pInfo[playerid][pCiggare] = cache_get_row_int(0, 75); // ciggare
	pInfo[playerid][pSprunk] = cache_get_row_int(0, 76); // sprunk
	pInfo[playerid][pMask] = cache_get_row_int(0, 77); // mask
	pInfo[playerid][pPhoneBalance] = cache_get_row_int(0, 78); // phonebalance
	pInfo[playerid][pTruckSkill] = cache_get_row_int(0, 79); // truckskill
    pInfo[playerid][cModel] = cache_get_row_int(0, 80); // cModel
	pInfo[playerid][cClass] = cache_get_row_int(0, 81); // cClass
	pInfo[playerid][cFuel] = cache_get_row_float(0, 82); // cFuel
	pInfo[playerid][cMileage] = cache_get_row_float(0, 83); // cMileage
	pInfo[playerid][cColor][0] = cache_get_row_int(0, 84); // cColor1
	pInfo[playerid][cColor][1] = cache_get_row_int(0, 85); // cColor2
	pInfo[playerid][cCost] = cache_get_row_int(0, 86); // cCost

	cache_get_row(0, 87, pInfo[playerid][cVehcom], dbHandle, 64); // cVehcom
	sscanf(pInfo[playerid][cVehcom], "p<,>a<i>[14]",pInfo[playerid][cVehcoms]);

	pInfo[playerid][cPaintjob] = cache_get_row_int(0, 88); // cPaintjob
	pInfo[playerid][pAptechka] = cache_get_row_int(0, 89); // aptechka
	pInfo[playerid][pVoennik] = cache_get_row_int(0, 90); // Voennik
	pInfo[playerid][pMusic] = cache_get_row_int(0, 91); // music

	new improves[32];
	cache_get_row(0, 92, improves, dbHandle, 32); // improves
	sscanf(improves, "p<,>a<i>[4]", pInfo[playerid][pImprove]);

    cache_get_row(0, 93, pInfo[playerid][pVhData], dbHandle, 20); // datavhod
	pInfo[playerid][pSettings] = cache_get_row_int(0, 94); // settings
	pInfo[playerid][pPhoneNumbers][0] = cache_get_row_int(0, 95); // phnumber1
	pInfo[playerid][pPhoneNumbers][1] = cache_get_row_int(0, 96); // phnumber2
	pInfo[playerid][pPhoneNumbers][2] = cache_get_row_int(0, 97); // phnumber3
	pInfo[playerid][pPhoneNumbers][3] = cache_get_row_int(0, 98); // phnumber4
	pInfo[playerid][pPhoneNumbers][4] = cache_get_row_int(0, 99); // phnumber5
	pInfo[playerid][pPhoneNumbers][5] = cache_get_row_int(0, 100); // phnumber6
	pInfo[playerid][pPhoneNumbers][6] = cache_get_row_int(0, 101); // phnumber7
	pInfo[playerid][pPhoneNumbers][7] = cache_get_row_int(0, 102); // phnumber8
	pInfo[playerid][pMailConfirmed] = cache_get_row_int(0, 103); // mailconf
	pInfo[playerid][pFishki] = cache_get_row_int(0, 104); // fishki
	pInfo[playerid][pTimeToLastWarn] = cache_get_row_int(0, 105); // timewarn
	pInfo[playerid][pFine] = cache_get_row_int(0, 106); // fine
	pInfo[playerid][pFineAmount] = cache_get_row_int(0, 107); // fineamount
	pInfo[playerid][pFineTime] = cache_get_row_int(0, 108); // finetime
	pInfo[playerid][pFineUpgrade] = cache_get_row_int(0, 109); // fineupgrade
	pInfo[playerid][pHouse] = cache_get_row_int(0, 110); // house
	pInfo[playerid][pBiz] = cache_get_row_int(0, 111); // biz

	new querygun[256];
	cache_get_row(0, 112, querygun, dbHandle); // gun
 	SetPVarString(playerid, "mysqlgun", querygun);

 	cache_get_row(0, 113, pInfo[playerid][pSearchServ], dbHandle, 32); // searchserv
 	pInfo[playerid][pRobHouse] = cache_get_row_int(0, 114); // robhouse
 	pInfo[playerid][pMemberWarn] = cache_get_row_int(0, 115); // memberwarn
 	pInfo[playerid][pFamilyMember] = cache_get_row_int(0, 116); // fam_m

	#endif

    GetPlayerHouse(playerid);
	GetPlayerBiz(playerid);
	LoadPlayerVehicle(playerid);
	OnLoadPass(playerid);

	mysql_query_string[0] = EOS;
	format(mysql_query_string,512,"SELECT * FROM "T_ONLINE_PLAYER" WHERE date >= CURDATE() AND accountid = %d", pInfo[playerid][pID]);
	mysql_tquery(dbHandle, mysql_query_string, "@load_online_today" , "i", playerid);

	mysql_query_string[0] = EOS;
	format(mysql_query_string,512,"SELECT * FROM "T_ONLINE_PLAYER" WHERE (date >= (CURDATE()-1) AND date < CURDATE()) AND accountid = %d", pInfo[playerid][pID]);
	mysql_tquery(dbHandle, mysql_query_string, "@load_online_yesterday" , "i", playerid);

	DeletePVar(playerid, "Logged");
	SetPVarInt(playerid, "first_spawn", 1);

    GetPlayerIp(playerid, pInfo[playerid][pIP], 16);
    mysql_query_string[0] = EOS;
	format(mysql_query_string, 256, "UPDATE "T_ACCOUNTS" SET ip = '%s', online = %i WHERE id = %i LIMIT 1", pInfo[playerid][pIP], playerid, pInfo[playerid][pID]);
	mysql_tquery(dbHandle, mysql_query_string, "", "");

	if(pInfo[playerid][pCheckCode] == 1)
	{
	    new texter_pas[5];
		new digitsd[9] = {1,2,3,4,5,6,7,8,9};
		for(new i, rand, old_digit; i < 9; i++)
		{
			while((rand = random(9)) == i) {}
			old_digit = digitsd[i];
			digitsd[i] = digitsd[rand];
			digitsd[rand] = old_digit;
		}
    	for(new f = 0; f < 10; f++)
		{
		    if(f < 9)
		    {
		        mass_pass[playerid][f] = digitsd[f];
				format(texter_pas,sizeof(texter_pas),"%i",mass_pass[playerid][f]);
				PlayerTextDrawSetString(playerid,security_code_TD[playerid][f],texter_pas);
		    }
			PlayerTextDrawShow(playerid,security_code_TD[playerid][f]);
		}
		SendClientMessage(playerid, COLOR_WHITE, "Система безопасности запрашивает ввод Вашего графического пароля");
		pInfo[playerid][pInputCode] = 0;
		Ujahhs[playerid] = 1;
		SelectTextDraw(playerid, -264092161);
	}
	else if(pInfo[playerid][pCheckCode] == 2)
	{
	    if(GetString(pInfo[playerid][pLastIP],pInfo[playerid][pIP]))
		{
		    if(pInfo[playerid][pAdmin] > ADM_NONE) SendClientMessage(playerid, COLOR_LIME, "Вы вошли как администратор. Для авторизации, введите /alogin");
		    gPlayerLogged[playerid] = true;
		    if(pInfo[playerid][pSettings] & setHungerInfo) Hunger(playerid, 0);
   			SpawnPlayerEx(playerid);
		}
		else
		{
		    new texter_pas[5];
			new digitsd[9] = {1,2,3,4,5,6,7,8,9};
			for(new i, rand, old_digit; i < 9; i++)
			{
				while((rand = random(9)) == i) {}
				old_digit = digitsd[i];
				digitsd[i] = digitsd[rand];
				digitsd[rand] = old_digit;
			}
	    	for(new f = 0; f < 10; f++)
			{
			    if(f < 9)
			    {
			        mass_pass[playerid][f] = digitsd[f];
					format(texter_pas,sizeof(texter_pas),"%i",mass_pass[playerid][f]);
					PlayerTextDrawSetString(playerid,security_code_TD[playerid][f],texter_pas);
			    }
				PlayerTextDrawShow(playerid,security_code_TD[playerid][f]);
			}
			SendClientMessage(playerid, COLOR_WHITE, "Система безопасности запрашивает ввод Вашего графического пароля");
			pInfo[playerid][pInputCode] = 0;
			Ujahhs[playerid] = 1;
			SelectTextDraw(playerid,-264092161);
		}
	}
	else if(pInfo[playerid][pCheckCode] == 3)
	{
	    new strv[26], strvv[26], splitt[4][4], spli[4][4];
	    split(pInfo[playerid][pLastIP], splitt, '.');
		format(strv, sizeof(strv), "%s.%s", splitt[0], splitt[1]);
	    split(pInfo[playerid][pIP], spli, '.');
		format(strvv, sizeof(strvv), "%s.%s", spli[0], spli[1]);
	    if(strcmp(strv,strvv,true))
		{
		    new texter_pas[5];
			new digitsd[9] = {1,2,3,4,5,6,7,8,9};
			for(new i, rand, old_digit; i < 9; i++)
			{
				while((rand = random(9)) == i) {}
				old_digit = digitsd[i];
				digitsd[i] = digitsd[rand];
				digitsd[rand] = old_digit;
			}
	    	for(new f = 0; f < 10; f++)
			{
			    if(f < 9)
			    {
			        mass_pass[playerid][f] = digitsd[f];
					format(texter_pas,sizeof(texter_pas),"%i",mass_pass[playerid][f]);
					PlayerTextDrawSetString(playerid,security_code_TD[playerid][f],texter_pas);
			    }
				PlayerTextDrawShow(playerid,security_code_TD[playerid][f]);
			}
			SendClientMessage(playerid, COLOR_WHITE, "Система безопасности запрашивает ввод Вашего графического пароля");
			pInfo[playerid][pInputCode] = 0;
			Ujahhs[playerid] = 1;
			SelectTextDraw(playerid,-264092161);
		}
		else
		{
		    if(pInfo[playerid][pAdmin] > ADM_NONE) SendClientMessage(playerid, COLOR_LIME, "Вы вошли как администратор. Для авторизации, введите /alogin");
		    if(!pInfo[playerid][pMailConfirmed] && pInfo[playerid][pLevel] < 3) SendClientMessage(playerid, COLOR_YELLOW, "[Информация] {FFFFFF}Ваша почта не привязана. Привяжите её, чтобы потвердить ваш аккаунт (/menu - Безопасность)");
		    gPlayerLogged[playerid] = true;
		    if(pInfo[playerid][pSettings] & setHungerInfo) Hunger(playerid, 0);
   			SpawnPlayerEx(playerid);
		}
	}
	else
	{
	    if(pInfo[playerid][pAdmin] > ADM_NONE) SendClientMessage(playerid, COLOR_LIME, "Вы вошли как администратор. Для авторизации, введите /alogin");
	    if(pInfo[playerid][pLevel] < 3) SendClientMessage(playerid, COLOR_YELLOW, "[Информация] {FFFFFF}Рекомендуем Вам установить графический ключ для дополнительной безопасности аккаунта (/menu - Безопасность)");
	    if(!pInfo[playerid][pMailConfirmed] && pInfo[playerid][pLevel] < 3) SendClientMessage(playerid, COLOR_YELLOW, "[Информация] {FFFFFF}Ваша почта не привязана. Привяжите её, чтобы потвердить ваш аккаунт (/menu - Безопасность)");
	    gPlayerLogged[playerid] = true;
	    if(pInfo[playerid][pSettings] & setHungerInfo) Hunger(playerid, 0);
	    SpawnPlayerEx(playerid);
	}
	//
	if(doubling_status)  SendClientMessage(playerid, COLOR_GREEN, "[Подсказка] {ffffff}Сегодня действует акция {AFAFAF}X2 Weekends{ffffff}. Подробнее: {AFAFAF}"SERVER_GROUP"");
	//
	if(pInfo[playerid][pText][0] == 1)
	{
		new i = pInfo[playerid][pText][0];
		pInfo[playerid][pBank] += HouseInfo[i][hPrice];
		SendMes(playerid, COLOR_YELLOW, "[Квитанция] {FFFFFF}Вы были выселены за неуплату! Вам было возвращено {63BD4E}%d$", HouseInfo[i][hPrice]);
		SendClientMessage(playerid, COLOR_YELLOW, "[Квитанция] {FFFFFF}Деньги были переведены на ваш банковский счет.");
        mysql_query_string[0] = EOS;
		format(mysql_query_string, 256, "UPDATE "T_ACCOUNTS" SET text = '0, %i, %i, %i, %i' WHERE name = '%s'", pInfo[playerid][pText][1], pInfo[playerid][pText][2], pInfo[playerid][pText][3], pInfo[playerid][pText][4], GetName(playerid));
		mysql_tquery(dbHandle, mysql_query_string, "", "");
	}
	if(pInfo[playerid][pText][1] == 1)
	{
		SendClientMessage(playerid, COLOR_YELLOW, "[Квитанция] {FFFFFF}Ваш бизнес закрыли в связи с нехваткой ресурсов или у вас закончилась аренда");
		SendClientMessage(playerid, COLOR_YELLOW, "[Квитанция] {FFFFFF}Бюджет бизнеса зачислен на ваш банковский счет");
        mysql_query_string[0] = EOS;
		format(mysql_query_string, 256, "UPDATE "T_ACCOUNTS" SET text = '%i, 0, %i, %i, %i' WHERE name = '%s'", pInfo[playerid][pText][0], pInfo[playerid][pText][2], pInfo[playerid][pText][3], pInfo[playerid][pText][4], GetName(playerid));
		mysql_tquery(dbHandle, mysql_query_string, "", "");
	}
	if(pInfo[playerid][pText][2] == 1)
	{
		TransferMoney(-1, playerid, 50000);
		SendClientMessage(playerid, COLOR_YELLOW, "[Информация] {FFFFFF}Вы получили {63BD4E}50.000$ {FFFFFF}за приглашенного игрока");
        mysql_query_string[0] = EOS;
		format(mysql_query_string, 256, "UPDATE "T_ACCOUNTS" SET text = '%i, %i, 0, %i, %i' WHERE name = '%s'", pInfo[playerid][pText][0], pInfo[playerid][pText][1], pInfo[playerid][pText][3], pInfo[playerid][pText][4], GetName(playerid));
		mysql_tquery(dbHandle, mysql_query_string, "", "");
	}
	if(pInfo[playerid][pText][4] == 1)
	{
		SendMes(playerid, COLOR_YELLOW, "[Информация] {FFFFFF}Вы получили бан чата в оффлайне. Причина: %s", pInfo[playerid][pMutedReason]);
        mysql_query_string[0] = EOS;
		format(mysql_query_string, 256, "UPDATE "T_ACCOUNTS" SET text = '%i, %i, %i, %i, 0' WHERE name = '%s'", pInfo[playerid][pText][0], pInfo[playerid][pText][1], pInfo[playerid][pText][2], pInfo[playerid][pText][3], GetName(playerid));
		mysql_tquery(dbHandle, mysql_query_string, "", "");
	}
	if(pInfo[playerid][pVipTime] > 0)
	{
	    new year, month, day;
		new current_date = getdate(year, month, day);
		new time_left = pInfo[playerid][pVipTime] - current_date;
		if(time_left <= 0)
		{
			SendClientMessage(playerid, COLOR_YELLOW, "Срок действия вашего VIP аккаунта истек!");
			pInfo[playerid][pVip] = pInfo[playerid][pVipTime] = 0;
		}
	}
	if(IsAGang(playerid) && CaptureTime > 0)
	{
	    if(GZInfo[CaptureZone][gNapad] == pInfo[playerid][pMember] || GZInfo[CaptureZone][gFrak] == pInfo[playerid][pMember])
	    {
	        CaptureShow(playerid, GZInfo[CaptureZone][gNapad], GZInfo[CaptureZone][gFrak], 1);
	    }
	}
	if(payment_system==1)
	{
	    mysql_query_string[0] = EOS;
		format(mysql_query_string, 128, "SELECT * FROM "T_UNITPAY" WHERE account = '%s' AND status = 1", GetName(playerid));
		mysql_tquery(dbHandle, mysql_query_string, "@unitpay_callback", "dd", playerid, 3);
	}
	else
	{
	    mysql_query_string[0] = EOS;
		format(mysql_query_string, 200, "SELECT amount,status,name FROM "T_MEGAKASSA" WHERE name = '%s' AND status = 'pay'", GetName(playerid));
		mysql_tquery(dbHandle, mysql_query_string, "@megakassa_callback", "dd", playerid, 3);
	}
	if(!CheckExceptionName(GetName(playerid)))
 	{
		if(pInfo[playerid][pLeader] || pInfo[playerid][pAdmin])
		{
		    new string[144];
		    format(string,sizeof(string),"Лидер/админ %s[%d] заш%s [RegIP:%s] - [IP:%s]",GetName(playerid),playerid,(pInfo[playerid][pSex]==1)?("ел"):("ла"),pInfo[playerid][pRegIP],pInfo[playerid][pIP]);
			SendAdminMessage(COLOR_RED,string);
		}
	}
	return 1;
}

stock SaveAccount(playerid) {
	if(!IsPlayerConnected(playerid) || !gPlayerLogged[playerid]) return 1;
	if(pInfo[playerid][pCash] > 1000000000 || pInfo[playerid][pCash] < 0) pInfo[playerid][pCash] = 0;
	if(pInfo[playerid][pBank] > 1000000000 || pInfo[playerid][pBank] < 0) pInfo[playerid][pBank] = 0;

	new gunids[56], ammos[56], cnt, pgun[128], weapid, ammo;
	for(new i; i < 13; i++)
	{
		GetPlayerWeaponData(playerid, i, weapid, ammo);
		if(weapid && ammo && gGuns[playerid][i] == weapid && gAmmos[playerid][i] <= ammo)
		{
			if(!cnt)
			{
				format(gunids, sizeof(gunids), "%d", gGuns[playerid][i]);
				format(ammos, sizeof(ammos), "%d", gAmmos[playerid][i]);
			}
			else
			{
				format(gunids, sizeof(gunids), "%s|%d", gunids, gGuns[playerid][i]);
				format(ammos, sizeof(ammos), "%s|%d", ammos, gAmmos[playerid][i]);
			}
			cnt++;
			if(cnt >= 6) break;
		}
	}
	if(strlen(gunids) && strlen(ammos)) format(pgun,sizeof(pgun),"%s;%s",gunids,ammos);
	mysql_query_string = "UPDATE "T_ACCOUNTS" SET";
	format(mysql_query_string, 1000, "%s ip='%s', level=%d, age=%d, cash=%d, bank=%d, warn=%d,", mysql_query_string, pInfo[playerid][pIP], pInfo[playerid][pLevel], pInfo[playerid][pAge], pInfo[playerid][pCash], pInfo[playerid][pBank], pInfo[playerid][pWarn]);
	format(mysql_query_string, 1000, "%s exp=%d, news=%d, thour=%d, drugs=%d, patron=%d, gunamount=%d,", mysql_query_string, pInfo[playerid][pExp], pInfo[playerid][pNews], pInfo[playerid][pTimeHour], pInfo[playerid][pDrugs], pInfo[playerid][pPatron], pInfo[playerid][pGunAmount]);
	format(mysql_query_string, 1000, "%s heal='%f', married=%d, whomarried='%s', paycheck=%d, vip=%d, viptime=%d,", mysql_query_string, pInfo[playerid][pHeal], pInfo[playerid][pMarried], pInfo[playerid][pWhoMarried], pInfo[playerid][pPayCheck], pInfo[playerid][pVip], pInfo[playerid][pVipTime]);
	format(mysql_query_string, 1000, "%s robhouse=%d, time=%d, fstyle=%d, spawnchange=%d, sdpistol=%d, deserteagle=%d,", mysql_query_string, pInfo[playerid][pRobHouse], pInfo[playerid][pTime], pInfo[playerid][pFightStyle], pInfo[playerid][pSpawnChange], pInfo[playerid][pGunSkill][0], pInfo[playerid][pGunSkill][1]);
	format(mysql_query_string, 1000, "%s shotgun=%d, mp5=%d, ak47=%d, m4=%d, pistol=%d, microuzi=%d,", mysql_query_string, pInfo[playerid][pGunSkill][2], pInfo[playerid][pGunSkill][3], pInfo[playerid][pGunSkill][4], pInfo[playerid][pGunSkill][5], pInfo[playerid][pGunSkill][6], pInfo[playerid][pGunSkill][7]);
	format(mysql_query_string, 1000, "%s hunger=%d, sportexp=%d, city=%d, phonebalance=%d, truckskill=%d, cModel=%d,", mysql_query_string, pInfo[playerid][pHunger], pInfo[playerid][pSportExp], pInfo[playerid][pCity], pInfo[playerid][pPhoneBalance], pInfo[playerid][pTruckSkill], pInfo[playerid][cModel]);
	format(mysql_query_string, 1000, "%s cFuel=%.0f, cMileage=%.1f, cClass=%d, cColor1=%d, cColor2=%d, cCost=%d, cVehcom='%s',", mysql_query_string, pInfo[playerid][cFuel], pInfo[playerid][cMileage], pInfo[playerid][cClass], pInfo[playerid][cColor][0], pInfo[playerid][cColor][1], pInfo[playerid][cCost], pInfo[playerid][cVehcom]);
	format(mysql_query_string, 1000, "%s cPaintjob=%d, repcar='%d, %d', improves='%d, %d, %d, %d', phonenumber=%d, phnumber1=%d, phnumber2=%d,", mysql_query_string, pInfo[playerid][cPaintjob], pInfo[playerid][pRepcar][0], pInfo[playerid][pRepcar][1],
	pInfo[playerid][pImprove][0], pInfo[playerid][pImprove][1], pInfo[playerid][pImprove][2], pInfo[playerid][pImprove][3], pInfo[playerid][pPhoneNumber], pInfo[playerid][pPhoneNumbers][0], pInfo[playerid][pPhoneNumbers][1]);
	format(mysql_query_string, 1000, "%s phnumber3=%d, phnumber4=%d, phnumber5=%d, phnumber6=%d, phnumber7=%d, phnumber8=%d,", mysql_query_string, pInfo[playerid][pPhoneNumbers][2], pInfo[playerid][pPhoneNumbers][3], pInfo[playerid][pPhoneNumbers][4], pInfo[playerid][pPhoneNumbers][5], pInfo[playerid][pPhoneNumbers][6], pInfo[playerid][pPhoneNumbers][7]);
	format(mysql_query_string, 1000, "%s licenses=%d, timewarn=%d, house=%d, biz=%d, gun='%s'", mysql_query_string, pInfo[playerid][pLicenses], pInfo[playerid][pTimeToLastWarn], pInfo[playerid][pHouse], pInfo[playerid][pBiz], pgun);
	format(mysql_query_string, 1000, "%s WHERE id=%d LIMIT 1", mysql_query_string, pInfo[playerid][pID]);
 	return mysql_tquery(dbHandle, mysql_query_string, "", "");
}
stock MysqlUpdatePlayerStr(playerid, field[], data[])
{
 	new mysql_update_string[128];
	format(mysql_update_string, 128, "UPDATE "T_ACCOUNTS" SET %s = '%s' WHERE id = %i LIMIT 1", field, data, pInfo[playerid][pID]);
	mysql_tquery(dbHandle, mysql_update_string, "", "");
	return 1;
}

stock MysqlUpdatePlayerInt(playerid, field[], data)
{
	new mysql_update_string[128];
	format(mysql_update_string, 128, "UPDATE "T_ACCOUNTS" SET %s = '%i' WHERE id = %i LIMIT 1", field, data, pInfo[playerid][pID]);
	mysql_tquery(dbHandle, mysql_update_string, "", "");
	return 1;
}

stock MysqlUpdateHouseStr(idx, field[], data[])
{
	new mysql_update_string[128];
	format(mysql_update_string, 128, "UPDATE "T_HOUSE" SET %s = '%s' WHERE id = %d LIMIT 1", field, data, idx);
	mysql_tquery(dbHandle, mysql_update_string, "", "");
	return 1;
}

stock MysqlUpdateHouseInt(idx, field[], data)
{
	new mysql_update_string[128];
	format(mysql_update_string, 128, "UPDATE "T_HOUSE" SET %s = %d WHERE id = %d LIMIT 1", field, data, idx);
	mysql_tquery(dbHandle, mysql_update_string, "", "");
	return 1;
}

stock MysqlUpdateBizStr(idx, field[], data[])
{
	new mysql_update_string[128];
	format(mysql_update_string, 128, "UPDATE "T_BIZ" SET %s = '%s' WHERE id = %d LIMIT 1", field, data, idx);
	mysql_tquery(dbHandle, mysql_update_string, "", "");
	return 1;
}

stock MysqlUpdateBizInt(idx, field[], data)
{
	new mysql_update_string[128];
	format(mysql_update_string, 128, "UPDATE "T_BIZ" SET %s = %d WHERE id = %d LIMIT 1", field, data, idx);
	mysql_tquery(dbHandle, mysql_update_string, "", "");
	return 1;
}

stock MysqlUpdateGangInt(field[], data)
{
	new mysql_update_string[128];
	format(mysql_update_string, 128, "UPDATE "T_GANG" SET %s = %d LIMIT 1", field, data);
	mysql_tquery(dbHandle, mysql_update_string, "", "");
	return 1;
}

stock MysqlUpdateMafiaInt(field[], data)
{
	new mysql_update_string[128];
	format(mysql_update_string, 128, "UPDATE "T_MAFIA" SET %s = %d LIMIT 1", field, data);
	mysql_tquery(dbHandle, mysql_update_string, "", "");
	return 1;
}

@LoadATM();
@LoadATM()
{
	new time = GetTickCount();

	#if MYSQL_R41_2 == true

	new rows;
	cache_get_row_count(rows);
	if(rows)
	{
		for(new idx = 1; idx <= rows; idx++)
		{
			cache_get_value_index_int(idx-1, 0, ATMInfo[idx][aID]); // ID
			cache_get_value_index_float(idx-1, 1, ATMInfo[idx][aX]); // aX
			cache_get_value_index_float(idx-1, 2, ATMInfo[idx][aY]); // aY
			cache_get_value_index_float(idx-1, 3, ATMInfo[idx][aZ]); // aZ
			cache_get_value_index_float(idx-1, 4, ATMInfo[idx][arX]); // arX
			cache_get_value_index_float(idx-1, 5, ATMInfo[idx][arY]); // arY
			cache_get_value_index_float(idx-1, 6, ATMInfo[idx][arZ]); // arZ
        	TOTALATM++;
			ATM[idx] = CreateObject(2942, ATMInfo[idx][aX], ATMInfo[idx][aY], ATMInfo[idx][aZ], ATMInfo[idx][arX], ATMInfo[idx][arY], ATMInfo[idx][arZ]);
			LABELATM[idx] = CreateDynamic3DTextLabel("Банкомат\n{FFFFFF}Нажмите: ALT", 0xBBBBBBFF, ATMInfo[idx][aX],ATMInfo[idx][aY],ATMInfo[idx][aZ]+1.1,10.0);
        }
    }

    #else

    new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		for(new idx = 1; idx <= rows; idx++)
		{
			ATMInfo[idx][aID] = cache_get_row_int(idx-1, 0, dbHandle); // ID
			ATMInfo[idx][aX] = cache_get_row_float(idx-1, 1, dbHandle); // aX
			ATMInfo[idx][aY] = cache_get_row_float(idx-1, 2, dbHandle); // aY
			ATMInfo[idx][aZ] = cache_get_row_float(idx-1, 3, dbHandle); // aZ
			ATMInfo[idx][arX] = cache_get_row_float(idx-1, 4, dbHandle); // arX
			ATMInfo[idx][arY] = cache_get_row_float(idx-1, 5, dbHandle); // arY
			ATMInfo[idx][arZ] = cache_get_row_float(idx-1, 6, dbHandle); // arZ
        	TOTALATM++;
			ATM[idx] = CreateObject(2942,ATMInfo[idx][aX], ATMInfo[idx][aY], ATMInfo[idx][aZ], ATMInfo[idx][arX], ATMInfo[idx][arY], ATMInfo[idx][arZ]);
			LABELATM[idx] = CreateDynamic3DTextLabel("Банкомат\n{FFFFFF}Нажмите: ALT", 0xBBBBBBFF, ATMInfo[idx][aX],ATMInfo[idx][aY],ATMInfo[idx][aZ]+1.1,10.0);
        }
    }

    #endif

	printf("[Загружено банкоматов]: <%i>. Потрачено: <%i ms>.", TOTALATM, GetTickCount() - time);

	LoadOther();
	return 1;
}
new loadfurg = 0;
@LoadFurgon();
@LoadFurgon(){
	new rows;
	cache_get_row_count(rows);
	for(new i; i<MAX_FURGON; i++){
		if(pInfo[i][pFurgRent] >= gettime()){
			pInfo[i][pFurgRent] = 0;
			pInfo[i][pFurgon] = 0;
			MysqlUpdatePlayerInt(i, "furgon", pInfo[i][pFurgon]);
			MysqlUpdatePlayerInt(i, "furg_day", pInfo[i][pFurgRent]);
		}
	}
	if(rows){
		for(new idx = 1; idx <= rows; idx++){
			pInfo[idx][pFurgon] = cache_get_row_int(idx-1, 0);
			pInfo[idx][pFurgRent] = cache_get_row_int(idx-1, 0);
		}
		loadfurg++;
	}
	printf("Было загружено фургонов - %d", loadfurg);
	return true;
}
@LoadBiz();
@LoadBiz() {
	new time = GetTickCount();

	#if MYSQL_R41_2 == true

	new rows;
	cache_get_row_count(rows);
	for(new i; i < TOTALBIZ; i++) strmid(BizInfo[i][bOwner],"None",0,strlen("None"),MAX_PLAYER_NAME);
	if(rows)
	{
		for(new idx = 1; idx <= rows; idx++)
		{
		    cache_get_value_index_int(idx-1, 0, BizInfo[idx][bID]); // id
			cache_get_value_index(idx-1, 1, BizInfo[idx][bOwner], MAX_PLAYER_NAME); // owner
			cache_get_value_index_int(idx-1, 2, BizInfo[idx][bType]); // type
			cache_get_value_index_int(idx-1, 3, BizInfo[idx][bPrice]); // price
			cache_get_value_index_int(idx-1, 4, BizInfo[idx][bBuyPrice]); // buyprice
			cache_get_value_index_int(idx-1, 5, BizInfo[idx][bMoney]); // money
			cache_get_value_index_int(idx-1, 6, BizInfo[idx][bLic]); // lic
			cache_get_value_index_float(idx-1, 7, BizInfo[idx][bEntr][0]); // x
			cache_get_value_index_float(idx-1, 8, BizInfo[idx][bEntr][1]); // y
			cache_get_value_index_float(idx-1, 9, BizInfo[idx][bEntr][2]); // z
			cache_get_value_index_float(idx-1, 10, BizInfo[idx][bExit][0]); // xt
			cache_get_value_index_float(idx-1, 11, BizInfo[idx][bExit][1]); // yt
			cache_get_value_index_float(idx-1, 12, BizInfo[idx][bExit][2]); // zt
			cache_get_value_index_float(idx-1, 13, BizInfo[idx][bMenu][0]); // menux
			cache_get_value_index_float(idx-1, 14, BizInfo[idx][bMenu][1]); // menuy
			cache_get_value_index_float(idx-1, 15, BizInfo[idx][bMenu][2]); // menuz
			cache_get_value_index_int(idx-1, 16, BizInfo[idx][bInt]); // vint
			cache_get_value_index_int(idx-1, 17, BizInfo[idx][bVirtual]); // virt
			cache_get_value_index_int(idx-1, 18, BizInfo[idx][bMIcon]); // icon
			cache_get_value_index(idx-1, 19, BizInfo[idx][bName], 32); // name
			cache_get_value_index_int(idx-1, 20, BizInfo[idx][bEnter]); // penter
			cache_get_value_index_int(idx-1, 21, BizInfo[idx][bLock]); // block
			cache_get_value_index_int(idx-1, 22, BizInfo[idx][bProduct]); // product
			cache_get_value_index_int(idx-1, 23, BizInfo[idx][bTill]); // till
			cache_get_value_index_int(idx-1, 24, BizInfo[idx][bLockTime]); // locktime
			cache_get_value_index_int(idx-1, 25, BizInfo[idx][bMafia]); // mafia
			cache_get_value_index_int(idx-1, 26, BizInfo[idx][bHeal]); // bHeal
			cache_get_value_index_int(idx-1, 27, BizInfo[idx][bSound]); // bSound
			cache_get_value_index_int(idx-1, 28, BizInfo[idx][bDays]); // bDays

			BizPayForDay[idx]=0;

			if(BizInfo[idx][bDays] < 1 || BizInfo[idx][bDays] > 30) BizInfo[idx][bDays] = 1;

			switch(BizInfo[idx][bMafia])
			{
			   	case TEAM_LCN: MafiaTotalBiz[0]++;
			   	case TEAM_YAKUZA: MafiaTotalBiz[1]++;
			   	case TEAM_RM: MafiaTotalBiz[2]++;
			}

			BizInfo[idx][bIcon] = CreateDynamicMapIcon(BizInfo[idx][bEntr][0],BizInfo[idx][bEntr][1],BizInfo[idx][bEntr][2], BizInfo[idx][bMIcon], 0,-1,-1,-1,200.0);

			new fee[32] = "Вход свободный";
			if(BizInfo[idx][bEnter] != 0) format(fee, sizeof(fee), "Стоимость входа: {FFFFFF}%d$", BizInfo[idx][bEnter]);
/*
			new actor_business[10];
			switch(BizInfo[idx][bType])
			{
			    case 1:
				{
					actor_business[0] = CreateActor(37,4610.8257,-2231.4153,113.7359,179.1558); // 24/7
					SetActorVirtualWorld(actor_business[0], BizInfo[idx][bVirtual]);
					SetActorInvulnerable(actor_business[0], true);
				}
				case 3:
				{
					actor_business[1] = CreateActor(155,374.6071,-117.2773,1001.4922,178.3256); // pizza
					SetActorVirtualWorld(actor_business[1], BizInfo[idx][bVirtual]);
					SetActorInvulnerable(actor_business[1], true);

                    actor_business[2] = CreateActor(155,369.6378,-4.1962,1001.8589,181.0864); // clucken bell
					SetActorVirtualWorld(actor_business[2], BizInfo[idx][bVirtual]);
					SetActorInvulnerable(actor_business[2], true);

					actor_business[3] = CreateActor(155,377.3393,-65.8474,1001.5078,178.7597); // burger
					SetActorVirtualWorld(actor_business[3], BizInfo[idx][bVirtual]);
					SetActorInvulnerable(actor_business[3], true);
				}
				case 4:
				{
				    actor_business[4] = CreateActor(211,501.6995,-20.5080,1000.6797,90.7536); // alhambra
					SetActorVirtualWorld(actor_business[4], BizInfo[idx][bVirtual]);
					SetActorInvulnerable(actor_business[4], true);
				}
			    case 5:
				{
					actor_business[5] = CreateActor(242,496.3791,-77.4632,998.7651,359.5133); // Бар
					SetActorVirtualWorld(actor_business[5], BizInfo[idx][bVirtual]);
					SetActorInvulnerable(actor_business[5], true);
				}
			    case 6:
				{
					actor_business[6] = CreateActor(179,316.1101,-133.9314,999.6016,91.0056); // Аммо
					SetActorVirtualWorld(actor_business[6], BizInfo[idx][bVirtual]);
					SetActorInvulnerable(actor_business[6], true);
				}
				case 8:
				{
				    actor_business[7] = CreateActor(93,472.8560,-1495.9097,-10.7460,79.0676); // skin shop
					SetActorVirtualWorld(actor_business[7], BizInfo[idx][bVirtual]);
					SetActorInvulnerable(actor_business[7], true);
				}
				case 9:
				{
				    actor_business[8] = CreateActor(93,1082.9971,1.2031,1000.6719,268.6976); // казино
				    SetActorVirtualWorld(actor_business[8], BizInfo[idx][bVirtual]);
					SetActorInvulnerable(actor_business[8], true);
				}
				case 10:
				{
				    actor_business[9] = CreateActor(242,-1972.6429,176.5952,27.7349,89.8550); // Бар
				    SetActorVirtualWorld(actor_business[9], BizInfo[idx][bVirtual]);
					SetActorInvulnerable(actor_business[9], true);
				}
			}
*/
			new string[200];
			if(BizInfo[idx][bType] != 2 && BizInfo[idx][bType] != 7)
			{
			    BizInfo[idx][bPickup] = CreateDynamicPickup(19132,1,BizInfo[idx][bEntr][0],BizInfo[idx][bEntr][1],BizInfo[idx][bEntr][2]);
			    BizInfo[idx][bAreaEnter] = CreateDynamicSphere(BizInfo[idx][bEntr][0],BizInfo[idx][bEntr][1],BizInfo[idx][bEntr][2],1.0,0,0);
				BizInfo[idx][bTextExit] = CreateDynamic3DTextLabel("Выход - {EAD86A}'ALT'",0xFFFFFFFF,BizInfo[idx][bExit][0],BizInfo[idx][bExit][1],BizInfo[idx][bExit][2],10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,BizInfo[idx][bVirtual],BizInfo[idx][bInt]);
				BizInfo[idx][bAreaExit] = CreateDynamicSphere(BizInfo[idx][bExit][0],BizInfo[idx][bExit][1],BizInfo[idx][bExit][2],2.0,BizInfo[idx][bVirtual],BizInfo[idx][bInt]);
				BizInfo[idx][bAreaMenu] = CreateDynamicSphere(BizInfo[idx][bMenu][0],BizInfo[idx][bMenu][1],BizInfo[idx][bMenu][2],1.0,BizInfo[idx][bVirtual],BizInfo[idx][bInt]);
				if(BizInfo[idx][bType] == 8) BizInfo[idx][bTextMenu] = CreateDynamic3DTextLabel("Взаимодействие - {EAD86A}'ALT'",0xFFFFFFFF,BizInfo[idx][bMenu][0],BizInfo[idx][bMenu][1],BizInfo[idx][bMenu][2],40.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,BizInfo[idx][bVirtual],BizInfo[idx][bInt]);
				else if(BizInfo[idx][bType] == 2) BizInfo[idx][bTextMenu] = CreateDynamic3DTextLabel("Взаимодействие - {EAD86A}'ALT'",0xFFFFFFFF,BizInfo[idx][bMenu][0],BizInfo[idx][bMenu][1],BizInfo[idx][bMenu][2],15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,BizInfo[idx][bVirtual],BizInfo[idx][bInt]);
				else BizInfo[idx][bTextMenu] = CreateDynamic3DTextLabel("Взаимодействие - {EAD86A}'ALT'",0xFFFFFFFF,BizInfo[idx][bMenu][0],BizInfo[idx][bMenu][1],BizInfo[idx][bMenu][2],40.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,BizInfo[idx][bVirtual],BizInfo[idx][bInt]);
				if(GetString(BizInfo[idx][bOwner],"None"))
				{
					format(string, sizeof(string), "{63BD4E}Название: {FFFFFF}%s (№%i)\n{63BD4E}Бизнес продаётся\n{63BD4E}Цена: {FFFFFF}%d$", BizInfo[idx][bName], idx, BizInfo[idx][bPrice]);
					LABELBIZ[idx] = CreateDynamic3DTextLabel(string,-1,BizInfo[idx][bEntr][0], BizInfo[idx][bEntr][1], BizInfo[idx][bEntr][2],20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
				}
				else
				{
					format(string, sizeof(string), "{63BD4E}Название: {FFFFFF}%s (№%i)\n{63BD4E}Владелец: {FFFFFF}%s\n{63BD4E}%s", BizInfo[idx][bName], idx, BizInfo[idx][bOwner], fee);
					LABELBIZ[idx] = CreateDynamic3DTextLabel(string,-1,BizInfo[idx][bEntr][0], BizInfo[idx][bEntr][1], BizInfo[idx][bEntr][2],20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
				}
			}
			else if(BizInfo[idx][bType] == 2)
			{
				if(GetString(BizInfo[idx][bOwner],"None"))
				{
					format(string, sizeof(string), "{63BD4E}Название: {FFFFFF}%s (№%i)\n{63BD4E}Заправка продаётся\n{63BD4E}Цена: {FFFFFF}%d$\n{63BD4E}Цена за 1 литр - {FFFFFF}%i$\nИспользуйте сигнал {AFAFAF}(Caps Lock / H)", BizInfo[idx][bName], idx, BizInfo[idx][bPrice], BizInfo[idx][bTill]);
					LABELBIZ[idx] = CreateDynamic3DTextLabel(string,-1,BizInfo[idx][bEntr][0], BizInfo[idx][bEntr][1], BizInfo[idx][bEntr][2]+1,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
				}
				else
				{
					format(string, sizeof(string), "{63BD4E}Название: {FFFFFF}%s (№%i)\n{63BD4E}Владелец: {FFFFFF}%s\n{63BD4E}Цена за 1 литр - {FFFFFF}%i$\nИспользуйте сигнал {AFAFAF}(Caps Lock / H)", BizInfo[idx][bName], idx, BizInfo[idx][bOwner], BizInfo[idx][bTill]);
					LABELBIZ[idx] = CreateDynamic3DTextLabel(string,-1,BizInfo[idx][bEntr][0], BizInfo[idx][bEntr][1], BizInfo[idx][bEntr][2]+1,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
				}
			}
			else
			{
				if(GetString(BizInfo[idx][bOwner],"None"))
				{
					format(string, sizeof(string), "{63BD4E}Название: {FFFFFF}%s (№%i)\n{63BD4E}СТО продаётся\n{63BD4E}Цена: {FFFFFF}%d$\n{63BD4E}Цена за 1 запчасть - {FFFFFF}%i$\nИспользуйте сигнал {AFAFAF}(Caps Lock / H)", BizInfo[idx][bName], idx, BizInfo[idx][bPrice], BizInfo[idx][bTill]);
					LABELBIZ[idx] = CreateDynamic3DTextLabel(string,-1,BizInfo[idx][bEntr][0], BizInfo[idx][bEntr][1], BizInfo[idx][bEntr][2],20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
				}
				else
				{
					format(string, sizeof(string), "{63BD4E}Название: {FFFFFF}%s (№%i)\n{63BD4E}Владелец: {FFFFFF}%s\n{63BD4E}Цена за 1 запчасть - {FFFFFF}%i$\nИспользуйте сигнал {AFAFAF}(Caps Lock / H)", BizInfo[idx][bName], idx, BizInfo[idx][bOwner], BizInfo[idx][bTill]);
					LABELBIZ[idx] = CreateDynamic3DTextLabel(string,-1,BizInfo[idx][bEntr][0], BizInfo[idx][bEntr][1], BizInfo[idx][bEntr][2],20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
				}
			}

			TOTALBIZ++;
        }
    }

    #else

    new rows, fields;
	cache_get_data(rows, fields);
	for(new i; i < TOTALBIZ; i++) strmid(BizInfo[i][bOwner],"None",0,strlen("None"),MAX_PLAYER_NAME);
	if(rows)
	{
		for(new idx = 1; idx <= rows; idx++)
		{
		    BizInfo[idx][bID] = cache_get_row_int(idx-1, 0); // id
			cache_get_row(idx-1, 1, BizInfo[idx][bOwner], dbHandle, MAX_PLAYER_NAME); // owner
			BizInfo[idx][bType] = cache_get_row_int(idx-1, 2); // type
			BizInfo[idx][bPrice] = cache_get_row_int(idx-1, 3); // price
			BizInfo[idx][bBuyPrice] = cache_get_row_int(idx-1, 4); // buyprice
			BizInfo[idx][bMoney] = cache_get_row_int(idx-1, 5); // money
			BizInfo[idx][bLic] = cache_get_row_int(idx-1, 6); // lic
			BizInfo[idx][bEntr][0] = cache_get_row_float(idx-1, 7); // x
			BizInfo[idx][bEntr][1] = cache_get_row_float(idx-1, 8); // y
			BizInfo[idx][bEntr][2] = cache_get_row_float(idx-1, 9); // z
			BizInfo[idx][bExit][0] = cache_get_row_float(idx-1, 10); // xt
			BizInfo[idx][bExit][1] = cache_get_row_float(idx-1, 11); // yt
			BizInfo[idx][bExit][2] = cache_get_row_float(idx-1, 12); // zt
			BizInfo[idx][bMenu][0] = cache_get_row_float(idx-1, 13); // menux
			BizInfo[idx][bMenu][1] = cache_get_row_float(idx-1, 14); // menuy
			BizInfo[idx][bMenu][2] = cache_get_row_float(idx-1, 15); // menuz
			BizInfo[idx][bInt] = cache_get_row_int(idx-1, 16); // vint
			BizInfo[idx][bVirtual] = cache_get_row_int(idx-1, 17); // virt
			BizInfo[idx][bMIcon] = cache_get_row_int(idx-1, 18); // icon
			cache_get_row(idx-1, 19, BizInfo[idx][bName], dbHandle, 32); // name
			BizInfo[idx][bEnter] = cache_get_row_int(idx-1, 20); // penter
			BizInfo[idx][bLock] = cache_get_row_int(idx-1, 21); // block
			BizInfo[idx][bProduct] = cache_get_row_int(idx-1, 22); // product
			BizInfo[idx][bTill] = cache_get_row_int(idx-1, 23); // till
			BizInfo[idx][bLockTime] = cache_get_row_int(idx-1, 24); // locktime
			BizInfo[idx][bMafia] = cache_get_row_int(idx-1, 25); // mafia
			BizInfo[idx][bHeal] = cache_get_row_int(idx-1, 26); // bHeal
			BizInfo[idx][bSound] = cache_get_row_int(idx-1, 27); // bSound
			BizInfo[idx][bDays] = cache_get_row_int(idx-1, 28); // bDays

			BizPayForDay[idx]=0;

			if(BizInfo[idx][bDays] < 1 || BizInfo[idx][bDays] > 30) BizInfo[idx][bDays] = 1;

			switch(BizInfo[idx][bMafia])
			{
			   	case TEAM_LCN: MafiaTotalBiz[0]++;
			   	case TEAM_YAKUZA: MafiaTotalBiz[1]++;
			   	case TEAM_RM: MafiaTotalBiz[2]++;
			}

			BizInfo[idx][bIcon] = CreateDynamicMapIcon(BizInfo[idx][bEntr][0],BizInfo[idx][bEntr][1],BizInfo[idx][bEntr][2], BizInfo[idx][bMIcon], 0,-1,-1,-1,200.0);

			new fee[32] = "Вход свободный";
			if(BizInfo[idx][bEnter] != 0) format(fee, sizeof(fee), "Стоимость входа: {FFFFFF}%d$", BizInfo[idx][bEnter]);
/*
			new actor_business[10];
			switch(BizInfo[idx][bType])
			{
			    case 1:
				{
					actor_business[0] = CreateActor(37,4610.8257,-2231.4153,113.7359,179.1558); // 24/7
					SetActorVirtualWorld(actor_business[0], BizInfo[idx][bVirtual]);
					SetActorInvulnerable(actor_business[0], true);
				}
				case 3:
				{
					actor_business[1] = CreateActor(155,374.6071,-117.2773,1001.4922,178.3256); // pizza
					SetActorVirtualWorld(actor_business[1], BizInfo[idx][bVirtual]);
					SetActorInvulnerable(actor_business[1], true);

                    actor_business[2] = CreateActor(155,369.6378,-4.1962,1001.8589,181.0864); // clucken bell
					SetActorVirtualWorld(actor_business[2], BizInfo[idx][bVirtual]);
					SetActorInvulnerable(actor_business[2], true);

					actor_business[3] = CreateActor(155,377.3393,-65.8474,1001.5078,178.7597); // burger
					SetActorVirtualWorld(actor_business[3], BizInfo[idx][bVirtual]);
					SetActorInvulnerable(actor_business[3], true);
				}
				case 4:
				{
				    actor_business[4] = CreateActor(211,501.6995,-20.5080,1000.6797,90.7536); // alhambra
					SetActorVirtualWorld(actor_business[4], BizInfo[idx][bVirtual]);
					SetActorInvulnerable(actor_business[4], true);
				}
			    case 5:
				{
					actor_business[5] = CreateActor(242,496.3791,-77.4632,998.7651,359.5133); // Бар
					SetActorVirtualWorld(actor_business[5], BizInfo[idx][bVirtual]);
					SetActorInvulnerable(actor_business[5], true);
				}
			    case 6:
				{
					actor_business[6] = CreateActor(179,316.1101,-133.9314,999.6016,91.0056); // Аммо
					SetActorVirtualWorld(actor_business[6], BizInfo[idx][bVirtual]);
					SetActorInvulnerable(actor_business[6], true);
				}
				case 8:
				{
				    actor_business[7] = CreateActor(93,472.8560,-1495.9097,-10.7460,79.0676); // skin shop
					SetActorVirtualWorld(actor_business[7], BizInfo[idx][bVirtual]);
					SetActorInvulnerable(actor_business[7], true);
				}
				case 9:
				{
				    actor_business[8] = CreateActor(93,1082.9971,1.2031,1000.6719,268.6976); // казино
				    SetActorVirtualWorld(actor_business[8], BizInfo[idx][bVirtual]);
					SetActorInvulnerable(actor_business[8], true);
				}
				case 10:
				{
				    actor_business[9] = CreateActor(242,-1972.6429,176.5952,27.7349,89.8550); // Бар
				    SetActorVirtualWorld(actor_business[9], BizInfo[idx][bVirtual]);
					SetActorInvulnerable(actor_business[9], true);
				}
			}
*/
			new string[200];
			if(BizInfo[idx][bType] != 2 && BizInfo[idx][bType] != 7)
			{
			    BizInfo[idx][bPickup] = CreateDynamicPickup(19132,1,BizInfo[idx][bEntr][0],BizInfo[idx][bEntr][1],BizInfo[idx][bEntr][2]);
			    BizInfo[idx][bAreaEnter] = CreateDynamicSphere(BizInfo[idx][bEntr][0],BizInfo[idx][bEntr][1],BizInfo[idx][bEntr][2],1.0,0,0);
				BizInfo[idx][bTextExit] = CreateDynamic3DTextLabel("Выход - {EAD86A}'ALT'",0xFFFFFFFF,BizInfo[idx][bExit][0],BizInfo[idx][bExit][1],BizInfo[idx][bExit][2],6.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,BizInfo[idx][bVirtual],BizInfo[idx][bInt]);
				BizInfo[idx][bAreaExit] = CreateDynamicSphere(BizInfo[idx][bExit][0],BizInfo[idx][bExit][1],BizInfo[idx][bExit][2],2.0,BizInfo[idx][bVirtual],BizInfo[idx][bInt]);
				BizInfo[idx][bAreaMenu] = CreateDynamicSphere(BizInfo[idx][bMenu][0],BizInfo[idx][bMenu][1],BizInfo[idx][bMenu][2],1.0,BizInfo[idx][bVirtual],BizInfo[idx][bInt]);
				if(BizInfo[idx][bType] == 8) BizInfo[idx][bTextMenu] = CreateDynamic3DTextLabel("Взаимодействие - {EAD86A}'ALT'",0xFFFFFFFF,BizInfo[idx][bMenu][0],BizInfo[idx][bMenu][1],BizInfo[idx][bMenu][2],40.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,BizInfo[idx][bVirtual],BizInfo[idx][bInt]);
				else if(BizInfo[idx][bType] == 2) BizInfo[idx][bTextMenu] = CreateDynamic3DTextLabel("Взаимодействие - {EAD86A}'ALT'",0xFFFFFFFF,BizInfo[idx][bMenu][0],BizInfo[idx][bMenu][1],BizInfo[idx][bMenu][2],15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,BizInfo[idx][bVirtual],BizInfo[idx][bInt]);
				else BizInfo[idx][bTextMenu] = CreateDynamic3DTextLabel("Взаимодействие - {EAD86A}'ALT'",0xFFFFFFFF,BizInfo[idx][bMenu][0],BizInfo[idx][bMenu][1],BizInfo[idx][bMenu][2],40.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,BizInfo[idx][bVirtual],BizInfo[idx][bInt]);
				if(GetString(BizInfo[idx][bOwner],"None"))
				{
					format(string, sizeof(string), "{63BD4E}Название: {FFFFFF}%s (№%i)\n{63BD4E}Бизнес продаётся\n{63BD4E}Цена: {FFFFFF}%d$", BizInfo[idx][bName], idx, BizInfo[idx][bPrice]);
					LABELBIZ[idx] = CreateDynamic3DTextLabel(string,-1,BizInfo[idx][bEntr][0], BizInfo[idx][bEntr][1], BizInfo[idx][bEntr][2],20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
				}
				else
				{
					format(string, sizeof(string), "{63BD4E}Название: {FFFFFF}%s (№%i)\n{63BD4E}Владелец: {FFFFFF}%s\n{63BD4E}%s", BizInfo[idx][bName], idx, BizInfo[idx][bOwner], fee);
					LABELBIZ[idx] = CreateDynamic3DTextLabel(string,-1,BizInfo[idx][bEntr][0], BizInfo[idx][bEntr][1], BizInfo[idx][bEntr][2],20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
				}
			}
			else if(BizInfo[idx][bType] == 2)
			{
				if(GetString(BizInfo[idx][bOwner],"None"))
				{
					format(string, sizeof(string), "{63BD4E}Название: {FFFFFF}%s (№%i)\n{63BD4E}Заправка продаётся\n{63BD4E}Цена: {FFFFFF}%d$\n{63BD4E}Цена за 1 литр - {FFFFFF}%i$\nИспользуйте сигнал {AFAFAF}(Caps Lock / H)", BizInfo[idx][bName], idx, BizInfo[idx][bPrice], BizInfo[idx][bTill]);
					LABELBIZ[idx] = CreateDynamic3DTextLabel(string,-1,BizInfo[idx][bEntr][0], BizInfo[idx][bEntr][1], BizInfo[idx][bEntr][2]+1,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
				}
				else
				{
					format(string, sizeof(string), "{63BD4E}Название: {FFFFFF}%s (№%i)\n{63BD4E}Владелец: {FFFFFF}%s\n{63BD4E}Цена за 1 литр - {FFFFFF}%i$\nИспользуйте сигнал {AFAFAF}(Caps Lock / H)", BizInfo[idx][bName], idx, BizInfo[idx][bOwner], BizInfo[idx][bTill]);
					LABELBIZ[idx] = CreateDynamic3DTextLabel(string,-1,BizInfo[idx][bEntr][0], BizInfo[idx][bEntr][1], BizInfo[idx][bEntr][2]+1,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
				}
			}
			else
			{
				if(GetString(BizInfo[idx][bOwner],"None"))
				{
					format(string, sizeof(string), "{63BD4E}Название: {FFFFFF}%s (№%i)\n{63BD4E}СТО продаётся\n{63BD4E}Цена: {FFFFFF}%d$\n{63BD4E}Цена за 1 запчасть - {FFFFFF}%i$\nИспользуйте сигнал {AFAFAF}(Caps Lock / H)", BizInfo[idx][bName], idx, BizInfo[idx][bPrice], BizInfo[idx][bTill]);
					LABELBIZ[idx] = CreateDynamic3DTextLabel(string,-1,BizInfo[idx][bEntr][0], BizInfo[idx][bEntr][1], BizInfo[idx][bEntr][2],20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
				}
				else
				{
					format(string, sizeof(string), "{63BD4E}Название: {FFFFFF}%s (№%i)\n{63BD4E}Владелец: {FFFFFF}%s\n{63BD4E}Цена за 1 запчасть - {FFFFFF}%i$\nИспользуйте сигнал {AFAFAF}(Caps Lock / H)", BizInfo[idx][bName], idx, BizInfo[idx][bOwner], BizInfo[idx][bTill]);
					LABELBIZ[idx] = CreateDynamic3DTextLabel(string,-1,BizInfo[idx][bEntr][0], BizInfo[idx][bEntr][1], BizInfo[idx][bEntr][2],20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
				}
			}
			TOTALBIZ++;
        }
    }

    #endif

	printf("[Загружено бизнесов]: <%i>. Потрачено: <%i ms>.", TOTALBIZ, GetTickCount() - time);
	return 1;
}

@LoadHouse();
@LoadHouse()
{
	new time = GetTickCount();

	#if MYSQL_R41_2 == true

	new rows;
	cache_get_row_count(rows);
	for(new i; i < TOTALHOUSE; i++) strmid(HouseInfo[i][hOwner],"None",0,strlen("None"),MAX_PLAYER_NAME);
	if(rows)
	{
		for(new idx = 1; idx <= rows; idx++)
		{
			cache_get_value_index_int(idx-1, 0, HouseInfo[idx][hID]); // id
			cache_get_value_index_float(idx-1, 1, HouseInfo[idx][hEntr][0]); // hEntrx
			cache_get_value_index_float(idx-1, 2, HouseInfo[idx][hEntr][1]); // hEntry
			cache_get_value_index_float(idx-1, 3, HouseInfo[idx][hEntr][2]); // hEntrz
			cache_get_value_index_float(idx-1, 4, HouseInfo[idx][hCar][0]); // carx
			cache_get_value_index_float(idx-1, 5, HouseInfo[idx][hCar][1]); // cary
			cache_get_value_index_float(idx-1, 6, HouseInfo[idx][hCar][2]); // carz
			cache_get_value_index_float(idx-1, 7, HouseInfo[idx][hCar][3]); // carfa
			cache_get_value_index(idx-1, 8, HouseInfo[idx][hOwner], MAX_PLAYER_NAME); // hOwner
			cache_get_value_index_int(idx-1, 9, HouseInfo[idx][hClass]); // hClass
			cache_get_value_index_int(idx-1, 10, HouseInfo[idx][hPrice]); // hPrice
			cache_get_value_index_int(idx-1, 11, HouseInfo[idx][hBuyPrice]); // buyprice
			cache_get_value_index_int(idx-1, 12, HouseInfo[idx][hInt]); // hInt
			cache_get_value_index_int(idx-1, 13, HouseInfo[idx][hLock]); // hLock
			cache_get_value_index_int(idx-1, 14, HouseInfo[idx][hDays]); // hDays
			cache_get_value_index_int(idx-1, 15, HouseInfo[idx][hHeal]); // hHeal
			cache_get_value_index_int(idx-1, 16, HouseInfo[idx][hGarage]); // hGarage
			cache_get_value_index_int(idx-1, 17, HouseInfo[idx][hAutoDoors]); // hAutoDoors
			cache_get_value_index_int(idx-1, 18, HouseInfo[idx][hSubsidia]); // hSubsidia

			if(HouseInfo[idx][hDays] < 1 || HouseInfo[idx][hDays] > 30) HouseInfo[idx][hDays] = 1;

			HouseInfo[idx][hMIcon] = CreateDynamicMapIcon(HouseInfo[idx][hEntr][0], HouseInfo[idx][hEntr][1], HouseInfo[idx][hEntr][2], (GetString(HouseInfo[idx][hOwner],"None")) ? (31) : (32), 0, -1, -1, -1, 150.0);

			HouseInfo[idx][hObjectEnter] = CreateDynamicObject(1317, HouseInfo[idx][hEntr][0], HouseInfo[idx][hEntr][1], HouseInfo[idx][hEntr][2]-1.5, 0.0, 0.0, 0.0, -1, -1, -1, 50.0, 50.0);
           	if(GetString(HouseInfo[idx][hOwner],"None")) SetDynamicObjectMaterial(HouseInfo[idx][hObjectEnter], 0, 18646, "matcolours", "green", 0xAA00FF00);
			else SetDynamicObjectMaterial(HouseInfo[idx][hObjectEnter], 0, 18646, "matcolours", "orange", 0xAAFF8000);

			HouseInfo[idx][hAreaEnter] = CreateDynamicSphere(HouseInfo[idx][hEntr][0], HouseInfo[idx][hEntr][1], HouseInfo[idx][hEntr][2], 1.3, 0, 0, -1);

			new texthouse[15];
			format(texthouse, sizeof(texthouse), "Дом №%i", idx);
			HouseInfo[idx][hTextEnter] = CreateDynamic3DTextLabel(texthouse, 0xFFFFFFFF, HouseInfo[idx][hEntr][0], HouseInfo[idx][hEntr][1], HouseInfo[idx][hEntr][2]+0.3, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);

			new _c = HouseInfo[idx][hClass], _i = HouseInfo[idx][hInt];
			if(!HouseInfo[idx][hAutoDoors]) HouseInfo[idx][hTextExit] = CreateDynamic3DTextLabel("Выход - {EAD86A}'/exit'\n{FFFFFF}Управление домом - {EAD86A}'/hpanel'", 0xFFFFFFFF, HintsInfo[_c][_i][hiExitX], HintsInfo[_c][_i][hiExitY], HintsInfo[_c][_i][hiExitZ], 6.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, HouseInfo[idx][hID], HintsInfo[_c][_i][hiInt]);
			else HouseInfo[idx][hTextExit] = CreateDynamic3DTextLabel("Выход - {EAD86A}'ALT'\n{FFFFFF}Управление домом - {EAD86A}'/hpanel'", 0xFFFFFFFF, HintsInfo[_c][_i][hiExitX], HintsInfo[_c][_i][hiExitY], HintsInfo[_c][_i][hiExitZ], 6.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, HouseInfo[idx][hID], HintsInfo[_c][_i][hiInt]);

			TOTALHOUSE++;
        }
    }

    #else

    new rows, fields;
	cache_get_data(rows, fields);
	for(new i; i < TOTALHOUSE; i++) strmid(HouseInfo[i][hOwner],"None",0,strlen("None"),MAX_PLAYER_NAME);
	if(rows)
	{
		for(new idx = 1; idx <= rows; idx++)
		{
		    HouseInfo[idx][hID] = cache_get_row_int(idx-1, 0); // id
			HouseInfo[idx][hEntr][0] = cache_get_row_float(idx-1, 1); // hEntrx
			HouseInfo[idx][hEntr][1] = cache_get_row_float(idx-1, 2); // hEntry
			HouseInfo[idx][hEntr][2] = cache_get_row_float(idx-1, 3); // hEntrz
			HouseInfo[idx][hCar][0] = cache_get_row_float(idx-1, 4); // carx
			HouseInfo[idx][hCar][1] = cache_get_row_float(idx-1, 5); // cary
			HouseInfo[idx][hCar][2] = cache_get_row_float(idx-1, 6); // carz
			HouseInfo[idx][hCar][3] = cache_get_row_float(idx-1, 7); // carfa
			cache_get_row(idx-1, 8, HouseInfo[idx][hOwner], dbHandle, MAX_PLAYER_NAME); // hOwner
			HouseInfo[idx][hClass] = cache_get_row_int(idx-1, 9); // hClass
			HouseInfo[idx][hPrice] = cache_get_row_int(idx-1, 10); // hPrice
			HouseInfo[idx][hBuyPrice] = cache_get_row_int(idx-1, 11); // buyprice
			HouseInfo[idx][hInt] = cache_get_row_int(idx-1, 12); // hInt
			HouseInfo[idx][hLock] = cache_get_row_int(idx-1, 13); // hLock
			HouseInfo[idx][hDays] = cache_get_row_int(idx-1, 14); // hDays
			HouseInfo[idx][hHeal] = cache_get_row_int(idx-1, 15); // hHeal
			HouseInfo[idx][hGarage] = cache_get_row_int(idx-1, 16); // hGarage
			HouseInfo[idx][hAutoDoors] = cache_get_row_int(idx-1, 17); // hAutoDoors
			HouseInfo[idx][hSubsidia] = cache_get_row_int(idx-1, 18); // hSubsidia

			if(HouseInfo[idx][hDays] < 1 || HouseInfo[idx][hDays] > 30) HouseInfo[idx][hDays] = 1;

           	HouseInfo[idx][hMIcon] = CreateDynamicMapIcon(HouseInfo[idx][hEntr][0], HouseInfo[idx][hEntr][1], HouseInfo[idx][hEntr][2], (GetString(HouseInfo[idx][hOwner],"None")) ? (31) : (32), 0, -1, -1, -1, 150.0);

			HouseInfo[idx][hObjectEnter] = CreateDynamicObject(1317, HouseInfo[idx][hEntr][0], HouseInfo[idx][hEntr][1], HouseInfo[idx][hEntr][2]-1.5, 0.0, 0.0, 0.0, -1, -1, -1, 50.0, 50.0);
           	if(GetString(HouseInfo[idx][hOwner],"None")) SetDynamicObjectMaterial(HouseInfo[idx][hObjectEnter], 0, 18646, "matcolours", "green", 0xAA00FF00);
			else SetDynamicObjectMaterial(HouseInfo[idx][hObjectEnter], 0, 18646, "matcolours", "orange", 0xAAFF8000);

			HouseInfo[idx][hAreaEnter] = CreateDynamicSphere(HouseInfo[idx][hEntr][0], HouseInfo[idx][hEntr][1], HouseInfo[idx][hEntr][2], 1.3, 0, 0, -1);

            new texthouse[15];
			format(texthouse, sizeof(texthouse), "Дом №%i", idx);
			HouseInfo[idx][hTextEnter] = CreateDynamic3DTextLabel(texthouse, 0xFFFFFFFF, HouseInfo[idx][hEntr][0], HouseInfo[idx][hEntr][1], HouseInfo[idx][hEntr][2]+0.3, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);

			new _c = HouseInfo[idx][hClass], _i = HouseInfo[idx][hInt];
			if(!HouseInfo[idx][hAutoDoors]) HouseInfo[idx][hTextExit] = CreateDynamic3DTextLabel("Выход - {EAD86A}'/exit'\n{FFFFFF}Управление домом - {EAD86A}'/hpanel'", 0xFFFFFFFF, HintsInfo[_c][_i][hiExitX], HintsInfo[_c][_i][hiExitY], HintsInfo[_c][_i][hiExitZ], 6.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, HouseInfo[idx][hID], HintsInfo[_c][_i][hiInt]);
			else HouseInfo[idx][hTextExit] = CreateDynamic3DTextLabel("Выход - {EAD86A}'ALT'\n{FFFFFF}Управление домом - {EAD86A}'/hpanel'", 0xFFFFFFFF, HintsInfo[_c][_i][hiExitX], HintsInfo[_c][_i][hiExitY], HintsInfo[_c][_i][hiExitZ], 6.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, HouseInfo[idx][hID], HintsInfo[_c][_i][hiInt]);

			TOTALHOUSE++;
        }
    }

    #endif

	printf("[Загружено домов]: <%i>. Потрачено: <%i ms>.", TOTALHOUSE, GetTickCount() - time);
	return 1;
}

@LoadMafia();
@LoadMafia()
{
	new time = GetTickCount();

	#if MYSQL_R41_2 == true

	new rows;
	cache_get_row_count(rows);
	if(rows)
	{
	    cache_get_value_index_int(0, 0, FracBank[5]); // yakuzabank
		cache_get_value_index_int(0, 1, FracBank[6]); // lcnbank
		cache_get_value_index_int(0, 2, FracBank[7]); // rmbank
		cache_get_value_index_int(0, 3, DrugsBank[TEAM_YAKUZA]); // yakuzadrugs
		cache_get_value_index_int(0, 4, DrugsBank[TEAM_LCN]); // lcndrugs
		cache_get_value_index_int(0, 5, DrugsBank[TEAM_RM]); // rmdrugs
	    cache_get_value_index_int(0, 6, MafiaPatr[0]); // lcnpat
		cache_get_value_index_int(0, 7, MafiaPatr[1]); // yakpat
		cache_get_value_index_int(0, 8, MafiaPatr[2]); // rmpat
		cache_get_value_index_int(0, 9, MafiaEd[0]); // lcned
		cache_get_value_index_int(0, 10, MafiaEd[1]); // yaked
		cache_get_value_index_int(0, 11, MafiaEd[2]); // rmed
		new buff[3];
		cache_get_value_index_int(0, 12, buff[0]); // bskl_l
		b_Sklad[5] = buff[0];
		cache_get_value_index_int(0, 13, buff[1]); // bskl_y
		b_Sklad[6] = buff[1];
		cache_get_value_index_int(0, 14, buff[2]); // bskl_r
		b_Sklad[7] = buff[2];
    }

    #else

    new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
	    FracBank[5] = cache_get_row_int(0, 0); // yakuzabank
		FracBank[6] = cache_get_row_int(0, 1); // lcnbank
		FracBank[7] = cache_get_row_int(0, 2); // rmbank
		DrugsBank[TEAM_YAKUZA] = cache_get_row_int(0, 3); // yakuzadrugs
		DrugsBank[TEAM_LCN] = cache_get_row_int(0, 4); // lcndrugs
		DrugsBank[TEAM_RM] = cache_get_row_int(0, 5); // rmdrugs
	    MafiaPatr[0] = cache_get_row_int(0, 6); // lcnpat
		MafiaPatr[1] = cache_get_row_int(0, 7); // yakpat
		MafiaPatr[2] = cache_get_row_int(0, 8); // rmpat
		MafiaEd[0] = cache_get_row_int(0, 9); // lcned
		MafiaEd[1] = cache_get_row_int(0, 10); // yaked
		MafiaEd[2] = cache_get_row_int(0, 11); // rmed
		b_Sklad[5] = cache_get_row_int(0, 12); // bskl_l
		b_Sklad[6] = cache_get_row_int(0, 13); // bskl_y
		b_Sklad[7] = cache_get_row_int(0, 14); // bskl_r
    }

    #endif

	printf("[Загружены склады мафий]: Потрачено: <%i ms>.", GetTickCount() - time);
	return 1;
}

@LoadGang();
@LoadGang()
{
	new time = GetTickCount();

	#if MYSQL_R41_2 == true

	new rows;
	cache_get_row_count(rows);
	if(rows)
	{
	    cache_get_value_index_int(0, 0, FracBank[0]); // grovebank
		cache_get_value_index_int(0, 1, FracBank[1]); // ballasbank
		cache_get_value_index_int(0, 2, FracBank[2]); // rifabank
		cache_get_value_index_int(0, 3, FracBank[3]); // aztecbank
		cache_get_value_index_int(0, 4, FracBank[4]); // vagosbank
		cache_get_value_index_int(0, 5, DrugsBank[TEAM_GROVE]); // grovedrugs
		cache_get_value_index_int(0, 6, DrugsBank[TEAM_BALLAS]); // ballasdrugs
		cache_get_value_index_int(0, 7, DrugsBank[TEAM_RIFA]); // rifadrugs
		cache_get_value_index_int(0, 8, DrugsBank[TEAM_AZTECAS]); // aztecdrugs
		cache_get_value_index_int(0, 9, DrugsBank[TEAM_VAGOS]); // vagosdrugs
	    cache_get_value_index_int(0, 10, GangPatr[0]); // grovepat
		cache_get_value_index_int(0, 11, GangPatr[1]); // ballaspat
		cache_get_value_index_int(0, 12, GangPatr[2]); // rifapat
		cache_get_value_index_int(0, 13, GangPatr[3]); // aztecpat
		cache_get_value_index_int(0, 14, GangPatr[4]); // vagospat
		cache_get_value_index_int(0, 15, GangEd[0]); // groveed
		cache_get_value_index_int(0, 16, GangEd[1]); // ballased
		cache_get_value_index_int(0, 17, GangEd[2]); // rifaed
		cache_get_value_index_int(0, 18, GangEd[3]); // azteced
		cache_get_value_index_int(0, 19, GangEd[4]); // vagosed
		cache_get_value_index_int(0, 20, b_Capture[0]); // bcapt_g
		cache_get_value_index_int(0, 21, b_Capture[1]); // bcapt_b
		cache_get_value_index_int(0, 22, b_Capture[2]); // bcapt_r
		cache_get_value_index_int(0, 23, b_Capture[3]); // bcapt_a
		cache_get_value_index_int(0, 24, b_Capture[4]); // bcapt_v
		cache_get_value_index_int(0, 25, b_Sklad[5]); // bskl_g
		cache_get_value_index_int(0, 26, b_Sklad[6]); // bskl_b
		cache_get_value_index_int(0, 27, b_Sklad[7]); // bskl_r
		cache_get_value_index_int(0, 28, b_Sklad[8]); // bskl_a
		cache_get_value_index_int(0, 29, b_Sklad[9]); // bskl_v
    }

    #else

    new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
	    FracBank[0] = cache_get_row_int(0, 0); // grovebank
		FracBank[1] = cache_get_row_int(0, 1); // ballasbank
		FracBank[2] = cache_get_row_int(0, 2); // rifabank
		FracBank[3] = cache_get_row_int(0, 3); // aztecbank
		FracBank[4] = cache_get_row_int(0, 4); // vagosbank
		DrugsBank[TEAM_GROVE] = cache_get_row_int(0, 5); // grovedrugs
		DrugsBank[TEAM_BALLAS] = cache_get_row_int(0, 6); // ballasdrugs
		DrugsBank[TEAM_RIFA] = cache_get_row_int(0, 7); // rifadrugs
		DrugsBank[TEAM_AZTECAS] = cache_get_row_int(0, 8); // aztecdrugs
		DrugsBank[TEAM_VAGOS] = cache_get_row_int(0, 9); // vagosdrugs
	    GangPatr[0] = cache_get_row_int(0, 10); // grovepat
		GangPatr[1] = cache_get_row_int(0, 11); // ballaspat
		GangPatr[2] = cache_get_row_int(0, 12); // rifapat
		GangPatr[3] = cache_get_row_int(0, 13); // aztecpat
		GangPatr[4] = cache_get_row_int(0, 14); // vagospat
		GangEd[0] = cache_get_row_int(0, 15); // groveed
		GangEd[1] = cache_get_row_int(0, 16); // ballased
		GangEd[2] = cache_get_row_int(0, 17); // rifaed
		GangEd[3] = cache_get_row_int(0, 18); // azteced
		GangEd[4] = cache_get_row_int(0, 19); // vagosed
		b_Capture[0] = cache_get_row_int(0, 20); // bcapt_g
		b_Capture[1] = cache_get_row_int(0, 21); // bcapt_b
		b_Capture[2] = cache_get_row_int(0, 22); // bcapt_r
		b_Capture[3] = cache_get_row_int(0, 23); // bcapt_a
		b_Capture[4] = cache_get_row_int(0, 24); // bcapt_v
		b_Sklad[0] = cache_get_row_int(0, 25); // bskl_g
		b_Sklad[1] = cache_get_row_int(0, 26); // bskl_b
		b_Sklad[2] = cache_get_row_int(0, 27); // bskl_r
		b_Sklad[3] = cache_get_row_int(0, 28); // bskl_a
		b_Sklad[4] = cache_get_row_int(0, 29); // bskl_v
    }

    #endif

	printf("[Загружены склады банд]: Потрачено: <%i ms>.", GetTickCount() - time);
	return 1;
}

@LoadGZ();
@LoadGZ()
{
	new time = GetTickCount();

	#if MYSQL_R41_2 == true

	new rows, TOTALGZ;
	cache_get_row_count(rows);
	if(rows)
	{
		for(new idx = 0; idx < rows; idx++)
		{
		    cache_get_value_index_int(idx, 0, GZInfo[idx][gID]); // id
			cache_get_value_index_float(idx, 1, GZInfo[idx][gCoords][0]); // ginfo1
            cache_get_value_index_float(idx, 2, GZInfo[idx][gCoords][1]); // ginfo2
            cache_get_value_index_float(idx, 3, GZInfo[idx][gCoords][2]); // ginfo3
            cache_get_value_index_float(idx, 4, GZInfo[idx][gCoords][3]); // ginfo4
            cache_get_value_index_int(idx, 5, GZInfo[idx][gFrak]); // fraction
        	TOTALGZ++;
	        GangZone[idx] = GangZoneCreate(GZInfo[idx][gCoords][0],GZInfo[idx][gCoords][1],GZInfo[idx][gCoords][2],GZInfo[idx][gCoords][3]);
			CaptureZone = 0;
			CaptureTime = 0;
        }
    }

    #else

    new rows, fields, TOTALGZ;
	cache_get_data(rows, fields);
	if(rows)
	{
		for(new idx = 0; idx < rows; idx++)
		{
		    GZInfo[idx][gID] = cache_get_row_int(idx, 0); // id
			GZInfo[idx][gCoords][0] = cache_get_row_float(idx, 1); // ginfo1
            GZInfo[idx][gCoords][1] = cache_get_row_float(idx, 2); // ginfo2
            GZInfo[idx][gCoords][2] = cache_get_row_float(idx, 3); // ginfo3
            GZInfo[idx][gCoords][3] = cache_get_row_float(idx, 4); // ginfo4
            GZInfo[idx][gFrak] = cache_get_row_int(idx, 5); // fraction
        	TOTALGZ++;
	        GangZone[idx] = GangZoneCreate(GZInfo[idx][gCoords][0],GZInfo[idx][gCoords][1],GZInfo[idx][gCoords][2],GZInfo[idx][gCoords][3]);
			CaptureZone = 0;
			CaptureTime = 0;
        }
    }

    #endif

	printf("[Загружено гангзон]: <%i>. Потрачено: <%i ms>.", TOTALGZ, GetTickCount() - time);
	return 1;
}

stock VehNumber()
{
  	new rand; rand = random(11);
  	new chr[15];
  	switch(rand) {
    	case 0: format(chr,20,"%s","A");
    	case 1: format(chr,20,"%s","B");
    	case 2: format(chr,20,"%s","C");
	    case 3: format(chr,20,"%s","T");
	    case 4: format(chr,20,"%s","X");
	    case 5: format(chr,20,"%s","E");
	    case 6: format(chr,20,"%s","K");
	    case 7: format(chr,20,"%s","M");
	    case 8: format(chr,20,"%s","H");
	    case 9: format(chr,20,"%s","P");
	    case 10: format(chr,20,"%s","O");
  	}
  	return chr;
}
stock LoadOther() {
	new time = GetTickCount();

	if(!fexist("config.ini")) return printf("file 'config.ini' not found");
	new GetFile = ini_openFile("config.ini");
	ini_getInteger(GetFile, "ashbank", FracBank[11]);
    ini_getInteger(GetFile, "lsnbank", FracBank[8]);
    ini_getInteger(GetFile, "sfnbank", FracBank[9]);
    ini_getInteger(GetFile, "lvnbank", FracBank[10]);
    ini_getInteger(GetFile, "smspricels", SmsPrice[0]);
    ini_getInteger(GetFile, "smspricesf", SmsPrice[1]);
    ini_getInteger(GetFile, "smspricelv", SmsPrice[2]);
    ini_getInteger(GetFile, "callpricels", CallPrice[0]);
    ini_getInteger(GetFile, "callpricesf", CallPrice[1]);
    ini_getInteger(GetFile, "callpricelv", CallPrice[2]);
    ini_getInteger(GetFile, "advertpricels", AdvertPrice[0]);
    ini_getInteger(GetFile, "advertpricesf", AdvertPrice[1]);
    ini_getInteger(GetFile, "advertpricelv", AdvertPrice[2]);
    ini_getInteger(GetFile, "mineral", Mineral);
    ini_getInteger(GetFile, "guncoal", gGunWorkWH[0]);
    ini_getInteger(GetFile, "gunwood", gGunWorkWH[1]);
    ini_getInteger(GetFile, "gun", gGunWorkWH[2]);
    ini_getInteger(GetFile, "so_gun", gGunWorkWH[3]);
    ini_getInteger(GetFile, "drova", Lessdrov);
    ini_getInteger(GetFile, "armygun", gArmyWarehouse[0]);
    ini_getInteger(GetFile, "armyammo", gArmyWarehouse[1]);
    ini_getInteger(GetFile, "d_exp", doubling_exp);
    ini_getInteger(GetFile, "d_donate", doubling_donate);
    ini_getInteger(GetFile, "d_skills", doubling_skills);
    ini_getInteger(GetFile, "d_salary", doubling_salary);
    ini_getInteger(GetFile, "d_status", doubling_status);
    ini_getInteger(GetFile, "banknarko", BankNarko);
    ini_getInteger(GetFile, "pricenarko", PriceNarko);
    ini_getInteger(GetFile, "payment", payment_system);
    ini_getInteger(GetFile, "medls", MedWH[0]);
    ini_getInteger(GetFile, "medsf", MedWH[1]);
	ini_getInteger(GetFile, "medlv", MedWH[2]);
	ini_closeFile(GetFile);

	if(!doubling_status) {
        if(gTestServer) SendRconCommand("hostname "SERVER_NAME" | TEST STARTUP!");
		else SendRconCommand("hostname "SERVER_NAME"");
	}
	else {
        if(gTestServer) SendRconCommand("hostname "SERVER_NAME" | TEST STARTUP! | X2 Неделя");
		else SendRconCommand("hostname "SERVER_NAME" | X2 Неделя ");
	}
	printf("[Loaded Other]: Потрачено: <%i ms>.",GetTickCount() - time);
	return 1;
}

stock SaveOther(){
	if(!fexist("config.ini")) return printf("file 'config.ini' not found");
	new GetFile = ini_openFile("config.ini");
	ini_setInteger(GetFile, "ashbank", FracBank[11]);
    ini_setInteger(GetFile, "lsnbank", FracBank[8]);
    ini_setInteger(GetFile, "sfnbank", FracBank[9]);
    ini_setInteger(GetFile, "lvnbank", FracBank[10]);
    ini_setInteger(GetFile, "smspricels", SmsPrice[0]);
    ini_setInteger(GetFile, "smspricesf", SmsPrice[1]);
    ini_setInteger(GetFile, "smspricelv", SmsPrice[2]);
    ini_setInteger(GetFile, "callpricels", CallPrice[0]);
    ini_setInteger(GetFile, "callpricesf", CallPrice[1]);
    ini_setInteger(GetFile, "callpricelv", CallPrice[2]);
    ini_setInteger(GetFile, "advertpricels", AdvertPrice[0]);
    ini_setInteger(GetFile, "advertpricesf", AdvertPrice[1]);
    ini_setInteger(GetFile, "advertpricelv", AdvertPrice[2]);
    ini_setInteger(GetFile, "mineral", Mineral);
    ini_setInteger(GetFile, "guncoal", gGunWorkWH[0]);
    ini_setInteger(GetFile, "gunwood", gGunWorkWH[1]);
    ini_setInteger(GetFile, "gun", gGunWorkWH[2]);
    ini_setInteger(GetFile, "so_gun", gGunWorkWH[3]);
    ini_setInteger(GetFile, "drova", Lessdrov);
    ini_setInteger(GetFile, "armygun", gArmyWarehouse[0]);
    ini_setInteger(GetFile, "armyammo", gArmyWarehouse[1]);
    ini_setInteger(GetFile, "d_exp", doubling_exp);
    ini_setInteger(GetFile, "d_donate", doubling_donate);
    ini_setInteger(GetFile, "d_skills", doubling_skills);
    ini_setInteger(GetFile, "d_salary", doubling_salary);
    ini_setInteger(GetFile, "d_status", doubling_status);
    ini_setInteger(GetFile, "banknarko", BankNarko);
    ini_setInteger(GetFile, "pricenarko", PriceNarko);
    ini_setInteger(GetFile, "payment", payment_system);
    ini_setInteger(GetFile, "medls", MedWH[0]);
    ini_setInteger(GetFile, "medsf", MedWH[1]);
	ini_setInteger(GetFile, "medlv", MedWH[2]);
	ini_closeFile(GetFile);
	return 1;
}
stock LoadObjects(){
	#include <objectsss>
}
stock DelObjects(playerid) {
	#include <remobj>
	return false;
}
stock LoadTextDraws()
{
    hunger_background_TD[0] = TextDrawCreate(547.800048, 35.662445, "_");
	TextDrawBackgroundColor(hunger_background_TD[0], 255);
	TextDrawFont(hunger_background_TD[0], 1);
	TextDrawLetterSize(hunger_background_TD[0], -0.002499, 0.487500);
	TextDrawColor(hunger_background_TD[0], -1);
	TextDrawSetOutline(hunger_background_TD[0], 0);
	TextDrawSetProportional(hunger_background_TD[0], 1);
	TextDrawSetShadow(hunger_background_TD[0], 1);
	TextDrawUseBox(hunger_background_TD[0], 1);
	TextDrawBoxColor(hunger_background_TD[0], 255);
	TextDrawTextSize(hunger_background_TD[0], 605.329589, 0.049999);
	TextDrawSetSelectable(hunger_background_TD[0], 0);

	hunger_background_TD[1] = TextDrawCreate(549.599975, 37.274993, "_");
	TextDrawBackgroundColor(hunger_background_TD[1], 255);
	TextDrawFont(hunger_background_TD[1], 1);
	TextDrawLetterSize(hunger_background_TD[1], 0.000000, 0.182000);
	TextDrawColor(hunger_background_TD[1], -1);
	TextDrawSetOutline(hunger_background_TD[1], 0);
	TextDrawSetProportional(hunger_background_TD[1], 1);
	TextDrawSetShadow(hunger_background_TD[1], 1);
	TextDrawUseBox(hunger_background_TD[1], 1);
	TextDrawBoxColor(hunger_background_TD[1], 1787344480);
	TextDrawTextSize(hunger_background_TD[1], 603.450317, 0.000000);
	TextDrawSetSelectable(hunger_background_TD[1], 0);

	panel_capture_TD[0] = TextDrawCreate(211.000000, 310.000000, "_");
	TextDrawUseBox(panel_capture_TD[0], 1);
	TextDrawTextSize(panel_capture_TD[0], 5.000000, 200.000000);
	TextDrawLetterSize(panel_capture_TD[0], 0.240000, -7.000000);
	TextDrawBoxColor(panel_capture_TD[0], COLOR_BOX);

	panel_capture_TD[1] = TextDrawCreate(14.000000, 260.000000, "Time:");
	TextDrawBackgroundColor(panel_capture_TD[1], 255);
	TextDrawFont(panel_capture_TD[1], 1);
	TextDrawLetterSize(panel_capture_TD[1], 0.500000, 1.000000);
	TextDrawColor(panel_capture_TD[1], COLOR_GREEN);
	TextDrawSetOutline(panel_capture_TD[1], 1);
	TextDrawSetProportional(panel_capture_TD[1], 1);

	panel_capture_TD[2] = TextDrawCreate(75.000000, 260.000000, "10:00");
	TextDrawBackgroundColor(panel_capture_TD[2], 255);
	TextDrawFont(panel_capture_TD[2], 1);
	TextDrawLetterSize(panel_capture_TD[2], 0.500000, 1.000000);
	TextDrawColor(panel_capture_TD[2], COLOR_GREEN);
	TextDrawSetOutline(panel_capture_TD[2], 1);
	TextDrawSetProportional(panel_capture_TD[2], 1);

	panel_capture_TD[3] = TextDrawCreate(14.000000, 276.000000, "_");
	TextDrawBackgroundColor(panel_capture_TD[3], 255);
	TextDrawFont(panel_capture_TD[3], 1);
	TextDrawLetterSize(panel_capture_TD[3], 0.500000, 1.000000);
	TextDrawColor(panel_capture_TD[3], -1);
	TextDrawSetOutline(panel_capture_TD[3], 1);
	TextDrawSetProportional(panel_capture_TD[3], 1);

	panel_capture_TD[4] = TextDrawCreate(14.000000, 293.000000, "_");
	TextDrawBackgroundColor(panel_capture_TD[4], 255);
	TextDrawFont(panel_capture_TD[4], 1);
	TextDrawLetterSize(panel_capture_TD[4], 0.500000, 1.000000);
	TextDrawColor(panel_capture_TD[4], -1);
	TextDrawSetOutline(panel_capture_TD[4], 1);
	TextDrawSetProportional(panel_capture_TD[4], 1);

	panel_capture_TD[5] = TextDrawCreate(190.000000, 277.000000, "0");
	TextDrawBackgroundColor(panel_capture_TD[5], 255);
	TextDrawFont(panel_capture_TD[5], 1);
	TextDrawLetterSize(panel_capture_TD[5], 0.500000, 1.000000);
	TextDrawColor(panel_capture_TD[5], COLOR_RED);
	TextDrawSetOutline(panel_capture_TD[5], 1);
	TextDrawSetProportional(panel_capture_TD[5], 1);

	panel_capture_TD[6] = TextDrawCreate(190.000000, 293.000000, "0");
	TextDrawBackgroundColor(panel_capture_TD[6], 255);
	TextDrawFont(panel_capture_TD[6], 1);
	TextDrawLetterSize(panel_capture_TD[6], 0.500000, 1.000000);
	TextDrawColor(panel_capture_TD[6], COLOR_RED);
	TextDrawSetOutline(panel_capture_TD[6], 1);
	TextDrawSetProportional(panel_capture_TD[6], 1);

	enable_gps_TD[0] = TextDrawCreate(145.000000, 312.562500, "usebox");
	TextDrawLetterSize(enable_gps_TD[0], 0.000000, 1.870833);
	TextDrawTextSize(enable_gps_TD[0], 28.000000, 0.000000);
	TextDrawAlignment(enable_gps_TD[0], 1);
	TextDrawColor(enable_gps_TD[0], 0);
	TextDrawUseBox(enable_gps_TD[0], true);
	TextDrawBoxColor(enable_gps_TD[0], 102);
	TextDrawSetShadow(enable_gps_TD[0], 0);
	TextDrawSetOutline(enable_gps_TD[0], 0);
	TextDrawFont(enable_gps_TD[0], 0);

	enable_gps_TD[1] = TextDrawCreate(37.500000, 313.687500, "GPS ~g~~h~ENABLED");
	TextDrawLetterSize(enable_gps_TD[1], 0.357999, 1.368124);
	TextDrawAlignment(enable_gps_TD[1], 1);
	TextDrawColor(enable_gps_TD[1], -1);
	TextDrawSetShadow(enable_gps_TD[1], 0);
	TextDrawSetOutline(enable_gps_TD[1], 1);
	TextDrawBackgroundColor(enable_gps_TD[1], 51);
	TextDrawFont(enable_gps_TD[1], 2);
	TextDrawSetProportional(enable_gps_TD[1], 1);

	//

	enable_animation_TD[0] = TextDrawCreate(625.500000, 401.375000, "usebox");
	TextDrawLetterSize(enable_animation_TD[0], 0.000000, 1.483333);
	TextDrawTextSize(enable_animation_TD[0], 395.000000, 0.000000);
	TextDrawAlignment(enable_animation_TD[0], 1);
	TextDrawColor(enable_animation_TD[0], 0);
	TextDrawUseBox(enable_animation_TD[0], true);
	TextDrawBoxColor(enable_animation_TD[0], 102);
	TextDrawSetShadow(enable_animation_TD[0], 0);
	TextDrawSetOutline(enable_animation_TD[0], 0);
	TextDrawFont(enable_animation_TD[0], 0);

    enable_animation_TD[1] = TextDrawCreate(510.500000, 401.187500, "~k~~PED_SPRINT~ ~g~~h~to stop animation");
	TextDrawLetterSize(enable_animation_TD[1], 0.310999, 1.284999);
	TextDrawAlignment(enable_animation_TD[1], 2);
	TextDrawColor(enable_animation_TD[1], 0x3399FFFF);
	TextDrawSetShadow(enable_animation_TD[1], 0);
	TextDrawSetOutline(enable_animation_TD[1], 1);
	TextDrawBackgroundColor(enable_animation_TD[1], 51);
	TextDrawFont(enable_animation_TD[1], 2);
	TextDrawSetProportional(enable_animation_TD[1], 1);
	// hud
	fhud_TD[0] = TextDrawCreate(434.1363, 30.1666, "Other:fm"); // ?????
	TextDrawTextSize(fhud_TD[0], 266.0000, 193.0000);
	TextDrawAlignment(fhud_TD[0], 1);
	TextDrawColor(fhud_TD[0], -1);
	TextDrawBackgroundColor(fhud_TD[0], 255);
	TextDrawFont(fhud_TD[0], 4);
	TextDrawSetProportional(fhud_TD[0], 0);
	TextDrawSetShadow(fhud_TD[0], 0);
	// контейнеры
	cont_TD[0] = TextDrawCreate(174.1067, 78.5832, "Other:FluxKost"); // ?????
	TextDrawTextSize(cont_TD[0], 286.0000, 209.0000);
	TextDrawAlignment(cont_TD[0], 1);
	TextDrawColor(cont_TD[0], -1);
	TextDrawBackgroundColor(cont_TD[0], 255);
	TextDrawFont(cont_TD[0], 4);
	TextDrawSetProportional(cont_TD[0], 0);
	TextDrawSetShadow(cont_TD[0], 0);

	cont_TD[1] = TextDrawCreate(242.6796, 216.8332, "TYPE_CONTAINER:_ONES"); // ?????
	TextDrawLetterSize(cont_TD[1], 0.1155, 1.1857);
	TextDrawAlignment(cont_TD[1], 1);
	TextDrawColor(cont_TD[1], -16776961);
	TextDrawBackgroundColor(cont_TD[1], 255);
	TextDrawFont(cont_TD[1], 2);
	TextDrawSetProportional(cont_TD[1], 1);
	TextDrawSetShadow(cont_TD[1], 0);

	cont_TD[2] = TextDrawCreate(316.2375, 176.5832, "JAPAN"); // ?????
	TextDrawLetterSize(cont_TD[2], 0.1835, 0.8416);
	TextDrawAlignment(cont_TD[2], 1);
	TextDrawColor(cont_TD[2], -1);
	TextDrawBackgroundColor(cont_TD[2], 255);
	TextDrawFont(cont_TD[2], 2);
	TextDrawSetProportional(cont_TD[2], 1);
	TextDrawSetShadow(cont_TD[2], 4);

	cont_TD[3] = TextDrawCreate(335.9154, 233.1665, "OPENED"); // ?????
	TextDrawLetterSize(cont_TD[3], 0.1826, 0.8766);
	TextDrawAlignment(cont_TD[3], 1);
	TextDrawColor(cont_TD[3], -1);
	TextDrawBackgroundColor(cont_TD[3], 255);
	TextDrawFont(cont_TD[3], 2);
	TextDrawSetProportional(cont_TD[3], 1);
	TextDrawSetShadow(cont_TD[3], 0);

	cont_TD[4] = TextDrawCreate(267.0426, 233.1665, "CLOSED"); // ?????
	TextDrawLetterSize(cont_TD[4], 0.1826, 0.8766);
	TextDrawAlignment(cont_TD[4], 1);
	TextDrawColor(cont_TD[4], -1);
	TextDrawBackgroundColor(cont_TD[4], 255);
	TextDrawFont(cont_TD[4], 2);
	TextDrawSetProportional(cont_TD[4], 1);
	TextDrawSetShadow(cont_TD[4], 0);
	// speedometr
	speed_TD[0] = TextDrawCreate(527.8403, 383.6665, "LD_SPAC:white"); // ?????
	TextDrawTextSize(speed_TD[0], 1.0000, 58.0000);
	TextDrawAlignment(speed_TD[0], 1);
	TextDrawColor(speed_TD[0], -1);
	TextDrawBackgroundColor(speed_TD[0], 255);
	TextDrawFont(speed_TD[0], 4);
	TextDrawSetProportional(speed_TD[0], 0);
	TextDrawSetShadow(speed_TD[0], 0);

	speed_TD[1] = TextDrawCreate(528.7775, 383.6665, "LD_SPAC:white"); // ?????
	TextDrawTextSize(speed_TD[1], -45.0000, 1.0000);
	TextDrawAlignment(speed_TD[1], 1);
	TextDrawColor(speed_TD[1], -1);
	TextDrawBackgroundColor(speed_TD[1], 255);
	TextDrawFont(speed_TD[1], 4);
	TextDrawSetProportional(speed_TD[1], 0);
	TextDrawSetShadow(speed_TD[1], 0);

	speed_TD[2] = TextDrawCreate(496.6177, 411.0828, "KM/H"); // ?????
	TextDrawLetterSize(speed_TD[2], 0.1718, 1.1857);
	TextDrawTextSize(speed_TD[2], 513.0000, 0.0000);
	TextDrawAlignment(speed_TD[2], 1);
	TextDrawColor(speed_TD[2], -1061109505);
	TextDrawBackgroundColor(speed_TD[2], 255);
	TextDrawFont(speed_TD[2], 2);
	TextDrawSetProportional(speed_TD[2], 1);
	TextDrawSetShadow(speed_TD[2], 0);

	speed_TD[3] = TextDrawCreate(597.6503, 376.0830, "LD_BEAT:chit"); // ?????
	TextDrawTextSize(speed_TD[3], 43.0000, 46.0000);
	TextDrawAlignment(speed_TD[3], 1);
	TextDrawColor(speed_TD[3], -2147483393);
	TextDrawBackgroundColor(speed_TD[3], 255);
	TextDrawFont(speed_TD[3], 4);
	TextDrawSetProportional(speed_TD[3], 0);
	TextDrawSetShadow(speed_TD[3], 0);

	speed_TD[4] = TextDrawCreate(476.7720, 402.9165, "LD_BEAT:chit"); // ?????
	TextDrawTextSize(speed_TD[4], 43.0000, 46.0000);
	TextDrawAlignment(speed_TD[4], 1);
	TextDrawColor(speed_TD[4], -2147483393);
	TextDrawBackgroundColor(speed_TD[4], 255);
	TextDrawFont(speed_TD[4], 4);
	TextDrawSetProportional(speed_TD[4], 0);
	TextDrawSetShadow(speed_TD[4], 0);

	speed_TD[5] = TextDrawCreate(495.5122, 394.7500, "LD_SPAC:white"); // ?????
	TextDrawTextSize(speed_TD[5], 41.0000, 46.0000);
	TextDrawAlignment(speed_TD[5], 1);
	TextDrawColor(speed_TD[5], -2147483393);
	TextDrawBackgroundColor(speed_TD[5], 255);
	TextDrawFont(speed_TD[5], 4);
	TextDrawSetProportional(speed_TD[5], 0);
	TextDrawSetShadow(speed_TD[5], 0);

	speed_TD[6] = TextDrawCreate(484.2677, 383.6665, "LD_SPAC:white"); // ?????
	TextDrawTextSize(speed_TD[6], 41.0000, 46.0000);
	TextDrawAlignment(speed_TD[6], 1);
	TextDrawColor(speed_TD[6], -2147483393);
	TextDrawBackgroundColor(speed_TD[6], 255);
	TextDrawFont(speed_TD[6], 4);
	TextDrawSetProportional(speed_TD[6], 0);
	TextDrawSetShadow(speed_TD[6], 0);

	speed_TD[7] = TextDrawCreate(495.0437, 383.6665, "LD_SPAC:white"); // ?????
	TextDrawTextSize(speed_TD[7], 41.0000, 46.0000);
	TextDrawAlignment(speed_TD[7], 1);
	TextDrawColor(speed_TD[7], -2147483393);
	TextDrawBackgroundColor(speed_TD[7], 255);
	TextDrawFont(speed_TD[7], 4);
	TextDrawSetProportional(speed_TD[7], 0);
	TextDrawSetShadow(speed_TD[7], 0);

	speed_TD[8] = TextDrawCreate(534.3997, 383.6665, "LD_SPAC:white"); // ?????
	TextDrawTextSize(speed_TD[8], 41.0000, 46.0000);
	TextDrawAlignment(speed_TD[8], 1);
	TextDrawColor(speed_TD[8], -2147483393);
	TextDrawBackgroundColor(speed_TD[8], 255);
	TextDrawFont(speed_TD[8], 4);
	TextDrawSetProportional(speed_TD[8], 0);
	TextDrawSetShadow(speed_TD[8], 0);

	speed_TD[9] = TextDrawCreate(533.4625, 394.7499, "LD_SPAC:white"); // ?????
	TextDrawTextSize(speed_TD[9], 41.0000, 46.0000);
	TextDrawAlignment(speed_TD[9], 1);
	TextDrawColor(speed_TD[9], -2147483393);
	TextDrawBackgroundColor(speed_TD[9], 255);
	TextDrawFont(speed_TD[9], 4);
	TextDrawSetProportional(speed_TD[9], 0);
	TextDrawSetShadow(speed_TD[9], 0);

	speed_TD[10] = TextDrawCreate(573.7556, 394.1665, "LD_SPAC:white"); // ?????
	TextDrawTextSize(speed_TD[10], 41.0000, 46.0000);
	TextDrawAlignment(speed_TD[10], 1);
	TextDrawColor(speed_TD[10], -2147483393);
	TextDrawBackgroundColor(speed_TD[10], 255);
	TextDrawFont(speed_TD[10], 4);
	TextDrawSetProportional(speed_TD[10], 0);
	TextDrawSetShadow(speed_TD[10], 0);

	speed_TD[11] = TextDrawCreate(592.0277, 394.1665, "LD_SPAC:white"); // ?????
	TextDrawTextSize(speed_TD[11], 41.0000, 46.0000);
	TextDrawAlignment(speed_TD[11], 1);
	TextDrawColor(speed_TD[11], -2147483393);
	TextDrawBackgroundColor(speed_TD[11], 255);
	TextDrawFont(speed_TD[11], 4);
	TextDrawSetProportional(speed_TD[11], 0);
	TextDrawSetShadow(speed_TD[11], 0);

	speed_TD[12] = TextDrawCreate(575.1608, 383.6665, "LD_SPAC:white"); // ?????
	TextDrawTextSize(speed_TD[12], 44.0000, 28.0000);
	TextDrawAlignment(speed_TD[12], 1);
	TextDrawColor(speed_TD[12], -2147483393);
	TextDrawBackgroundColor(speed_TD[12], 255);
	TextDrawFont(speed_TD[12], 4);
	TextDrawSetProportional(speed_TD[12], 0);
	TextDrawSetShadow(speed_TD[12], 0);

	speed_TD[13] = TextDrawCreate(484.7363, 430.3333, "LD_SPAC:white"); // ?????
	TextDrawTextSize(speed_TD[13], -1.0000, -47.0000);
	TextDrawAlignment(speed_TD[13], 1);
	TextDrawColor(speed_TD[13], -1);
	TextDrawBackgroundColor(speed_TD[13], 255);
	TextDrawFont(speed_TD[13], 4);
	TextDrawSetProportional(speed_TD[13], 0);
	TextDrawSetShadow(speed_TD[13], 0);

	speed_TD[14] = TextDrawCreate(528.7772, 439.6666, "LD_SPAC:white"); // ?????
	TextDrawTextSize(speed_TD[14], -36.0000, 1.0000);
	TextDrawAlignment(speed_TD[14], 1);
	TextDrawColor(speed_TD[14], -1);
	TextDrawBackgroundColor(speed_TD[14], 255);
	TextDrawFont(speed_TD[14], 4);
	TextDrawSetProportional(speed_TD[14], 0);
	TextDrawSetShadow(speed_TD[14], 0);

	speed_TD[15] = TextDrawCreate(527.3718, 383.6665, "LD_SPAC:white"); // ?????
	TextDrawTextSize(speed_TD[15], 92.0000, 1.0000);
	TextDrawAlignment(speed_TD[15], 1);
	TextDrawColor(speed_TD[15], -1);
	TextDrawBackgroundColor(speed_TD[15], 255);
	TextDrawFont(speed_TD[15], 4);
	TextDrawSetProportional(speed_TD[15], 0);
	TextDrawSetShadow(speed_TD[15], 0);

	speed_TD[16] = TextDrawCreate(528.3090, 439.6665, "LD_SPAC:white"); // ?????
	TextDrawTextSize(speed_TD[16], 92.0000, 1.0000);
	TextDrawAlignment(speed_TD[16], 1);
	TextDrawColor(speed_TD[16], -1);
	TextDrawBackgroundColor(speed_TD[16], 255);
	TextDrawFont(speed_TD[16], 4);
	TextDrawSetProportional(speed_TD[16], 0);
	TextDrawSetShadow(speed_TD[16], 0);

	speed_TD[17] = TextDrawCreate(540.9591, 439.6665, "LD_SPAC:white"); // ?????
	TextDrawTextSize(speed_TD[17], 92.0000, 1.0000);
	TextDrawAlignment(speed_TD[17], 1);
	TextDrawColor(speed_TD[17], -1);
	TextDrawBackgroundColor(speed_TD[17], 255);
	TextDrawFont(speed_TD[17], 4);
	TextDrawSetProportional(speed_TD[17], 0);
	TextDrawSetShadow(speed_TD[17], 0);

	speed_TD[18] = TextDrawCreate(633.7264, 440.8334, "LD_SPAC:white"); // ?????
	TextDrawTextSize(speed_TD[18], -1.0000, -46.0000);
	TextDrawAlignment(speed_TD[18], 1);
	TextDrawColor(speed_TD[18], -1);
	TextDrawBackgroundColor(speed_TD[18], 255);
	TextDrawFont(speed_TD[18], 4);
	TextDrawSetProportional(speed_TD[18], 0);
	TextDrawSetShadow(speed_TD[18], 0);
	//Логотип
/*	logo_TD[0] = TextDrawCreate(537.2110, -20.5832, "Other:FluxLogo"); // ?????
	TextDrawTextSize(logo_TD[0], 137.0000, 84.0000);
	TextDrawAlignment(logo_TD[0], 1);
	TextDrawColor(logo_TD[0], -1);
	TextDrawBackgroundColor(logo_TD[0], 255);
	TextDrawFont(logo_TD[0], 4);
	TextDrawSetProportional(logo_TD[0], 0);
	TextDrawSetShadow(logo_TD[0], 0);*/

	// mkpp
	mkpp_TD[0] = TextDrawCreate(401.8082, 374.3333, "Other:FluxP"); // пусто
	TextDrawTextSize(mkpp_TD[0], 49.0000, 58.0000);
	TextDrawAlignment(mkpp_TD[0], 1);
	TextDrawColor(mkpp_TD[0], -1);
	TextDrawBackgroundColor(mkpp_TD[0], 255);
	TextDrawFont(mkpp_TD[0], 4);
	TextDrawSetProportional(mkpp_TD[0], 0);
	TextDrawSetShadow(mkpp_TD[0], 0);

	car_showroom_info_TD[0] = TextDrawCreate(425.000000,120.000000,!"~w~Press ~b~~h~~k~~GO_LEFT~ ~w~to switch vehicle");
	car_showroom_info_TD[1] = TextDrawCreate(425.000000,150.000000,!"~w~Press ~b~~h~~k~~GROUP_CONTROL_BWD~ ~w~to switch color");
	car_showroom_info_TD[2] = TextDrawCreate(425.000000,165.000000,!"~w~Press ~b~~h~ENTER ~w~to buy");
	car_showroom_info_TD[3] = TextDrawCreate(425.000000,180.000000,!"~w~Press ~b~~h~C ~w~to cancel");
	car_showroom_info_TD[4] = TextDrawCreate(425.000000,135.000000,!"~w~Press ~b~~h~~k~~GO_RIGHT~ ~w~to switch vehicle");

	TextDrawLetterSize(car_showroom_info_TD[0],0.259999,1.110000);
	TextDrawLetterSize(car_showroom_info_TD[1],0.245999,1.110000);
	TextDrawLetterSize(car_showroom_info_TD[2],0.259999,1.010000);
	TextDrawLetterSize(car_showroom_info_TD[3],0.245999,1.110000);
	TextDrawLetterSize(car_showroom_info_TD[4],0.259999,1.010000);

	for(new i; i < 5; i++)
	{
		TextDrawFont(car_showroom_info_TD[i],2);
		TextDrawBackgroundColor(car_showroom_info_TD[i],COLOR_BLACK);
		TextDrawColor(car_showroom_info_TD[i],-1);
		TextDrawSetOutline(car_showroom_info_TD[i],1);
		TextDrawSetProportional(car_showroom_info_TD[i],1);
		TextDrawSetShadow(car_showroom_info_TD[i],1);
	}
}

stock LoadServer()
{
	new string[200];
    for(new i; i < MAX_CAM_AREA; i ++){
		Area_SpeedingCam[i] = CreateDynamicSphere(SpeedCamPos[i][0], SpeedCamPos[i][1], SpeedCamPos[i][2], 15.0, 0, 0);
		CreateDynamicObjectEx(18880, SpeedCamPos[i][0], SpeedCamPos[i][1], SpeedCamPos[i][2], SpeedCamPos[i][3], SpeedCamPos[i][4], SpeedCamPos[i][5], 500.000, 500.000);
		format(string, sizeof(string), "Радар {3399FF}№%i\n{63BD4E}Работает\n{FFFFFF}Ограничение скорости: {FF6600}%i км/ч",i+1,MAX_SPEED_RADAR);
		CreateDynamic3DTextLabel(string, 0xFFFFFFFF, SpeedCamPos[i][0],SpeedCamPos[i][1],SpeedCamPos[i][2] + 3.5, 15.0);
	}
	AreaInfo[arSawmillWork][0] = CreateDynamicSphere(1824.7159,1445.6605,10.2403,1.0);
	CreateDynamicPickup(1275,1,1824.7159,1445.6605,10.2403);
	AreaInfo[arSawmillWork][1] = CreateDynamicSphere(1829.4143,1450.7188,10.3400,1.0);
	CreateDynamicPickup(1239,1,1829.4143,1450.7188,10.3400);

    AreaInfo[arMineWorkUnload][0] = CreateDynamicSphere(-880.9386,1217.7375,3011.5386,3.0);
	CreateDynamicPickup(905,1,-880.9386,1217.7375,3011.5386-1.7);
	AreaInfo[arMineWorkUnload][1] = CreateDynamicSphere(-882.9556,1217.7389,3011.5386,3.0);
	CreateDynamicPickup(905,1,-882.9556,1217.7389,3011.5386-1.7);
	AreaInfo[arMineWorkUnload][2] = CreateDynamicSphere(-885.4828,1217.7394,3011.5386,3.0);
	CreateDynamicPickup(905,1,-885.4828,1217.7394,3011.5386-1.7);

	AreaInfo[arMineWork][0] = CreateDynamicSphere(-1029.2728,1231.6492,3011.560,1.0);
    CreateDynamicPickup(1275,23,-1029.2728,1231.6492,3011.560);
    AreaInfo[arMineWork][1] = CreateDynamicSphere(2498.6360,-1496.5698,24.2386,1.0);// О шахте
    CreateDynamicPickup(1239,23,2498.6360,-1496.5698,24.2386);
    AreaInfo[arMineWork][2] = CreateDynamicSphere(-765.8156,1198.5582,3011.3538,1.0);
    CreateDynamicPickup(1239,23,-765.8156,1198.5582,3011.3538);
    AreaInfo[arMineWork][3] = CreateDynamicSphere(-764.6458,1227.7086,3011.3350,1.0);
    CreateDynamicPickup(1239,23,-764.6458,1227.7086,3011.3350);
    AreaInfo[arMineWork][4] = CreateDynamicSphere(-749.7770,1202.6311,3011.3230,1.0);
    CreateDynamicPickup(1239,23,-749.7770,1202.6311,3011.3230);

    for(new i; i < 13; i++){
		if(i == 12) AreaInfo[arGunWorkUnload] = CreateDynamicSphere(gGunWorkCPs[i][0],gGunWorkCPs[i][1],gGunWorkCPs[i][2],1.0);
		else if(i < 12 && i >= 2) AreaInfo[arGunWorkWork][i-2] = CreateDynamicSphere(gGunWorkCPs[i][0],gGunWorkCPs[i][1],gGunWorkCPs[i][2],1.0);
		else if(i < 2){
			AreaInfo[arGunWorkLoad][i] = CreateDynamicSphere(gGunWorkCPs[i][0],gGunWorkCPs[i][1],gGunWorkCPs[i][2],1.0);
			CreateDynamicPickup(19198,1,gGunWorkCPs[i][0],gGunWorkCPs[i][1],gGunWorkCPs[i][2]);
		}
	}
    AreaInfo[arGunWork] = CreateDynamicSphere(2740.8669,-2204.5449,3044.0100,1.0,1,1);
    CreateDynamicPickup(1275,1,2740.8669,-2204.5449,3044.0100);

    AreaInfo[arTruckLoadCoal] = CreateDynamicSphere(2637.6301,-1420.4867,24.2823,5.0);
	AreaInfo[arTruckWagonCoal] = CreateDynamicSphere(384.9763,902.6101,20.2163,35.0);
	AreaInfo[arTruckLoadWood] = CreateDynamicSphere(1832.8173,1452.6482,9.9700,5.0);
	AreaInfo[arTruckWagonWood] = CreateDynamicSphere(1832.8173,1452.6482,9.9700,25.0);
	AreaInfo[arTruckLoadWeapon] = CreateDynamicSphere(2676.0488,-2182.6819,17.9080,5.0);
	AreaInfo[arTruckWagonWeapon] = CreateDynamicSphere(2676.0488,-2182.6819,17.9080,25.0);
	AreaInfo[arTruckUnload][0] = CreateDynamicSphere(2738.2090,-2272.2029,17.9269,10.0);
	AreaInfo[arTruckUnload][1] = CreateDynamicSphere(1785.4550,2266.6836,15.7749,10.0);

	gTruckLoadTurnText[0] = CreateDynamic3DTextLabel("_",0xFFFFFFFF,2644.9692,-1410.0939,24.2823,30.0);//Шахта
	gTruckLoadTurnText[1] = CreateDynamic3DTextLabel("_",0xFFFFFFFF,1806.6862,1466.7002,9.9587+0.5,35.0);//Лесопилка
	gTruckLoadTurnText[3] = CreateDynamic3DTextLabel("_",0xFFFFFFFF,2689.1724,-2179.6106,17.9080+0.5,35.0);//Завод

    AreaInfo[arServerHelp][0] = CreateDynamicSphere(2509.2761,-2121.5645,24.1524,1.0);
    CreateDynamicPickup(1239,1,2509.2761,-2121.5645,24.1524);
    AreaInfo[arServerHelp][1] = CreateDynamicSphere(1141.7009,-1772.3213,16.5992,1.0);
    CreateDynamicPickup(1239,1,1141.7009,-1772.3213,16.5992);

	AreaInfo[arBankMenu][0] = CreateDynamicSphere(367.5596,960.5578,-6.5172,1.0,-1,1);
	AreaInfo[arBankMenu][1] = CreateDynamicSphere(366.5194,957.4618,-6.5172,1.0,-1,1);//До сюда
	AreaInfo[arBankMenu][2] = CreateDynamicSphere(324.4780,2100.6582,514.0400,1.0,-1,1);
	AreaInfo[arBankMenu][3] = CreateDynamicSphere(324.4760,2097.2866,514.0400,1.0,-1,1);
	AreaInfo[arBankMenu][4] = CreateDynamicSphere(324.4764,2093.8772,514.0400,1.0,-1,1);
	CreateDynamic3DTextLabel("Услуги банка\n{FFFFFF}Нажмите: ALT",0xBBBBBBFF,367.5596,960.5578,-6.5172,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
	CreateDynamic3DTextLabel("Услуги банка\n{FFFFFF}Нажмите: ALT",0xBBBBBBFF,366.5194,957.4618,-6.5172,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,-1,1);
	CreateDynamic3DTextLabel("Услуги банка\n{FFFFFF}Нажмите: ALT",0xBBBBBBFF,324.4780,2100.6582,514.0400,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,-1,1);
	CreateDynamic3DTextLabel("Услуги банка\n{FFFFFF}Нажмите: ALT",0xBBBBBBFF,324.4760,2097.2866,514.0400,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,-1,1);
	CreateDynamic3DTextLabel("Услуги банка\n{FFFFFF}Нажмите: ALT",0xBBBBBBFF,324.4764,2093.8772,514.0400,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,-1,1);

	AreaInfo[arAdminsZoneHP] = CreateDynamicSphere(1576.0422,-1265.7157,115.9189,1.0,55);
	CreateDynamicPickup(1240,1,1576.0422,-1265.7157,115.9189,55);

	//spawnls
	AreaInfo[arHotdogHP][0] = CreateDynamicSphere(2266.8484,-2196.3257,22.7105,1.0);
	CreateDynamicPickup(2663,1,2266.8484,-2196.3257,22.7105);
	AreaInfo[arHotdogHP][1] = CreateDynamicSphere(1765.3723,-1921.0709,13.5660,1.0);
	CreateDynamicPickup(2663,1,1765.3723,-1921.0709,13.5660);
	AreaInfo[arHotdogHP][2] = CreateDynamicSphere(2511.9128,-2124.4443,24.1524,1.0);
	CreateDynamicPickup(2663,1,2511.9128,-2124.4443,24.1524);
	//spawnls2
	AreaInfo[arHotdogHP][3] = CreateDynamicSphere(1161.6558,-1756.1954,13.6352,1.0);
	CreateDynamicPickup(2663,1,1161.6558,-1756.1954,13.6352);
	AreaInfo[arHotdogHP][4] = CreateDynamicSphere(1161.5302,-1753.4464,13.6037,1.0);
	CreateDynamicPickup(2663,1,1161.5302,-1753.4464,13.6037);

	CreateDynamicPickup(11745,1,416.0905,1677.8708,-31.3641,1,1);
	CreateDynamicPickup(11745,1,416.0905,1677.8708,-31.3641,5,1);
	CreateDynamicPickup(11745,1,416.0905,1677.8708,-31.3641,3,1);
	CreateDynamicPickup(11745,1,416.0905,1677.8708,-31.3641,4,1);
	CreateDynamicPickup(11745,1,416.0905,1677.8708,-31.3641,2,1);
	AreaInfo[arGunSklad][0] = CreateDynamicSphere(416.0905,1677.8708,-31.3641,1.0,1,1); // Grove ган
	AreaInfo[arGunSklad][1] = CreateDynamicSphere(416.0905,1677.8708,-31.3641,1.0,5,1); // ОПГ Тамбовская ган
	AreaInfo[arGunSklad][2] = CreateDynamicSphere(416.0905,1677.8708,-31.3641,1.0,3,1); // Южная братва ган
	AreaInfo[arGunSklad][3] = CreateDynamicSphere(416.0905,1677.8708,-31.3641,1.0,4,1); // Aztecas ган
	AreaInfo[arGunSklad][4] = CreateDynamicSphere(416.0905,1677.8708,-31.3641,1.0,2,1); // ОПГ Ореховская ган

	CreateDynamicPickup(11745,1,263.9488,1762.9425,575.3359,1,5);
	CreateDynamicPickup(11745,1,-2622.6664,2912.0308,7638.6201,2,5);
	CreateDynamicPickup(11745,1,-2622.8264,2912.0308,2738.6201,3,5);
	AreaInfo[arGunSklad][5] = CreateDynamicSphere(263.9488,1762.9425,575.3359,1.0,1,5); // Итальянская Мафия ган
	AreaInfo[arGunSklad][6] = CreateDynamicSphere(2568.0278,-1847.7811,2522.8401,1.0,2,5); // Yakuza ган
	AreaInfo[arGunSklad][7] = CreateDynamicSphere(-2622.8264,2912.0308,2738.6201,1.0,3,5); // RM ган

	AreaInfo[arGosJob][0] = CreateDynamicSphere(-925.6863,857.7019,2512.9500,1.0,1,3); // На работу
	AreaInfo[arGosJob][1] = CreateDynamicSphere(178.5505,1165.1948,542.4528,1.0,2,3); // На работу
	AreaInfo[arGosJob][2] = CreateDynamicSphere(-925.6863,857.7019,2512.9500,1.0,3,3); // На работу
	CreateDynamicPickup(1239,1,-925.6863,857.7019,2512.9500,1,3);
	CreateDynamicPickup(1239,1,178.5505,1165.1948,542.4528,2,3);
	CreateDynamicPickup(1239,1,-436.2717,1019.8062,1342.2050,3,3);
	CreateDynamic3DTextLabel("Устройство на работу\n{AFAFAF}Встаньте на пикап",COLOR_GREEN,-925.6863,857.7019,2512.9500,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,1,3);
	CreateDynamic3DTextLabel("Устройство на работу\n{AFAFAF}Встаньте на пикап",COLOR_GREEN,178.5505,1165.1948,542.4528,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,2,3);
	CreateDynamic3DTextLabel("Устройство на работу\n{AFAFAF}Встаньте на пикап",COLOR_GREEN,-925.6863,857.7019,2512.9500,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,3,3);

	CreateDynamic3DTextLabel("/remont\n{FFFFFF}Цена: 1000 руб.",COLOR_GREEN,1102.0419,428.7719,34.0934,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,-1,-1);
	CreateDynamic3DTextLabel("/remont\n{FFFFFF}Цена: 1000 руб.",COLOR_GREEN,1121.5049,499.9398,34.1134,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,-1,-1);
	CreateDynamic3DTextLabel("/remont\n{FFFFFF}Цена: 1000 руб.",COLOR_GREEN,2154.8855,-1847.4839,18.8203,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,-1,-1);

	AreaInfo[arArmyJob][0] = CreateDynamicSphere(1755.0117,2251.7849,15.8601,1.0);
	CreateDynamicPickup(1275,1,1755.0117,2251.7849,15.8601);
	CreateDynamic3DTextLabel("Охрана склада\n{AFAFAF}Встаньте на пикап",COLOR_GREEN,1755.0117,2251.7849,15.8601,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);

	new Float:points_armoury[] = {
		-1567.0,532.0,
		-1179.0,531.0,
		-1179.0,399.0,
		-1290.0,398.0,
		-1291.0,310.0,
		-1338.0,260.0,
		-1413.0,257.0,
		-1414.0,217.0,
		-1773.0,220.0,
		-1742.0,304.0,
		-1652.0,403.0,
		-1586.0,466.0,
		-1567.0,532.0
	};
	AreaInfo[arArmyJob][1] = CreateDynamicPolygon(points_armoury,-10.0,55.0,sizeof(points_armoury),-1,-1); // Склад оружия

	AreaInfo[arGettingPassport][0] = CreateDynamicSphere(-926.1332,860.6865,2512.9500,1.0,1,3);
	AreaInfo[arGettingPassport][1] = CreateDynamicSphere(171.2965,1172.4052,542.4528,1.0,2,3);
	AreaInfo[arGettingPassport][2] = CreateDynamicSphere(-926.1332,860.6865,2512.9500,1.0,3,3);
	CreateDynamicPickup(1239,1,-926.1332,860.6865,2512.9500,1,3);
	CreateDynamicPickup(1239,1,171.2965,1172.4052,542.4528,2,3);
	CreateDynamicPickup(1239,1,-427.2046,1021.4081,1342.2050,3,3);
	CreateDynamic3DTextLabel("Получение паспорта\n{AFAFAF}Встаньте на пикап",COLOR_GREEN,-926.1332,860.6865,2512.9500,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,1,3);
	CreateDynamic3DTextLabel("Получение паспорта\n{AFAFAF}Встаньте на пикап",COLOR_GREEN,171.2965,1172.4052,542.4528,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,2,3);
	CreateDynamic3DTextLabel("Получение паспорта\n{AFAFAF}Встаньте на пикап",COLOR_GREEN,-926.1332,860.6865,2512.9500,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,3,3);

	AreaInfo[arGreenZone][0] = CreateDynamicSphere(1790.3820,-1908.6573,13.3969,50.0,-1,-1); // ЖД Вокзал ЛС (спавн)
	AreaInfo[arGreenZone][1] = CreateDynamicSphere(2313.6721,-1927.9768,2022.9600,80.0,-1,-1); // Автошкола (интерьер)
	AreaInfo[arGreenZone][2] = CreateDynamicSphere(2172.1333,-2197.8845,23.1784,70.0,-1,-1); // Автошкола (улица)
	AreaInfo[arGreenZone][3] = CreateDynamicSphere(-1987.4501,136.6183,27.5391,60.0,-1,-1); // ЖД Вокзал СФ
	AreaInfo[arGreenZone][4] = CreateDynamicSphere(-937.2898,873.0830,2512.9500,120.0,-1,3); // Мэрия (интерьер)
	AreaInfo[arGreenZone][5] = CreateDynamicSphere(2114.6089,-2392.8523,23.0883,45.0,-1,-1); // Больница г.Южного (улица)
	AreaInfo[arGreenZone][6] = CreateDynamicSphere(1906.8171,-2229.1006,12.1824,60.0,-1,-1); // Площадь мэрии ЛС
	AreaInfo[arGreenZone][7] = CreateDynamicSphere(655.0404,-339.5611,-94.7852,100.0,-1,-1); // хз где
	AreaInfo[arGreenZone][8] = CreateDynamicSphere(1363.1006,-1279.8647,13.5469,30.0,-1,-1); // Аммо ЛС (улица)
	AreaInfo[arGreenZone][9] = CreateDynamicSphere(312.4500,-137.7774,999.6016,30.0,-1,-1); // Аммо ЛС (интерьер)
	AreaInfo[arGreenZone][10] = CreateDynamicSphere(2827.7234,1290.5941,10.4235,60.0,-1,-1); // ЖД Вокзал ЛВ
	new Float:points_sawmill[] = {
		-2017.0,-2293.0,
		-1872.0,-2406.0,
		-1965.0,-2502.0,
		-2049.0,-2444.0,
		-2048.0,-2425.0,
		-2081.0,-2397.0,
		-2085.0,-2369.0,
		-2017.0,-2293.0
	};
	AreaInfo[arGreenZone][11] = CreateDynamicPolygon(points_sawmill,30.0,50.0,sizeof(points_sawmill),-1,-1); // Лесопилка
	AreaInfo[arGreenZone][12] = CreateDynamicSphere(2498.6360,-1496.5698,24.2386,80.0,-1,-1); // Шахта (улица)
	AreaInfo[arGreenZone][13] = CreateDynamicSphere(-1024.2910,1223.1633,3011.5601,140.0,1,1); // Шахта (интерьер)
	AreaInfo[arGreenZone][14] = CreateDynamicSphere(2730.0752,-2238.0430,17.9269,100.0,-1,-1); // Завод (улица)
	AreaInfo[arGreenZone][15] = CreateDynamicSphere(2727.6240,-2203.4697,3044.0100,100.0,1,1); // Завод (интерьер)
	AreaInfo[arGreenZone][16] = CreateDynamicSphere(2479.2759,-2143.2271,634.2466,100.0,-1,1); // Больница г.Южного (интерьер)
	AreaInfo[arGreenZone][17] = CreateDynamicSphere(2157.6267,943.2358,10.8203,30.0,-1,-1); // Аммо ЛВ (улица)
	AreaInfo[arGreenZone][18] = CreateDynamicSphere(-2625.9517,210.8517,4.6152,30.0,-1,-1); // Аммо СФ (улица)
	AreaInfo[arGreenZone][19] = CreateDynamicSphere(1795.1968,2037.9357,16.2072,20.0,-1,-1); // Гонки: Пустыня
	AreaInfo[arGreenZone][20] = CreateDynamicSphere(878.1058,1202.4579,1132.1600,20.0,-1,-1); // Церковь
	AreaInfo[arGreenZone][21] = CreateDynamicSphere(1963.4740,1593.1080,16.6055,35.0,-1,-1); // Больница батырево (улица)
	AreaInfo[arGreenZone][22] = CreateDynamicSphere(1607.5980,1835.7625,10.9375,30.0,-1,-1); // Больница ЛВ (улица)
	AreaInfo[arGreenZone][23] = CreateDynamicSphere(1818.2975,2095.5994,16.1631,25.0,-1,-1); // Администрация облости (улица)
	AreaInfo[arGreenZone][24] = CreateDynamicSphere(2267.5657,-2189.0391,22.0084,25.0,-1,-1); // Спавн южный
	AreaInfo[arGreenZone][25] = CreateDynamicSphere(396.0899,1934.6313,1001.7459,30.0,-1,-1); // Спортзал (интерьер) Готово
	AreaInfo[arGreenZone][26] = CreateDynamicSphere(162.9272,-235.5302,1002.3000,50.0,-1,-1); // Казино (интерьер)
	AreaInfo[arGreenZone][27] = CreateDynamicSphere(-528.5728,-504.9629,24.6387,100.0,-1,-1); // Аренда грузовика (дальнобойщик)
	AreaInfo[arGreenZone][28] = CreateDynamicSphere(1924.9647,2076.8179,15.7370,60.0,-1,-1); // Автовокзал Батырево (спавн)
	AreaInfo[arGreenZone][29] = CreateDynamicSphere(346.7254,877.0072,20.4063,40.0,-1,-1); // Шахта (загрузка)
	AreaInfo[arGreenZone][30] = CreateDynamicSphere(366.7909,144.1384,1003.8500,100.0,-1,-1); // больница батырево (интерьер)
	AreaInfo[arGreenZone][31] = CreateDynamicSphere(1749.7570,-1008.3757,12.1124,60.0, -1, -1); // Контейнеры

	AreaInfo[arBuyFishki] = CreateDynamicSphere(162.9303,-232.8643,1002.3000,1.0);
	CreateDynamicPickup(1239,1,162.9303,-232.8643,1002.3000);
	CreateDynamic3DTextLabel("Покупка фишек\n{AFAFAF}Встаньте на пикап",COLOR_GREEN,162.9303,-232.8643,1002.3000,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);

	AreaInfo[arRegRace] = CreateDynamicSphere(1795.1968,2037.9357,16.2072,1.0);
	CreateDynamicPickup(1314,1,1795.1968,2037.9357,16.2072);
	Race3dtext = CreateDynamic3DTextLabel("Список победителей:\n{FFCC00}/winlist",0xFFFFFFFF,1795.1968,2037.9357,16.2072,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);

	AreaInfo[arBuyNarko][0] = CreateDynamicSphere(311.5932,1337.3685,702.0700,1.0,1,5);
	AreaInfo[arBuyNarko][1] = CreateDynamicSphere(301.5917,1340.1898,702.0700,1.0,1,5);
	CreateDynamicPickup(1239,1,311.5932,1337.3685,702.0700,1,5);
	CreateDynamicPickup(1578,1,301.5917,1340.1898,702.0700,1,5);

	gLoadAmmoText = CreateDynamic3DTextLabel("_",0xFFFFFFFF,1762.9031,2288.5361,15.9718,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0);
	AreaInfo[arLoadAmmo] = CreateDynamicSphere(1762.9031,2288.5361,15.9718,2.0);
	CreateDynamicPickup(3052,1,1762.9031,2288.5361,15.9718);

	AreaInfo[arArmyAmmo] = CreateDynamicSphere(1314.1771,1619.0148,759.3867,1.0,1,6);
	CreateDynamic3DTextLabel("Склад медикаментов\n\n{AFAFAF}Используйте клавишу H",0xFFFFFFFF,1970.2356,-2603.8665,11.4823,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0);
	AreaInfo[arLoadMed] = CreateDynamicSphere(1970.2356,-2603.8665,11.4823,2.0);
	CreateDynamicPickup(11738,1,1970.2356,-2603.8665,11.4823);

	CreateDynamicMapIcon(2083.3762,1918.7068,15.6760, 21, 0,-1,-1,-1,200.0); // Церковь
	CreateDynamicMapIcon(1795.1968,2037.9357,16.2072, 53, 0,-1,-1,-1,200.0); // Гонки: Пустыня
	CreateDynamicMapIcon(2350.0212,-2140.8877,21.9605, 54, 0,-1,-1,-1,200.0); // Спортзал
	CreateDynamicMapIcon(2379.2913,-1891.5399,22.8719, 52, 0,-1,-1,-1,200.0); // Банк г.Южный
	CreateDynamicMapIcon(2114.6089,-2392.8523,23.0883, 22, 0,-1,-1,-1,200.0); // Больница г.Южного
	CreateDynamicMapIcon(1963.7815,1595.6239,16.6055, 22, 0,-1,-1,-1,200.0); // Больница пгт.Батырево
	CreateDynamicMapIcon(-286.7870,576.8717,12.8447, 22, 0,-1,-1,-1,200.0); // Больница г.Арзамас
	CreateDynamicMapIcon(765.2839,755.7650,12.9307, 30, 0,-1,-1,-1,200.0); //Полиция г.Арзамас
	CreateDynamicMapIcon(2578.2954,-2404.3032,22.2917, 30, 0,-1,-1,-1,200.0); //Полиция г.Южное
	CreateDynamicMapIcon(1919.2720,2185.4141,15.6982, 30, 0,-1,-1,-1,200.0); //Полиция пгт.Батырево
	CreateDynamicMapIcon(1912.4371,-2229.4053,12.1824, 40, 0,-1,-1,-1,200.0); // мэрия южного
	CreateDynamicMapIcon(-137.6271,596.7411,12.1346, 40, 0,-1,-1,-1,200.0); //мэрия арзамас
	CreateDynamicMapIcon(1818.4803,2098.1589,16.1631, 40, 0,-1,-1,-1,200.0); //мэрия батырево
	CreateDynamicMapIcon(2172.1340,-2195.2390,23.1784, 36, 0,-1,-1,-1,200.0); //автошкола
	CreateDynamicMapIcon(1879.2561,1722.9540,15.4661, 23, 0,-1,-1,-1,200.0); //армия
	CreateDynamicMapIcon(2410.3281,-1841.7291,22.9476, 20, 0,-1,-1,-1,200.0); //ФСБ
	CreateDynamicMapIcon(2128.8613,-1962.7261,20.3229, 16, 0,-1,-1,-1,200.0); //СМИ южного
	CreateDynamicMapIcon(1995.9083,1942.7007,15.5928, 16, 0,-1,-1,-1,200.0); //СМИ батырево
	CreateDynamicMapIcon(2328.8521,-1801.1990,22.4540, 55, 0,-1,-1,-1,200.0); // Автосалон
	CreateDynamicMapIcon(2479.3286,-726.6147,12.3000, 55, 0,-1,-1,-1,200.0); // Автосалон
	CreateDynamicMapIcon(1829.9513,2259.3081,15.2729, 55, 0,-1,-1,-1,200.0); // Автосалон
	CreateDynamicMapIcon(-1292.7321,452.9438,7.1211, 16, 0,-1,-1,-1,200.0); // Склад оружия
	CreateDynamicMapIcon(2148.1172,-1024.1780,2.2500, 51, 0,-1,-1,-1,100.0); // Разгрузка Итальянская Мафия
	CreateDynamicMapIcon(2301.3193,1746.3937,1.0319, 51, 0,-1,-1,-1,100.0); // Разгрузка Yakuza
	CreateDynamicMapIcon(2141.5952,-1775.4736,19.9079, 51, 0,-1,-1,-1,100.0);// Разгрузка RM
	CreateDynamicMapIcon(-403.1371,1009.7988,12.0189, 63, 0,-1,-1,-1,200.0);//покраска г.Арзамас
	CreateDynamicMapIcon(1102.0419,428.7719,34.0934, 63, 0,-1,-1,-1,200.0);//ремонт заправка Арзамас-Анашан 1
	CreateDynamicMapIcon(1121.5049,499.9398,34.1134, 63, 0,-1,-1,-1,200.0);//ремонт заправка Арзамас-Анашан 2
	CreateDynamicMapIcon(2154.8855,-1847.4839,18.8203, 63, 0,-1,-1,-1,200.0);//ремонт южный


    CreateDynamic3DTextLabel("Место для разгрузки\n{FFFFFF}Используйте сигнал {AFAFAF}(Caps Lock / H)",0xFFCC00FF,2738.2090,-2272.2029,17.9269+2,25.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);//завод
    CreateDynamic3DTextLabel("Место для загрузки\n{FFFFFF}Используйте сигнал {AFAFAF}(Caps Lock / H)",0xFFCC00FF,2676.0488,-2182.6819,17.9080+2,25.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);//завод
    CreateDynamic3DTextLabel("Место для разгрузки\n{FFFFFF}Используйте сигнал {AFAFAF}(Caps Lock / H)",0xFFCC00FF,1785.4550,2266.6836,15.7749+2,25.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);//склад оружия
	gGunWorkWHText[0] = CreateDynamic3DTextLabel("_",0xEAD86AFF,2735.5796,-2249.6377,3044.0100,30.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,1,1);
	gGunWorkWHText[1] = CreateDynamic3DTextLabel("_",0xEAD86AFF,2728.9949,-2222.3899,17.9269,50.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	less3D[0] = CreateDynamic3DTextLabel("_",0xEAD86AFF,1813.6746,1424.7982,9.9600,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	less3D[1] = CreateDynamic3DTextLabel("_",0xEAD86AFF,1832.8173,1452.6482,9.9700,35.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);//Лесопилка
	tPickup[4] = CreateDynamic3DTextLabel("_",0xFFFFFFFF,-880.9386,1217.7375,3011.5386-1.0,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	tPickup[13] = CreateDynamic3DTextLabel("_",0xFFFFFFFF,-882.9556,1217.7389,3011.5386-1.0,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	tPickup[14] = CreateDynamic3DTextLabel("_",0xFFFFFFFF,-885.4828,1217.7394,3011.5386-1.0,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	tPickup[6] = CreateDynamic3DTextLabel("_",0xFFFFFFFF,2637.6301,-1420.4867,24.2823,50.0);

	CreateDynamic3DTextLabel("{F04245}ДЕМОРГАН\n{AFAFAF}Тюрьма для читеров и нарушителей RP процесса.\nДля того чтобы с нее выйти, дождитесь окончания времени.\nПри следующих нарушениях, вас могут забанить.", COLOR_GREY, 5508.3706,1244.7594,23.1886, 30.0);

	CreateDynamic3DTextLabel("Церковь\n{DD90FF}/wedding{FFFFFF} - заключить брачный договор\n{DD90FF}/divorce{FFFFFF} - развестись", 0xFFCC00FF, 878.1058,1202.4579,1132.1600, 15.0);

    CreateDynamicPickup(1247,1,898.7244,2085.5872,2721.8101,-1);
	CreateDynamic3DTextLabel("Провести арест\n{FFFFFF}/arrest", 0xFFCC00FF, 898.7244,2085.5872+0.1,1010.5649+0.7,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,-1,-1);

	CreateDynamic3DTextLabel("Высадить преступника\nв полицейский участок\n{FFFFFF}/cout", 0xFFCC00FF, 2582.0603,-2411.6267,22.0003,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,-1,-1);
	CreateDynamic3DTextLabel("Высадить преступника\nв полицейский участок\n{FFFFFF}/cout", 0xFFCC00FF, 1939.5189,2164.4802,15.7060,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,-1,-1);
	CreateDynamic3DTextLabel("Высадить преступника\nв полицейский участок\n{FFFFFF}/cout", 0xFFCC00FF, 790.8638,757.5550,12.0000,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,-1,-1);

	CreateDynamic3DTextLabel("Казарма",0xFFFFFFFF,1545.3483,1797.6793,15.3236,15.0); // National Guard
	CreateDynamic3DTextLabel("Снаряжение",0xFFFFFFFF,1820.1857,1745.3885,15.2794,15.0);
	CreateDynamic3DTextLabel("Снаряжение",0xFFFFFFFF,340.5745,1949.1871,22.8172,15.0); // National Guard

	//---------------- шахта -------------------
	//обычный
	CreateDynamic3DTextLabel("Место добычи\n{FFFFFF}Для добычи используйте {FFCC00}\"ЛКМ\"",COLOR_GREEN,-769.6103,1193.4557,3011.3577,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,-1,-1);
	CreateDynamic3DTextLabel("Место добычи\n{FFFFFF}Для добычи используйте {FFCC00}\"ЛКМ\"",COLOR_GREEN,-758.9952,1182.8615,3011.3240,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,-1,-1);
	CreateDynamic3DTextLabel("Место добычи\n{FFFFFF}Для добычи используйте {FFCC00}\"ЛКМ\"",COLOR_GREEN,-745.4455,1190.9069,3011.3416,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,-1,-1);
	//качественный уголь
	CreateDynamic3DTextLabel("Место добычи\n{FFFFFF}Для добычи используйте {FFCC00}\"ЛКМ\"",COLOR_GREEN,-747.6874,1249.5793,3011.3496,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,-1,-1);
	CreateDynamic3DTextLabel("Место добычи\n{FFFFFF}Для добычи используйте {FFCC00}\"ЛКМ\"",COLOR_GREEN,-739.1017,1243.2605,3011.3408,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,-1,-1);
	CreateDynamic3DTextLabel("Место добычи\n{FFFFFF}Для добычи используйте {FFCC00}\"ЛКМ\"",COLOR_GREEN,-746.6099,1239.8412,3011.3557,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,-1,-1);
	CreateDynamic3DTextLabel("Место добычи\n{FFFFFF}Для добычи используйте {FFCC00}\"ЛКМ\"",COLOR_GREEN,-748.3160,1242.5010,3011.3508,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,-1,-1);
	//редкий уголь
	CreateDynamic3DTextLabel("Место добычи\n{FFFFFF}Для добычи используйте {FFCC00}\"ЛКМ\"",COLOR_GREEN,-753.6164,1217.7378,3011.3257,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,-1,-1);
	CreateDynamic3DTextLabel("Место добычи\n{FFFFFF}Для добычи используйте {FFCC00}\"ЛКМ\"",COLOR_GREEN,-747.4539,1214.3978,3011.4045,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,-1,-1);
	//-------------------------------------------

	CreateDynamicPickup(1240, 23, 3349.4550,164.3218,1019.9912, 2);
	cPickup[0] = CreateDynamicPickup(19134, 23, 1833.2786,2259.4614,15.2719); // Эконом
	cPickup[1] = CreateDynamicPickup(19134, 23, 2475.1196,-726.6148,12.3000); // Средний
	cPickup[2] = CreateDynamicPickup(19134, 23, 2329.1770,-1804.1671,22.4540); // Спорт
	cPickup[3] = CreateDynamicPickup(19134, 23, 2335.8848,1990.1335,15.9870); // Мото
	Pickup[2] = CreateDynamicPickup(353, 23,878.7775,2093.7815,2721.8101,1,1);
	Pickup[3] = CreateDynamicPickup(353, 23, 2211.6890,-519.3755,-2.6141,2,1);
	Pickup[4] = CreateDynamicPickup(353, 23,204.0252,-447.8803,1006.4200,0,2);
	Pickup[11] = CreateDynamicPickup(19134, 23, 510.1440,-86.3119,997.9609, -1);
	Pickup[12] = CreateDynamicPickup(19134, 23, 506.5644,-86.3119,997.9609, -1);
	Pickup[13] = CreateDynamicPickup(19134, 23, 489.7846,-81.6869,997.9578, -1);
	Pickup[14] = CreateDynamicPickup(19134, 23, 509.0951,-84.4070,997.9609, -1);
	Pickup[15] = CreateDynamicPickup(19134, 23, 509.0951,-85.4056,997.9609, -1);
	Pickup[16] = CreateDynamicPickup(19134, 23, 511.1303,-84.3520,997.9609, -1);
	Pickup[17] = CreateDynamicPickup(19134, 23, 511.1303,-85.2946,997.9609, -1);
	Pickup[18] = CreateDynamicPickup(19134, 23, 510.1202,-83.3744,997.9609, -1);

	AreaInfo[arAutoschool][0] = CreateDynamicSphere(2305.0867,-1923.6929,2022.9600,1.0,1,1); // ПДД
	CreateDynamicPickup(2894,1,2305.0867,-1923.6929,2022.9600,1);
	CreateDynamic3DTextLabel("Правила Дорожного Движения\n{AFAFAF}Встаньте на пикап",COLOR_GREEN,2305.0867,-1923.6929,2022.9600,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,1,1);
	AreaInfo[arAutoschool][1] = CreateDynamicSphere(2303.5244,-1927.3607,2022.9600,1.0,1,1); // Экзамен по вождению
	CreateDynamicPickup(19131,1,2303.5244,-1927.3607,2022.9600,1);
	CreateDynamic3DTextLabel("Запись на экзамен\n{AFAFAF}Встаньте на пикап",COLOR_GREEN,2303.5244,-1927.3607,2022.9600,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,1,1);

	bankls[0] = CreateDynamicPickup(1318,23,370.8104,963.3505,-6.5172,1);//Банк южного
	bankls[1] = CreateDynamicPickup(1318,23,2379.2913,-1891.5399,22.8719);//Банк южного
	banksf[0] = CreateDynamicPickup(1318,23,1853.5135,2035.0079,16.9742);// Банк в батырево
	banksf[1] = CreateDynamicPickup(1318,23,341.8980,2095.9216,514.0859,2);// Банк в батырево
	banklv[0] = CreateDynamicPickup(1318,23,2364.8899,2377.5532,10.8203);
	banklv[1] = CreateDynamicPickup(1318,23,1507.5657,-1573.2485,-1.9141,3);
	bankpalomino[0] = CreateDynamicPickup(1318,23,2303.3384,-16.1465,26.4844);
	bankpalomino[1] = CreateDynamicPickup(1318,23,1507.5657,-1573.2485,-1.9141,4);

	unloadammomafia[0] = CreateDynamicCP(2148.1172,-1024.1780,2.2500,3.0,0,0,-1,20.0); // Итальянская Мафия разгрузка
	CreateDynamic3DTextLabel("Место для разгрузки",0xEAD86AFF,2148.1172,-1024.1780,2.2500,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0);
	unloadammomafia[1] = CreateDynamicCP(2301.3193,1746.3937,1.0319,3.0,0,0,-1,20.0); // Yakuza разгрузка
	CreateDynamic3DTextLabel("Место для разгрузки",0xEAD86AFF,2301.3193,1746.3937,1.0319,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0);
	unloadammomafia[2] = CreateDynamicCP(2141.5952,-1775.4736,19.9079,3.0,0,0,-1,20.0); // RM разгрузка
	CreateDynamic3DTextLabel("Место для разгрузки",0xEAD86AFF,2141.5952,-1775.4736,19.9079,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0);

	UnloadMed[0] = CreateDynamicCP(2094.7644,-2401.5701,22.5649,3.0,0,0,-1,20.0); // Больница Южный разгрузка
	CreateDynamic3DTextLabel("Место для разгрузки",0xEAD86AFF,2094.7644,-2401.5701,22.5649,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0);
	UnloadMed[1] = CreateDynamicCP(1954.6140,1612.7548,16.0821,3.0,0,0,-1,20.0); // Больница Батырево разгрузка
	CreateDynamic3DTextLabel("Место для разгрузки",0xEAD86AFF,1954.6140,1612.7548,16.0821,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0);
	UnloadMed[2] = CreateDynamicCP(1611.6151,1723.4204,10.8203,3.0,0,0,-1,20.0); // Больница ЛВ разгрузка
	CreateDynamic3DTextLabel("Место для разгрузки",0xEAD86AFF,1611.6151,1723.4204,10.8203,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0);

	Mafia3d[0] = CreateDynamic3DTextLabel("_",0xFFFFFFFF,263.9488,1762.9425,575.3359,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,5,1);
	Mafia3d[1] = CreateDynamic3DTextLabel("_",0xFFFFFFFF,2568.0278,-1847.7811,2522.8401,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,5,2);
	Mafia3d[2] = CreateDynamic3DTextLabel("_",0xFFFFFFFF,-2622.8264,2912.0308,2738.6201,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,5,3);

	Gang3d[0] = CreateDynamic3DTextLabel("_",0xFFFFFFFF,416.0905,1677.8708,-31.3641,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,1);
	Gang3d[1] = CreateDynamic3DTextLabel("_",0xFFFFFFFF,416.0905,1677.8708,-31.3641,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,5);
	Gang3d[2] = CreateDynamic3DTextLabel("_",0xFFFFFFFF,416.0905,1677.8708,-31.3641,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,3);
	Gang3d[3] = CreateDynamic3DTextLabel("_",0xFFFFFFFF,416.0905,1677.8708,-31.3641,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,4);
	Gang3d[4] = CreateDynamic3DTextLabel("_",0xFFFFFFFF,416.0905,1677.8708,-31.3641,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,2);

	armyammo = CreateDynamicCP(1314.1771,1619.0148,759.3867,1.0,1,6); // ammo

	gArmyWarehouseText = CreateDynamic3DTextLabel("_",0xFFFFFFFF,1314.1771,1619.0148,759.3867,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,6,1);

	AreaInfo[arPoliceMenu][0] = CreateDynamicSphere(894.6658,2087.3633,2721.8101,1.0);
	AreaInfo[arPoliceMenu][1] = CreateDynamicSphere(2195.3779,-522.6960,-2.6141,1.0,2,1);
	AreaInfo[arPoliceMenu][2] = CreateDynamicSphere(2571.8503,-2416.1453,22.3850,1.0,3,1);
	CreateDynamicPickup(1239,1,894.6658,2087.3633,2721.8101);
	CreateDynamicPickup(1239,1,2195.3779,-522.6960,-2.6141,2,1);
	CreateDynamicPickup(1239,1,2571.8503,-2416.1453,22.3850,3,1);
	CreateDynamic3DTextLabel("Полицейский участок\n{AFAFAF}Встаньте на пикап",COLOR_GREEN,894.6658,2087.3633,2721.8101,10,9,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,1);//ППС г.Южного
	CreateDynamic3DTextLabel("Полицейский участок\n{AFAFAF}Встаньте на пикап",COLOR_GREEN,2195.3779,-522.6960,-2.6141,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,2);//ППС пгт.Батырево
	CreateDynamic3DTextLabel("Полицейский участок\n{AFAFAF}Встаньте на пикап",COLOR_GREEN,2571.8503,-2416.1453,22.3850,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,3);//lvpd

	AreaInfo[arSetWeaponFrac][0] = CreateDynamicSphere(-1755.9497,2609.2874,62.6469,1.0,-1);
	AreaInfo[arSetWeaponFrac][1] = CreateDynamicSphere(2497.9031,-1706.1495,1014.7422,1.0,1,3);
	AreaInfo[arSetWeaponFrac][2] = CreateDynamicSphere(-64.0912,1366.4248,1080.2185,1.0,5,6);
	AreaInfo[arSetWeaponFrac][3] = CreateDynamicSphere(-222.8678,1394.5475,28.3672,1.0,3,18);
	AreaInfo[arSetWeaponFrac][4] = CreateDynamicSphere(-45.9943,1404.3561,1084.4370,1.0,4,8);
	AreaInfo[arSetWeaponFrac][5] = CreateDynamicSphere(300.6802,310.4576,1003.3047,1.0,2,4);
	AreaInfo[arSetWeaponFrac][6] = CreateDynamicSphere(2755.3586,-72.5156,1312.6029,1.0,1,5);
	AreaInfo[arSetWeaponFrac][7] = CreateDynamicSphere(2755.3586,-72.5156,1312.6029,1.0,2,5);
	AreaInfo[arSetWeaponFrac][8] = CreateDynamicSphere(2755.3586,-72.5156,1312.6029,1.0,3,5);
	CreateDynamicPickup(367,1,-1755.9497,2609.2874,62.6469,-1);
	CreateDynamicPickup(336,1,2497.9031,-1706.1495,1014.7422,1,3);
	CreateDynamicPickup(336,1,-64.0912,1366.4248,1080.2185,5,6);
	CreateDynamicPickup(336,1,-222.8678,1394.5475,28.3672,3,18);
	CreateDynamicPickup(336,1,-45.9943,1404.3561,1084.4370,4,8);
	CreateDynamicPickup(336,1,300.6802,310.4576,1003.3047,2,4);
	CreateDynamicPickup(333,1,2755.3586,-72.5156,1312.6029,1,5);
	CreateDynamicPickup(339,1,2755.3586,-72.5156,1312.6029,2,5);
	CreateDynamicPickup(331,1,2755.3586,-72.5156,1312.6029,3,5);

	lvpdpic[0] = CreateDynamicPickup(1318,23,2297.1138,2451.4346,10.8203);//lvpd вход с гаража
	lvpdpic[1] = CreateDynamicPickup(1318,23,997.8254,583.6147,1010.5649,3,1);//lvpd вход в гараж
	lvpdpic[2] = CreateDynamicPickup(1318,23,765.3625,757.8410,12.9307);//Центральный вход
	lvpdpic[3] = CreateDynamicPickup(1318,23,906.6938,2088.7886,2721.8237,3,1);//Центральный выход
	sfpdpic[0] = CreateDynamicPickup(1318,23,1919.2792,2183.4387,15.6982);//
	sfpdpic[1] = CreateDynamicPickup(1318,23,2192.5024,-524.5348,-2.6141,2,1);//
	sfpdpic[2] = CreateDynamicPickup(1318,23,-1594.212158,716.225036,-4.906250);//
	sfpdpic[3] = CreateDynamicPickup(1318,23,997.8254,583.6147,1010.5649,2,1);//
	armypick[0] = CreateDynamicPickup(1318, 23, 1545.3483,1797.6793,15.3236, -1); // вход в казарму
	armypick[1] = CreateDynamicPickup(1318, 23, -317.6173,313.5726,2213.0000, 1); // выход из казармы
	armypick[2] = CreateDynamicPickup(1318, 23, 1820.1836,1745.3918,15.2794, -1); // оружейка вход
	armypick[3] = CreateDynamicPickup(1318, 23, 1308.1061,1622.5002,759.3867, 1); // оружейка выход
	armshield = CreateDynamicPickup(1242, 23, -326.6039,328.0186,2213.0000, 1); // щит
	armystol = CreateDynamicPickup(1582, 23, -305.8618,327.1991,2213.000, 1); // Еда
	lvpdguns = CreateDynamicPickup(353, 23,878.7775,2093.7815,2721.8101,3,1); // lvdp оружие
	armskin = CreateDynamicPickup(1275,23,-329.4168,328.0184,2213.0000,1); // гардероб

	GetMedicines[0] = CreateDynamicPickup(11745,1,2475.8594,-2143.2285,634.2466,4);
	GetMedicines[1] = CreateDynamicPickup(11745,1,375.5851,149.3992,1003.8500,5);
	GetMedicines[2] = CreateDynamicPickup(11745,1,2475.8594,-2143.2285,634.2466,6);

	MedWHText[0] = CreateDynamic3DTextLabel("_",COLOR_GREEN,2475.8594,-2143.2285,634.2466,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,4);
	MedWHText[1] = CreateDynamic3DTextLabel("_",COLOR_GREEN,375.5851,149.3992,1003.8500,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,5);
	MedWHText[2] = CreateDynamic3DTextLabel("_",COLOR_GREEN,2475.8594,-2143.2285,634.2466,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,6);

	zavod[0] = CreateDynamicPickup(1318,24,2730.0752,-2238.0430,17.9269);
	zavod[1] = CreateDynamicPickup(1318,24,2722.9724,-2194.3818,3044.0100,1);

	//=========================== Спортзалы ====================================
	sportpickup = CreateDynamicPickup(1275,23,388.6716,1929.8959,1001.7459);
	sportzal[0] = CreateDynamicPickup(1318,24,2350.0308,-2138.3162,22.5854);
	sportzal[1] = CreateDynamicPickup(1318,24,396.0899,1934.6313,1001.7459,1);
	CreateDynamic3DTextLabel("Спортзал",0xFFCC00FF,396.0899,1934.6313+0.2,1001.7459+0.8,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,-1,-1);
	sportzal[2] = CreateDynamicPickup(1318,24,-2270.1814,-155.8784,35.3203);
	sportzal[3] = CreateDynamicPickup(1318,24,773.897155,-78.846122,1000.662780,2);
//	CreateDynamic3DTextLabel("Спортзал\nSan Fierro",0xFFCC00FF,-2270.1814,-155.8784+0.2,35.3203+0.8,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,-1,-1);
	sportzal[4] = CreateDynamicPickup(1318,24,2113.7563,2499.5640,14.8390);
	sportzal[5] = CreateDynamicPickup(1318,24,773.897155,-78.846122,1000.662780,3);
//	CreateDynamic3DTextLabel("Спортзал\nLas Venturas",0xFFCC00FF,2113.7563,2499.5640+0.2,14.8390+0.8,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,-1,-1);

	//================================= Койки ==================================
	for(new i; i < sizeof(HealInfo); i++)
	{
	    HealText[i] = CreateDynamic3DTextLabel("Койка {63BD4E}[Свободна]\n{bbbbbb}Нажмите F чтобы занять",0xFFFFFFFF,HealInfo[i][hBed][0],HealInfo[i][hBed][1],HealInfo[i][hBed][2],8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,HealInfo[i][hWorld],HealInfo[i][hInt]);
	}
	//==========================================================================

	//=========================== Наркопритон ==================================
	narkoenter[1] = CreateDynamicPickup(1318,23,310.5545,1322.7542,706.6331,1,5);
	narkoenter[0] = CreateDynamicPickup(1318,23,2204.2576,-1788.9279,22.7362);
	stringer[0] = EOS;
	format(stringer, 300, "Наркопритон\n\n{FFFFFF}На балансе: {63BD4E}%d$\n{FFFFFF}Стоимость наркотиков: {63BD4E}%d$", BankNarko, PriceNarko);
	NarkoText = CreateDynamic3DTextLabel(stringer,COLOR_YELLOW,301.5917,1340.1898,702.0700,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,1,5);
	//==========================================================================

	// Больница
	BolnicaLS[0] = CreateDynamicPickup(1318,23,2114.6089,-2392.8523,23.0883);//вход
	BolnicaLS[1] = CreateDynamicPickup(1318,23,2457.3018,-2139.1978,634.2537,4); // выход
	BolnicaLS[2] = CreateDynamicPickup(1318,23,1497.0175,-1560.9808,26.6111); // с вп
	BolnicaSF[0] = CreateDynamicPickup(1318,23,1963.4740,1593.1080,16.6055);//вход
	BolnicaSF[1] = CreateDynamicPickup(1318,23,366.9749,124.9825,1003.8500,5); // выход
	BolnicaLV[0] = CreateDynamicPickup(1318,23,-286.7870,576.8717,12.8447);//вход
	BolnicaLV[1] = CreateDynamicPickup(1318,23,2457.3018,-2139.1978,634.2537,6); // выход
//	BolnicaLV[2] = CreateDynamicPickup(1318,23,1607.9298,1786.0870,30.4688); // с вп
	merpicls[0] = CreateDynamicPickup(1318,23,-935.5474,860.4813,2512.9636,1);//Выход из Мэрии
	merpicls[1] = CreateDynamicPickup(1318,23,1906.8171,-2229.1006,12.1824);//Вход в Мэрию//
	merpicls[2] = CreateDynamicPickup(353,23,-939.2996,869.3788,2512.9500,1); // Оружие охраны
	merpicsf[0] = CreateDynamicPickup(1318,23,168.3573,1166.5199,542.4528,2);//Выход из Мэрии
	merpicsf[1] = CreateDynamicPickup(1318,23,1818.2975,2095.5994,16.1631,-1);//Вход в Мэрию
	merpicsf[2] = CreateDynamicPickup(353,23,171.3369,1155.1727,542.4528,2); // Оружие охраны
	merpiclv[0] = CreateDynamicPickup(1318,23,-935.5474,860.4813,2512.9636,3);//Выход из Мэрии
	merpiclv[1] = CreateDynamicPickup(1318,23,-139.2166,596.9494,12.1345,-1);//Вход в Мэрию//
	merpiclv[2] = CreateDynamicPickup(353,23,-939.2996,869.3788,2512.9500,3); // Оружие охраны
	fbipic[0] = CreateDynamicPickup(1318,23,209.4728,-469.9158,1006.4200,0,2);// Выход
	fbipic[1] = CreateDynamicPickup(1318,23,2412.7571,-1841.7100,22.9476); // Вход
	fbipic[2] = CreateDynamicPickup(1275,23,206.7005,-450.7386,1006.4200,0,2); // FBI гардероб
	ashpic[0] = CreateDynamicPickup(1318,23,1147.7882,-1347.7350,14.9580,0); // Вход
	ashpic[1] = CreateDynamicPickup(1318,23,1166.5994,-1321.6111,1221.6130,1); // Выход
	ashpic[2] = CreateDynamicPickup(1318,23,1131.3096,-1335.0723,24.8750,0); // Выход с крыши
	lsnpic[0] = CreateDynamicPickup(1318,23,2126.6729,-1962.8427,20.3229,-1); // Вход
	lsnpic[1] = CreateDynamicPickup(1318,23,-68.6669,460.9276,3013.1499,1); // Выход
	sfnpic[0] = CreateDynamicPickup(1318,23,1993.3064,1942.6761,16.0120,-1); // Вход сми бт
	sfnpic[1] = CreateDynamicPickup(1318,23,-1077.7986,2206.5925,1002.0000,2); // Выход сми бт
	lvnpic[0] = CreateDynamicPickup(1318,23,2650.9031,1185.3602,10.8203,-1); // Вход
	lvnpic[1] = CreateDynamicPickup(1318,23,-1742.7771,2589.6387,62.6659,3); // Выход
	lspdpic[0] = CreateDynamicPickup(1318,23,2578.3086,-2406.4087,22.2917);// вход
	lspdpic[1] = CreateDynamicPickup(1318,23,906.6938,2088.7886,2721.8237,1,1);// выход
	lspdpic[2] = CreateDynamicPickup(1318,23,1568.6144,-1689.9901,6.2188);//ППС г.Южного Вход из гаража
	lspdpic[3] = CreateDynamicPickup(1318,23,997.8254,583.6147,1010.5649,1,1);//ППС г.Южного выход в гараже
	arpic[0] = CreateDynamicPickup(19131,23,279.1676,1833.1394,18.0874, -1);// зона 51 (на базе)
	arpic[1] = CreateDynamicPickup(19131,23,290.9437,1833.4254,17.8348, -1);// зона 51 (на базе)
	arpic[2] = CreateDynamicPickup(19131,23,145.2084,1937.9403,19.6546, -1);// зона 51
	arpic[3] = CreateDynamicPickup(19131,23,145.1863,1944.6630,19.7713, -1);// зона 51
	Sahta[0] = CreateDynamicPickup(19133,23,2488.3257,-1499.3450,24.2386, -1);// Шахта пика улица
	Sahta[1] = CreateDynamicPickup(19133,23,-1024.1545,1221.3706,3011.5601, -1);// Шахта пика в нутри
	Avto[0] = CreateDynamicPickup(19133,23,2172.1333,-2197.8845,23.1784, -1);// Автошколв пика улица
	Avto[1] = CreateDynamicPickup(19133,23,2315.6758,-1928.0035,2022.9600, 1);// Автошкола пика в нутри
	Bog[0] = CreateDynamicPickup(19133,23,2083.3762,1918.7068,15.6760, -1);// Церковь пика улица
	Bog[1] = CreateDynamicPickup(19133,23,878.0806,1212.6476,1132.1559);// Церковь пика в нутри


/*	// Банды Пикапы
	grovpic[0] = CreateDynamicPickup(1318,23,2327.6113,-1969.7694,22.4703);// Вход Grov
	grovpic[1] = CreateDynamicPickup(1318,23,408.9695,1661.9541,-31.3641,1); // Выход ОПГ Южная
	vagospic[0] = CreateDynamicPickup(1318,23,2615.4250,1763.5547,2.8872);// Вход ОПГ Ореховская
	vagospic[1] = CreateDynamicPickup(1318,23,408.9695,1661.9541,-31.3641,2); // Выход ОПГ Ореховская
	rifapic[0] = CreateDynamicPickup(1318,23,2400.5750,-1720.1099,22.9388);// Вход Южная братва
	rifapic[1] = CreateDynamicPickup(1318,23,408.9695,1661.9541,-31.3641,3); // Выход Южная братва
	azpic[0] = CreateDynamicPickup(1318,23,2330.8269,-2619.4612,22.2235);// Вход Aztec
	azpic[1] = CreateDynamicPickup(1318,23,408.9695,1661.9541,-31.3641,4); // Выход Aztec
	balpic[0] = CreateDynamicPickup(1318,23,2562.1172,-1847.2955,22.2862);// Вход баллас
	balpic[1] = CreateDynamicPickup(1318,23,408.9695,1661.9541,-31.3641,5); // Выход баллас*/

	// Мафии пикапы
	lcnpic[0] = CreateDynamicPickup(1318,23,2161.1931,-981.4799,2.2500,-1);// Вход Итальянская Мафия
	lcnpic[1] = CreateDynamicPickup(1318,23,252.8255,1775.0527,575.3359,1); // Выход Итальянская Мафия
	yakpic[0] = CreateDynamicPickup(1318,23,2310.3088,1764.1968,1.4022,-1);// Вход Якудза
	yakpic[1] = CreateDynamicPickup(1318,23,2557.2583,-1854.0981,2522.8401,2); // Выход Якудза
	rmpic[0] = CreateDynamicPickup(1318,23,2135.2407,-1802.6865,19.9079,-1);// Вход RM
	rmpic[1] = CreateDynamicPickup(1318,23,-2614.3391,2907.4519,2738.6201,3); // Выход RM

	// Дальнобойщики
	aTruck[0][0] = AddStaticVehicleEx(403, 2674.1201, -2348.6748, 18.0639, 280.9254, 1, 1, 100);
	AddStaticVehicleEx(403, 2674.1816, -2354.0928, 18.0639, 280.9254, 1, 1, 100);//Фуры 1 лвл
	AddStaticVehicleEx(403, 2674.1230, -2359.4966, 18.0639, 280.9254, 1, 1, 100);
	aTruck[0][1] = AddStaticVehicleEx(403, 2674.0581, -2364.2556, 18.0639, 280.9254, 1, 1, 100);
	aTruck[1][0] = AddStaticVehicleEx(514, 2674.0635, -2376.6985, 18.0581, 269.1403, 1, 1, 100);//2 лвл
	AddStaticVehicleEx(514, 2674.1372, -2381.4619, 18.0581, 269.1403, 1, 1, 100);
	AddStaticVehicleEx(514, 2674.0186, -2386.6506, 18.0581, 269.1403, 1, 1, 100);
	aTruck[1][0] = AddStaticVehicleEx(514, 2674.1187, -2392.1221, 18.0581, 269.1403, 1, 1, 100);
///	aTruck[1][1] = AddStaticVehicleEx(515,-534.5204,-473.5534,26.5366,179.5508,3,3,120); // Фура2лвл5
	aTruck[2][0] = AddStaticVehicleEx(515, 2685.8948, -2394.7124, 18.0516, 0.0000, 1, 1, 100);
	AddStaticVehicleEx(515, 2690.5745, -2394.7693, 18.0516, 0.0000, 1, 1, 100);
	AddStaticVehicleEx(515, 2695.4185, -2394.8589, 18.0516, 0.0000, 1, 1, 100);//Последний лвл
	aTruck[2][1] = AddStaticVehicleEx(515, 2700.1265, -2394.9084, 18.0516, 0.0000, 1, 1, 100);


	// Автобусы
	aBus[0] = AddStaticVehicleEx(418, 2244.7283, -1945.7765, 18.8414, 90.0000, 6,6,120); // автобусы Останкино
	aBus[1] = AddStaticVehicleEx(418, 2244.7283, -1950.7894, 18.8414, 90.0000, 6,6,120); // автобусы Останкино
	aBus[2] = AddStaticVehicleEx(418, 2244.7283, -1955.3695, 18.8414, 90.0000, 6,6,120); // автобусы Останкино
	aBus[3] = AddStaticVehicleEx(418, 2244.7283, -1959.9149, 18.8414, 90.0000, 6,6,120); // автобусы Останкино
	aBus[4] = AddStaticVehicleEx(418, 2244.7283, -1964.5586, 18.8414, 90.0000, 6,6,120); // автобусы Останкино
	aBus[5] = AddStaticVehicleEx(418, 2244.7283, -1968.9159, 18.8414, 90.0000, 6,6,120); // автобусы Останкино
	aBus[6] = AddStaticVehicleEx(418, 2244.7283, -1973.6649, 18.8414, 90.0000, 6,6,120); // автобусы Останкино
	aBus[7] = AddStaticVehicleEx(418, 2244.7283, -1978.4530, 18.8414, 90.0000, 6,6,120); // автобусы Останкино
	aBus[8] = AddStaticVehicleEx(418, 2244.7283, -1983.0345, 18.8414, 90.0000, 6,6,120); // автобусы Останкино
	aBus[9] = AddStaticVehicleEx(418, 1818.4797, 2512.8218, 15.6823, 86.9185, 6,6,120); // автобусы Батырево
	aBus[10] = AddStaticVehicleEx(418, 1814.5485, 2517.4553, 15.6823, 86.9185, 6,6,120); // автобусы Батырево
	aBus[11] = AddStaticVehicleEx(418, 1811.6000, 2522.4158, 15.6823, 86.9185, 6,6,120); // автобусы Батырево
	aBus[12] = AddStaticVehicleEx(418, 1808.4060, 2527.2310, 15.6823, 85.8973, 6,6,120); // автобусы Батырево


	// Аренда
	for(new i = 0; i < sizeof(ArendInfo); i ++)
	{
	    ArendInfo[i][aID] = AddStaticVehicleEx(ArendInfo[i][aModel], ArendInfo[i][aPos_X], ArendInfo[i][aPos_Y], ArendInfo[i][aPos_Z], ArendInfo[i][aPos_A], ArendInfo[i][aColor_1], ArendInfo[i][aColor_2], 100000);
        SetVehicleParamsEx(ArendInfo[i][aID], false, false, false, false, false, false, false);
	}

	// Такси
	taxicar[0] = AddStaticVehicleEx(420, 1942.5348, 2103.8071, 15.1753, -180.0000, 6,6,120); // такси Батырево
	taxicar[1] = AddStaticVehicleEx(420, 1938.8790, 2103.9946, 15.1753, -180.0000, 6,6,120); //
	taxicar[2] = AddStaticVehicleEx(420, 1935.3162, 2103.9822, 15.1753, -180.0000, 6,6,120); //
	taxicar[3] = AddStaticVehicleEx(420, 1931.8167, 2104.0952, 15.1753, -180.0000, 6,6,120); //
	taxicar[4] = AddStaticVehicleEx(420, 1928.1964, 2104.1997, 15.1753, -180.0000, 6,6,120); //
	//Такси у Останкино
	taxicar[5] = AddStaticVehicleEx(420, 2194.5386, -1984.1394, 18.3192, -90.0000,  6,6,120); //
	taxicar[6] = AddStaticVehicleEx(420, 2194.5386, -1979.0389, 18.3192, -90.0000,  6,6,120); //
	taxicar[7] = AddStaticVehicleEx(420, 2194.5386, -1974.0947, 18.3192, -90.0000,  6,6,120); //
	taxicar[8] = AddStaticVehicleEx(420, 2194.5386, -1968.9775, 18.3192, -90.0000,  6,6,120); //
	taxicar[9] = AddStaticVehicleEx(420, 2194.5386, -1964.3193, 18.3192, -90.0000,  6,6,120); //
	taxicar[10] = AddStaticVehicleEx(420, 2194.5386, -1959.6014, 18.3192, -90.0000,  6,6,120); //

	// Механики
	mechanic[0] = AddStaticVehicleEx(525, 2182.6238, -1855.7703, 18.5791, 0.0000, 1,3,120); //
	mechanic[1] = AddStaticVehicleEx(525, 2178.0410, -1855.8534, 18.5791, 0.0000, 1,3,120); //
	mechanic[2] = AddStaticVehicleEx(525, 2173.5132, -1855.8960, 18.5791, 0.0000, 1,3,120); //
	mechanic[3] = AddStaticVehicleEx(525, 2153.4729, -1820.2002, 18.5791, -192.9600, 1,3,120); //г.южного
	mechanic[4] = AddStaticVehicleEx(525, 2148.4983, -1819.7603, 18.5791, -192.9600, 1,3,120); //
	mechanic[5] = AddStaticVehicleEx(525, 2138.3450, -1820.1477, 18.5791, -192.9600, 1,3,120); //
	mechanic[9] = AddStaticVehicleEx(525, 2143.6208, -1819.7131, 18.5791, -192.9600, 1,3,120); //
	// Механики батырева
	mechanic[7] = AddStaticVehicleEx(525, 1998.5890, 1881.8627, 15.5096, 292.2218, 1,3,120); //
	mechanic[8] = AddStaticVehicleEx(525, 1998.7616, 1886.5076, 15.5096, 292.2218,  1,3,120); //
	mechanic[9] = AddStaticVehicleEx(525, 1998.5989, 1890.9719, 15.5096, 292.2218,  1,3,120); //

	// Армия
	aArmyNG[0] = AddStaticVehicleEx(433, 1425.0862, 1677.1750, 15.5804, 0.0000, 77,77,1200);
	aArmyNG[1] = AddStaticVehicleEx(433, 1430.9945, 1677.0980, 15.5804, 0.0000, 77,77,1200);
	aArmyNG[2] = AddStaticVehicleEx(433, 1436.5796, 1677.2119, 15.5804, 0.0000, 77,77,1200);
	aArmyNG[3] = AddStaticVehicleEx(470, 1444.1870, 1675.7611, 15.0468, 2.9526, 77,77,1200);
	aArmyNG[4] = AddStaticVehicleEx(470, 1453.2822, 1675.9716, 15.0468, 2.9526, 77,77,1200);
	aArmyNG[5] = AddStaticVehicleEx(470, 1448.8477, 1675.8608, 15.0468, 2.9526, 77,77,1200);
	aArmyNG[6] = AddStaticVehicleEx(520, 1721.3988, 1610.8665, 17.6933, 0.0000, 77,77,1200);
	aArmyNG[7] = AddStaticVehicleEx(417, 1767.9608, 1611.4949, 17.2836, 0.0000, 77,77,1200);
	aArmyNG[8] = AddStaticVehicleEx(548, 1814.2924, 1610.7498, 18.6090, 0.0000, 77,77,1200);
	aArmyNG[9] = AddStaticVehicleEx(425, 1859.0245, 1613.5867, 17.7606, 0.0000, 77,77,1200);
	aArmyNG[10] = AddStaticVehicleEx(414, 1449.9812, 1716.0144, 15.9539, 180.0798, 77,77,1200);

/*	// ОПГ Южная машины
	aGrove[0] = AddStaticVehicleEx(482, 2338.7659, -1985.3694, 22.1017, 89.1090, 229,1,300);
	aGrove[1] = AddStaticVehicleEx(492, 2315.7554, -2004.5302, 22.0747, 0.0000, 229,1,300);
	aGrove[2] = AddStaticVehicleEx(600, 2319.0994, -2004.3829, 21.7542, 0.0000, 229,1,300);
	aGrove[3] = AddStaticVehicleEx(600, 2322.7185, -2004.2478, 21.7542, 0.0000, 229,1,300);
	aGrove[4] = AddStaticVehicleEx(466, 2326.2390, -2004.1528, 21.6542, 0.0000, 229,1,300);
	aGrove[5] = AddStaticVehicleEx(466, 2330.1262, -2004.0178, 21.6142, 0.0000, 229,1,300);


	// ОПГ Тамбовская
	aBallas[0] = AddStaticVehicleEx(482, 2577.4128, -1857.8763, 21.9558, 0.0000, 233,88,300);
	aBallas[1] = AddStaticVehicleEx(566, 2577.0249, -1830.7327, 21.7764, 130.6878, 233,88,300);
	aBallas[2] = AddStaticVehicleEx(566, 2577.0742, -1835.3425, 21.7764, 130.6878, 233,88,300);
	aBallas[3] = AddStaticVehicleEx(436, 2564.6431, -1837.4325, 21.7151, 272.0364, 233,88,300);
	aBallas[4] = AddStaticVehicleEx(436, 2564.5891, -1841.5216, 21.7151, 272.0364, 233,88,300);

	// Южная братва
	aRifa[0] = AddStaticVehicleEx(516, 2433.4297, -1733.9631, 21.4979, 0.0000, 162,1,300);
	aRifa[1] = AddStaticVehicleEx(516, 2429.7629, -1733.8973, 21.4979, 0.0000, 162,1,300);
	aRifa[2] = AddStaticVehicleEx(482, 2436.9519, -1734.1230, 21.8179, 0.0000, 162,1,300);
	aRifa[3] = AddStaticVehicleEx(436, 2426.3262, -1733.8021, 21.5779, 0.0000, 162,1,300);
	aRifa[4] = AddStaticVehicleEx(436, 2422.7234, -1733.7321, 21.5779, 0.0000, 162,1,300);

	// ОПГ Солнцевская
	aAztecas[0] = AddStaticVehicleEx(404, 2340.6675, -2616.8599, 21.9257, 43.8846, 165,165,300);
	aAztecas[1] = AddStaticVehicleEx(482, 2315.3167, -2600.7122, 21.7857, 180.3609, 165,165,300);
	aAztecas[2] = AddStaticVehicleEx(404, 2340.8206, -2612.4309, 21.9257, 43.8846, 165,165,300);
	aAztecas[3] = AddStaticVehicleEx(466, 2319.7188, -2616.2583, 21.3051, 345.3687, 165,165,300);
	aAztecas[4] = AddStaticVehicleEx(466, 2324.9287, -2616.3828, 21.3251, 345.3687, 165,165,300);

	// ОПГ Ореховская
	aVagos[0] = AddStaticVehicleEx(482, 2626.7012, 1766.3839, 2.5175, 0.0000, 6,8,300);
	aVagos[1] = AddStaticVehicleEx(492, 2603.0061, 1779.3304, 2.5244, -64.3100, 6,8,300);
	aVagos[2] = AddStaticVehicleEx(492, 2603.2837, 1775.6783, 2.5244, -65.3900, 6,8,300);
	aVagos[3] = AddStaticVehicleEx(566, 2602.6926, 1768.3467, 2.3044, 294.4547, 6,8,300);
	aVagos[4] = AddStaticVehicleEx(566, 2602.6768, 1771.8619, 2.3244, 294.5196, 6,8,300);
	aVagos[5] = AddStaticVehicleEx(436, 2603.1592, 1782.9108, 2.3244, -64.0740, 6,8,300);*/

	// Администрация г.Южный
	aMayorLS[0] = AddStaticVehicleEx(409, 1898.6770, -2233.2969, 11.3258, 180.3601, 1,1,300);
	aMayorLS[1] = AddStaticVehicleEx(409, 1895.6029, -2233.3669, 11.3258, 180.3601, 1,1,300);
	aMayorLS[2] = AddStaticVehicleEx(409, 1892.5652, -2233.4104, 11.3258, 180.3601, 1,1,300);
	aMayorLS[3] = AddStaticVehicleEx(421, 1915.9205, -2233.2769, 11.0058, 180.3601, 1,1,300);
	aMayorLS[4] = AddStaticVehicleEx(421, 1919.3832, -2233.2290, 11.0058, 180.3601, 1,1,300);
	aMayorLS[5] = AddStaticVehicleEx(421, 1922.7319, -2233.2891, 11.0058, 180.3601, 1,1,300);

	// Администрация Облости
	aMayorSF[0] = AddStaticVehicleEx(409, 1787.4596, 2081.8083, 15.9041, 283.0729, 1,1,300);
	aMayorSF[1] = AddStaticVehicleEx(409, 1787.3177, 2086.0664, 15.9041, 283.0729, 1,1,300);
	aMayorSF[2] = AddStaticVehicleEx(409, 1787.3077, 2090.1729, 15.9041, 283.0729, 1,1,300);
	aMayorSF[3] = AddStaticVehicleEx(421, 1787.2609, 2094.0254, 15.6441, 283.0729, 1,1,300);
	aMayorSF[4] = AddStaticVehicleEx(421, 1787.0499, 2097.8782, 15.6441, 283.0729, 1,1,300);
	aMayorSF[5] = AddStaticVehicleEx(421, 1787.1154, 2101.3765, 15.6441, 283.0729, 1,1,300);


	// Администрация г.Арзамас
	aMayorLV[0] = AddStaticVehicleEx(409,-149.5676,628.4813,11.9572,82.3607,1,1,300);
	aMayorLV[1] = AddStaticVehicleEx(409,-150.1572,624.5291,11.9572,81.4426,1,1,300);
	aMayorLV[2] = AddStaticVehicleEx(409,-150.9577,620.0493,11.9592,82.0393,1,1,300);
	aMayorLV[3] = AddStaticVehicleEx(421,-150.8737,597.0484,11.8823,170.8728,1,1,300);
	aMayorLV[4] = AddStaticVehicleEx(421,-155.0942,597.6009,11.8810,171.4997,1,1,300);
	aMayorLV[5] = AddStaticVehicleEx(421,-159.3307,598.1041,11.8797,172.8544,1,1,300);


	// ППС г.Южного
	aLSPD[0] = AddStaticVehicleEx(599, 2574.9009, -2446.5376, 22.1467, 0.0000, 1,1,300);
	aLSPD[1] = AddStaticVehicleEx(599, 2571.0120, -2446.5281, 22.1467, 0.0000, 1,1,300);
	aLSPD[2] = AddStaticVehicleEx(599, 2567.4519, -2446.6064, 22.1467, 0.0000, 1,1,300);
	aLSPD[3] = AddStaticVehicleEx(599, 2563.7092, -2446.4673, 22.1467, 0.0000, 1,1,300);
	aLSPD[4] = AddStaticVehicleEx(599, 2560.1655, -2446.4661, 22.1467, 0.0000, 1,1,300);
	aLSPD[5] = AddStaticVehicleEx(466, 2556.4758, -2445.9688, 21.5267, 0.0000, 79, 1, 300);
	aLSPD[6] = AddStaticVehicleEx(466, 2553.0051, -2445.9224, 21.5267, 0.0000, 79, 1, 300);
	aLSPD[7] = AddStaticVehicleEx(427, 2560.0503, -2409.6721, 22.3736, 120.5584, 79,1,300);
	aLSPD[8] = AddStaticVehicleEx(427, 2559.9932, -2414.2190, 22.3736, 120.5584, 79,1,300);
	aLSPD[9] = AddStaticVehicleEx(490,2549.3076000,-2446.0334000,22.0920000,359.2032000,79,1,300); //FBI Rancher
	aLSPD[10] = AddStaticVehicleEx(490,2544.5754000,-2445.9878000,22.0921000,0.8696000,79,1,300); //FBI Rancher
	aLSPD[11] = AddStaticVehicleEx(523,2542.0161000,-2407.8726000,21.7287000,180.6500000,79,1,300); //HPV1000
	aLSPD[12] = AddStaticVehicleEx(523,2544.3098000,-2407.8799000,21.7274000,181.2772000,79,1,300); //HPV1000
	aLSPD[13] = AddStaticVehicleEx(523,2546.7090000,-2407.8572000,21.7281000,181.5532000,79,1,300); //HPV1000
	aLSPD[14] = AddStaticVehicleEx(523,2549.2800000,-2407.8303000,21.7274000,182.5687000,79,1,300); //HPV1000
	aLSPD[15] = AddStaticVehicleEx(523,2551.7075000,-2407.8264000,21.7207000,181.5873000,79,1,300); //HPV1000
	aLSPD[16] = AddStaticVehicleEx(497,2548.7024000,-2430.3650000,22.1230000,270.1718000,79,1,300); //Police Maverick

	// ППС пгт.Батырево
	aSFPD[0] = AddStaticVehicleEx(599, 1948.2041, 2156.7856, 15.8534, 90.0000, 1,1,300);
	aSFPD[1] = AddStaticVehicleEx(599, 1948.1094, 2160.6030, 15.8534, 90.0000, 1,1,300);
	aSFPD[2] = AddStaticVehicleEx(599, 1948.0000, 2164.0554, 15.8534, 90.0000, 1,1,300);
	aSFPD[3] = AddStaticVehicleEx(599, 1948.0780, 2167.7375, 15.8534, 90.0000, 1,1,300);
	aSFPD[4] = AddStaticVehicleEx(466, 1932.2358, 2170.0703, 15.1945, 270.0030, 79,1,300);
	aSFPD[5] = AddStaticVehicleEx(523,1955.8900000,2171.5457000,15.4297000,0.1098000,79,1,300); //HPV1000
	aSFPD[6] = AddStaticVehicleEx(523,1954.1909000,2171.4927000,15.4304000,0.6561000,79,1,300); //HPV1000
	aSFPD[7] = AddStaticVehicleEx(523,1952.6224000,2171.5425000,15.4291000,358.8828000,79,1,300); //HPV1000
	aSFPD[8] = AddStaticVehicleEx(523,1951.0854000,2171.5352000,15.4286000,358.7697000,79,1,300); //HPV1000
	aSFPD[9] = AddStaticVehicleEx(466,1932.2592000,2173.6619000,15.3772000,270.1372000,79,1,300); //Glendale

	// LVPD
	aLVPD[0] = AddStaticVehicleEx(599,867.1152000,793.9273000,11.8777000,68.4291000,1,1,300); //Police Ranger
	aLVPD[1] = AddStaticVehicleEx(599,865.7425000,790.3495000,11.8776000,68.4316000,1,1,300); //Police Ranger
	aLVPD[2] = AddStaticVehicleEx(599,864.3763000,786.9074000,11.8775000,69.4599000,1,1,300); //Police Ranger
	aLVPD[3] = AddStaticVehicleEx(599,862.9907000,783.3099000,11.8775000,69.8070000,1,1,300); //Police Ranger
	aLVPD[4] = AddStaticVehicleEx(599,862.0529000,779.7488000,11.8777000,69.6481000,1,1,300); //Police Ranger
	aLVPD[5] = AddStaticVehicleEx(427,860.8994000,776.3810000,12.0749000,69.4830000,79,1,300); //Enforcer
	aLVPD[6] = AddStaticVehicleEx(427,859.6659000,772.7761000,12.0770000,70.1770000,79,1,300); //Enforcer
	aLVPD[7] = AddStaticVehicleEx(466,853.3832000,755.6810000,11.6795000,70.0565000,79,1,300); //Glendale
	aLVPD[8] = AddStaticVehicleEx(466,854.7341000,759.1721000,11.6861000,73.1842000,79,1,300); //Glendale
	aLVPD[9] = AddStaticVehicleEx(490,857.3849000,765.9132000,12.0894000,70.8579000,79,1,300); //FBI Rancher
	aLVPD[10] = AddStaticVehicleEx(490,856.1519000,762.5014000,12.0889000,70.4633000,79,1,300); //FBI Rancher
	aLVPD[11] = AddStaticVehicleEx(497,830.2824000,736.2998000,12.1179000,69.9912000,79,1,300); //Police Maverick
	aLVPD[12] = AddStaticVehicleEx(497,825.1431000,722.7271000,12.1198000,69.1938000,79,1,300); //Police Maverick
	aLVPD[13] = AddStaticVehicleEx(523,807.8351000,817.4288000,11.8144000,158.5264000,79,1,300); //HPV1000
	aLVPD[14] = AddStaticVehicleEx(523,810.3392000,816.4598000,11.8057000,158.5630000,79,1,300); //HPV1000
	aLVPD[15] = AddStaticVehicleEx(523,812.6961000,815.5458000,11.7994000,158.7893000,79,1,300); //HPV1000
	aLVPD[16] = AddStaticVehicleEx(523,814.8441000,814.7556000,11.7928000,160.2921000,79,1,300); //HPV1000
	aLVPD[17] = AddStaticVehicleEx(523,817.0107000,814.0206000,11.7875000,159.7102000,79,1,300); //HPV1000
	aLVPD[18] = AddStaticVehicleEx(427,858.3814000,769.3292000,12.0770000,70.0649000,79,1,300); //Enforcer

	// Больница г.Южного
	aHospitalLS[0] = AddStaticVehicleEx(416, 2098.3833, -2412.7871, 21.8823, 90.4337, 1,1,300);
	aHospitalLS[1] = AddStaticVehicleEx(416, 2098.2498, -2419.5698, 21.8823, 90.4337, 1,1,300);
	aHospitalLS[2] = AddStaticVehicleEx(416, 2098.1387, -2426.8972, 21.8823, 90.4337, 1,1,300);
	aHospitalLS[3] = AddStaticVehicleEx(416, 2098.1477, -2434.1533, 21.8823, 90.4337, 1,1,300);
	aHospitalLS[4] = AddStaticVehicleEx(563, 2088.5369, -2426.8350, 22.4031, 0.0000, 3,3,300);
	aHospitalLS[4] = AddStaticVehicleEx(560,2082.9080000,-2412.1885000,21.3340000,268.9789000,3,3,15); //Sultan
	aHospitalLS[4] = AddStaticVehicleEx(560,2082.9094000,-2407.8159000,21.3352000,269.0269000,3,3,15); //Sultan

	// Больница пгт.Батырево
	aHospitalSF[0] = AddStaticVehicleEx(416, 1943.6737, 1608.5645, 15.8411, 0.0000, 1,1,300);
	aHospitalSF[1] = AddStaticVehicleEx(416, 1936.5648, 1608.4863, 15.8411, 0.0000, 1,1,300);
	aHospitalSF[2] = AddStaticVehicleEx(416, 1929.5323, 1608.3840, 15.8411, 0.0000, 1,1,300);
	aHospitalSF[3] = AddStaticVehicleEx(416, 1922.2424, 1608.3240, 15.8411, 0.0000, 1,1,300);
	aHospitalSF[3] = AddStaticVehicleEx(560,1949.0289000,1624.8176000,15.3532000,180.6522000,3,3,15); //Sultan
	aHospitalSF[3] = AddStaticVehicleEx(560,1944.7020000,1624.7885000,15.3532000,180.1504000,3,3,15); //Sultan

	// Больница LV
	aHospitalLV[0] =AddStaticVehicleEx(416,-258.1717000,553.9916000,12.7688000,173.5462000,1,1,15); //Ambulance
	aHospitalLV[1] =AddStaticVehicleEx(416,-262.0757000,554.3931000,12.7502000,173.6243000,1,1,15); //Ambulance
	aHospitalLV[2] =AddStaticVehicleEx(416,-266.0531000,554.8387000,12.7204000,173.1866000,1,1,15); //Ambulance
	aHospitalLV[3] =AddStaticVehicleEx(416,-269.9786000,555.2628000,12.6842000,174.2064000,1,1,15); //Ambulance
	aHospitalLV[4] =AddStaticVehicleEx(416,-274.0849000,555.7258000,12.6326000,173.3950000,1,1,15); //Ambulance
	aHospitalLV[5] =AddStaticVehicleEx(563,-213.6199000,555.6610000,13.1291000,351.4045000,3,3,15); //Raindance
	aHospitalLV[6] =AddStaticVehicleEx(560,-252.6481000,553.4139000,12.5228000,172.8566000,3,3,15); //Sultan
	aHospitalLV[7] =AddStaticVehicleEx(560,-248.5609000,552.9311000,12.5754000,173.8708000,3,3,15); //Sultan

	// СМИ г.Южный
	aNewsLS[0] = AddStaticVehicleEx(582, 2074.9119, -1885.1986, 18.8125, 270.1187,204,1,300);
	aNewsLS[1] = AddStaticVehicleEx(582, 2074.8989, -1888.3103, 18.8125, 270.1187, 204,1,300);
	aNewsLS[2] = AddStaticVehicleEx(582, 2075.0042, -1894.3857, 18.8125, 270.1187, 204,1,300);
	aNewsLS[3] = AddStaticVehicleEx(582, 2074.9587, -1891.4297, 18.8125, 270.1187, 204,1,300);
	aNewsLS[4] = AddStaticVehicleEx(487, 2091.4475, -1919.1832, 18.8445, 0.0000, 204,1,300);
	aNewsLS[5] = AddStaticVehicleEx(466, 2074.4348, -1897.5216, 18.3325, 270.1187,204,1,300);

	// СМИ пгт.Батырево
	aNewsSF[0] = AddStaticVehicleEx(582, 1978.6304, 1960.3926, 15.5700, 245.5230, 200,1,300);
	aNewsSF[1] = AddStaticVehicleEx(582, 1977.7882, 1956.7412, 15.5700, 245.5230, 200,1,300);
	aNewsSF[2] = AddStaticVehicleEx(582, 1977.6935, 1952.6426, 15.5700, 245.5230, 200,1,300);
	aNewsSF[3] = AddStaticVehicleEx(582, 1977.5272, 1948.5426, 15.5700, 245.5230, 200,1,300);


	/* Закрыто
	aNewsLV[0] = AddStaticVehicleEx(582,2645.5073,1167.6427,10.8285,359.4812,80,1,300);
	aNewsLV[1] = AddStaticVehicleEx(582,2650.1826,1167.6428,10.8281,359.9728,80,1,300);
	aNewsLV[2] = AddStaticVehicleEx(582,2654.6299,1167.6128,10.8271,359.2345,80,1,300);
	aNewsLV[3] = AddStaticVehicleEx(582,2659.1899,1167.5656,10.8269,359.5038,80,1,300);
	aNewsLV[4] = AddStaticVehicleEx(487,2645.5806,1212.5189,27.0742,179.5854,80,1,300);*/

	// Russian Mafia
	aRussianMafia[0] = AddStaticVehicleEx(579, 2151.0625, -1811.9280, 18.8513, 0.0000, 0,0,1200);
	aRussianMafia[1] = AddStaticVehicleEx(579, 2147.4753, -1811.9979, 18.8513, 0.0000, 0,0,1200);
	aRussianMafia[2] = AddStaticVehicleEx(579, 2143.9746, -1811.9979, 18.8513, 0.0000, 0,0,1200);
	aRussianMafia[3] = AddStaticVehicleEx(466, 2138.3904, -1796.3051, 18.5123, 269.9391, 0,0,1200);
	aRussianMafia[4] = AddStaticVehicleEx(466, 2138.4392, -1799.4172, 18.5123, 269.9391, 0,0,1200);
	aRussianMafia[5] = AddStaticVehicleEx(482, 2128.2913, -1812.8269, 18.9364, 331.6835, 0,0,1200);
	aRussianMafia[6] = AddStaticVehicleEx(482, 2131.8481, -1812.8530, 18.9364, 331.6835, 0,0,1200);


	// Итальянская Мафия
	aLCN[0] = AddStaticVehicleEx(579, 2158.0222, -1017.1611, 2.1142, 354.5068, 0,6,1200);
	aLCN[1] = AddStaticVehicleEx(579, 2162.2144, -1017.0972, 2.1142, 354.5068, 0,6,1200);
	aLCN[2] = AddStaticVehicleEx(579, 2166.1804, -1017.1081, 2.1142, 354.5068, 0,6,1200);
	aLCN[3] = AddStaticVehicleEx(466, 2170.7656, -1017.0142, 1.7922, 354.5068, 0,6,1200);
	aLCN[4] = AddStaticVehicleEx(466, 2174.7327, -1017.1568, 1.7922, 354.5068, 0,6,1200);
	aLCN[5] = AddStaticVehicleEx(466, 2178.3938, -1017.2477, 1.7922, 354.5068, 0,6,1200);
	aLCN[6] = AddStaticVehicleEx(482, 2155.4309, -994.5048, 2.2264, 0.0000, 0,6,1200);

	// Yakuza
	aYakuza[0] = AddStaticVehicleEx(400, 2332.8530, 1778.1002, 0.9848, 117.4144, 3,0,1200);
	aYakuza[1] = AddStaticVehicleEx(400, 2333.3381, 1774.0363, 0.9848, 117.4144, 3,0,1200);
	aYakuza[2] = AddStaticVehicleEx(400, 2333.4858, 1769.8324, 0.9848, 117.4144, 3,0,1200);
	aYakuza[3] = AddStaticVehicleEx(482, 2305.0317, 1749.0691, 0.9938, 2.7625, 3,0,1200);
	aYakuza[4] = AddStaticVehicleEx(579, 2312.8013, 1754.2150, 0.9197, 351.0953, 3,0,1200);
	aYakuza[5] = AddStaticVehicleEx(579, 2317.3762, 1754.5148, 0.9197, 351.0953, 3,0,1200);
	aYakuza[6] = AddStaticVehicleEx(579, 2321.6694, 1754.8079, 0.9197, 351.0953, 3,0,1200);

	// Автошкола
	aAutoschool[0] = AddStaticVehicleEx(404, 2192.3701, -2206.9480, 22.0293, 87.7431, 7,1,300); //1
	aAutoschool[1] = AddStaticVehicleEx(404, 2192.3406, -2203.5884, 22.0293, 87.7431, 7,1,300); //2
	aAutoschool[2] = AddStaticVehicleEx(404, 2192.3870, -2200.4097, 22.0293, 87.7431, 7,1,300); //3
	aAutoschool[3] = AddStaticVehicleEx(404, 2192.4546, -2197.4070, 22.0293, 87.7431, 7,1,300); //4

	// ФСБ
	aFBI[0] = AddStaticVehicleEx(490, 2446.6265, -1855.1881, 21.9662, 0.0000, 0,0,300);
	aFBI[1] = AddStaticVehicleEx(490, 2443.4861, -1855.2168, 21.9662, 0.0000, 0,0,300);
	aFBI[2] = AddStaticVehicleEx(490, 2440.5249, -1855.2799, 21.9662, 0.0000, 0,0,300);
	aFBI[3] = AddStaticVehicleEx(490, 2437.6150, -1855.2782, 21.9662, 0.0000, 0,0,300);
	aFBI[4] = AddStaticVehicleEx(487, 2380.8225, -1808.0062, 22.0986, 22.9800, 0,0,300);
	return 1;
}

stock UpdateBizStats(idx)
{
	new string[200], fee[32] = "Вход свободный";
	if(BizInfo[idx][bEnter] != 0) format(fee, sizeof(fee), "Стоимость входа: {FFFFFF}%d$", BizInfo[idx][bEnter]);
	switch(BizInfo[idx][bType])
	{
		case 2:
		{
			if(GetString(BizInfo[idx][bOwner],"None")) format(string, sizeof(string), "{63BD4E}Название: {FFFFFF}%s (%i)\n{63BD4E}Заправка продаётся\n{63BD4E}Цена: {FFFFFF}%d$\n{63BD4E}Цена за 1 литр - {FFFFFF}%i$\nИспользуйте сигнал {AFAFAF}(Caps Lock / H)", BizInfo[idx][bName], idx, BizInfo[idx][bPrice], BizInfo[idx][bTill]);
			else format(string, sizeof(string), "{63BD4E}Название: {FFFFFF}%s (№%i)\n{63BD4E}Владелец: {3399FF}%s\n{63BD4E}Цена за 1 литр - {FFFFFF}%i$\nИспользуйте сигнал {AFAFAF}(Caps Lock / H)", BizInfo[idx][bName], idx, BizInfo[idx][bOwner], BizInfo[idx][bTill]);
			UpdateDynamic3DTextLabelText(LABELBIZ[idx],-1,string);
		}
		case 7:
		{
			if(GetString(BizInfo[idx][bOwner],"None")) format(string, sizeof(string), "{63BD4E}Название: {FFFFFF}%s (%i)\n{63BD4E}СТО продаётся\n{63BD4E}Цена: {FFFFFF}%d$\n{63BD4E}Цена за 1 запчасть - {FFFFFF}%i$\nИспользуйте сигнал {AFAFAF}(Caps Lock / H)", BizInfo[idx][bName], idx, BizInfo[idx][bPrice], BizInfo[idx][bTill]);
			else format(string, sizeof(string), "{63BD4E}Название: {FFFFFF}%s (№%i)\n{63BD4E}Владелец: {FFFFFF}%s\n{63BD4E}Цена за 1 запчасть - {FFFFFF}%i$\nИспользуйте сигнал {AFAFAF}(Caps Lock / H)",  BizInfo[idx][bName], idx, BizInfo[idx][bOwner], BizInfo[idx][bTill]);
			UpdateDynamic3DTextLabelText(LABELBIZ[idx],-1,string);
		}
		default:
		{
		    if(GetString(BizInfo[idx][bOwner],"None")) format(string, sizeof(string), "{63BD4E}Название: {FFFFFF}%s (%i)\n{63BD4E}Бизнес продаётся\n{63BD4E}Цена: {FFFFFF}%d$", BizInfo[idx][bName], idx, BizInfo[idx][bPrice]);
			else format(string, sizeof(string), "{63BD4E}Название: {FFFFFF}%s (№%i)\n{63BD4E}Владелец: {FFFFFF}%s\n{63BD4E}%s", BizInfo[idx][bName], idx, BizInfo[idx][bOwner], fee);
			UpdateDynamic3DTextLabelText(LABELBIZ[idx],-1,string);
		}
	}
	return 1;
}

stock UpdateHouse(idx)
{
	DestroyDynamicMapIcon(HouseInfo[idx][hMIcon]);
	DestroyDynamicObject(HouseInfo[idx][hObjectEnter]);
	DestroyDynamicArea(HouseInfo[idx][hAreaEnter]);

	HouseInfo[idx][hMIcon] = CreateDynamicMapIcon(HouseInfo[idx][hEntr][0], HouseInfo[idx][hEntr][1], HouseInfo[idx][hEntr][2], (GetString(HouseInfo[idx][hOwner],"None")) ? (31) : (32), -1);
	HouseInfo[idx][hAreaEnter] = CreateDynamicSphere(HouseInfo[idx][hEntr][0], HouseInfo[idx][hEntr][1], HouseInfo[idx][hEntr][2], 1.3, 0, 0, -1);
    HouseInfo[idx][hObjectEnter] = CreateDynamicObject(1317, HouseInfo[idx][hEntr][0], HouseInfo[idx][hEntr][1], HouseInfo[idx][hEntr][2]-1.5, 0.0, 0.0, 0.0, -1, -1, -1, 50.0, 50.0);

	if(GetString(HouseInfo[idx][hOwner],"None")) SetDynamicObjectMaterial(HouseInfo[idx][hObjectEnter], 0, 18646, "matcolours", "green", 0xAA00FF00);
 	else SetDynamicObjectMaterial(HouseInfo[idx][hObjectEnter], 0, 18646, "matcolours", "orange", 0xAAFF8000);

 	DestroyDynamic3DTextLabel(HouseInfo[idx][hTextEnter]);
	HouseInfo[idx][hTextEnter] = Text3D:INVALID_3DTEXT_ID;

 	new texthouse[15];
	format(texthouse, sizeof(texthouse), "Дом №%i", idx);
	HouseInfo[idx][hTextEnter] = CreateDynamic3DTextLabel(texthouse, 0xFFFFFFFF, HouseInfo[idx][hEntr][0], HouseInfo[idx][hEntr][1], HouseInfo[idx][hEntr][2]+0.3, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
	return 1;
}

stock BuyCar(playerid) { // autosalon
	if(!pInfo[playerid][pHouse]) return 1;
	new Float:x, Float:y, Float:z, Float:fa;
	switch(InShop[playerid])
	{
		case 1:
		{
			selectcost[playerid] = carsC[pPressed[playerid]][1];
			selectmodel[playerid] = carsC[pPressed[playerid]][0];
			x=1832.7157, y=2255.4036, z=15.2690, fa=180.6266;
		}
		case 2:
		{
			selectcost[playerid] = carsB[pPressed[playerid]][1];
			selectmodel[playerid] = carsB[pPressed[playerid]][0];
			x=2474.7939, y=-728.6141, z=12.3000, fa=179.9544;
		}
		case 3:
		{
			selectcost[playerid] = carsA[pPressed[playerid]][1];
			selectmodel[playerid] = carsA[pPressed[playerid]][0];
			x=2323.9468, y=-1801.1836, z=22.4540, fa=177.7321;// Спорт
		}
		case 4:
		{
			selectcost[playerid] = carsBike[pPressed[playerid]][1];
			selectmodel[playerid] = carsBike[pPressed[playerid]][0];
			x=2335.9741, y=1988.4768, z=15.9870, fa=7.6417;// Мотосалон
		}
	}
	if(pInfo[playerid][pCash] < selectcost[playerid]) return SendClientMessage(playerid, COLOR_GREY, "На вашем счету в банке не хватает денег!");
	pInfo[playerid][pCash] -= selectcost[playerid];
	TogglePlayerControllable(playerid,true);
	for(new t; t<2;t++) PlayerTextDrawHide(playerid,car_showroom_TD[playerid][t]); // closed td
	for(new i; i < 5; i++) TextDrawHideForPlayer(playerid,car_showroom_info_TD[i]); // closed td
	SetPlayerPos(playerid,x,y,z);
	SetPlayerFacingAngle(playerid,fa);
	SetPlayerInterior(playerid,0);
	SetPlayerVirtualWorld(playerid,0);
	SetCameraBehindPlayer(playerid);
	for(new i = 0; i < 14; i++) pInfo[playerid][cVehcoms][i] = 0;
	format(pInfo[playerid][cVehcom],64,"%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",
	pInfo[playerid][cVehcoms][0],pInfo[playerid][cVehcoms][1],pInfo[playerid][cVehcoms][2],pInfo[playerid][cVehcoms][3],pInfo[playerid][cVehcoms][4],pInfo[playerid][cVehcoms][5],
	pInfo[playerid][cVehcoms][6],pInfo[playerid][cVehcoms][7],pInfo[playerid][cVehcoms][8],pInfo[playerid][cVehcoms][9],pInfo[playerid][cVehcoms][10],pInfo[playerid][cVehcoms][11],
	pInfo[playerid][cVehcoms][12],pInfo[playerid][cVehcoms][13]);

	pInfo[playerid][cClass] = InShop[playerid];
	pInfo[playerid][cModel] = selectmodel[playerid];
	pInfo[playerid][cCost] = selectcost[playerid];
	new model0 = GetVehicleModel(pTemp[playerid][pCarShowroomID]);
	pInfo[playerid][cFuel] = VehStats[model0-400][vMaxFuel];
	pInfo[playerid][cMileage] = 0.0;
	pInfo[playerid][cColor][0] = colors[playerid][0];
	pInfo[playerid][cColor][1] = colors[playerid][1];
	pInfo[playerid][cPaintjob] = 3;

	SendClientMessage(playerid, COLOR_WHITE, "Поздравляем! Теперь этот транспорт принадлежит вам.");
	SendClientMessage(playerid, COLOR_WHITE, "Ваш транспорт доставлен к вашему дому.");
	if(pTemp[playerid][pCarShowroomID] != INVALID_VEHICLE_ID)
	{
		DestroyVehicle(pTemp[playerid][pCarShowroomID]);
		pTemp[playerid][pCarShowroomID] = INVALID_VEHICLE_ID;
	}
	InShop[playerid] = pPressed[playerid] = 0;
	pInfo[playerid][pRegVehicle] = 0;
	LoadPlayerVehicle(playerid);
	new model1 = GetVehicleModel(pTemp[playerid][pCarPlayerID]);
	new string[126];
	format(string, sizeof(string), "Игрок %s купил транспорт %s[%i] за %dRUB", GetName(playerid), VehStats[model1-400][vName], model1, selectcost[playerid]);
	WriteLog("BuyCar", string);

	if(VehicleLabel[pTemp[playerid][pCarPlayerID]] != Text3D:INVALID_3DTEXT_ID) {
	    DestroyDynamic3DTextLabel(VehicleLabel[pTemp[playerid][pCarPlayerID]]);
	    VehicleLabel[pTemp[playerid][pCarPlayerID]] = Text3D:INVALID_3DTEXT_ID;
	}

	VehicleLabel[pTemp[playerid][pCarPlayerID]] = CreateDynamic3DTextLabel("{FFFFFF}ТРАНЗИТ", 0xFFFFFFFF, 0, 0, 0, 10.0,INVALID_PLAYER_ID, pTemp[playerid][pCarPlayerID], 1);
 	strmid(pInfo[playerid][pNumberVehicle], "ТРАНЗИТ", 0, strlen("ТРАНЗИТ"), 64);
 	mysql_query_string[0] = EOS;
	format(mysql_query_string, 200, "UPDATE "T_ACCOUNTS" SET veh_reg = %i, veh_number = '%s' WHERE id = %i", pInfo[playerid][pRegVehicle], pInfo[playerid][pNumberVehicle], pInfo[playerid][pID]);
	mysql_tquery(dbHandle, mysql_query_string, "", "");
	return 1;
}

stock BuyCloseCar(playerid)
{
	new Float:x, Float:y, Float:z, Float:fa;
	switch(InShop[playerid])
	{
		case 1: x=1832.7157, y=2255.4036, z=15.2690, fa=180.6266;// Эконом
		case 2: x=2474.7939, y=-728.6141, z=12.3000, fa=179.9544;//Средний
		case 3: x=2323.9468, y=-1801.1836, z=22.4540, fa=177.7321;//Спорт
		case 4: x=2335.9741, y=1988.4768, z=15.9870, fa=7.6417;// Мотосалон
	}
	if(pTemp[playerid][pCarShowroomID] != INVALID_VEHICLE_ID)
	{
		DestroyVehicle(pTemp[playerid][pCarShowroomID]);
		pTemp[playerid][pCarShowroomID] = INVALID_VEHICLE_ID;
	}
	InShop[playerid] = 0;
	TogglePlayerControllable(playerid,true);
	PlayerTextDrawHide(playerid,car_showroom_TD[playerid][0]);
	PlayerTextDrawHide(playerid,car_showroom_TD[playerid][1]);
	for(new i; i < 5; i++) TextDrawHideForPlayer(playerid,car_showroom_info_TD[i]);
	SetPlayerPos(playerid,x,y,z);
	SetPlayerFacingAngle(playerid,fa);
	SetPlayerInterior(playerid,0);
	SetPlayerVirtualWorld(playerid,0);
	SetCameraBehindPlayer(playerid);
	pPressed[playerid] = 0;
	return 1;
}

stock LoadPlayerVehicle(playerid)
{
    new h;
	if(pInfo[playerid][pHouse]) h = pInfo[playerid][pHouse];
	if(!h) return 1;
	if(!pInfo[playerid][cModel]) return 1;
	if(!(400 <= pInfo[playerid][cModel] <= 611)) return 1;
	if(!(0 <= pInfo[playerid][cPaintjob] <= 3)) pInfo[playerid][cPaintjob] = 3;
	if(HouseInfo[h][hGarage])
	{
	    if(pTemp[playerid][pCarPlayerID] != INVALID_VEHICLE_ID)
		{
			DestroyVehicle(pTemp[playerid][pCarPlayerID]);
			pTemp[playerid][pCarPlayerID] = INVALID_VEHICLE_ID;
		}

	    pTemp[playerid][pCarPlayerID] = CreateVehicle(pInfo[playerid][cModel], 	-1646.7933, 1545.8517, 835.2591, 90.0000, pInfo[playerid][cColor][0], pInfo[playerid][cColor][1], 90000);

        new _c = HouseInfo[h][hClass], _i = HouseInfo[h][hInt];
		LinkVehicleToInterior(pTemp[playerid][pCarPlayerID], HintsInfo[_c][_i][hiInt]);
		SetVehicleVirtualWorld(pTemp[playerid][pCarPlayerID], HouseInfo[h][hID]);
	}
	else
	{
	    if(pTemp[playerid][pCarPlayerID] != INVALID_VEHICLE_ID)
		{
			DestroyVehicle(pTemp[playerid][pCarPlayerID]);
			pTemp[playerid][pCarPlayerID] = INVALID_VEHICLE_ID;
		}

	    pTemp[playerid][pCarPlayerID] = CreateVehicle(pInfo[playerid][cModel], HouseInfo[h][hCar][0], HouseInfo[h][hCar][1], HouseInfo[h][hCar][2], HouseInfo[h][hCar][3], pInfo[playerid][cColor][0], pInfo[playerid][cColor][1], 90000);

	    LinkVehicleToInterior(pTemp[playerid][pCarPlayerID], 0);
	    SetVehicleVirtualWorld(pTemp[playerid][pCarPlayerID], 0);
	}
	VehicleInfo[pTemp[playerid][pCarPlayerID]][vFuel] = pInfo[playerid][cFuel];
	VehicleInfo[pTemp[playerid][pCarPlayerID]][vMileage] = pInfo[playerid][cMileage];
	SetVehicleHealth(pTemp[playerid][pCarPlayerID], 1000.0);
	SetVehicleNumberPlate(pTemp[playerid][pCarPlayerID], "None");
	SetVehicleParamsEx(pTemp[playerid][pCarPlayerID], false, false, false, false, false, false, false);
	ToggleLock(pTemp[playerid][pCarPlayerID], 1);
	for(new i; i < 14; i++)
	{
	    if(pInfo[playerid][cVehcoms][i]) AddVehicleComponent(pTemp[playerid][pCarPlayerID], pInfo[playerid][cVehcoms][i]);
	}
	if(pInfo[playerid][cPaintjob] != 3) ChangeVehiclePaintjob(pTemp[playerid][pCarPlayerID], pInfo[playerid][cPaintjob]);
	SetVehicleNumberPlate(pTemp[playerid][pCarPlayerID], pInfo[playerid][pNumberVehicle]);
 	/*//Delete3DTextLabel(VehicleLabel[pTemp[playerid][pCarPlayerID]]);
	new string[220];
  	format(string,sizeof(string),"%s",pInfo[playerid][pNumberVehicle]);
	VehicleLabel[pTemp[playerid][pCarPlayerID]] = Create3DTextLabel(string, 0xFFFFFFFF, 0.0, 0.0, 0.0, 50.0, 0, 1 );
	Attach3DTextLabelToVehicle(VehicleLabel[pTemp[playerid][pCarPlayerID]], pTemp[playerid][pCarPlayerID], 0.0, 0.0, 1.0);*/

 	if(VehicleLabel[pTemp[playerid][pCarPlayerID]] != Text3D:INVALID_3DTEXT_ID)
	{
	    DestroyDynamic3DTextLabel(VehicleLabel[pTemp[playerid][pCarPlayerID]]);
	    VehicleLabel[pTemp[playerid][pCarPlayerID]] = Text3D:INVALID_3DTEXT_ID;
	}
	if(pInfo[playerid][pNumberVehicle] != 0)
	{
		format(numstring,220,"%s",pInfo[playerid][pNumberVehicle]);
		VehicleLabel[pTemp[playerid][pCarPlayerID]] = CreateDynamic3DTextLabel(numstring, 0xFFFFFFFF, 0, 0, 0, 10.0,INVALID_PLAYER_ID, pTemp[playerid][pCarPlayerID], 1);
		//Attach3DTextLabelToVehicle(VehicleLabel[pInfo[playerid][cCarId]], pInfo[playerid][cCarId], 0, 0, 0.1);
	}
	else
	{
	    VehicleLabel[pTemp[playerid][pCarPlayerID]] = CreateDynamic3DTextLabel("{FFA812}ТРАНЗИТ", 0xFFFFFFFF, 0, 0, 0, 10.0,INVALID_PLAYER_ID, pTemp[playerid][pCarPlayerID], 1);
		//Attach3DTextLabelToVehicle(VehicleLabel[pInfo[playerid][cCarId]], pInfo[playerid][cCarId], 0, 0, 0.1);
	}
	return 1;
}

stock SendVipMessage(color, str[])
{
	foreach(new i : Player)
	{
		if(!gPlayerLogged[i]) continue;
		if(pInfo[i][pVip] > 0) SendClientMessage(i, color, str);
	}
	return 1;
}

stock SendAdminMessage(color, str[])
{
	foreach(new i : Player)
	{
		if(!gPlayerLogged[i]) continue;
		if(pInfo[i][pAdmin] > ADM_NONE && gAdminLogged[i]) SendClientMessage(i, color, str);
	}
	return 1;
}

stock SendAdminMessageEx(color, str[], admin_level)
{
	foreach(new i : Player)
	{
		if(!gPlayerLogged[i]) continue;
		if(pInfo[i][pAdmin] >= admin_level && gAdminLogged[i]) SendClientMessage(i, color, str);
	}
	return 1;
}

stock SendAdminMessageToAll(color, const message[], exc = -1)
{
	foreach(new i : Player)
	{
		if(!gPlayerLogged[i]) continue;
		if(pInfo[i][pSettings] & setAdminInfo || exc == i) SendClientMessage(i, color, message);
	}
}

stock SendFMes(family, color, str[])
{
	foreach(new i : Player)
	{
		if(!gPlayerLogged[i]) continue;
		if(pInfo[i][pMember] == family && pInfo[i][pSettings] & setFractionChat) SendClientMessage(i, color, str);
	}
	return 1;
}

stock SendGhettoMes(color, str[])
{
	foreach(new i : Player)
	{
		if(!gPlayerLogged[i]) continue;
		if(IsAGang(i)) SendClientMessage(i, color, str);
	}
	return 1;
}

stock SendDMes(color, str[])
{
	foreach(new i : Player)
	{
		if(!gPlayerLogged[i]) continue;
		if(pInfo[i][pSettings] & setFractionChat)
		{
			if(pInfo[i][pMember] == TEAM_NG || IsAMedic(i) || IsAMayor(i) || IsACop(i) || pInfo[i][pMember] == TEAM_AUTOSCHOOL || IsANews(i)) SendClientMessage(i, color, str);
		}
	}
	return 1;
}

stock SendNMes(news, color, str[])
{
	foreach(new i : Player)
	{
		if(!gPlayerLogged[i]) continue;
		if(pInfo[i][pNews] == news) SendClientMessage(i, color, str);
	}
	return 1;
}

stock SendStreamMessage(Float:radius, playerid, mes[], color)
{
	new Float:X, Float:Y, Float:Z, world = GetPlayerVirtualWorld(playerid);
	GetPlayerPos(playerid,X,Y,Z);
	foreach(new i : Player)
	{
		if(GetPlayerVirtualWorld(i) == world)
		{
			if(IsPlayerInRangeOfPoint(i,radius,X,Y,Z)) SendClientMessage(i, color, mes);
		}
	}
}

stock IsPlayerStream(Float:radi, playerid, targetid, spec = 0)
{
	if(!IsPlayerConnected(playerid)) return 0;
    if(!IsPlayerConnected(targetid)) return 0;
	new Float:X, Float:Y, Float:Z;
	if(spec)
    {
	    if(GetPlayerState(playerid) == 9) return 0;
	    if(GetPlayerState(targetid) == 9) return 0;
    }
    if(!GetPlayerPos(targetid, X, Y, Z)) return 0;
	if(!IsPlayerInRangeOfPoint(playerid, radi, X, Y, Z)) return 0;
	return 1;
}

stock IsVehicleInRangeOfPoint(vehicleid, Float:distance, Float:x, Float:y, Float:z)
{
	new Float:oldposx, Float:oldposy, Float:oldposz;
	new Float:tempposx, Float:tempposy, Float:tempposz;
	GetVehiclePos(vehicleid, oldposx, oldposy, oldposz);
	tempposx = (oldposx - x);
	tempposy = (oldposy - y);
	tempposz = (oldposz - z);
	if (((tempposx < distance) && (tempposx > -distance)) && ((tempposy < distance) && (tempposy > -distance)) && ((tempposz < distance) && (tempposz > -distance))) return 1;
	return 0;
}

stock CreateTextDraws(playerid){
    DestroyPlayerTD(playerid, hunger_progress_TD[playerid]);
	for(new i = 0; i < 8; i++) DestroyPlayerTD(playerid, speed_PTD[playerid][i]);
    for(new i = 0; i < 10; i++) DestroyPlayerTD(playerid, security_code_TD[playerid][i]);
	for(new i = 0; i < 4; i++) DestroyPlayerTD(playerid, status_work_TD[playerid][i]);
	for(new i = 0; i < 1; i++) DestroyPlayerTD(playerid, zz_PTD[playerid][i]);
	DestroyPlayerTD(playerid, car_showroom_TD[playerid][0]);
	DestroyPlayerTD(playerid, car_showroom_TD[playerid][1]);

    security_code_TD[playerid][9] = CreatePlayerTextDraw(playerid, 510.666870, 282.088989, "box");
	PlayerTextDrawLetterSize(playerid, security_code_TD[playerid][9], 0.000000, 10.890344);
	PlayerTextDrawTextSize(playerid, security_code_TD[playerid][9], 571.493652, 0.000000);
	PlayerTextDrawAlignment(playerid, security_code_TD[playerid][9], 1);
	PlayerTextDrawColor(playerid, security_code_TD[playerid][9], -222);
	PlayerTextDrawUseBox(playerid, security_code_TD[playerid][9], 1);
	PlayerTextDrawBoxColor(playerid, security_code_TD[playerid][9], -222);
	PlayerTextDrawSetShadow(playerid, security_code_TD[playerid][9], 0);
	PlayerTextDrawSetOutline(playerid, security_code_TD[playerid][9], 0);
	PlayerTextDrawBackgroundColor(playerid, security_code_TD[playerid][9], 255);
	PlayerTextDrawFont(playerid, security_code_TD[playerid][9], 1);
	PlayerTextDrawSetProportional(playerid, security_code_TD[playerid][9], 1);
	PlayerTextDrawSetShadow(playerid, security_code_TD[playerid][9], 0);

    security_code_TD[playerid][0] = CreatePlayerTextDraw(playerid, 513.333374, 287.066650, "1");
	PlayerTextDrawLetterSize(playerid, security_code_TD[playerid][0], 0.760999, 2.894222);
	PlayerTextDrawTextSize(playerid, security_code_TD[playerid][0], 528.666748, 18.000000);
	PlayerTextDrawAlignment(playerid, security_code_TD[playerid][0], 1);
	PlayerTextDrawColor(playerid, security_code_TD[playerid][0], -1);
	PlayerTextDrawUseBox(playerid, security_code_TD[playerid][0], 1);
	PlayerTextDrawBoxColor(playerid, security_code_TD[playerid][0], -5963521);
	PlayerTextDrawSetShadow(playerid, security_code_TD[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, security_code_TD[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, security_code_TD[playerid][0], 255);
	PlayerTextDrawFont(playerid, security_code_TD[playerid][0], 3);
	PlayerTextDrawSetProportional(playerid, security_code_TD[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, security_code_TD[playerid][0], 0);
	PlayerTextDrawSetSelectable(playerid, security_code_TD[playerid][0], true);

	security_code_TD[playerid][5] = CreatePlayerTextDraw(playerid, 533.228515, 287.066650, "6");
	PlayerTextDrawLetterSize(playerid, security_code_TD[playerid][5], 0.760999, 2.894222);
	PlayerTextDrawTextSize(playerid, security_code_TD[playerid][5], 548.561889, 18.000000);
	PlayerTextDrawAlignment(playerid, security_code_TD[playerid][5], 1);
	PlayerTextDrawColor(playerid, security_code_TD[playerid][5], -1);
	PlayerTextDrawUseBox(playerid, security_code_TD[playerid][5], 1);
	PlayerTextDrawBoxColor(playerid, security_code_TD[playerid][5], -5963521);
	PlayerTextDrawSetShadow(playerid, security_code_TD[playerid][5], 0);
	PlayerTextDrawSetOutline(playerid, security_code_TD[playerid][5], 0);
	PlayerTextDrawBackgroundColor(playerid, security_code_TD[playerid][5], 255);
	PlayerTextDrawFont(playerid, security_code_TD[playerid][5], 3);
	PlayerTextDrawSetProportional(playerid, security_code_TD[playerid][5], 1);
	PlayerTextDrawSetShadow(playerid, security_code_TD[playerid][5], 0);
	PlayerTextDrawSetSelectable(playerid, security_code_TD[playerid][5], true);

	security_code_TD[playerid][2] = CreatePlayerTextDraw(playerid, 553.523559, 287.066650, "3");
	PlayerTextDrawLetterSize(playerid, security_code_TD[playerid][2], 0.760999, 2.894222);
	PlayerTextDrawTextSize(playerid, security_code_TD[playerid][2], 568.856933, 18.000000);
	PlayerTextDrawAlignment(playerid, security_code_TD[playerid][2], 1);
	PlayerTextDrawColor(playerid, security_code_TD[playerid][2], -1);
	PlayerTextDrawUseBox(playerid, security_code_TD[playerid][2], 1);
	PlayerTextDrawBoxColor(playerid, security_code_TD[playerid][2], -5963521);
	PlayerTextDrawSetShadow(playerid, security_code_TD[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, security_code_TD[playerid][2], 0);
	PlayerTextDrawBackgroundColor(playerid, security_code_TD[playerid][2], 255);
	PlayerTextDrawFont(playerid, security_code_TD[playerid][2], 3);
	PlayerTextDrawSetProportional(playerid, security_code_TD[playerid][2], 1);
	PlayerTextDrawSetShadow(playerid, security_code_TD[playerid][2], 0);
	PlayerTextDrawSetSelectable(playerid, security_code_TD[playerid][2], true);

	security_code_TD[playerid][4] = CreatePlayerTextDraw(playerid, 553.523559, 318.868591, "5");
	PlayerTextDrawLetterSize(playerid, security_code_TD[playerid][4], 0.760999, 2.894222);
	PlayerTextDrawTextSize(playerid, security_code_TD[playerid][4], 568.856933, 18.000000);
	PlayerTextDrawAlignment(playerid, security_code_TD[playerid][4], 1);
	PlayerTextDrawColor(playerid, security_code_TD[playerid][4], -1);
	PlayerTextDrawUseBox(playerid, security_code_TD[playerid][4], 1);
	PlayerTextDrawBoxColor(playerid, security_code_TD[playerid][4], -5963521);
	PlayerTextDrawSetShadow(playerid, security_code_TD[playerid][4], 0);
	PlayerTextDrawSetOutline(playerid, security_code_TD[playerid][4], 0);
	PlayerTextDrawBackgroundColor(playerid, security_code_TD[playerid][4], 255);
	PlayerTextDrawFont(playerid, security_code_TD[playerid][4], 3);
	PlayerTextDrawSetProportional(playerid, security_code_TD[playerid][4], 1);
	PlayerTextDrawSetShadow(playerid, security_code_TD[playerid][4], 0);
	PlayerTextDrawSetSelectable(playerid, security_code_TD[playerid][4], true);

	security_code_TD[playerid][7] = CreatePlayerTextDraw(playerid, 533.228515, 318.868591, "8");
	PlayerTextDrawLetterSize(playerid, security_code_TD[playerid][7], 0.760999, 2.894222);
	PlayerTextDrawTextSize(playerid, security_code_TD[playerid][7], 548.561889, 18.000000);
	PlayerTextDrawAlignment(playerid, security_code_TD[playerid][7], 1);
	PlayerTextDrawColor(playerid, security_code_TD[playerid][7], -1);
	PlayerTextDrawUseBox(playerid, security_code_TD[playerid][7], 1);
	PlayerTextDrawBoxColor(playerid, security_code_TD[playerid][7], -5963521);
	PlayerTextDrawSetShadow(playerid, security_code_TD[playerid][7], 0);
	PlayerTextDrawSetOutline(playerid, security_code_TD[playerid][7], 0);
	PlayerTextDrawBackgroundColor(playerid, security_code_TD[playerid][7], 255);
	PlayerTextDrawFont(playerid, security_code_TD[playerid][7], 3);
	PlayerTextDrawSetProportional(playerid, security_code_TD[playerid][7], 1);
	PlayerTextDrawSetShadow(playerid, security_code_TD[playerid][7], 0);
	PlayerTextDrawSetSelectable(playerid, security_code_TD[playerid][7], true);

	security_code_TD[playerid][6] = CreatePlayerTextDraw(playerid, 513.233398, 318.868591, "7");
	PlayerTextDrawLetterSize(playerid, security_code_TD[playerid][6], 0.760999, 2.894222);
	PlayerTextDrawTextSize(playerid, security_code_TD[playerid][6], 528.566772, 18.000000);
	PlayerTextDrawAlignment(playerid, security_code_TD[playerid][6], 1);
	PlayerTextDrawColor(playerid, security_code_TD[playerid][6], -1);
	PlayerTextDrawUseBox(playerid, security_code_TD[playerid][6], 1);
	PlayerTextDrawBoxColor(playerid, security_code_TD[playerid][6], -5963521);
	PlayerTextDrawSetShadow(playerid, security_code_TD[playerid][6], 0);
	PlayerTextDrawSetOutline(playerid, security_code_TD[playerid][6], 0);
	PlayerTextDrawBackgroundColor(playerid, security_code_TD[playerid][6], 255);
	PlayerTextDrawFont(playerid, security_code_TD[playerid][6], 3);
	PlayerTextDrawSetProportional(playerid, security_code_TD[playerid][6], 1);
	PlayerTextDrawSetShadow(playerid, security_code_TD[playerid][6], 0);
	PlayerTextDrawSetSelectable(playerid, security_code_TD[playerid][6], true);

	security_code_TD[playerid][1] = CreatePlayerTextDraw(playerid, 513.233398, 350.770538, "2");
	PlayerTextDrawLetterSize(playerid, security_code_TD[playerid][1], 0.760999, 2.894222);
	PlayerTextDrawTextSize(playerid, security_code_TD[playerid][1], 528.566772, 18.000000);
	PlayerTextDrawAlignment(playerid, security_code_TD[playerid][1], 1);
	PlayerTextDrawColor(playerid, security_code_TD[playerid][1], -1);
	PlayerTextDrawUseBox(playerid, security_code_TD[playerid][1], 1);
	PlayerTextDrawBoxColor(playerid, security_code_TD[playerid][1], -5963521);
	PlayerTextDrawSetShadow(playerid, security_code_TD[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, security_code_TD[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid, security_code_TD[playerid][1], 255);
	PlayerTextDrawFont(playerid, security_code_TD[playerid][1], 3);
	PlayerTextDrawSetProportional(playerid, security_code_TD[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, security_code_TD[playerid][1], 0);
	PlayerTextDrawSetSelectable(playerid, security_code_TD[playerid][1], true);

	security_code_TD[playerid][3] = CreatePlayerTextDraw(playerid, 533.328491, 350.770538, "4");
	PlayerTextDrawLetterSize(playerid, security_code_TD[playerid][3], 0.760999, 2.894222);
	PlayerTextDrawTextSize(playerid, security_code_TD[playerid][3], 548.661865, 18.000000);
	PlayerTextDrawAlignment(playerid, security_code_TD[playerid][3], 1);
	PlayerTextDrawColor(playerid, security_code_TD[playerid][3], -1);
	PlayerTextDrawUseBox(playerid, security_code_TD[playerid][3], 1);
	PlayerTextDrawBoxColor(playerid, security_code_TD[playerid][3], -5963521);
	PlayerTextDrawSetShadow(playerid, security_code_TD[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, security_code_TD[playerid][3], 0);
	PlayerTextDrawBackgroundColor(playerid, security_code_TD[playerid][3], 255);
	PlayerTextDrawFont(playerid, security_code_TD[playerid][3], 3);
	PlayerTextDrawSetProportional(playerid, security_code_TD[playerid][3], 1);
	PlayerTextDrawSetShadow(playerid, security_code_TD[playerid][3], 0);
	PlayerTextDrawSetSelectable(playerid, security_code_TD[playerid][3], true);

	security_code_TD[playerid][8] = CreatePlayerTextDraw(playerid, 553.523559, 350.770538, "9");
	PlayerTextDrawLetterSize(playerid, security_code_TD[playerid][8], 0.760999, 2.894222);
	PlayerTextDrawTextSize(playerid, security_code_TD[playerid][8], 568.856933, 18.000000);
	PlayerTextDrawAlignment(playerid, security_code_TD[playerid][8], 1);
	PlayerTextDrawColor(playerid, security_code_TD[playerid][8], -1);
	PlayerTextDrawUseBox(playerid, security_code_TD[playerid][8], 1);
	PlayerTextDrawBoxColor(playerid, security_code_TD[playerid][8], -5963521);
	PlayerTextDrawSetShadow(playerid, security_code_TD[playerid][8], 0);
	PlayerTextDrawSetOutline(playerid, security_code_TD[playerid][8], 0);
	PlayerTextDrawBackgroundColor(playerid, security_code_TD[playerid][8], 255);
	PlayerTextDrawFont(playerid, security_code_TD[playerid][8], 3);
	PlayerTextDrawSetProportional(playerid, security_code_TD[playerid][8], 1);
	PlayerTextDrawSetShadow(playerid, security_code_TD[playerid][8], 0);
	PlayerTextDrawSetSelectable(playerid, security_code_TD[playerid][8], true);
	// hud
	fhud_PTD[playerid][0] = CreatePlayerTextDraw(playerid, 513.0162, 79.1666, "150"); // ?????
	PlayerTextDrawLetterSize(playerid, fhud_PTD[playerid][0], 0.2781, 1.3258);
	PlayerTextDrawAlignment(playerid, fhud_PTD[playerid][0], 1);
	PlayerTextDrawColor(playerid, fhud_PTD[playerid][0], -1);
	PlayerTextDrawBackgroundColor(playerid, fhud_PTD[playerid][0], 255);
	PlayerTextDrawFont(playerid, fhud_PTD[playerid][0], 2);
	PlayerTextDrawSetProportional(playerid, fhud_PTD[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, fhud_PTD[playerid][0], 0);

	// контейнеры
	cont_PTD[playerid][0] = CreatePlayerTextDraw(playerid, 324.0336, 232.0000, "LD_SPAC:white"); // пусто
	PlayerTextDrawTextSize(playerid, cont_PTD[playerid][0], 58.0000, 13.0000);
	PlayerTextDrawAlignment(playerid, cont_PTD[playerid][0], 1);
	PlayerTextDrawColor(playerid, cont_PTD[playerid][0], 8388863);
	PlayerTextDrawBackgroundColor(playerid, cont_PTD[playerid][0], 255);
	PlayerTextDrawFont(playerid, cont_PTD[playerid][0], 4);
	PlayerTextDrawSetProportional(playerid, cont_PTD[playerid][0], 0);
	PlayerTextDrawSetShadow(playerid, cont_PTD[playerid][0], 0);
	PlayerTextDrawSetSelectable(playerid, cont_PTD[playerid][0], true);

	cont_PTD[playerid][1] = CreatePlayerTextDraw(playerid, 257.5035, 232.0000, "LD_SPAC:white"); // пусто
	PlayerTextDrawTextSize(playerid, cont_PTD[playerid][1], 58.0000, 13.0000);
	PlayerTextDrawAlignment(playerid, cont_PTD[playerid][1], 1);
	PlayerTextDrawColor(playerid, cont_PTD[playerid][1], -1523963137);
	PlayerTextDrawBackgroundColor(playerid, cont_PTD[playerid][1], 255);
	PlayerTextDrawFont(playerid, cont_PTD[playerid][1], 4);
	PlayerTextDrawSetProportional(playerid, cont_PTD[playerid][1], 0);
	PlayerTextDrawSetShadow(playerid, cont_PTD[playerid][1], 0);
	PlayerTextDrawSetSelectable(playerid, cont_PTD[playerid][1], true);

	// mkpp
 	mkpp_PTD[playerid][0] = CreatePlayerTextDraw(playerid, 411.8157, 383.6666, "1"); // ?????
	PlayerTextDrawLetterSize(playerid, mkpp_PTD[playerid][0], 0.3292, 1.2849);
	PlayerTextDrawAlignment(playerid, mkpp_PTD[playerid][0], 1);
	PlayerTextDrawColor(playerid, mkpp_PTD[playerid][0], -1);
	PlayerTextDrawBackgroundColor(playerid, mkpp_PTD[playerid][0], 255);
	PlayerTextDrawFont(playerid, mkpp_PTD[playerid][0], 2);
	PlayerTextDrawSetProportional(playerid, mkpp_PTD[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, mkpp_PTD[playerid][0], 0);

	mkpp_PTD[playerid][1] = CreatePlayerTextDraw(playerid, 411.3471, 410.5000, "2"); // ?????
	PlayerTextDrawLetterSize(playerid, mkpp_PTD[playerid][1], 0.2842, 1.0574);
	PlayerTextDrawAlignment(playerid, mkpp_PTD[playerid][1], 1);
	PlayerTextDrawColor(playerid, mkpp_PTD[playerid][1], -1);
	PlayerTextDrawBackgroundColor(playerid, mkpp_PTD[playerid][1], 255);
	PlayerTextDrawFont(playerid, mkpp_PTD[playerid][1], 2);
	PlayerTextDrawSetProportional(playerid, mkpp_PTD[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, mkpp_PTD[playerid][1], 0);

	mkpp_PTD[playerid][2] = CreatePlayerTextDraw(playerid, 423.0602, 384.2499, "3"); // ?????
	PlayerTextDrawLetterSize(playerid, mkpp_PTD[playerid][2], 0.2842, 1.0574);
	PlayerTextDrawAlignment(playerid, mkpp_PTD[playerid][2], 1);
	PlayerTextDrawColor(playerid, mkpp_PTD[playerid][2], -1);
	PlayerTextDrawBackgroundColor(playerid, mkpp_PTD[playerid][2], 255);
	PlayerTextDrawFont(playerid, mkpp_PTD[playerid][2], 2);
	PlayerTextDrawSetProportional(playerid, mkpp_PTD[playerid][2], 1);
	PlayerTextDrawSetShadow(playerid, mkpp_PTD[playerid][2], 0);

	mkpp_PTD[playerid][3] = CreatePlayerTextDraw(playerid, 423.5287, 409.9167, "4"); // ?????
	PlayerTextDrawLetterSize(playerid, mkpp_PTD[playerid][3], 0.2842, 1.0574);
	PlayerTextDrawAlignment(playerid, mkpp_PTD[playerid][3], 1);
	PlayerTextDrawColor(playerid, mkpp_PTD[playerid][3], -1);
	PlayerTextDrawBackgroundColor(playerid, mkpp_PTD[playerid][3], 255);
	PlayerTextDrawFont(playerid, mkpp_PTD[playerid][3], 2);
	PlayerTextDrawSetProportional(playerid, mkpp_PTD[playerid][3], 1);
	PlayerTextDrawSetShadow(playerid, mkpp_PTD[playerid][3], 0);

	mkpp_PTD[playerid][4] = CreatePlayerTextDraw(playerid, 434.7733, 384.8333, "5"); // ?????
	PlayerTextDrawLetterSize(playerid, mkpp_PTD[playerid][4], 0.2842, 1.0574);
	PlayerTextDrawAlignment(playerid, mkpp_PTD[playerid][4], 1);
	PlayerTextDrawColor(playerid, mkpp_PTD[playerid][4], -1);
	PlayerTextDrawBackgroundColor(playerid, mkpp_PTD[playerid][4], 255);
	PlayerTextDrawFont(playerid, mkpp_PTD[playerid][4], 2);
	PlayerTextDrawSetProportional(playerid, mkpp_PTD[playerid][4], 1);
	PlayerTextDrawSetShadow(playerid, mkpp_PTD[playerid][4], 0);

	mkpp_PTD[playerid][5] = CreatePlayerTextDraw(playerid, 434.7733, 409.9166, "R"); // ?????
	PlayerTextDrawLetterSize(playerid, mkpp_PTD[playerid][5], 0.2842, 1.0574);
	PlayerTextDrawAlignment(playerid, mkpp_PTD[playerid][5], 1);
	PlayerTextDrawColor(playerid, mkpp_PTD[playerid][5], -1);
	PlayerTextDrawBackgroundColor(playerid, mkpp_PTD[playerid][5], 255);
	PlayerTextDrawFont(playerid, mkpp_PTD[playerid][5], 2);
	PlayerTextDrawSetProportional(playerid, mkpp_PTD[playerid][5], 1);
	PlayerTextDrawSetShadow(playerid, mkpp_PTD[playerid][5], 0);

	mkpp_PTD[playerid][6] = CreatePlayerTextDraw(playerid, 422.5916, 397.6666, "N"); // ?????
	PlayerTextDrawLetterSize(playerid, mkpp_PTD[playerid][6], 0.2842, 1.0573);
	PlayerTextDrawAlignment(playerid, mkpp_PTD[playerid][6], 1);
	PlayerTextDrawColor(playerid, mkpp_PTD[playerid][6], -1);
	PlayerTextDrawBackgroundColor(playerid, mkpp_PTD[playerid][6], 255);
	PlayerTextDrawFont(playerid, mkpp_PTD[playerid][6], 2);
	PlayerTextDrawSetProportional(playerid, mkpp_PTD[playerid][6], 1);
	PlayerTextDrawSetShadow(playerid, mkpp_PTD[playerid][6], 0);
	//спидометр
	speed_PTD[playerid][0] = CreatePlayerTextDraw(playerid, 493.8063, 391.8330, "120"); // ?????
	PlayerTextDrawLetterSize(playerid, speed_PTD[playerid][0], 0.3436, 2.6672);
	PlayerTextDrawTextSize(playerid, speed_PTD[playerid][0], 503.4920, 0.0000);
	PlayerTextDrawAlignment(playerid, speed_PTD[playerid][0], 1);
	PlayerTextDrawColor(playerid, speed_PTD[playerid][0], -1061109505);
	PlayerTextDrawBackgroundColor(playerid, speed_PTD[playerid][0], 255);
	PlayerTextDrawFont(playerid, speed_PTD[playerid][0], 2);
	PlayerTextDrawSetProportional(playerid, speed_PTD[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, speed_PTD[playerid][0], 0);

	speed_PTD[playerid][1] = CreatePlayerTextDraw(playerid, 617.7967, 383.6665, "speed:lightsoff"); // ?????
	PlayerTextDrawTextSize(playerid, speed_PTD[playerid][1], 12.0000, 22.0000);
	PlayerTextDrawAlignment(playerid, speed_PTD[playerid][1], 1);
	PlayerTextDrawColor(playerid, speed_PTD[playerid][1], -1);
	PlayerTextDrawBackgroundColor(playerid, speed_PTD[playerid][1], 255);
	PlayerTextDrawFont(playerid, speed_PTD[playerid][1], 4);
	PlayerTextDrawSetProportional(playerid, speed_PTD[playerid][1], 0);
	PlayerTextDrawSetShadow(playerid, speed_PTD[playerid][1], 0);

	speed_PTD[playerid][2] = CreatePlayerTextDraw(playerid, 598.1186, 382.4999, "speed:engine"); // ?????
	PlayerTextDrawTextSize(playerid, speed_PTD[playerid][2], 15.0000, 23.0000);
	PlayerTextDrawAlignment(playerid, speed_PTD[playerid][2], 1);
	PlayerTextDrawColor(playerid, speed_PTD[playerid][2], -1);
	PlayerTextDrawBackgroundColor(playerid, speed_PTD[playerid][2], 255);
	PlayerTextDrawFont(playerid, speed_PTD[playerid][2], 4);
	PlayerTextDrawSetProportional(playerid, speed_PTD[playerid][2], 0);
	PlayerTextDrawSetShadow(playerid, speed_PTD[playerid][2], 0);

	speed_PTD[playerid][3] = CreatePlayerTextDraw(playerid, 573.7555, 411.0833, "speed:car"); // ?????
	PlayerTextDrawTextSize(playerid, speed_PTD[playerid][3], 16.0000, 22.0000);
	PlayerTextDrawAlignment(playerid, speed_PTD[playerid][3], 1);
	PlayerTextDrawColor(playerid, speed_PTD[playerid][3], -1);
	PlayerTextDrawBackgroundColor(playerid, speed_PTD[playerid][3], 255);
	PlayerTextDrawFont(playerid, speed_PTD[playerid][3], 4);
	PlayerTextDrawSetProportional(playerid, speed_PTD[playerid][3], 0);
	PlayerTextDrawSetShadow(playerid, speed_PTD[playerid][3], 0);

	speed_PTD[playerid][4] = CreatePlayerTextDraw(playerid, 544.7070, 410.5000, "speed:benz"); // ?????
	PlayerTextDrawTextSize(playerid, speed_PTD[playerid][4], 16.0000, 22.0000);
	PlayerTextDrawAlignment(playerid, speed_PTD[playerid][4], 1);
	PlayerTextDrawColor(playerid, speed_PTD[playerid][4], -1);
	PlayerTextDrawBackgroundColor(playerid, speed_PTD[playerid][4], 255);
	PlayerTextDrawFont(playerid, speed_PTD[playerid][4], 4);
	PlayerTextDrawSetProportional(playerid, speed_PTD[playerid][4], 0);
	PlayerTextDrawSetShadow(playerid, speed_PTD[playerid][4], 0);

	speed_PTD[playerid][5] = CreatePlayerTextDraw(playerid, 600.6295, 427.4165, "0.00000"); // ?????
	PlayerTextDrawLetterSize(playerid, speed_PTD[playerid][5], 0.1699, 1.2440);
	PlayerTextDrawAlignment(playerid, speed_PTD[playerid][5], 1);
	PlayerTextDrawColor(playerid, speed_PTD[playerid][5], -1);
	PlayerTextDrawBackgroundColor(playerid, speed_PTD[playerid][5], 255);
	PlayerTextDrawFont(playerid, speed_PTD[playerid][5], 2);
	PlayerTextDrawSetProportional(playerid, speed_PTD[playerid][5], 1);
	PlayerTextDrawSetShadow(playerid, speed_PTD[playerid][5], 0);

	speed_PTD[playerid][6] = CreatePlayerTextDraw(playerid, 545.8126, 427.4165, "100L"); // ?????
	PlayerTextDrawLetterSize(playerid, speed_PTD[playerid][6], 0.1699, 1.2440);
	PlayerTextDrawAlignment(playerid, speed_PTD[playerid][6], 1);
	PlayerTextDrawColor(playerid, speed_PTD[playerid][6], -1);
	PlayerTextDrawBackgroundColor(playerid, speed_PTD[playerid][6], 255);
	PlayerTextDrawFont(playerid, speed_PTD[playerid][6], 2);
	PlayerTextDrawSetProportional(playerid, speed_PTD[playerid][6], 1);
	PlayerTextDrawSetShadow(playerid, speed_PTD[playerid][6], 0);

	speed_PTD[playerid][7] = CreatePlayerTextDraw(playerid, 571.5813, 426.8333, "1000HP"); // ?????
	PlayerTextDrawLetterSize(playerid, speed_PTD[playerid][7], 0.1521, 1.4191);
	PlayerTextDrawTextSize(playerid, speed_PTD[playerid][7], -114.0000, 0.0000);
	PlayerTextDrawAlignment(playerid, speed_PTD[playerid][7], 1);
	PlayerTextDrawColor(playerid, speed_PTD[playerid][7], -1);
	PlayerTextDrawBackgroundColor(playerid, speed_PTD[playerid][7], 255);
	PlayerTextDrawFont(playerid, speed_PTD[playerid][7], 2);
	PlayerTextDrawSetProportional(playerid, speed_PTD[playerid][7], 1);
	PlayerTextDrawSetShadow(playerid, speed_PTD[playerid][7], 0);

	//
	car_showroom_TD[playerid][0] = CreatePlayerTextDraw(playerid,450.0,205.0, " ");
	PlayerTextDrawBackgroundColor(playerid,car_showroom_TD[playerid][0], COLOR_BLACK);
	PlayerTextDrawLetterSize(playerid,car_showroom_TD[playerid][0],0.399999,1.710000);
	PlayerTextDrawFont(playerid,car_showroom_TD[playerid][0], 2);
	PlayerTextDrawColor(playerid,car_showroom_TD[playerid][0], -1);
	PlayerTextDrawSetOutline(playerid,car_showroom_TD[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid,car_showroom_TD[playerid][0],1);
	PlayerTextDrawSetShadow(playerid,car_showroom_TD[playerid][0],1);

	car_showroom_TD[playerid][1] = CreatePlayerTextDraw(playerid,450.0,225.0, " ");
	PlayerTextDrawBackgroundColor(playerid,car_showroom_TD[playerid][1], COLOR_BLACK);
	PlayerTextDrawLetterSize(playerid,car_showroom_TD[playerid][1],0.399999,1.710000);
	PlayerTextDrawFont(playerid,car_showroom_TD[playerid][1], 2);
	PlayerTextDrawColor(playerid,car_showroom_TD[playerid][1], -1);
	PlayerTextDrawSetOutline(playerid,car_showroom_TD[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid,car_showroom_TD[playerid][1],1);
	PlayerTextDrawSetShadow(playerid,car_showroom_TD[playerid][1],1);

	status_work_TD[playerid][0] = CreatePlayerTextDraw(playerid, 612.500000, 187.000000, "usebox");
	PlayerTextDrawLetterSize(playerid, status_work_TD[playerid][0], 0.012000, 5.872990);
	PlayerTextDrawTextSize(playerid, status_work_TD[playerid][0], 498.500000, -32.375000);
	PlayerTextDrawAlignment(playerid, status_work_TD[playerid][0], 1);
	PlayerTextDrawColor(playerid, status_work_TD[playerid][0], 0);
	PlayerTextDrawUseBox(playerid, status_work_TD[playerid][0], true);
	PlayerTextDrawBoxColor(playerid, status_work_TD[playerid][0], 102);
	PlayerTextDrawSetShadow(playerid, status_work_TD[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, status_work_TD[playerid][0], 0);
	PlayerTextDrawFont(playerid, status_work_TD[playerid][0], 0);

	status_work_TD[playerid][1] = CreatePlayerTextDraw(playerid, 509.000000, 187.687500, "STATUS WORK");
	PlayerTextDrawLetterSize(playerid, status_work_TD[playerid][1], 0.323500, 1.389999);
	PlayerTextDrawAlignment(playerid, status_work_TD[playerid][1], 1);
	PlayerTextDrawColor(playerid, status_work_TD[playerid][1], 0xFFCC00FF);
	PlayerTextDrawSetShadow(playerid, status_work_TD[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, status_work_TD[playerid][1], 1);
	PlayerTextDrawBackgroundColor(playerid, status_work_TD[playerid][1], 51);
	PlayerTextDrawFont(playerid, status_work_TD[playerid][1], 2);
	PlayerTextDrawSetProportional(playerid, status_work_TD[playerid][1], 1);

	status_work_TD[playerid][2] = CreatePlayerTextDraw(playerid, 556.000000, 210.875000, "AMOUNT: 0KG");
	PlayerTextDrawLetterSize(playerid, status_work_TD[playerid][2], 0.196998, 1.079375);
	PlayerTextDrawAlignment(playerid, status_work_TD[playerid][2], 2);
	PlayerTextDrawColor(playerid, status_work_TD[playerid][2], -1);
	PlayerTextDrawSetShadow(playerid, status_work_TD[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, status_work_TD[playerid][2], 1);
	PlayerTextDrawBackgroundColor(playerid, status_work_TD[playerid][2], 51);
	PlayerTextDrawFont(playerid, status_work_TD[playerid][2], 2);
	PlayerTextDrawSetProportional(playerid, status_work_TD[playerid][2], 1);

	status_work_TD[playerid][3] = CreatePlayerTextDraw(playerid, 556.000000, 222.687500, "SALARY: 0$");
	PlayerTextDrawLetterSize(playerid, status_work_TD[playerid][3], 0.192498, 1.035624);
	PlayerTextDrawAlignment(playerid, status_work_TD[playerid][3], 2);
	PlayerTextDrawColor(playerid, status_work_TD[playerid][3], -1);
	PlayerTextDrawSetShadow(playerid, status_work_TD[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, status_work_TD[playerid][3], 1);
	PlayerTextDrawBackgroundColor(playerid, status_work_TD[playerid][3], 51);
	PlayerTextDrawFont(playerid, status_work_TD[playerid][3], 2);
	PlayerTextDrawSetProportional(playerid, status_work_TD[playerid][3], 1);

	zz_PTD[playerid][0] = CreatePlayerTextDraw(playerid, 535.8051, 129.3332, "Other:FluxZZ"); // ?????
	PlayerTextDrawTextSize(playerid, zz_PTD[playerid][0], 147.0000, 97.0000);
	PlayerTextDrawAlignment(playerid, zz_PTD[playerid][0], 1);
	PlayerTextDrawColor(playerid, zz_PTD[playerid][0], -1);
	PlayerTextDrawBackgroundColor(playerid, zz_PTD[playerid][0], 255);
	PlayerTextDrawFont(playerid, zz_PTD[playerid][0], 4);
	PlayerTextDrawSetProportional(playerid, zz_PTD[playerid][0], 0);
	PlayerTextDrawSetShadow(playerid, zz_PTD[playerid][0], 0);

	hunger_progress_TD[playerid] = CreatePlayerTextDraw(playerid, 549.599975, 37.274993, "_");
	PlayerTextDrawBackgroundColor(playerid, hunger_progress_TD[playerid], 255);
	PlayerTextDrawFont(playerid,hunger_progress_TD[playerid], 1);
	PlayerTextDrawLetterSize(playerid,hunger_progress_TD[playerid], 0.000000, 0.182000);
	PlayerTextDrawColor(playerid,hunger_progress_TD[playerid], -1);
	PlayerTextDrawSetOutline(playerid,hunger_progress_TD[playerid], 0);
	PlayerTextDrawSetProportional(playerid,hunger_progress_TD[playerid], 1);
	PlayerTextDrawSetShadow(playerid,hunger_progress_TD[playerid], 1);
	PlayerTextDrawUseBox(playerid,hunger_progress_TD[playerid], 1);
	PlayerTextDrawBoxColor(playerid,hunger_progress_TD[playerid], 0xFFCC00FF);
	PlayerTextDrawTextSize(playerid,hunger_progress_TD[playerid], 603.450317, 0.000000);
	PlayerTextDrawSetSelectable(playerid,hunger_progress_TD[playerid], 0);
	return true;
}
stock SetPlayerDataToDefault(playerid)
{
    SetPVarInt(playerid, "USEDIALOGID", -1);
	pInfo[playerid][pFamilyMember]                  =
 	TazerTime[playerid]                             =
    AdminInfo[playerid][admID]                      =
    pInfo[playerid][pID]                            =
    BankInfo[playerid][bID]                     	=
    BankInfo[playerid][bMoney]                   	=
    pInfo[playerid][pSetMark]                       =
    pTemp[playerid][pArmyJob]                       =
    AdminInfo[playerid][admSmsEars]                 =
    pInfo[playerid][pMemberWarn]                    =
	selectcost[playerid]                            =
	selectmodel[playerid]                           =
	colors[playerid][0]                             =
	colors[playerid][1]                             =
    pTemp[playerid][pLessProgress] 					=
	pTemp[playerid][pLessStatus] 					=
    pTemp[playerid][pMinerProgress]                 =
	pTemp[playerid][pMinerAmount][0]                =
	pTemp[playerid][pMinerAmount][1]                =
	pTemp[playerid][pMinerAmount][2]                =
	pTemp[playerid][pMinerSalary][0]                =
	pTemp[playerid][pMinerSalary][1]                =
	pTemp[playerid][pMinerSalary][2]                =
	pTemp[playerid][pMinerStatus]                   =
    gOnlinePlayer[playerid][0] 						=
	gOnlinePlayer[playerid][1] 						=
 	gOnlinePlayerAFK[playerid][0] 					=
	gOnlinePlayerAFK[playerid][1] 					=
	pInfo[playerid][pRobHouse]                      =
    pTemp[playerid][pSpeedhack][0]                  =
    pTemp[playerid][pSpeedhack][1]                  =
    pInfo[playerid][pInputCode]						=
    pInfo[playerid][pSecurityCode]                  =
    pTemp[playerid][pMineAntiflood]                 =
    pTemp[playerid][pLessAntiflood]                 =
	pTemp[playerid][pActionPrice] 					=
    pTemp[playerid][pSellDrugsGramm] 				=
	pTemp[playerid][pSellGunWeapon] 				=
	pTemp[playerid][pSellGunAmmo] 					=
	pTemp[playerid][pSellBizID]                     =
	pTemp[playerid][pChangeBizID] 					=
	pTemp[playerid][pChangeBizID2] 					=
	pTemp[playerid][pSellLicType] 					=
    pTemp[playerid][pTruckSpawnTimer]               =
    pTemp[playerid][pTruckWagonTime] 				=
	pTemp[playerid][pTruckWeight] 					=
	pTemp[playerid][pTruckLoadID] 					=
    PlayerUseHeal[playerid]                         =
    pTemp[playerid][pBusRoute]						=
    pTemp[playerid][pBusPos] 						=
	pTemp[playerid][pBusPrice] 						=
	pTemp[playerid][pBusSpawnTimer] 				= 0;

    AntiCheatMessage[playerid]						=
    AntiFloodKick[playerid]							=
    pTemp[playerid][pAbletoGun]                     =
	gKilled[playerid] 								=
    pInfo[playerid][pLicenses]                      =
    pInfo[playerid][pHouse]                         =
    pInfo[playerid][pBiz]                           =
	ReportTime[playerid] 							=
    pInfo[playerid][pFine]                          =
    pInfo[playerid][pFineAmount]                    =
    pInfo[playerid][pFineTime]                      =
    pInfo[playerid][pFineUpgrade]                   =
    CanUse[playerid]                                =
    pInfo[playerid][pCity]                         	=
    iPlayerAmmo[playerid]                           =
	iNewPlayerAmmo[playerid]						=
 	iPlayerWeapon[playerid]                         =
	iNewPlayerWeapon[playerid]                      =
    pTemp[playerid][pLiveTime]						=
    pTemp[playerid][pWork] 							=
    pTemp[playerid][pWorkSalary]                    =
    WeaponTime[playerid] 							=
    RapidFire[playerid] 							=
    RaceCP[playerid]                                =
    GonkaSchet[playerid]                            =
    NumberMesto[playerid]                           =
    GonkaStavka[playerid] 							=
    AdminInfo[playerid][admGoto]                    =
    AdminInfo[playerid][admGethere]                 =
    AdminInfo[playerid][admSpectate]                =
    AdminInfo[playerid][admPlayTime]              	=
    AdminInfo[playerid][admKicked]              	=
    AdminInfo[playerid][admSKicked]              	=
    AdminInfo[playerid][admWarned]              	=
    AdminInfo[playerid][admOffWarned]              	=
    AdminInfo[playerid][admBaned]              		=
    AdminInfo[playerid][admOffBaned]              	=
    AdminInfo[playerid][admMuted]              		=
    AdminInfo[playerid][admAnsed]              		=
    Ujahhs[playerid] 								=
    Medicines[playerid]								=
    UnMaskReset[playerid] 							=
	pickupentered[playerid] 						=
	ACInfo[playerid][acCheckMapTP] 					=
	pInfo[playerid][pSportExp] 						=
	pInfo[playerid][pMask] 							=
	pInfo[playerid][pTruckSkill] 					=
	pInfo[playerid][pZakon] 						=
	pInfo[playerid][pCheckCode] 					=
	pInfo[playerid][pWatch] 						=
	pInfo[playerid][pCiggare] 						=
	pInfo[playerid][pSprunk] 						=
	ChosenSkin[playerid] 							=
	SelectCharPlace[playerid] 						=
	pInfo[playerid][pPhoneBalance] 					=
	gPlayerLogTries[playerid] 						=
	player_stats[playerid] 							=
	ClothesRound[playerid]							=
	InShop[playerid] 								=
	InShopSkin[playerid] 							=
	DrivingTestTime[playerid]						=
	FlyTestTime[playerid]							=
	WaterTestTime[playerid]							=
	pInfo[playerid][pAdmin] 						=
	pInfo[playerid][pLeader] 						=
	pInfo[playerid][pTempLeader]                    =
	pInfo[playerid][pMember] 						=
	pInfo[playerid][pRank] 							=
	pInfo[playerid][pModel] 						=
	pInfo[playerid][pMemberSkin] 					=
	pInfo[playerid][pSex] 							=
	pInfo[playerid][pWarn] 							=
	pInfo[playerid][pCash] 							=
	pInfo[playerid][pExp] 							=
    pInfo[playerid][pMuted] 						=
	pInfo[playerid][pAge] 							=
	pInfo[playerid][pBank] 							=
	pInfo[playerid][pNews] 							=
	pInfo[playerid][pJail] 							=
	pInfo[playerid][pJailTime] 						=
	pInfo[playerid][pWanted] 						=
	pInfo[playerid][pDrugs] 						=
	pInfo[playerid][pPatron] 						=
	pInfo[playerid][pGunAmount] 					=
	pInfo[playerid][pTimeHour] 						=
	pInfo[playerid][pJob] 							=
	pInfo[playerid][pMarried] 						=
	pInfo[playerid][pPayCheck] 						=
	pInfo[playerid][pCharity] 						=
	pInfo[playerid][pVip] 							=
	pInfo[playerid][pVipTime]						=
	pInfo[playerid][pTime] 							=
	pInfo[playerid][pFightStyle] 					=
	pInfo[playerid][pCredits] 						=
	pInfo[playerid][pTotalCredits] 					=
	pInfo[playerid][pSkin][0] 						=
	pInfo[playerid][pSkin][1] 						=
	pInfo[playerid][pSkin][2] 						=
	pInfo[playerid][pZakon] 						=
	pInfo[playerid][pCheckCode] 					=
	pInfo[playerid][pVehicleKey]                    =
	pInfo[playerid][pMailConfirmed]                 =
	pInfo[playerid][pPhoneNumber]                   =
	pInfo[playerid][pVoennik]                       =
	PassInfo[playerid][psDateBirth][0] 				=
 	PassInfo[playerid][psDateBirth][1] 				=
 	PassInfo[playerid][psDateBirth][2] 				=
 	PassInfo[playerid][psDate][0] 					=
 	PassInfo[playerid][psDate][1] 					=
 	PassInfo[playerid][psDate][2] 					=
 	PassInfo[playerid][psCity] 						=
 	PassRegSex[playerid] 							=
 	pInfo[playerid][pRegVehicle] 					=
 	pInfo[playerid][pFishki]                        =
 	pInfo[playerid][pSpawnChange]					=
 	HealmeObject[playerid]                          =
 	Predlog[playerid]								=
 	kostiKos[playerid]                              =
 	KostiMoney[playerid]							=
    ZapretDice[playerid] 							= 0;

    AdminInfo[playerid][admInfoNewPlayer]           =
    pInfo[playerid][pLevel]                         = 1;

    gBankAccount[playerid][0]                   	=
    gBankAccount[playerid][1]                   	=
    gBankAccount[playerid][2]                   	=
    gBankAccount[playerid][3]                   	=
    gEventIn[playerid]								=
    pTemp[playerid][pSellZoneID] 					=
    edit_stats_ID[playerid]                         =
    set_name_ID[playerid]                           =
    PlayerBed[playerid]                             =
    Mobile[playerid] 								=
	CellTime[playerid] 								=
	PassInfo[playerid][mcState] 					= -1;

    gSlotUsed[playerid]                             =
    gActiveMusic[playerid]                          =
    gCheckGodMode[playerid]                         =
    gPlayerLogged[playerid] 						=
	gPlayerSpawned[playerid]                        =
	gAdminLogged[playerid] 							=
    pTemp[playerid][pAnimLoad]                      =
    PlayerLie[playerid]                             =
    PlayerDied[playerid]                    		=
    CheckOutMoney[playerid]							=
    UseGPS[playerid] 								=
	FreezePlayer[playerid]							=
	PlayerTied[playerid] 							=
	TaxiON[playerid]                                =
	MedicON[playerid]                               =
	MechanicON[playerid]                            =
	PoliceON[playerid]                              =
	Ether[playerid] 								=
	EtherCall[0] 									=
	EtherCall[1] 									=
	EtherSms[0] 									=
	EtherSms[1] 									=
	EtherLive[playerid] 							=
	EtherCalled[playerid] 							=
	PlayerRegistered[playerid]                      = false;

	times[playerid] 								=
	Phone[playerid] 								= true;

	KostiName[playerid] 							=
	pTemp[playerid][pSelectPlayer]					=
	pTemp[playerid][pTargetPlayer] 					=
	pCuff[playerid][pCuffer] 						=
	pCuff[playerid][pCuffee] 						=
    pInfo[playerid][Spectating][0] 					=
	pInfo[playerid][Spectating][1] 					= INVALID_PLAYER_ID;

	pTemp[playerid][pDeathCar] 						=
	pTemp[playerid][pTruckID] 						=
	pTemp[playerid][pTruckWagonID] 					=
	pTemp[playerid][pBusID] 						=
	pTemp[playerid][pRaceID]                       	=
	pTemp[playerid][hParkID]                     	=
	pTemp[playerid][pTaxiID]                       	=
	pTemp[playerid][pMechID]                   		=
	pTemp[playerid][pCarShowroomID]                 =
	pTemp[playerid][pCarPlayerID]                   = INVALID_VEHICLE_ID;

	pTemp[playerid][pBusDamage] 					=
	PlayerArmour[playerid] 							= 0.0;

	pInfo[playerid][pSettings]                    	= 65535;

	pTemp[playerid][pTargetAction] 					= ACTION_NONE;
	pInfo[playerid][pColor]							= NONE_COLOR;
	PlayerLastTick[playerid] 						= GetTickCount();
	pInfo[playerid][pHunger] 						= 50;

	pTemp[playerid][pTruckWagonText] 				= Text3D:INVALID_3DTEXT_ID;
	pTemp[playerid][pBusText] 						= Text3D:INVALID_3DTEXT_ID;

	new i;
	for(i = 0; i < 9; i++) opendoors[playerid][i] = false;
	for(i = 0; i < 4; i++) pInfo[playerid][pImprove][i] = 0;
	for(i = 0; i < 5; i++) pInfo[playerid][pText][i] = 0;
	for(i = 0; i < 8; i++)
	{
	    opengate[playerid][i] = false;
	    Shot[playerid][i] = 0;
    	pInfo[playerid][pGunSkill][i] = 0;
    	pInfo[playerid][pPhoneNumbers][i] = 0;
	}
	for(i = 0; i < 10; i++) mass_pass[playerid][i] = 0;
	for(i = 0; i < 13; i++)
	{
		gGuns[playerid][i] = 0;
		gAmmos[playerid][i] = 0;
	}
	for(i = 0; i < 47; i++) WeaponInfo[playerid][i] = false;
	for(i = 0; i < 13; i++) pInfo[playerid][cVehcoms][i] = 0;
	
	pInfo[playerid][cModel] 						=
	pInfo[playerid][cColor][0] 						=
	pInfo[playerid][cColor][1] 						=
	pInfo[playerid][cCost] 							=
	pInfo[playerid][cPaintjob] 						= 0;

	pInfo[playerid][cFuel] 							=
	pInfo[playerid][cMileage]                       = 0.0;
	
	FlyInfo[playerid][fType] 						= 0;
    FlyInfo[playerid][fObject] 						= INVALID_OBJECT_ID;
    FlyInfo[playerid][fDirection] 					= 0;
    FlyInfo[playerid][fKeys][0] 					= 0;
    FlyInfo[playerid][fKeys][1] 					= 0;
    FlyInfo[playerid][fTick] 						= 0;
    FlyInfo[playerid][fMovementSpeed] 				= 100.0;

	strmid(player_name[playerid], "None", 0, strlen("None"), MAX_PLAYER_NAME);
	strmid(pInfo[playerid][pIP], "0.0.0.0", 0, strlen("0.0.0.0"), 16);
	strmid(playersIP[playerid], "0.0.0.0", 0, strlen("0.0.0.0"), 16);
	strmid(pInfo[playerid][pMail], "None", 0, strlen(pInfo[playerid][pMail]), 64);
	
	strdel(pInfo[playerid][pName], 0, MAX_PLAYER_NAME);
	strdel(pInfo[playerid][pPassword], 0, 32);
	strdel(pInfo[playerid][pRegData], 0, 20);
	strdel(pInfo[playerid][pVhData], 0, 20);

	strmid(AdminInfo[playerid][admKickedReason], "None", 0, strlen("None"), 32);
	strmid(AdminInfo[playerid][admWarnedReason], "None", 0, strlen("None"), 32);
	strmid(AdminInfo[playerid][admOffWarnedReason], "None", 0, strlen("None"), 32);
	strmid(AdminInfo[playerid][admBanedReason], "None", 0, strlen("None"), 32);
	strmid(AdminInfo[playerid][admOffBanedReason], "None", 0, strlen("None"), 32);
	strmid(AdminInfo[playerid][admMutedReason], "None", 0, strlen("None"), 32);

	strmid(pInfo[playerid][pMutedReason], "None", 0, strlen("None"), 32);
	strmid(pInfo[playerid][pJailReason], "None", 0, strlen("None"), 32);

	strmid(pInfo[playerid][pWhoMarried], "None", 0, strlen("None"), MAX_PLAYER_NAME);
	strmid(pInfo[playerid][pReferal], "None", 0, strlen("None"), MAX_PLAYER_NAME);
	strmid(pInfo[playerid][pSearchServ], "None", 0, strlen("None"), 32);

	strmid(BankInfo[playerid][bName], "None", 0, strlen("None"), MAX_PLAYER_NAME);
	strmid(BankInfo[playerid][bOwner], "None", 0, strlen("None"), 15);
	return 1;
}

stock SetHealth(playerid, Float: Heal)
{
    if(pInfo[playerid][pHeal]>100) pInfo[playerid][pHeal]=100;
	PlayerUseHeal[playerid] = 1;
	pInfo[playerid][pHeal] = Heal;
	SetPlayerHealth(playerid, Heal);
	PlayerUseHeal[playerid] = 0;
	return 1;
}

stock SetArmour(playerid, Float: Arm)
{
    if(PlayerArmour[playerid]>100) PlayerArmour[playerid]=100;
	PlayerArmour[playerid] = Arm;
	SetPlayerArmour(playerid, Arm);
	return 1;
}

stock ToggleLock(vehicleid, status)
{
	if(vehicleid == INVALID_VEHICLE_ID) return 0;
	VehicleInfo[vehicleid][vLock] = status;
	for(new i;i<MAX_PLAYERS;i++) SetVehicleParamsForPlayer(vehicleid, i, 0, status);
	return 1;
}

stock GetEngineStatL(vehicleid, &lights)
{
	new engine, alarm, doors, bonnet, boot, objective;
    GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	return engine;
}

stock GetEngineStat(vehicleid)
{
	new engine, lights, alarm, doors, bonnet, boot, objective;
    GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	return engine;
}

stock GetPlayerHouse(playerid)
{
	new house = 0;
	for(new i = 1; i <= TOTALHOUSE; i++)
	{
		if(GetString(HouseInfo[i][hOwner], GetName(playerid)))
		{
			house++;
			pInfo[playerid][pHouse] = i;
			SetPVarInt(playerid, "UseHouse", i);
			break;
		}
	}
	if(house > 0)
	{
	    new string[128], phouse = pInfo[playerid][pHouse];
	    format(string, sizeof(string), "Ваш дом оплачен на {FF9900}%i {80CCFF}%s", HouseInfo[phouse][hDays], (HouseInfo[phouse][hDays]==1)?("день"):(HouseInfo[phouse][hDays]<5)?("дня"):("дней"));
	    SendClientMessage(playerid, 0x80CCFFFF, string);
	}
	else pInfo[playerid][pHouse] = 0;
}

stock GetPlayerBiz(playerid)
{
	new biz = 0;
	for(new i = 1; i <= TOTALBIZ; i++)
	{
		if(GetString(BizInfo[i][bOwner], GetName(playerid)))
		{
			biz++;
			pInfo[playerid][pBiz] = i;
			break;
		}
	}
	if(biz > 0)
	{
	    new string[128], pbiz = pInfo[playerid][pBiz];
	    format(string, sizeof(string), "Ваш бизнес оплачен на {FF9900}%i {80CCFF}%s", BizInfo[pbiz][bDays], (BizInfo[pbiz][bDays]==1)?("день"):(BizInfo[pbiz][bDays]<5)?("дня"):("дней"));
	    SendClientMessage(playerid, 0x80CCFFFF, string);
	}
	else pInfo[playerid][pBiz] = 0;
}

stock IsTheMember(member)
{
	switch(member)
	{
		case TEAM_LSMAYOR,TEAM_SFMAYOR,TEAM_LVMAYOR,TEAM_DPS,TEAM_SFPD,TEAM_FBI,TEAM_LSHOSPITAL,TEAM_SFHOSPITAL,TEAM_LVHOSPITAL,TEAM_NG,TEAM_LVPD,TEAM_AUTOSCHOOL,TEAM_LSNEWS,TEAM_SFNEWS,TEAM_LVNEWS: return 1;
		default: return 0;
	}
	return 0;
}

stock IsAbleToGosNewsRank(playerid)
{
	switch(pInfo[playerid][pMember])
	{
		case TEAM_LSMAYOR,TEAM_SFMAYOR,TEAM_LVMAYOR: if(pInfo[playerid][pRank] >= 9) return 1;
		case TEAM_DPS,TEAM_SFPD,TEAM_LVPD: if(pInfo[playerid][pRank] >= 11) return 1;
		case TEAM_FBI: if(pInfo[playerid][pRank] >= 15) return 1;
		case TEAM_NG: if(pInfo[playerid][pRank] >= 11) return 1;
		case TEAM_LSHOSPITAL,TEAM_SFHOSPITAL,TEAM_LVHOSPITAL: if(pInfo[playerid][pRank] >= 9) return 1;
		case TEAM_AUTOSCHOOL: if(pInfo[playerid][pRank] >= 7) return 1;
		case TEAM_LSNEWS,TEAM_SFNEWS,TEAM_LVNEWS: if(pInfo[playerid][pRank] >= 9) return 1;
		default: return 0;
	}
	return 0;
}

stock IsAbleToInvite(playerid)
{
	switch(pInfo[playerid][pMember])
	{
	    case TEAM_LSMAYOR,TEAM_SFMAYOR,TEAM_LVMAYOR: if(pInfo[playerid][pRank] >= 9) return 1;
		case TEAM_DPS,TEAM_SFPD,TEAM_LVPD: if(pInfo[playerid][pRank] >= 11) return 1;
		case TEAM_FBI: if(pInfo[playerid][pRank] >= 15) return 1;
		case TEAM_NG: if(pInfo[playerid][pRank] >= 11) return 1;
		case TEAM_LSHOSPITAL,TEAM_SFHOSPITAL,TEAM_LVHOSPITAL: if(pInfo[playerid][pRank] >= 9) return 1;
		case TEAM_GROVE,TEAM_BALLAS,TEAM_RIFA,TEAM_AZTECAS,TEAM_VAGOS: if(pInfo[playerid][pRank] >= 9) return 1;
		case TEAM_LCN,TEAM_YAKUZA,TEAM_RM: if(pInfo[playerid][pRank] >= 9) return 1;
		case TEAM_LSNEWS,TEAM_SFNEWS,TEAM_LVNEWS: if(pInfo[playerid][pRank] >= 9) return 1;
		case TEAM_AUTOSCHOOL: if(pInfo[playerid][pRank] >= 7) return 1;
	}
	return 0;
}

stock IsAbleToUninvite(playerid)
{
    switch(pInfo[playerid][pMember])
	{
	    case TEAM_LSMAYOR,TEAM_SFMAYOR,TEAM_LVMAYOR: if(pInfo[playerid][pRank] >= 9) return 1;
		case TEAM_DPS,TEAM_SFPD,TEAM_LVPD: if(pInfo[playerid][pRank] >= 11) return 1;
		case TEAM_FBI: if(pInfo[playerid][pRank] >= 15) return 1;
		case TEAM_NG: if(pInfo[playerid][pRank] >= 11) return 1;
		case TEAM_LSHOSPITAL,TEAM_SFHOSPITAL,TEAM_LVHOSPITAL: if(pInfo[playerid][pRank] >= 9) return 1;
		case TEAM_GROVE,TEAM_BALLAS,TEAM_RIFA,TEAM_AZTECAS,TEAM_VAGOS: if(pInfo[playerid][pRank] >= 9) return 1;
		case TEAM_LCN,TEAM_YAKUZA,TEAM_RM: if(pInfo[playerid][pRank] >= 9) return 1;
		case TEAM_LSNEWS,TEAM_SFNEWS,TEAM_LVNEWS: if(pInfo[playerid][pRank] >= 9) return 1;
		case TEAM_AUTOSCHOOL: if(pInfo[playerid][pRank] >= 7) return 1;
	}
	return 0;
}

stock IsAbleToRang(playerid)
{
    switch(pInfo[playerid][pMember])
	{
	    case TEAM_LSMAYOR,TEAM_SFMAYOR,TEAM_LVMAYOR: if(pInfo[playerid][pRank] >= 9) return 1;
		case TEAM_DPS,TEAM_SFPD,TEAM_LVPD: if(pInfo[playerid][pRank] >= 11) return 1;
		case TEAM_FBI: if(pInfo[playerid][pRank] >= 15) return 1;
		case TEAM_NG: if(pInfo[playerid][pRank] >= 11) return 1;
		case TEAM_LSHOSPITAL,TEAM_SFHOSPITAL,TEAM_LVHOSPITAL: if(pInfo[playerid][pRank] >= 9) return 1;
		case TEAM_GROVE,TEAM_BALLAS,TEAM_RIFA,TEAM_AZTECAS,TEAM_VAGOS: if(pInfo[playerid][pRank] >= 9) return 1;
		case TEAM_LCN,TEAM_YAKUZA,TEAM_RM: if(pInfo[playerid][pRank] >= 9) return 1;
		case TEAM_LSNEWS,TEAM_SFNEWS,TEAM_LVNEWS: if(pInfo[playerid][pRank] >= 9) return 1;
		case TEAM_AUTOSCHOOL: if(pInfo[playerid][pRank] >= 7) return 1;
	}
	return 0;
}

stock SelectCar(playerid) {
	new string[128];
	new Keys, ud, lr;
	GetPlayerKeys(playerid, Keys, ud, lr);
	if((GetTickCount() - PlayerLastTick[playerid]) < 500) return 1;
	if(lr == KEY_LEFT)
	{
		if(pTemp[playerid][pCarShowroomID] != INVALID_VEHICLE_ID)
		{
			DestroyVehicle(pTemp[playerid][pCarShowroomID]);
			pTemp[playerid][pCarShowroomID] = INVALID_VEHICLE_ID;
		}
		switch(InShop[playerid])
		{
			case 1:
			{
				if(pPressed[playerid] == sizeof(carsC)-1) pPressed[playerid] = 0;
				else pPressed[playerid]++;
				pTemp[playerid][pCarShowroomID] = CreateVehicle(carsC[pPressed[playerid]][0],616.1683,-124.3003,997.9922,101.9068,colors[playerid][0]=random(10),colors[playerid][1]=random(10),10000);
				format(string,64,"~w~%s",VehStats[carsC[pPressed[playerid]][0]-400][vName]);
				PlayerTextDrawSetString(playerid,car_showroom_TD[playerid][0],string);
				format(string,64,"~g~%d$",carsC[pPressed[playerid]][1]);
				PlayerTextDrawSetString(playerid,car_showroom_TD[playerid][1],string);
			}
			case 2:
			{
				if(pPressed[playerid] == sizeof(carsB)-1) pPressed[playerid] = 0;
				else pPressed[playerid]++;
				pTemp[playerid][pCarShowroomID] = CreateVehicle(carsB[pPressed[playerid]][0],616.1683,-124.3003,997.9922,101.9068,colors[playerid][0]=random(10),colors[playerid][1]=random(10),10000);
				format(string,64,"~w~%s",VehStats[carsB[pPressed[playerid]][0]-400][vName]);
				PlayerTextDrawSetString(playerid,car_showroom_TD[playerid][0],string);
				format(string,64,"~g~%d$",carsB[pPressed[playerid]][1]);
				PlayerTextDrawSetString(playerid,car_showroom_TD[playerid][1],string);
			}
			case 3:
			{
				if(pPressed[playerid] == sizeof(carsA)-1) pPressed[playerid] = 0;
				else pPressed[playerid]++;
				pTemp[playerid][pCarShowroomID] = CreateVehicle(carsA[pPressed[playerid]][0],616.1683,-124.3003,997.9922,101.9068,colors[playerid][0]=random(10),colors[playerid][1]=random(10),10000);
				format(string,64,"~w~%s",VehStats[carsA[pPressed[playerid]][0]-400][vName]);
				PlayerTextDrawSetString(playerid,car_showroom_TD[playerid][0],string);
				format(string,64,"~g~%d$",carsA[pPressed[playerid]][1]);
				PlayerTextDrawSetString(playerid,car_showroom_TD[playerid][1],string);
			}
			case 4:
			{
				if(pPressed[playerid] == sizeof(carsBike)-1) pPressed[playerid] = 0;
				else pPressed[playerid]++;
				pTemp[playerid][pCarShowroomID] = CreateVehicle(carsBike[pPressed[playerid]][0],616.1683,-124.3003,997.9922,101.9068,colors[playerid][0]=random(10),colors[playerid][1]=random(10),10000);
				format(string,64,"~w~%s",VehStats[carsBike[pPressed[playerid]][0]-400][vName]);
				PlayerTextDrawSetString(playerid,car_showroom_TD[playerid][0],string);
				format(string,64,"~g~%d$",carsBike[pPressed[playerid]][1]);
				PlayerTextDrawSetString(playerid,car_showroom_TD[playerid][1],string);
			}
		}
		PlayerLastTick[playerid] = GetTickCount();
		LinkVehicleToInterior(pTemp[playerid][pCarShowroomID],3);
		SetVehicleVirtualWorld(pTemp[playerid][pCarShowroomID],playerid);
		PutPlayerInVehicle(playerid,pTemp[playerid][pCarShowroomID],0);
		SetPlayerCameraPos(playerid,610.3172,-121.1384,997.9922);
		SetPlayerCameraLookAt(playerid,616.1683,-124.3003,997.9922);
	}
	if(lr == KEY_RIGHT)
	{
		if(pTemp[playerid][pCarShowroomID] != INVALID_VEHICLE_ID)
		{
			DestroyVehicle(pTemp[playerid][pCarShowroomID]);
			pTemp[playerid][pCarShowroomID] = INVALID_VEHICLE_ID;
		}
		switch(InShop[playerid])
		{
			case 1:
			{
				if(pPressed[playerid] == 0) pPressed[playerid] = sizeof(carsC)-1;
				else pPressed[playerid]--;
				pTemp[playerid][pCarShowroomID] = CreateVehicle(carsC[pPressed[playerid]][0],616.1683,-124.3003,997.9922,101.9068,colors[playerid][0]=random(10),colors[playerid][1]=random(10),10000);
				format(string,64,"~w~%s",VehStats[carsC[pPressed[playerid]][0]-400][vName]);
				PlayerTextDrawSetString(playerid,car_showroom_TD[playerid][0],string);
				format(string,64,"~g~%d$",carsC[pPressed[playerid]][1]);
				PlayerTextDrawSetString(playerid,car_showroom_TD[playerid][1],string);
			}
			case 2:
			{
				if(pPressed[playerid] == 0) pPressed[playerid] = sizeof(carsB)-1;
				else pPressed[playerid]--;
				pTemp[playerid][pCarShowroomID] = CreateVehicle(carsB[pPressed[playerid]][0],616.1683,-124.3003,997.9922,101.9068,colors[playerid][0]=random(10),colors[playerid][1]=random(10),10000);
				format(string,64,"~w~%s",VehStats[carsB[pPressed[playerid]][0]-400][vName]);
				PlayerTextDrawSetString(playerid,car_showroom_TD[playerid][0],string);
				format(string,64,"~g~%i$",carsB[pPressed[playerid]][1]);
				PlayerTextDrawSetString(playerid,car_showroom_TD[playerid][1],string);
			}
			case 3:
			{
				if(pPressed[playerid] == 0) pPressed[playerid] = sizeof(carsA)-1;
				else pPressed[playerid]--;
				pTemp[playerid][pCarShowroomID] = CreateVehicle(carsA[pPressed[playerid]][0],616.1683,-124.3003,997.9922,101.9068,colors[playerid][0]=random(10),colors[playerid][1]=random(10),10000);
				format(string,64,"~w~%s",VehStats[carsA[pPressed[playerid]][0]-400][vName]);
				PlayerTextDrawSetString(playerid,car_showroom_TD[playerid][0],string);
				format(string,64,"~g~%d$",carsA[pPressed[playerid]][1]);
				PlayerTextDrawSetString(playerid,car_showroom_TD[playerid][1],string);
			}
			case 4:
			{
				if(pPressed[playerid] == 0) pPressed[playerid] = sizeof(carsBike)-1;
				else pPressed[playerid]--;
				pTemp[playerid][pCarShowroomID] = CreateVehicle(carsBike[pPressed[playerid]][0],616.1683,-124.3003,997.9922,101.9068,colors[playerid][0]=random(10),colors[playerid][1]=random(10),10000);
				format(string,64,"~w~%s",VehStats[carsBike[pPressed[playerid]][0]-400][vName]);
				PlayerTextDrawSetString(playerid,car_showroom_TD[playerid][0],string);
				format(string,64,"~g~%d$",carsBike[pPressed[playerid]][1]);
				PlayerTextDrawSetString(playerid,car_showroom_TD[playerid][1],string);
			}
		}
		PlayerLastTick[playerid] = GetTickCount();
		LinkVehicleToInterior(pTemp[playerid][pCarShowroomID],3);
		SetVehicleVirtualWorld(pTemp[playerid][pCarShowroomID],playerid);
		PutPlayerInVehicle(playerid,pTemp[playerid][pCarShowroomID],0);
		SetPlayerCameraPos(playerid,610.3172,-121.1384,997.9922);
		SetPlayerCameraLookAt(playerid,616.1683,-124.3003,997.9922);
	}
	if(Keys & KEY_CTRL_BACK) ShowPlayerDialog(playerid, dJob+12, 1, "{FFCC00}Цвета транспорта", "{FFFFFF}Введите первый и второй цвет транспорта через запятую:", "Принять", "Отмена");
	else if(Keys & KEY_CROUCH) ShowPlayerDialog(playerid, dJoinCars+5, DIALOG_STYLE_MSGBOX, "{FFCC00}Отмена покупки", "{FFFFFF}Вы хотите отменить покупку транспорта?", "Да", "Нет");
	else if(Keys & KEY_SECONDARY_ATTACK)
	{
	    if(!pInfo[playerid][pHouse]) return SendClientMessage(playerid, COLOR_GREY, "Для покупки транспорта вам необходим дом!");
		if(pInfo[playerid][cModel] != 0) SendClientMessage(playerid, COLOR_YELLOW, "У вас уже есть транспорт, если вы купите этот, старый пропадет.");
		new model = GetVehicleModel(pTemp[playerid][pCarShowroomID]);
		switch(InShop[playerid])
		{
			case 1: format(string,sizeof(string),"{FFFFFF}Вы хотите приобрести %s за %i$?",VehStats[model-400][vName],carsC[pPressed[playerid]][1]);
			case 2: format(string,sizeof(string),"{FFFFFF}Вы хотите приобрести %s за %i$?",VehStats[model-400][vName],carsB[pPressed[playerid]][1]);
			case 3: format(string,sizeof(string),"{FFFFFF}Вы хотите приобрести %s за %i$?",VehStats[model-400][vName],carsA[pPressed[playerid]][1]);
			case 4: format(string,sizeof(string),"{FFFFFF}Вы хотите приобрести %s за %i$?",VehStats[model-400][vName],carsBike[pPressed[playerid]][1]);
		}
		ShowPlayerDialog(playerid,dJoinCars+4,DIALOG_STYLE_MSGBOX,"{FFCC00}Купить транспорт",string,"Да","Нет");
	}
	return 1;
}
stock OpenContainer(number){
	switch(number)
	{
	    case 0:
	    {
	        SEND_CM(playerid, -1, "Тест! №1");
	    }
	    case 1:
	    {
	        SEND_CM(playerid, -1, "Тест! №2");
	    }
	}
}
stock Convert(seconds, stringTo[], size = sizeof(stringTo))
{
	stringTo[0] = 0x0;
	new result[4];
	result[0] = floatround(seconds / (3600 * 24));
	result[1] = floatround(seconds / 3600);
	result[2] = floatround((seconds / 60) - (result[1] * 60));
	result[3] = floatround(seconds - ((result[1] * 3600) + (result[2] * 60)));
	switch(result[0])
	{
		case 0:
		{
			switch(result[1])
			{
				case 0: format(stringTo,size,"%02d:%02d",result[2],result[3]);
				default: format(stringTo,size,"%d:%02d:%02d",result[1],result[2],result[3]);
			}
		}
	}
	return stringTo;
}

stock Converts(number)
{
	new hours = 0, mins = 0, secs = 0, string[30];
	hours = floatround(number / 3600);
	mins = floatround((number / 60) - (hours * 60));
	secs = floatround(number - ((hours * 3600) + (mins * 60)));
	if(hours > 0) format(string, 30, "%d:%02d:%02d", hours, mins, secs);
	else format(string, 30, "%d:%02d", mins, secs);
	return string;
}

stock ConvertsCmdTime(number)
{
	new hours = 0, mins = 0, string[30];
	hours = number / 3600;
	mins = (number - hours * 3600) / 60;
	format(string, 30, "%d ч %d мин", hours, mins);
	return string;
}

stock IsPlayerInInvalidNosVehicle(playerid)
{
    #define MAX_INVALID_NOS_VEHICLES 52
    static const InvalidNosVehicles[MAX_INVALID_NOS_VEHICLES] =
    {
		581,523,462,521,463,522,461,448,468,586,417,425,469,487,512,520,563,593,
		509,481,510,472,473,493,520,595,484,430,453,432,476,497,513,533,577,
		452,446,447,454,590,569,537,538,570,449,519,460,488,511,519,548,592
	};
	new vehicleid = GetPVarInt(playerid, "VehicleEnters");
	if(vehicleid)
	{
	    new model = GetVehicleModel(vehicleid);
		for(new i = 0; i < MAX_INVALID_NOS_VEHICLES; i++)
        {
			if(model == InvalidNosVehicles[i]) return 1;
		}
	}
	return 0;
}

stock IsComponentidCompatible(modelid, componentid)
{
    if(componentid == 1025 || componentid == 1073 || componentid == 1074 || componentid == 1075 || componentid == 1076 ||
         componentid == 1077 || componentid == 1078 || componentid == 1079 || componentid == 1080 || componentid == 1081 ||
         componentid == 1082 || componentid == 1083 || componentid == 1084 || componentid == 1085 || componentid == 1096 ||
         componentid == 1097 || componentid == 1098 || componentid == 1087 || componentid == 1086)
         return 1;

    switch (modelid)
    {
        case 400: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 401: return (componentid == 1005 || componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 114 || componentid == 1020 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 402: return (componentid == 1009 || componentid == 1009 || componentid == 1010);
        case 404: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1002 || componentid == 1016 || componentid == 1000 || componentid == 1017 || componentid == 1007);
        case 405: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1014 || componentid == 1023 || componentid == 1000);
        case 409: return (componentid == 1009);
        case 410: return (componentid == 1019 || componentid == 1021 || componentid == 1020 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 411: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 412: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 415: return (componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 418: return (componentid == 1020 || componentid == 1021 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1016);
        case 419: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 420: return (componentid == 1005 || componentid == 1004 || componentid == 1021 || componentid == 1019 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1003);
        case 421: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1014 || componentid == 1023 || componentid == 1016 || componentid == 1000);
        case 422: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1017 || componentid == 1007);
        case 426: return (componentid == 1005 || componentid == 1004 || componentid == 1021 || componentid == 1019 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1003);
        case 429: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 436: return (componentid == 1020 || componentid == 1021 || componentid == 1022 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 438: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 439: return (componentid == 1003 || componentid == 1023 || componentid == 1001 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1017 || componentid == 1007 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1013);
        case 442: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 445: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 451: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 458: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 466: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 467: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 474: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 475: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 477: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1017 || componentid == 1007);
        case 478: return (componentid == 1005 || componentid == 1004 || componentid == 1012 || componentid == 1020 || componentid == 1021 || componentid == 1022 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 479: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 480: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 489: return (componentid == 1005 || componentid == 1004 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1016 || componentid == 1000);
        case 491: return (componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1014 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 492: return (componentid == 1005 || componentid == 1004 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1016 || componentid == 1000);
        case 496: return (componentid == 1006 || componentid == 1017 || componentid == 1007 || componentid == 1011 || componentid == 1019 || componentid == 1023 || componentid == 1001 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1003 || componentid == 1002 || componentid == 1142 || componentid == 1143 || componentid == 1020);
        case 500: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 506: return (componentid == 1009);
        case 507: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 516: return (componentid == 1004 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1002 || componentid == 1015 || componentid == 1016 || componentid == 1000 || componentid == 1017 || componentid == 1007);
        case 517: return (componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1002 || componentid == 1023 || componentid == 1016 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 518: return (componentid == 1005 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1018 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 526: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 527: return (componentid == 1021 || componentid == 1020 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1014 || componentid == 1015 || componentid == 1017 || componentid == 1007);
        case 529: return (componentid == 1012 || componentid == 1011 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 533: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 534: return (componentid == 1126 || componentid == 1127 || componentid == 1179 || componentid == 1185 || componentid == 1100 || componentid == 1123 || componentid == 1125 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1180 || componentid == 1178 || componentid == 1101 || componentid == 1122 || componentid == 1124 || componentid == 1106);
        case 535: return (componentid == 1109 || componentid == 1110 || componentid == 1113 || componentid == 1114 || componentid == 1115 || componentid == 1116 || componentid == 1117 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1120 || componentid == 1118 || componentid == 1121 || componentid == 1119);
        case 536: return (componentid == 1104 || componentid == 1105 || componentid == 1182 || componentid == 1181 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1184 || componentid == 1183 || componentid == 1128 || componentid == 1103 || componentid == 1107 || componentid == 1108);
        case 540: return (componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007);
        case 541: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 542: return (componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1014 || componentid == 1015);
        case 545: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 546: return (componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1019 || componentid == 1018 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007);
        case 547: return (componentid == 1142 || componentid == 1143 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1016 || componentid == 1003 || componentid == 1000);
        case 549: return (componentid == 1012 || componentid == 1011 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 550: return (componentid == 1005 || componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003);
        case 551: return (componentid == 1005 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1023 || componentid == 1016 || componentid == 1003);
        case 555: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 558: return (componentid == 1092 || componentid == 1089 || componentid == 1166 || componentid == 1165 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1168 || componentid == 1167 || componentid == 1088 || componentid == 1091 || componentid == 1164 || componentid == 1163 || componentid == 1094 || componentid == 1090 || componentid == 1095 || componentid == 1093);
        case 559: return (componentid == 1065 || componentid == 1066 || componentid == 1160 || componentid == 1173 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1159 || componentid == 1161 || componentid == 1162 || componentid == 1158 || componentid == 1067 || componentid == 1068 || componentid == 1071 || componentid == 1069 || componentid == 1072 || componentid == 1070 || componentid == 1009);
        case 560: return (componentid == 1028 || componentid == 1029 || componentid == 1169 || componentid == 1170 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1141 || componentid == 1140 || componentid == 1032 || componentid == 1033 || componentid == 1138 || componentid == 1139 || componentid == 1027 || componentid == 1026 || componentid == 1030 || componentid == 1031);
        case 561: return (componentid == 1064 || componentid == 1059 || componentid == 1155 || componentid == 1157 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1154 || componentid == 1156 || componentid == 1055 || componentid == 1061 || componentid == 1058 || componentid == 1060 || componentid == 1062 || componentid == 1056 || componentid == 1063 || componentid == 1057);
        case 562: return (componentid == 1034 || componentid == 1037 || componentid == 1171 || componentid == 1172 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1149 || componentid == 1148 || componentid == 1038 || componentid == 1035 || componentid == 1147 || componentid == 1146 || componentid == 1040 || componentid == 1036 || componentid == 1041 || componentid == 1039);
        case 565: return (componentid == 1046 || componentid == 1045 || componentid == 1153 || componentid == 1152 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1150 || componentid == 1151 || componentid == 1054 || componentid == 1053 || componentid == 1049 || componentid == 1050 || componentid == 1051 || componentid == 1047 || componentid == 1052 || componentid == 1048);
        case 566: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 567: return (componentid == 1129 || componentid == 1132 || componentid == 1189 || componentid == 1188 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1187 || componentid == 1186 || componentid == 1130 || componentid == 1131 || componentid == 1102 || componentid == 1133);
        case 575: return (componentid == 1044 || componentid == 1043 || componentid == 1174 || componentid == 1175 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1176 || componentid == 1177 || componentid == 1099 || componentid == 1042);
        case 576: return (componentid == 1136 || componentid == 1135 || componentid == 1191 || componentid == 1190 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1192 || componentid == 1193 || componentid == 1137 || componentid == 1134);
        case 579: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 580: return (componentid == 1020 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007);
        case 585: return (componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 587: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 589: return (componentid == 1005 || componentid == 1004 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1024 || componentid == 1013 || componentid == 1006 || componentid == 1016 || componentid == 1000 || componentid == 1017 || componentid == 1007);
        case 600: return (componentid == 1005 || componentid == 1004 || componentid == 1020 || componentid == 1022 || componentid == 1018 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1017 || componentid == 1007);
        case 602: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 603: return (componentid == 1144 || componentid == 1145 || componentid == 1142 || componentid == 1143 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007);
    }
    return 0;
}

stock GetGangColor(fractionid)
	return
		(fractionid == TEAM_BALLAS) ? (0xCC00FFAA) :
		(fractionid == TEAM_RIFA) ? (0x6666FFAA) :
		(fractionid == TEAM_VAGOS) ? (0xFFCC00AA) :
		(fractionid == TEAM_GROVE) ? (0x009900AA) : (0x00CCFFAA);

stock GetGangName(fractionid)
{
	new string[20];
	switch(fractionid)
	{
		case 7: format(string, sizeof(string), "ОПГ Южная");
		case 8: format(string, sizeof(string), "ОПГ Тамбовская");
		case 9: format(string, sizeof(string), "Южная братва");
		case 10: format(string, sizeof(string), "ОПГ Солнцевская");
		case 11: format(string, sizeof(string), "ОПГ Ореховская");
	}
	return string;
}

stock IsPlayerInBandOnline(fractionid)
{
	new np;
	foreach(new i : Player)
	{
		if(!gPlayerLogged[i]) continue;
		if(pInfo[i][pMember] == fractionid || pInfo[i][pLeader] == fractionid) np++;
	}
	return np;
}

stock IsPlayerToSquare(playerid,Float:min_x,Float:min_y,Float:max_x,Float:max_y)
{
	new Float:xxp,Float:yyp,Float:zzp;
	GetPlayerPos(playerid,xxp,yyp,zzp);
	if((xxp <= max_x && xxp >= min_x) && (yyp <= max_y && yyp >= min_y)) return 1;
	return 0;
}

stock GivePlayerWeaponEx(playerid, weaponid, ammo)
{
	pTemp[playerid][pAbletoGun] = 2;
	new slot = GetWeaponSlot(weaponid);
	gGuns[playerid][slot] = weaponid;
	gAmmos[playerid][slot] += ammo;
	WeaponInfo[playerid][weaponid] = true;
	GivePlayerWeapon(playerid, weaponid, ammo);
	pTemp[playerid][pAbletoGun] = 2;
	return 1;
}

stock SetPlayerAmmoEx(playerid, weapon, ammo)
{
	pTemp[playerid][pAbletoGun] = 2;
	new slot = GetWeaponSlot(weapon);
	gAmmos[playerid][slot] = ammo;
	SetPlayerAmmo(playerid, weapon, ammo);
	pTemp[playerid][pAbletoGun] = 2;
	return 1;
}

stock ResetPlayerWeaponsEx(playerid)
{
	pTemp[playerid][pAbletoGun] = 2;
	ResetPlayerWeapons(playerid);
	for(new i; i < 13; i++)
	{
		gGuns[playerid][i] = 0;
		gAmmos[playerid][i] = 0;
	}
	pTemp[playerid][pAbletoGun] = 2;
}

stock GangZoneCheck()
{
    if(CaptureTime > 0 || CaptureStatus == 0) return 1;
    new i = CaptureZone;
    CaptureStatus = 0;
    CaptureZone = 0;
	new string[128];
	if(GangInfo[GZInfo[i][gNapad]][score] > GangInfo[GZInfo[i][gFrak]][score])
	{
	    format(string,sizeof(string),"Банда %s захватила новую территорию",GetGangName(GZInfo[i][gNapad]));
		SendGhettoMes(COLOR_BLUE, string);
		CaptureEnd(GZInfo[i][gNapad], GZInfo[i][gFrak]);
		GangZoneStopFlashForAll(GangZone[i]);
		GangZoneHideForAll(GangZone[i]);
		GangZoneShowForAll(GangZone[i],TeamColors[GZInfo[i][gNapad]]);
		GangInfo[GZInfo[i][gNapad]][capture] =
		GangInfo[GZInfo[i][gNapad]][score] =
		GangInfo[GZInfo[i][gFrak]][capture] =
		GangInfo[GZInfo[i][gFrak]][score] =
		GangInfo[GZInfo[i][gNapad]][gangnumber] =
		GangInfo[GZInfo[i][gFrak]][gangnumber] = 0;
		GZInfo[i][gFrak] = GZInfo[i][gNapad];
		GZInfo[i][gNapad] = 0;
		CaptureStatus = 0;
		SaveGZ(i);
		foreach(new x : Player)
		{
			if(!gPlayerLogged[x] || (pInfo[i][pMember] != GZInfo[i][gNapad] && pInfo[i][pMember] != GZInfo[i][gFrak])) continue;
		//	ClearDeathMessage(i);
		}
	}
	else if(GangInfo[GZInfo[i][gNapad]][score] <= GangInfo[GZInfo[i][gFrak]][score])
	{
	    format(string,sizeof(string),"Попытка захватить территорию %s провалилась",GetGangName(GZInfo[i][gFrak]));
	    SendGhettoMes(COLOR_BLUE, string);
		CaptureEnd(GZInfo[i][gNapad], GZInfo[i][gFrak]);
		GangZoneStopFlashForAll(GangZone[i]);
		GangZoneHideForAll(GangZone[i]);
		GangZoneShowForAll(GangZone[i],TeamColors[GZInfo[i][gFrak]]);
		GangInfo[GZInfo[i][gNapad]][capture] =
		GangInfo[GZInfo[i][gNapad]][score] =
		GangInfo[GZInfo[i][gFrak]][capture] =
		GangInfo[GZInfo[i][gFrak]][score] =
		GangInfo[GZInfo[i][gNapad]][gangnumber] =
		GangInfo[GZInfo[i][gFrak]][gangnumber] = 0;
		GZInfo[i][gFrak] = GZInfo[i][gFrak];
		GZInfo[i][gNapad] = 0;
		CaptureStatus = 0;
		SaveGZ(i);
		foreach(new x : Player)
		{
			if(!gPlayerLogged[x] || (pInfo[i][pMember] != GZInfo[i][gNapad] && pInfo[i][pMember] != GZInfo[i][gFrak])) continue;
		//	ClearDeathMessage(i);
		}
	}
	return 1;
}

stock BizWarCheck()
{
    new asd;
    for(new i = 0; i < sizeof(MZInfo); i++)
	{
		if(ZoneOnBattlem[i] == 1 && MZSafeTime[0] == 0)
		{
			ZoneTimerm[i] -= 10;
			if(ZoneTimerm[i] <= 0)
			{
				for(new h = 0; h < sizeof(BizInfo); h++)
				{
					if(BizInfo[h][bZahvat] == 1)
					{
						SendFMes(BizInfo[h][bMafia],COLOR_GREEN,"Вам удалось отстоять свой бизнес");
						BizInfo[h][bZahvat] = 0;
					}
				}
				SendFMes(MZInfo[i][mNapad],COLOR_RED,"Вам не удалось взять под контроль новый бизнес");
				startwar = false;
				ZoneOnBattlem[i] = 0;
				GangZoneStopFlashForAll(zons);
			}
			foreach(new x : Player)
			{
				if(IsPlayerToSquare(x,328.755706, 2412.644531, 448.755706, 2564.644531))
				{
					OnmZONE[i][pInfo[x][pMember]]++;
				}
			}
			for(new x = 0; x < 20; x++)
			{
				if(OnmZONE[i][x] > 0 && IsInAllowedM(x)) asd++;
			}
			if(asd == 1)
			{
				for(new x = 0; x < 20; x++)
				{
					if(OnmZONE[i][x] > 0)
					{
						if(MZInfo[i][mFrakVlad] == x)
						{
							for(new h = 0; h < sizeof(BizInfo); h++)
							{
								if(BizInfo[h][bZahvat] == 1)
								{
									BizInfo[h][bMafia] = BizInfo[h][bMafia];
									switch(BizInfo[h][bMafia])
									{
									   	case TEAM_LCN: MafiaTotalBiz[0]++;
									   	case TEAM_YAKUZA: MafiaTotalBiz[1]++;
									   	case TEAM_RM: MafiaTotalBiz[2]++;
									}
									SendFMes(BizInfo[h][bMafia],COLOR_GREEN,"Вы отстояли свой бизнес");
									BizInfo[h][bZahvat] = 0;
									MysqlUpdateBizInt(h, "mafia", BizInfo[h][bMafia]);
								}
							}
							startwar = false;
							SendFMes(MZInfo[i][mNapad],COLOR_RED,"Вам не удалось завоевать ещё один бизнес");
						}
						else
						{
							startwar = false;
							SendFMes(MZInfo[i][mNapad],COLOR_GREEN,"Вы завоевали новый бизнес");
							for(new h = 0; h < sizeof(BizInfo); h++)
							{
								if(BizInfo[h][bZahvat] == 1)
								{
									SendFMes(BizInfo[h][bMafia],COLOR_RED,"Вы потеряли контроль над одним из своих бизнесов");
									BizInfo[h][bMafia] = MZInfo[i][mNapad];
									switch(BizInfo[h][bMafia])
									{
									   	case TEAM_LCN: MafiaTotalBiz[0]--;
									   	case TEAM_YAKUZA: MafiaTotalBiz[1]--;
									   	case TEAM_RM: MafiaTotalBiz[2]--;
									}
									BizInfo[h][bZahvat] = 0;
									MysqlUpdateBizInt(h, "mafia", BizInfo[h][bMafia]);
								}
							}
						}
						ZoneOnBattlem[i] = 0;
						MZInfo[i][mFrakVlad] = 0;
						MZInfo[i][mFrakVlad] = x;
						GangZoneStopFlashForAll(zons);
						GangZoneHideForAll(zons);
						GangZoneShowForAll(zons,COLOR_NEWS);
						break;
					}
				}
			}
		}
	}
	for(new mz = 0; mz < 20; mz++) OnmZONE[0][mz] = 0;
	return 1;
}

stock LeaveFractionPlayer(playerid)
{
    if(IsAGang(playerid) && CaptureTime > 0)
	{
	    if(GZInfo[CaptureZone][gNapad] == pInfo[playerid][pMember] || GZInfo[CaptureZone][gFrak] == pInfo[playerid][pMember])
	    {
	        CaptureShow(playerid, GZInfo[CaptureZone][gNapad], GZInfo[CaptureZone][gFrak], 0);
	    }
	}
	pInfo[playerid][pMemberSkin] =
	pInfo[playerid][pMemberWarn] =
	pInfo[playerid][pLeader] =
	pInfo[playerid][pMember] =
	pInfo[playerid][pRank] =
	pInfo[playerid][pSpawnChange] = 0;
	ResetPlayerWeaponsEx(playerid);
	SetPlayerSkin(playerid,pInfo[playerid][pModel]);
	SetPlayerColorEx(playerid,TeamColors[GetTeamID(playerid)]);
	mysql_query_string[0] = EOS;
	format(mysql_query_string, 400, "UPDATE "T_ACCOUNTS" SET leader = 0, member = 0, rank = 0, memberskin = 0, memberwarn = 0, spawnchange = 0 WHERE id = %i", pInfo[playerid][pID]);
	mysql_tquery(dbHandle, mysql_query_string, "", "");
	return 1;
}

stock NewsPanel(playerid)
{
	new full = (pInfo[playerid][pMember] == TEAM_LSNEWS) ? (0) : (pInfo[playerid][pMember] == TEAM_SFNEWS) ? (1) : (2);
	new string[210];
	format(string, sizeof(string), "%s\n{FFFFFF}- Пригласить в эфир\n{FFFFFF}- Выпроводить из эфира\n%s\n%s",
	!Ether[playerid] ? ("{63BD4E}- Войти в эфир") : ("{F04245}- Выйти из эфира"),
	!EtherCall[full] ? ("{63BD4E}- Включить прием звонков в эфир") : ("{F04245}- Выключить прием звонков в эфир"),
	!EtherSms[full] ? ("{63BD4E}- Включить прием смс в эфир") : ("{F04245}- Выключить прием смс в эфир"));
	ShowPlayerDialog(playerid, dNewsMenu, 2,
	(pInfo[playerid][pMember] == TEAM_LSNEWS) ? ("{3399FF}СМИ г.Южный {FFFFFF}(т. 555)") :
	(pInfo[playerid][pMember] == TEAM_SFNEWS) ? ("{3399FF}СМИ пгт.Батырево {FFFFFF}(т. 666)") : ("{3399FF}Закрыто {FFFFFF}(т. 777)"),
	string, "Принять", "Отмена");
	return 1;
}

stock MobileCrash(playerid)
{
	SendClientMessage(Mobile[playerid], COLOR_GRAD2, "Абонент положил трубку");
	SetPlayerSpecialAction(Mobile[playerid], SPECIAL_ACTION_STOPUSECELLPHONE);
	CellTime[Mobile[playerid]] = CellTime[playerid] = Mobile[Mobile[playerid]] = -1;
	if(EtherCalled[playerid]) EtherCalled[playerid] = false;
	if(EtherCalled[Mobile[playerid]]) EtherCalled[Mobile[playerid]] = false;
	Mobile[playerid] = -1;
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
	DeletePVar(playerid, "CallTime");
	DeletePVar(Mobile[playerid], "CallTime");
	return 1;
}

stock ClearPlayerHouse(houseid, type)
{
	if(type == 1)
	{
	    new playerid = GetPlayerID(HouseInfo[houseid][hOwner]);
		if(playerid != INVALID_PLAYER_ID)
		{
			pInfo[playerid][pBank] += HouseInfo[houseid][hBuyPrice];
			pInfo[playerid][pHouse] = 0;
			pInfo[playerid][pSpawnChange] = 0;
			MysqlUpdatePlayerInt(playerid, "spawnchange", 0);
			SendClientMessage(playerid, COLOR_YELLOW, "[Квитанция] {FFFFFF}Вы не оплатили электричество, ваш дом был передан государству!");
			SendClientMessage(playerid, COLOR_YELLOW, "[Квитанция] {FFFFFF}На ваш банковский счет возвращено 75%% от стоимости дома");
			SendClientMessage(playerid, COLOR_GREEN, "[Подсказка] {FFFFFF}Местом спавна автоматически назначен вокзал. Изменить место спавна {AFAFAF}/setspawn");
			if(pTemp[playerid][pCarPlayerID] != INVALID_VEHICLE_ID)
			{
				DestroyVehicle(pTemp[playerid][pCarPlayerID]);
				pTemp[playerid][pCarPlayerID] = INVALID_VEHICLE_ID;
			}
		}
		else if(playerid == INVALID_PLAYER_ID)
		{
		    mysql_query_string[0] = EOS;
			format(mysql_query_string, sizeof(mysql_query_string), "SELECT * FROM "T_ACCOUNTS" WHERE name = '%s'", HouseInfo[houseid][hOwner]);
			mysql_tquery(dbHandle, mysql_query_string, "@OfflineClearPlayerHouse", "i", houseid);
		}
	}
	else
	{
	    new playerid = GetPlayerID(HouseInfo[houseid][hOwner]);
		if(playerid != INVALID_PLAYER_ID)
		{
			pInfo[playerid][pBank] += HouseInfo[houseid][hBuyPrice];
			pInfo[playerid][pHouse] = 0;
			pInfo[playerid][pSpawnChange] = 0;
			MysqlUpdatePlayerInt(playerid, "spawnchange", 0);
			SendClientMessage(playerid, COLOR_RED, "[Внимание] {FFFFFF}Ваш дом был продан государству администратором");
			SendClientMessage(playerid, COLOR_YELLOW, "[Квитанция] {FFFFFF}На ваш банковский счет возвращено 75%% от стоимости дома");
			SendClientMessage(playerid, COLOR_GREEN, "[Подсказка] {FFFFFF}Местом спавна автоматически назначен вокзал. Изменить место спавна {AFAFAF}/setspawn");
			if(pTemp[playerid][pCarPlayerID] != INVALID_VEHICLE_ID)
			{
				DestroyVehicle(pTemp[playerid][pCarPlayerID]);
				pTemp[playerid][pCarPlayerID] = INVALID_VEHICLE_ID;
			}
		}
	}
	ClearHouse(houseid);
	return 1;
}

stock ClearHouse(houseid)
{
    strmid(HouseInfo[houseid][hOwner], "None", 0, strlen("None"), MAX_PLAYER_NAME);
	HouseInfo[houseid][hBuyPrice] = HouseInfo[houseid][hDays] =
	HouseInfo[houseid][hAutoDoors] = HouseInfo[houseid][hSubsidia] = HouseInfo[houseid][hHeal] = 0;
	HouseInfo[houseid][hLock] = HouseInfo[houseid][hDays] = 1;
	mysql_query_string[0] = EOS;
	format(mysql_query_string, sizeof(mysql_query_string), "UPDATE "T_HOUSE" SET hOwner = 'None', hDays = 1, buyprice = 0, hAutoDoors = 0, hSubsidia = 0, hLock = 1, hHeal = 0 WHERE id = %d", houseid);
	mysql_tquery(dbHandle, mysql_query_string, "", "");
	UpdateHouse(houseid);
	if(!HouseInfo[houseid][hAutoDoors]) UpdateDynamic3DTextLabelText(HouseInfo[houseid][hTextExit], 0xFFFFFFFF, "Выход - {EAD86A}'/exit'\n{FFFFFF}Управление домом - {EAD86A}'/hpanel'");
	else UpdateDynamic3DTextLabelText(HouseInfo[houseid][hTextExit], 0xFFFFFFFF, "Выход - {EAD86A}'ALT'\n{FFFFFF}Управление домом - {EAD86A}'/hpanel'");
	return 1;
}

stock ClearPlayerBiz(bizid, type)
{
	if(type == 1)
	{
		new playerid = GetPlayerID(BizInfo[bizid][bOwner]);
		if(playerid != INVALID_PLAYER_ID)
		{
			if(IsPlayerConnected(playerid) && gPlayerLogged[playerid])
			{
			    pInfo[playerid][pBiz] = 0;
				pInfo[playerid][pBank] += BizInfo[bizid][bBuyPrice];
				pInfo[playerid][pBank] += BizInfo[bizid][bMoney];
				SendClientMessage(playerid, COLOR_YELLOW, "[Квитанция] {FFFFFF}Ваш бизнес закрыли в связи с нехваткой ресурсов или у вас закончилась аренда");
				SendClientMessage(playerid, COLOR_YELLOW, "[Квитанция] {FF9900}75%% {FFFFFF}от стоимости бизнеса и его бюджет зачислены на ваш банковский счет");
			}
		}
		else
		{
		    mysql_query_string[0] = EOS;
			format(mysql_query_string, sizeof(mysql_query_string), "SELECT bank,text FROM "T_ACCOUNTS" WHERE name = '%s'", BizInfo[bizid][bOwner]);
			mysql_tquery(dbHandle, mysql_query_string, "@OfflineClearPlayerBiz", "i", bizid);
		}
	}
	else
	{
	    new playerid = GetPlayerID(BizInfo[bizid][bOwner]);
		if(playerid != INVALID_PLAYER_ID)
		{
			if(IsPlayerConnected(playerid) && gPlayerLogged[playerid])
			{
			    pInfo[playerid][pBiz] = 0;
				pInfo[playerid][pBank] += BizInfo[bizid][bBuyPrice];
				pInfo[playerid][pBank] += BizInfo[bizid][bMoney];
				SendClientMessage(playerid, COLOR_RED, "[Внимание] {FFFFFF}Ваш бизнес был продан государству администратором");
				SendClientMessage(playerid, COLOR_YELLOW, "[Квитанция] {FF9900}75%% {FFFFFF}от стоимости бизнеса и его бюджет зачислены на ваш банковский счет");
			}
		}
		else
		{
		    new bank;
			bank += BizInfo[bizid][bBuyPrice];
			bank += BizInfo[bizid][bMoney];
		    mysql_query_string[0] = EOS;
			format(mysql_query_string, sizeof(mysql_query_string), "UPDATE "T_ACCOUNTS" SET bank = %i WHERE name = '%s'", bank, BizInfo[bizid][bOwner]);
			mysql_tquery(dbHandle, mysql_query_string, "", "");
		}
	}
    ClearBiz(bizid);
	return 1;
}

stock ClearBiz(i)
{
	BizPay[i] = BizPayLastHour[i] = BizPayForDay[i] = BizInfo[i][bLock] = BizInfo[i][bLockTime] =
	BizInfo[i][bBuyPrice] = BizInfo[i][bMoney] = BizInfo[i][bLic] = BizInfo[i][bEnter] = BizInfo[i][bHeal] =
	BizInfo[i][bSound] = BizInfo[i][bVisitors] = 0;
	BizInfo[i][bTill] = 50;
	BizInfo[i][bDays] = 1;
	switch(BizInfo[i][bType])
	{
	    case 1: BizInfo[i][bProduct] = 5000;
	    case 2,6: BizInfo[i][bProduct] = 20000;
	    case 3: BizInfo[i][bProduct] = 3000;
	    case 4,5,10: BizInfo[i][bProduct] = 7000;
	    case 7,9: BizInfo[i][bProduct] = 100000;
	    case 8: BizInfo[i][bProduct] = 50000;
	}
	strmid(BizInfo[i][bOwner], "None", 0, strlen("None"), MAX_PLAYER_NAME);
    mysql_query_string[0] = EOS;
	format(mysql_query_string, sizeof(mysql_query_string), "UPDATE "T_BIZ" SET owner = 'None', block = 0, locktime = 0, money = 0, lic = 0, penter = 0, till = 50, buyprice = 0, product = %d, bHeal = 0, bSound = 0, bDays = 1 WHERE id = %d", BizInfo[i][bProduct], i);
	mysql_tquery(dbHandle, mysql_query_string, "", "");
	UpdateBizStats(i);
	return 1;
}

@OfflineClearPlayerBiz(bizid);
@OfflineClearPlayerBiz(bizid)
{
    new bank, texts[25], text[5];

    #if MYSQL_R41_2 == true

    new rows;
    cache_get_row_count(rows);
	if(rows)
	{
		cache_get_value_index_int(0, 0, bank); // bank
		cache_get_value_index(0, 1, texts); // text
	}

	#else

	new rows, fields;
    cache_get_data(rows, fields);
	if(rows)
	{
		bank = cache_get_row_int(0, 0); // bank
		cache_get_row(0, 1, texts, dbHandle); // text
	}

	#endif

	sscanf(texts, "p<,>a<i>[5]", text);
	bank += BizInfo[bizid][bBuyPrice];
	bank += BizInfo[bizid][bMoney];
    mysql_query_string[0] = EOS;
	format(mysql_query_string, sizeof(mysql_query_string), "UPDATE "T_ACCOUNTS" SET text = '%i, 1, %i, %i, %i', bank = %i WHERE name = '%s'", text[0], text[2], text[3], text[4], bank, BizInfo[bizid][bOwner]);
	mysql_tquery(dbHandle, mysql_query_string, "", "");
	return 1;
}

@OfflineClearPlayerHouse(houseid);
@OfflineClearPlayerHouse(houseid)
{
    new texts[25], text[5];

    #if MYSQL_R41_2 == true

    new rows;
    cache_get_row_count(rows);
	if(rows) cache_get_value_name(0, "text", texts);

	#else

	new rows, fields;
    cache_get_data(rows, fields);
	if(rows) cache_get_field_content(0, "text", texts, dbHandle);

	#endif

	sscanf(texts, "p<,>a<i>[5]", text);
    mysql_query_string[0] = EOS;
	format(mysql_query_string, sizeof(mysql_query_string), "UPDATE "T_ACCOUNTS" SET text = '%i, %i, %i, %i, %i' WHERE name = '%s'", houseid, text[1], text[2], text[3], text[4], HouseInfo[houseid][hOwner]);
	mysql_tquery(dbHandle, mysql_query_string, "", "");
	return 1;
}

stock GunShopList(playerid)
{
	if(!GetLicWeapon(playerid)) return SendClientMessage(playerid, COLOR_GREY, "У вас нету лицензии на оружие!");
	stringer[0] = EOS;
	//strcat(stringer, "{EAD86A}Наименование\t\t{EAD86A}Цена\n");
	for(new i; i < GUN_OBJECTS-8; i++)
	{
	    format(stringer, 700, "%s{FFFFFF}%s\t\t{63BD4E}%d$\n", stringer, gGunNames[i], gGunCosts[i]);
	}
	for(new i = 2; i < GUN_OBJECTS; i++)
	{
	    format(stringer, 700, "%s{FFFFFF}%s\t\t{63BD4E}%d$ {AFAFAF}за 1 пт.\n", stringer, gGunNames[i], gGunCosts[i]);
	}
	ShowPlayerDialog(playerid, 1374, DIALOG_STYLE_LIST, "{FFCC00}Магазин оружия", stringer, "Купить", "Отмена");
	return 1;
}

stock SkinShopList(playerid)
{
	ShowPlayerDialog(playerid, dJob+7, DIALOG_STYLE_MSGBOX, "{FFCC00}Покупка одежды", "{FFFFFF}Вы хотите перейти к выбору одежды?", "Да", "Нет");
	return 1;
}
stock MagazineList(playerid) {
	stringer[0] = EOS;
	for(new i; i < SHOP_OBJECTS; i++) {
		format(stringer, 512, "%s{FFFFFF}%s\t{63BD4E}%d$\n", stringer, gShopNames[i], gShopCosts[i]);
	}
	ShowPlayerDialog(playerid, dHeal+5, DIALOG_STYLE_LIST, "{FFCC00}Витрина магазина 24/7", stringer, "Купить", "Отмена");
	return 1;
}
stock EatList(playerid, idx)
{
	stringer[0] = EOS;
	for(new i; i < EAT_OBJECTS; i++)
	{
	    if(GetPlayerInterior(playerid) == 5)
	    {
			format(stringer, 512, "%s{FFFFFF}%s\t\t{63BD4E}%d$\n", stringer, gEateryNames1[i], BizInfo[idx][bTill] * gEateryCosts[i]);
		}
	    else if(GetPlayerInterior(playerid) == 10)
	    {
			format(stringer, 512, "%s{FFFFFF}%s\t\t{63BD4E}%d$\n", stringer, gEateryNames2[i], BizInfo[idx][bTill] * gEateryCosts[i]);
		}
	    else if(GetPlayerInterior(playerid) == 9)
	    {
			format(stringer, 512, "%s{FFFFFF}%s\t\t{63BD4E}%d$\n", stringer, gEateryNames3[i], BizInfo[idx][bTill] * gEateryCosts[i]);
		}
	}
	ShowPlayerDialog(playerid, dHeal+7, /*DIALOG_STYLE_LIST*/DIALOG_STYLE_LIST, "{FFCC00}Закусочная", stringer, "Купить", "Отмена");
	return 1;
}

stock BarList(playerid, idx)
{
	stringer[0] = EOS;
	//strcat(stringer, "{EAD86A}Наименование\t\t{EAD86A}Цена\n");
	for(new i; i < BAR_OBJECTS; i++)
	{
	    format(stringer, 512, "%s{FFFFFF}%s\t\t{63BD4E}%d$\n", stringer, gBarNames[i], BizInfo[idx][bTill] * gBarCost[i]);
	}
	ShowPlayerDialog(playerid, dHeal+8, DIALOG_STYLE_LIST, "{FFCC00}Барная стойка", stringer, "Купить", "Отмена");
	return 1;
}

stock BizStats(playerid, idx)
{
	new totalprod = 0;
	stringer[0] = EOS;
    if(BizPayForDay[idx] > 1000000 && BizInfo[idx][bType] != 9) SendClientMessage(playerid, COLOR_YELLOW, "[Информация] {FFFFFF}Ваш бизнес достиг лимита прибыли за сутки");
	if(BizInfo[idx][bProduct] < 1) SendClientMessage(playerid, COLOR_YELLOW, "[Информация] {FFFFFF}Бизнес не приносит прибыли по причине отсутствия продуктов");
    switch(BizInfo[idx][bType])
	{
		case 1: format(stringer,1300,"{FFFFFF}Маркет:\t\t\t\t%s\n",BizInfo[idx][bName]),totalprod=5000;
		case 2: format(stringer,1300,"{FFFFFF}Заправка:\t\t\t\t%s\n",BizInfo[idx][bName]),totalprod=20000;
		case 3: format(stringer,1300,"{FFFFFF}Закусочная:\t\t\t\t%s\n",BizInfo[idx][bName]),totalprod=3000;
		case 4,5,10: format(stringer,1300,"{FFFFFF}Клуб/бар:\t\t\t\t%s\n",BizInfo[idx][bName]),totalprod=7000;
		case 6: format(stringer,1300,"{FFFFFF}Аммуниция:\t\t\t\t%s\n",BizInfo[idx][bName]),totalprod=20000;
		case 7: format(stringer,1300,"{FFFFFF}CTO:\t\t\t\t\t%s\n",BizInfo[idx][bName]),totalprod=100000;
		case 8: format(stringer,1300,"{FFFFFF}Магазин одежды:\t\t\t%s\n",BizInfo[idx][bName]),totalprod=50000;
		case 9: format(stringer,1300,"{FFFFFF}Казино:\t\t\t\t%s\n",BizInfo[idx][bName]),totalprod=100000;
	}
	format(stringer,1500,"%s\
		Владелец:\t\t\t\t%s\n\n\
		На счету бизнеса:\t\t\t%i$\n\
		{EAD86A}За сутки заработано:\t\t\t%i$\n\
		{AFAFAF}В этом часу заработано:\t\t%i$\n\
		В прошлом часу заработано:\t\t%i$\n\n\
		{FFFFFF}Товар:\t\t\t\t\t%i / %i\n\
		Стоимость товара:\t\t\t%i$\n\
		Стоимость бизнеса:\t\t\t%i$\n\
		Оплачено дней:\t\t\t%i\n\
		Стоимость аренды:\t\t\t%i$ в день\n\
		Посетителей сегодня:\t\t%i\n\
		Статус:\t\t\t\t\t%s\n\
		Лицензия на бизнес:\t\t\t%s\n\
		Время простоя:\t\t\t%i ч.\n\
		Крыша:\t\t\t\t%s",
	stringer,
	BizInfo[idx][bOwner],
	BizInfo[idx][bMoney],
	BizPayForDay[idx],
	BizPay[idx],
	BizPayLastHour[idx],
	BizInfo[idx][bProduct], totalprod,
	BizInfo[idx][bTill],
	BizInfo[idx][bPrice],
	BizInfo[idx][bDays],
	(BizInfo[idx][bTill]*10),
	BizInfo[idx][bVisitors],
	(!BizInfo[idx][bLock])?("{63BD4E}Открыт{ffffff}"):("{F04245}Закрыт{ffffff}"),
	(!BizInfo[idx][bLic])?("{F04245}Бизнес работает нелегально{ffffff}"):("{63BD4E}Бизнес работает легально{ffffff}"),
	BizInfo[idx][bLockTime],
	(BizInfo[idx][bMafia]==TEAM_RM)?("Russian Mafia"):(BizInfo[idx][bMafia]==TEAM_LCN)?("Итальянская Мафия"):(BizInfo[idx][bMafia]==TEAM_YAKUZA)?("Yakuza"):("Отсутствует"));
	return ShowPlayerDialog(playerid,dNull,DIALOG_STYLE_MSGBOX,"{FFCC00}Статистика бизнеса",stringer,"Закрыть","");
}

stock AdvertList(playerid)
{
	new full = (pInfo[playerid][pMember] == TEAM_LSNEWS) ? (0) : (pInfo[playerid][pMember] == TEAM_SFNEWS) ? (1) : (2);
	new ads;
	stringer[0] = EOS;
	for(new i; i < TOTALADVERT[full]; i++)
	{
		format(stringer, sizeof(stringer), "%s№%i - Прислал: %s\n", stringer, i+1, AdvertInfo[i+1][full][aName]);
		ads++;
	}
	if(!ads) ShowPlayerDialog(playerid, dNewsMenu+5, DIALOG_STYLE_MSGBOX, "{FFCC00}Меню объявлений", "{FFFFFF}Новых объявлений нет", "Принять", "Отмена");
	else ShowPlayerDialog(playerid, dNewsMenu+5, DIALOG_STYLE_LIST, "{FFCC00}Меню объявлений", stringer, "Принять", "Отмена");
	return 1;
}

stock BankFracEnter(playerid)
{
	new bank, string[256];
	switch(pInfo[playerid][pMember])
	{
	    case TEAM_LSNEWS: bank = FracBank[8];
		case TEAM_SFNEWS: bank = FracBank[9];
		case TEAM_LVNEWS: bank = FracBank[10];
		case TEAM_AUTOSCHOOL: bank = FracBank[11];
	}
	format(string, sizeof(string), "Положить деньги\nСнять деньги\nДоступно средств: {63BD4E}%i$", bank);
	if(IsANews(playerid)) ShowPlayerDialog(playerid, dJob+19, 2, "{FFCC00}Банк организации", string, "Принять", "Отмена");
	else if(pInfo[playerid][pMember] == TEAM_AUTOSCHOOL) ShowPlayerDialog(playerid, dJob+22, 2, "{FFCC00}Банк организации", string, "Принять", "Отмена");
	return 1;
}

stock SetPosInShop(playerid) {
	SetPlayerPos(playerid,616.1683,-124.3003,997.9922);
	SetPlayerFacingAngle(playerid,101.9068);
	SetPlayerInterior(playerid,3);
	SetPlayerVirtualWorld(playerid,playerid);
	TogglePlayerControllable(playerid,false);
	pPressed[playerid] = 0;
	LinkVehicleToInterior(pTemp[playerid][pCarShowroomID],3);
	SetVehicleVirtualWorld(pTemp[playerid][pCarShowroomID],playerid);
	PlayerTextDrawShow(playerid,car_showroom_TD[playerid][0]);
	PlayerTextDrawShow(playerid,car_showroom_TD[playerid][1]);
	for(new i; i < 5; i++) TextDrawShowForPlayer(playerid,car_showroom_info_TD[i]);
	PutPlayerInVehicle(playerid,pTemp[playerid][pCarShowroomID],0);
}
@OfflineSetReferalMoney(playerid);
@OfflineSetReferalMoney(playerid)
{
    new texts[25], text[5];

    #if MYSQL_R41_2 == true

    new rows;
    cache_get_row_count(rows);
	if(rows) cache_get_value_name(0, "text", texts);

	#else

	new rows, fields;
    cache_get_data(rows, fields);
	if(rows) cache_get_field_content(0, "text", texts, dbHandle);

	#endif

    sscanf(texts, "p<,>a<i>[5]", text);
	mysql_query_string[0] = EOS;
	format(mysql_query_string, sizeof(mysql_query_string), "UPDATE "T_ACCOUNTS"  SET text = '%i, %i, 1, %i, %i' WHERE name = '%s'", text[0], text[1], text[3], text[4], pInfo[playerid][pReferal]);
	mysql_tquery(dbHandle, mysql_query_string, "", "");
	return 1;
}

stock PayDay(){
    SaveOther();
    new string[128], amount_exp=0;
    for(new i = 0; i < MAX_PLAYERS; i++) {
	    if(!IsPlayerConnected(i)) continue;
	    if(!gPlayerLogged[i]) { SendClientMessage(i, COLOR_GREY, "Вы не авторизированы для получения зарплаты"); continue; }
        if(pInfo[i][pTimeHour] >= 1200 && !pInfo[i][pVip])
		{
	        if(!pInfo[i][pAdmin] && pInfo[i][pMember]>TEAM_NONE)
	        {
	            switch(pInfo[i][pMember])
			    {
			        case TEAM_GROVE: pInfo[i][pPayCheck] += (pInfo[i][pLeader])?(100*GangTotalGz[3]):(40*GangTotalGz[3]);
			        case TEAM_BALLAS: pInfo[i][pPayCheck] += (pInfo[i][pLeader])?(100*GangTotalGz[2]):(40*GangTotalGz[2]);
			        case TEAM_RIFA: pInfo[i][pPayCheck] += (pInfo[i][pLeader])?(100*GangTotalGz[0]):(40*GangTotalGz[0]);
			        case TEAM_AZTECAS: pInfo[i][pPayCheck] += (pInfo[i][pLeader])?(100*GangTotalGz[1]):(40*GangTotalGz[1]);
			        case TEAM_VAGOS: pInfo[i][pPayCheck] += (pInfo[i][pLeader])?(100*GangTotalGz[4]):(40*GangTotalGz[4]);
			        case TEAM_AUTOSCHOOL:
			        {
			            pInfo[i][pPayCheck] += Fraction_Pay[TEAM_AUTOSCHOOL][pInfo[i][pRank]-1];
			            if(pInfo[i][pPayCheck] >= 8000) pInfo[i][pPayCheck] = 8000;
			        }
			        default: pInfo[i][pPayCheck] += Fraction_Pay[pInfo[i][pMember]][pInfo[i][pRank]-1];
			    }
	        }
			SendClientMessage(i, COLOR_WHITE, "---------------{EAD86A}[Банковский чек]{FFFFFF}---------------");
			if(pInfo[i][pAdmin])
			{
			    new AdminSalary = 1000*(pInfo[i][pAdmin]+1);
				GiveBankMoney(i, AdminSalary, "AdminSalary");
		    	format(string, sizeof(string), "- Зарплата администратора: {FF9900}%d$", AdminSalary);
				SendClientMessage(i, COLOR_WHITE, string);
			}
			format(string, sizeof(string), "- Зарплата: {FF9900}%d$", (pInfo[i][pPayCheck]>0)?(pInfo[i][pPayCheck]):(50));
			SendClientMessage(i, COLOR_WHITE, string);
			GiveBankMoney(i, (pInfo[i][pPayCheck]>0)?(pInfo[i][pPayCheck]):(50), "PayDay");
			format(string, sizeof(string), "- Текущий баланс счёта: {FF9900}%d$", pInfo[i][pBank]);
			SendClientMessage(i, COLOR_WHITE, string);
			SendClientMessage(i, COLOR_WHITE, "-----------------------------------------------------------");
			pInfo[i][pPayCheck] = 0;
			if(pInfo[i][pZakon] < 100)
			{
				pInfo[i][pZakon]++;
				MysqlUpdatePlayerInt(i, "zakon", pInfo[i][pZakon]);
			}
			if(pInfo[i][pWanted] > 0)
			{
				pInfo[i][pWanted]--;
				SetPlayerWantedLevel(i, pInfo[i][pWanted]);
				MysqlUpdatePlayerInt(i, "wanted", pInfo[i][pWanted]);
			}
			pInfo[i][pTime]++;
			amount_exp += (!doubling_exp)?(1):(2);
		    if(pInfo[i][pVip] && !(pInfo[i][pTime] % 4)) amount_exp++;
			pInfo[i][pExp] += amount_exp;
		    format(string, sizeof(string), "Вы получили %s, теперь у Вас %d из %d опыта", (amount_exp==1)?("1 очко опыта"):(amount_exp==2)?("2 очка опыта"):("3 очка опыта"), pInfo[i][pExp], (pInfo[i][pLevel]+1)*4);
		    SendClientMessage(i, COLOR_GREEN, string);
		    amount_exp=0;
		    if(pInfo[i][pExp] >= (pInfo[i][pLevel]+1)*4)
		    {
		        SendClientMessage(i, COLOR_BLUE, "Ваш игровой возраст повысился, вы перешли на следующий уровень!");
			    pInfo[i][pLevel]++;
			    pInfo[i][pAge]++;
			    pInfo[i][pExp] = 0;
			    SetPlayerScore(i, pInfo[i][pLevel]);
		    }
		    if(pInfo[i][pLevel] == 4 && pInfo[i][pExp] == 0)
		    {
		        if(!GetString(pInfo[i][pReferal], "None"))
		        {
		        	new targetid = GetPlayerID(pInfo[i][pReferal]);
					if(targetid != INVALID_PLAYER_ID)
					{
						TransferMoney(-1, targetid, 50000);
					    SendClientMessage(targetid, COLOR_YELLOW, "[Информация] {FFFFFF}Вы получили {63BD4E}50.000$ {FFFFFF}за приглашенного игрока");
					}
					else
					{
					    mysql_query_string[0] = EOS;
					  	format(mysql_query_string, sizeof(mysql_query_string), "SELECT * FROM "T_ACCOUNTS" WHERE name = '%s'", pInfo[i][pReferal]);
					  	mysql_tquery(dbHandle, mysql_query_string, "@OfflineSetReferalMoney", "i", i);
					}
		   		}
		    }
		}
  		else if(pInfo[i][pTimeHour] >= 600 && pInfo[i][pVip])
		{
		    if(!pInfo[i][pAdmin] && pInfo[i][pMember]>TEAM_NONE)
	        {
	            switch(pInfo[i][pMember])
			    {
			        case TEAM_GROVE: pInfo[i][pPayCheck] += (pInfo[i][pLeader])?(100*GangTotalGz[3]):(40*GangTotalGz[3]);
			        case TEAM_BALLAS: pInfo[i][pPayCheck] += (pInfo[i][pLeader])?(100*GangTotalGz[2]):(40*GangTotalGz[2]);
			        case TEAM_RIFA: pInfo[i][pPayCheck] += (pInfo[i][pLeader])?(100*GangTotalGz[0]):(40*GangTotalGz[0]);
			        case TEAM_AZTECAS: pInfo[i][pPayCheck] += (pInfo[i][pLeader])?(100*GangTotalGz[1]):(40*GangTotalGz[1]);
			        case TEAM_VAGOS: pInfo[i][pPayCheck] += (pInfo[i][pLeader])?(100*GangTotalGz[4]):(40*GangTotalGz[4]);
			        case TEAM_AUTOSCHOOL:
			        {
			            pInfo[i][pPayCheck] += Fraction_Pay[TEAM_AUTOSCHOOL][pInfo[i][pRank]-1];
			            if(pInfo[i][pPayCheck] >= 8000) pInfo[i][pPayCheck] = 8000;
			        }
			        default: pInfo[i][pPayCheck] += Fraction_Pay[pInfo[i][pMember]][pInfo[i][pRank]-1];
			    }
	        }
			SendClientMessage(i, COLOR_WHITE, "---------------{EAD86A}[Банковский чек]{FFFFFF}---------------");
			if(pInfo[i][pAdmin])
			{
			    new AdminSalary = 1000*(pInfo[i][pAdmin]+1);
				GiveBankMoney(i, AdminSalary, "AdminSalary");
		    	format(string, sizeof(string), "- Зарплата администратора: {FF9900}%d$", AdminSalary);
				SendClientMessage(i, COLOR_WHITE, string);
			}
			format(string, sizeof(string), "- Зарплата: {FF9900}%d$", (pInfo[i][pPayCheck]>0)?(pInfo[i][pPayCheck]):(50));
			SendClientMessage(i, COLOR_WHITE, string);
			GiveBankMoney(i, (pInfo[i][pPayCheck]>0)?(pInfo[i][pPayCheck]):(50), "PayDay");
			format(string, sizeof(string), "- Текущий баланс счёта: {FF9900}%d$", pInfo[i][pBank]);
			SendClientMessage(i, COLOR_WHITE, string);
			SendClientMessage(i, COLOR_WHITE, "-----------------------------------------------------------");
			pInfo[i][pPayCheck] = 0;
			if(pInfo[i][pZakon] < 100)
			{
				pInfo[i][pZakon]++;
				MysqlUpdatePlayerInt(i, "zakon", pInfo[i][pZakon]);
			}
			if(pInfo[i][pWanted] > 0)
			{
				pInfo[i][pWanted]--;
				SetPlayerWantedLevel(i, pInfo[i][pWanted]);
				MysqlUpdatePlayerInt(i, "wanted", pInfo[i][pWanted]);
			}
			pInfo[i][pTime]++;
			amount_exp += (!doubling_exp)?(1):(2);
		    if(pInfo[i][pVip] && !(pInfo[i][pTime] % 4)) amount_exp++;
			pInfo[i][pExp] += amount_exp;
		    format(string, sizeof(string), "Вы получили %s, теперь у Вас %d из %d опыта", (amount_exp==1)?("1 очко опыта"):(amount_exp==2)?("2 очка опыта"):("3 очка опыта"), pInfo[i][pExp], (pInfo[i][pLevel]+1)*4);
		    SendClientMessage(i, COLOR_GREEN, string);
		    amount_exp=0;
		    if(pInfo[i][pExp] >= (pInfo[i][pLevel]+1)*4)
		    {
		        SendClientMessage(i, COLOR_BLUE, "Ваш игровой возраст повысился, вы перешли на следующий уровень!");
			    pInfo[i][pLevel]++;
			    pInfo[i][pAge]++;
			    pInfo[i][pExp] = 0;
			    SetPlayerScore(i, pInfo[i][pLevel]);
		    }
		    if(pInfo[i][pLevel] == 4 && pInfo[i][pExp] == 0)
		    {
		        if(!GetString(pInfo[i][pReferal], "None"))
		        {
		        	new targetid = GetPlayerID(pInfo[i][pReferal]);
					if(targetid != INVALID_PLAYER_ID)
					{
						TransferMoney(-1, targetid, 70000);
					    SendClientMessage(targetid, COLOR_YELLOW, "[Информация] {FFFFFF}Вы получили {63BD4E}70.000$ {FFFFFF}за приглашенного Вами игрока.");
					}
					else
					{
					    mysql_query_string[0] = EOS;
					  	format(mysql_query_string, sizeof(mysql_query_string), "SELECT * FROM "T_ACCOUNTS" WHERE name = '%s'", pInfo[i][pReferal]);
					  	mysql_tquery(dbHandle, mysql_query_string, "@OfflineSetReferalMoney", "i", i);
					}
		   		}
		    }
		}
		else
		{
		    format(string, sizeof(string), "Вы не получили зарплату, потому что отыграли менее %i минут", ((pInfo[i][pVip])?(600):(1200))/60);
			SendClientMessage(i, COLOR_GREY, string);
		}
		pInfo[i][pTimeHour] = 0;
		if(pInfo[i][pFineAmount] > 0)
		{
		    pInfo[i][pFineTime]++;
		    MysqlUpdatePlayerInt(i, "finetime", pInfo[i][pFineTime]);
		    if(pInfo[i][pFineTime] < 10) SendClientMessage(i, COLOR_YELLOW, "[Полицейский участок] {FFFFFF}У Вас имеются неоплаченные штрафы. Советуем их оплатить, иначе будете объявлены в розыск");
		}
		if(pInfo[i][pFineTime] == 10)
		{
		    pInfo[i][pFineTime] = 0;
		    MysqlUpdatePlayerInt(i, "finetime", pInfo[i][pFineTime]);
		    pInfo[i][pWanted]++;
		    if(pInfo[i][pWanted] >= 6) pInfo[i][pWanted] = 6;
		    SetPlayerWantedLevel(i, pInfo[i][pWanted]);
		    SetPlayerCriminal(i, "Неизвестный", "Неуплата штрафов", 1);
		}
		pInfo[i][pRobHouse] = 0;
		SaveAccount(i);
		PlayerPlaySound(i,5203,0.0,0.0,0.0);
	}
	for(new houseid = 1; houseid <= TOTALHOUSE; houseid++)
	{
		if(HouseInfo[houseid][hRob]==true) HouseInfo[houseid][hRob] = false;
	}
	for(new bizid = 1; bizid <= TOTALBIZ; bizid++)
	{
	    if(!GetString(BizInfo[bizid][bOwner], "None"))
	    {
	    	BizPayLastHour[bizid] = BizPay[bizid];
			BizPay[bizid] = 0;
			if(BizInfo[bizid][bLock] == 1 && BizInfo[bizid][bLockTime] >= 24) ClearPlayerBiz(bizid, 1);
		    else
		    {
		       	new playerid = GetPlayerID(BizInfo[bizid][bOwner]);
		        if(BizInfo[bizid][bProduct] <= 0 || BizInfo[bizid][bLic] == 0)
				{
	   				if(IsPlayerConnected(playerid) && playerid != INVALID_PLAYER_ID)
					{
						if(BizInfo[bizid][bLockTime] == 0 && pInfo[playerid][pBiz] != 0)
						{
							SendClientMessage(playerid, COLOR_YELLOW, "[Квитанция] {FFFFFF}Ваш бизнес был закрыт по причине: отсутствие продуктов или отсутствие лицензии");
							SendClientMessage(playerid, COLOR_YELLOW, "[Квитанция] {FFFFFF}Если по истечению {FF9900}24 {FFFFFF}часов бизнес будет закрыт, он будет продан государству");
						}
						BizInfo[bizid][bLock] = 1;
						MysqlUpdateBizInt(bizid, "block", BizInfo[bizid][bLock]);
					}
				}
				if(BizInfo[bizid][bLock] == 1)
				{
					BizInfo[bizid][bLockTime]++;
					MysqlUpdateBizInt(bizid, "locktime", BizInfo[bizid][bLockTime]);
				}
				if(BizInfo[bizid][bLockTime] > 1 && BizInfo[bizid][bLockTime] < 24)
				{
					if(IsPlayerConnected(playerid) && playerid != INVALID_PLAYER_ID)
					{
						if(pInfo[playerid][pBiz] != 0)
						{
						    format(string, sizeof(string), "[Напоминание] {FFFFFF}Ваш бизнес закрыт уже {FF9900}%i {FFFFFF}час(а)", BizInfo[pInfo[playerid][pBiz]][bLockTime]);
							SendClientMessage(playerid, COLOR_YELLOW, string);
							SendClientMessage(playerid, COLOR_YELLOW, "[Напоминание] {FFFFFF}Если по истечению {FF9900}24 {FFFFFF}часов бизнес будет закрыт, он будет продан государству");
						}
					}
				}
				if((BizInfo[bizid][bLockTime] > 1 && BizInfo[bizid][bLockTime] < 24) && BizInfo[bizid][bLock] == 0)
				{
				    BizInfo[bizid][bLockTime] = 0;
				}
		    }
		}
	    if(BizInfo[bizid][bMafia])
	    {
			switch(BizInfo[bizid][bMafia])
			{
				case TEAM_LCN:
				{
					FracBank[6] += BizPay[bizid] / 10;
					MysqlUpdateMafiaInt("lcnbank", FracBank[6]);
				}
		    	case TEAM_YAKUZA:
				{
					FracBank[5] += BizPay[bizid] / 10;
					MysqlUpdateMafiaInt("yakuzabank", FracBank[5]);
				}
				case TEAM_RM:
				{
					FracBank[7] += BizPay[bizid] / 10;
					MysqlUpdateMafiaInt("rmbank", FracBank[7]);
				}
			}
		}
	}
	return 1;
}

stock LoadMenu()
{
    spectate_menu = CreateMenu("Spec", 1, 40.0, 220.0, 100.0);
    AddMenuItem(spectate_menu, 0, "UPDATE");
    AddMenuItem(spectate_menu, 0, "NEXT >>");
    AddMenuItem(spectate_menu, 0, "BACK <<");
    AddMenuItem(spectate_menu, 0, "SLAP");
    AddMenuItem(spectate_menu, 0, "GM");
    AddMenuItem(spectate_menu, 0, "STATS");
    AddMenuItem(spectate_menu, 0, "EXIT");

    clothing_selection = CreateMenu("Skin", 1, 50.0, 160.0, 90.0);
	AddMenuItem(clothing_selection, 0, "NEXT >>");
	AddMenuItem(clothing_selection, 0, "BACK <<");
	AddMenuItem(clothing_selection, 0, "SAVE");

	buy_clothing = CreateMenu("Skin", 1, 50.0, 160.0, 90.0);
	AddMenuItem(buy_clothing, 0, "NEXT >>");
	AddMenuItem(buy_clothing, 0, "BACK <<");
	AddMenuItem(buy_clothing, 0, "BUY");
	AddMenuItem(buy_clothing, 0, "EXIT");
}
/*
stock LoadActors()
{
    new my_actor;

	for(new i = 1; i <= 4; i++)
	{
		if(i <= 3)
		{
		    my_actor = CreateActor(141,-438.6040,1021.2339,1342.2050,221.5793); // meria actor 1
			SetActorInvulnerable(my_actor, true);
			SetActorVirtualWorld(my_actor, i);
			ApplyActorAnimation(my_actor, "PED", "SEAT_down", 4.1, 0, 0, 0, 1, 0);

			my_actor = CreateActor(187,-426.0562,1023.5117,1342.2050,157.3453); // meria actor 2
			SetActorInvulnerable(my_actor, true);
			SetActorVirtualWorld(my_actor, i);
			ApplyActorAnimation(my_actor, "PED", "SEAT_down", 4.1, 0, 0, 0, 1, 0);
		}
	    my_actor = CreateActor(172,1501.1750,-1559.6194,-1.9141,180.5325); // bank kassa 1
	    SetActorInvulnerable(my_actor, true);
		SetActorVirtualWorld(my_actor, i);

		my_actor = CreateActor(172,1503.1277,-1559.6134,-1.9141,180.2192); // bank kassa 2
	    SetActorInvulnerable(my_actor, true);
		SetActorVirtualWorld(my_actor, i);

		my_actor = CreateActor(172,1505.0802,-1559.6266,-1.9141,180.2192); // bank kassa 3
	    SetActorInvulnerable(my_actor, true);
	 	SetActorVirtualWorld(my_actor, i);

		my_actor = CreateActor(172,1507.0149,-1559.6052,-1.9141,180.2192); // bank kassa 4
	    SetActorInvulnerable(my_actor, true);
		SetActorVirtualWorld(my_actor, i);

		my_actor = CreateActor(172,1509.0206,-1559.6191,-1.9141,180.5325); // bank kassa 5
	    SetActorInvulnerable(my_actor, true);
		SetActorVirtualWorld(my_actor, i);
	}

 	my_actor = CreateActor(209,1767.4341,-1912.8400,13.5620,91.6344); // spawn ls hotdog 1
	SetActorInvulnerable(my_actor, true);
	SetActorVirtualWorld(my_actor, 0);

	my_actor = CreateActor(209,1767.5358,-1921.0365,13.5618,90.3811); // spawn ls hotdog 2
	SetActorInvulnerable(my_actor, true);
	SetActorVirtualWorld(my_actor, 0);

	my_actor = CreateActor(209,1767.6376,-1928.6736,13.5616,92.2611); // spawn ls hotdog 3
	SetActorInvulnerable(my_actor, true);
	SetActorVirtualWorld(my_actor, 0);

	my_actor = CreateActor(209,1164.1158,-1756.1876,13.6032,88.8841); // spawn ls 2 hotdog 1
	SetActorInvulnerable(my_actor, true);
	SetActorVirtualWorld(my_actor, 0);

	my_actor = CreateActor(209,1163.3295,-1753.4160,13.6033,87.6307); // spawn ls 2 hotdog 2
	SetActorInvulnerable(my_actor, true);
	SetActorVirtualWorld(my_actor, 0);

	my_actor = CreateActor(171,1173.5897,-1314.4216,1221.6130,89.1319); // autoschool
	SetActorInvulnerable(my_actor, true);
	SetActorVirtualWorld(my_actor, 1);
	ApplyActorAnimation(my_actor, "PED", "SEAT_down", 4.1, 0, 0, 0, 1, 0);

	my_actor = CreateActor(242,240.3937,1865.5059,551.3129,93.8560); // priton 1
	SetActorInvulnerable(my_actor, true);
	SetActorVirtualWorld(my_actor, 1);
	ApplyActorAnimation(my_actor, "DEALER", "DEALER_IDLE", 4.1, 1, 0, 0, 0, 0);

	my_actor = CreateActor(28,250.2584,1863.4298,551.3129,87.4443); // priton 2
	SetActorInvulnerable(my_actor, true);
	SetActorVirtualWorld(my_actor, 1);
	ApplyActorAnimation(my_actor, "PED", "SEAT_down", 4.1, 0, 0, 0, 1, 0);

	my_actor = CreateActor(300,1071.6968,569.1772,1017.4719,0.5100); // lspd
	SetActorInvulnerable(my_actor, true);
	SetActorVirtualWorld(my_actor, 1);

	my_actor = CreateActor(301,1071.6968,569.1772,1017.4719,0.5100); // sfpd
	SetActorInvulnerable(my_actor, true);
	SetActorVirtualWorld(my_actor, 2);

	my_actor = CreateActor(302,1071.6968,569.1772,1017.4719,0.5100); // lvpd
	SetActorInvulnerable(my_actor, true);
	SetActorVirtualWorld(my_actor, 3);
}
*/
public OnPlayerSelectedMenuRow(playerid, row)
{
    new Menu:Current = GetPlayerMenu(playerid);
    if(Current == Menu:INVALID_MENU) return SKick(playerid, 7436);
    if(Current == spectate_menu)
    {
        switch(row)
        {
            case 0:
            {
	            SetPlayerInterior(playerid,GetPlayerInterior(pInfo[playerid][Spectating][0]));
	            SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(pInfo[playerid][Spectating][0]));
	            TogglePlayerSpectating(playerid, 1);
	            if(IsPlayerInAnyVehicle(pInfo[playerid][Spectating][0])) PlayerSpectateVehicle(playerid, GetPVarInt(pInfo[playerid][Spectating][0],"VehicleEnters"));
				else PlayerSpectatePlayer(playerid, pInfo[playerid][Spectating][0]);
                ShowMenuForPlayer(spectate_menu, playerid);
            }
			case 1:
			{
				if(pInfo[playerid][Spectating][0] != INVALID_PLAYER_ID)
				{
//					if(MAX_PLAYERS == 1) return 1;
				    new specid = pInfo[playerid][Spectating][0]+1;
				    if(specid >= MAX_PLAYERS) specid = 0;
					if(!IsPlayerConnected(specid) || playerid == specid)
					{
						specid++;
						if(specid >= MAX_PLAYERS) specid = 0;
					}
					if(pInfo[specid][Spectating][0] != INVALID_PLAYER_ID)
					{
					    SendClientMessage(playerid, COLOR_GREY, "Этот администратор уже за кем-то следит, вы были перенаправлены на следующего игрока");
						specid++;
						if(specid >= MAX_PLAYERS) specid = 0;
					}
					if(pInfo[playerid][pAdmin] < ADM_DEPUTY_CHIEF && AdminInfo[specid][admSpectate])
					{
					    SendClientMessage(playerid, COLOR_GREY, "Следить за этим администратором запрещено, вы были перенаправлены на следующего игрока");
						specid++;
						if(specid >= MAX_PLAYERS) specid = 0;
					}
					pInfo[playerid][Spectating][0] = specid;
					SetPlayerInterior(playerid,GetPlayerInterior(pInfo[playerid][Spectating][0]));
					SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(pInfo[playerid][Spectating][0]));
					TogglePlayerSpectating(playerid, 1);
					if(IsPlayerInAnyVehicle(pInfo[playerid][Spectating][0])) PlayerSpectateVehicle(playerid, GetPVarInt(pInfo[playerid][Spectating][0],"VehicleEnters"));
					else PlayerSpectatePlayer(playerid, pInfo[playerid][Spectating][0]);
					ShowMenuForPlayer(spectate_menu, playerid);
					if(pInfo[specid][pAdmin] >= ADM_FOUNDER)
					{
						new string[50];
						format(string, sizeof(string), "За вами начал следить {33CCFF}%s", GetName(playerid));
						SendClientMessage(specid, COLOR_GREY, string);
					}
				}
			}
            case 2:
			{
				if(pInfo[playerid][Spectating][0] != INVALID_PLAYER_ID)
				{
//				    if(MAX_PLAYERS == 1) return 1;
				    new specid = pInfo[playerid][Spectating][0]-1;
				    if(specid == -1) specid = MAX_PLAYERS;
				    if(!IsPlayerConnected(specid) || playerid == specid)
					{
						specid--;
						if(specid == -1) specid = MAX_PLAYERS;
					}
					if(pInfo[specid][Spectating][0] != INVALID_PLAYER_ID)
					{
					    SendClientMessage(playerid, COLOR_GREY, "Этот администратор уже за кем-то следит, вы были перенаправлены на следующего игрока");
						specid--;
						if(specid == -1) specid = MAX_PLAYERS;
					}
				    if(pInfo[playerid][pAdmin] < ADM_DEPUTY_CHIEF && AdminInfo[specid][admSpectate])
					{
					    SendClientMessage(playerid, COLOR_GREY, "Следить за этим администратором запрещено, вы были перенаправлены на следующего игрока");
						specid --;
						if(specid == -1) specid = MAX_PLAYERS;
					}
					pInfo[playerid][Spectating][0] = specid;
					SetPlayerInterior(playerid, GetPlayerInterior(pInfo[playerid][Spectating][0]));
					SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(pInfo[playerid][Spectating][0]));
					TogglePlayerSpectating(playerid, 1);
					if(IsPlayerInAnyVehicle(pInfo[playerid][Spectating][0])) PlayerSpectateVehicle(playerid, GetPVarInt(pInfo[playerid][Spectating][0],"VehicleEnters"));
					else PlayerSpectatePlayer(playerid, pInfo[playerid][Spectating][0]);
					ShowMenuForPlayer(spectate_menu, playerid);
					if(pInfo[specid][pAdmin] >= ADM_FOUNDER)
					{
						new string[50];
						format(string, sizeof(string), "За вами начал следить {33CCFF}%s", GetName(playerid));
						SendClientMessage(specid, COLOR_GREY, string);
					}
				}
			}
            case 3:
            {
                new param_str[11];
                format(param_str, sizeof(param_str), "%i", pInfo[playerid][Spectating][0]);
                cmd_slap(playerid, param_str);
                ShowMenuForPlayer(spectate_menu, playerid);
            }
            case 4:
            {
                new param_str[11];
                format(param_str, sizeof(param_str), "%i", pInfo[playerid][Spectating][0]);
                cmd_gm(playerid, param_str);
                ShowMenuForPlayer(spectate_menu, playerid);
            }
            case 5:
			{
			    SetPVarInt(playerid, "checkstats", pInfo[playerid][Spectating][0]);
				ShowPlayerStatsDialog(playerid, pInfo[playerid][Spectating][0]);
				ShowMenuForPlayer(spectate_menu, playerid);
			}
            case 6: cmd_specoff(playerid);
		}
    }
	else if(Current == clothing_selection)
	{
    	if(ClothesRound[playerid] == 1)
		{
		    switch(row)
			{
			    case 0:
			    {
					if(pInfo[playerid][pSex] == 1)
					{
						if(SelectCharPlace[playerid] == sizeof(JoinRegM)-1) SelectCharPlace[playerid] = 0;
						else SelectCharPlace[playerid]++;
						SetPlayerSkin(playerid, JoinRegM[SelectCharPlace[playerid]]);
						ChosenSkin[playerid] = JoinRegM[SelectCharPlace[playerid]];
					}
					else
					{
						if(SelectCharPlace[playerid] == sizeof(JoinRegF)-1) SelectCharPlace[playerid] = 0;
						else SelectCharPlace[playerid]++;
						SetPlayerSkin(playerid, JoinRegF[SelectCharPlace[playerid]]);
						ChosenSkin[playerid] = JoinRegF[SelectCharPlace[playerid]];
					}
					ShowMenuForPlayer(clothing_selection, playerid);
				}
				case 1:
				{
					if(pInfo[playerid][pSex] == 1)
					{
					    if(SelectCharPlace[playerid] == 0) SelectCharPlace[playerid] = sizeof(JoinRegM)-1;
						else SelectCharPlace[playerid]--;
						SetPlayerSkin(playerid, JoinRegM[SelectCharPlace[playerid]]);
						ChosenSkin[playerid] = JoinRegM[SelectCharPlace[playerid]];
					}
					else
					{
					    if(SelectCharPlace[playerid] == 0) SelectCharPlace[playerid] = sizeof(JoinRegF)-1;
						else SelectCharPlace[playerid]--;
						SetPlayerSkin(playerid, JoinRegF[SelectCharPlace[playerid]]);
						ChosenSkin[playerid] = JoinRegF[SelectCharPlace[playerid]];
					}
					ShowMenuForPlayer(clothing_selection, playerid);
				}
				case 2:
				{
				    HideMenuForPlayer(clothing_selection, playerid);
					pInfo[playerid][pModel] = ChosenSkin[playerid];
     				ChosenSkin[playerid] = SelectCharPlace[playerid] = ClothesRound[playerid] = 0;
					TogglePlayerControllable(playerid, 1);
					PlayerRegistered[playerid] = true;
					for(new i = 0; i != 10; ++i) SendClientMessage(playerid, -1, " ");
					
					CreateAccount(playerid);
				}
			}
		}
	}
	if(Current == buy_clothing)
	{
		if(ClothesRound[playerid] == 2)
		{
			new string[170];
			switch(row)
			{
			    case 0:
			    {
					if(pInfo[playerid][pSex] == 1)
					{
		  			    if(SelectCharPlace[playerid] == sizeof(JoinShopM)-1) SelectCharPlace[playerid] = 0;
						else SelectCharPlace[playerid]++;
						SetPlayerSkin(playerid, JoinShopM[SelectCharPlace[playerid]][0]);
						format(string, sizeof(string), "~w~~n~~n~~n~~n~~n~~n~COST: ~g~%i$", JoinShopM[SelectCharPlace[playerid]][1]);
					}
					else
					{
						if(SelectCharPlace[playerid] == sizeof(JoinShopF)-1) SelectCharPlace[playerid] = 0;
						else SelectCharPlace[playerid]++;
						SetPlayerSkin(playerid, JoinShopF[SelectCharPlace[playerid]][0]);
						format(string, sizeof(string), "~w~~n~~n~~n~~n~~n~~n~COST: ~g~%i$", JoinShopF[SelectCharPlace[playerid]][1]);
					}
					GameTextForPlayer(playerid, string, 3000, 3);
					ShowMenuForPlayer(buy_clothing, playerid);
				}
				case 1:
				{
					if(pInfo[playerid][pSex] == 1)
					{
		   			    if(SelectCharPlace[playerid] == 0) SelectCharPlace[playerid] = sizeof(JoinShopM)-1;
						else SelectCharPlace[playerid]--;
						SetPlayerSkin(playerid, JoinShopM[SelectCharPlace[playerid]][0]);
						format(string, sizeof(string), "~w~~n~~n~~n~~n~~n~~n~COST: ~g~%i$", JoinShopM[SelectCharPlace[playerid]][1]);
					}
					else
					{
						if(SelectCharPlace[playerid] == 0) SelectCharPlace[playerid] = sizeof(JoinShopF)-1;
						else SelectCharPlace[playerid]--;
						SetPlayerSkin(playerid, JoinShopF[SelectCharPlace[playerid]][0]);
						format(string, sizeof(string), "~w~~n~~n~~n~~n~~n~~n~COST: ~g~%i$", JoinShopF[SelectCharPlace[playerid]][1]);
					}
					GameTextForPlayer(playerid, string, 3000, 3);
					ShowMenuForPlayer(buy_clothing, playerid);
				}
				case 2:
				{
				    new b = GetPVarInt(playerid, "UseBiz");
				    new price = (pInfo[playerid][pSex] == 1) ? (JoinShopM[SelectCharPlace[playerid]][1]) : (JoinShopF[SelectCharPlace[playerid]][1]);
					if(pInfo[playerid][pBank] < price)
					{
						SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Недостаточно средств на банковском счету!");
                        return ShowMenuForPlayer(buy_clothing, playerid);
					}
					pInfo[playerid][pModel] = (pInfo[playerid][pSex] == 1) ? (JoinShopM[SelectCharPlace[playerid]][0]) : (JoinShopF[SelectCharPlace[playerid]][0]);
					MysqlUpdatePlayerInt(playerid, "model", pInfo[playerid][pModel]);
					pInfo[playerid][pBank] -= price;
					GiveBizMoney(b, price / 4, price / 16);
					TogglePlayerControllable(playerid,true);
					SetPlayerPos(playerid, -1774.5422,1768.7830,2377.4409);
					SetPlayerFacingAngle(playerid, 79.0676);
					SetPlayerVirtualWorld(playerid, InShopSkin[playerid]);
					SetPlayerInterior(playerid, 5);
					InShopSkin[playerid] = 0;
					SelectCharPlace[playerid] = 0;
					ClothesRound[playerid] = 0;
					SetCameraBehindPlayer(playerid);
					SetPlayerSkin(playerid, pInfo[playerid][pModel]);
					if(pInfo[playerid][pHouse] != 0)
					{
					    new oneskin[14] = "{F04245}(нет)", twoskin[14] = "{F04245}(нет)", threeskin[14] = "{F04245}(нет)";
					    if(pInfo[playerid][pSkin][0]) format(oneskin, sizeof(oneskin), "{63BD4E}(%i)", pInfo[playerid][pSkin][0]);
					    if(pInfo[playerid][pSkin][1]) format(twoskin, sizeof(twoskin), "{63BD4E}(%i)", pInfo[playerid][pSkin][1]);
					    if(pInfo[playerid][pSkin][2]) format(threeskin, sizeof(threeskin), "{63BD4E}(%i)", pInfo[playerid][pSkin][2]);
					    stringer[0] = EOS;
						format(stringer, 200, "\
						{FFFFFF}Полка №1 %s\n\
						{FFFFFF}Полка №2 %s\n\
						{FFFFFF}Полка №3 %s\n\
						{FFFFFF}Оставить одежду на себе", oneskin, twoskin, threeskin);
						ShowPlayerDialog(playerid, 1431, DIALOG_STYLE_LIST, "{FFCC00}Куда положить одежду", stringer, "Выбрать", "");
					}
					HideMenuForPlayer(buy_clothing, playerid);
					SendMes(playerid, COLOR_BLUE, "Вы купили одежду в магазине. Остаток на счете: %i$", pInfo[playerid][pBank]);
				}
				case 3:
				{
					TogglePlayerControllable(playerid,true);
					SetPlayerPos(playerid, -1774.5422,1768.7830,2377.4409);
					SetPlayerFacingAngle(playerid, 79.0676);
					SetPlayerVirtualWorld(playerid, InShopSkin[playerid]);
					SetPlayerInterior(playerid, 5);
					InShopSkin[playerid] = 0;
					SelectCharPlace[playerid] = 0;
					ClothesRound[playerid] = 0;
					SetCameraBehindPlayer(playerid);
					if(pInfo[playerid][pMember]) SetPlayerSkin(playerid, pInfo[playerid][pMemberSkin]);
					else SetPlayerSkin(playerid, pInfo[playerid][pModel]);
					HideMenuForPlayer(buy_clothing, playerid);
				}
			}
		}
	}
    return 1;
}

stock SKick(playerid, reason)
{
    new string[128];
    format(string, sizeof(string), "%s[%d] был кикнут с причиной: %i", GetName(playerid), playerid, reason);
	WriteLog("ServerSkick",string);
	return Kick(playerid);
}

stock SetHunger(playerid, amount)
{
	if(amount > 100) pInfo[playerid][pHunger] = 100;
	else if(amount < 0) pInfo[playerid][pHunger] = 0;
	else pInfo[playerid][pHunger] = amount;
	if(pInfo[playerid][pSettings] & setHungerInfo) Hunger(playerid, 0);
	return 1;
}

stock GiveHunger(playerid, amount){
	SetHunger(playerid,pInfo[playerid][pHunger] + amount);
	if(pInfo[playerid][pHunger] + amount > 100) pInfo[playerid][pHunger] = 100;
	if(pInfo[playerid][pSettings] & setHungerInfo) Hunger(playerid, 0);
}

stock Hunger(playerid, type){
	if(!type) {
	    TextDrawShowForPlayer(playerid, hunger_background_TD[0]);
		TextDrawShowForPlayer(playerid, hunger_background_TD[1]);
		PlayerTextDrawTextSize(playerid, hunger_progress_TD[playerid], 549.599975 + pInfo[playerid][pHunger] / 100.0 * 53.5, 37.274993);
		PlayerTextDrawShow(playerid, hunger_progress_TD[playerid]);
	}
	else
	{
	    PlayerTextDrawHide(playerid, hunger_progress_TD[playerid]);
		TextDrawHideForPlayer(playerid, hunger_background_TD[0]);
		TextDrawHideForPlayer(playerid, hunger_background_TD[1]);
	}
}
stock HideSpeedometer(playerid) {
	for(new i = 0; i < 19; i++) TextDrawHideForPlayer(playerid, speed_TD[i]);
	for(new i = 0; i < 8; i++) PlayerTextDrawHide(playerid, speed_PTD[playerid][i]);
}
stock HideGear(playerid) {
	for(new i = 0; i < 1; i++) TextDrawHideForPlayer(playerid, mkpp_TD[i]);
	for(new i = 0; i < 7; i++) PlayerTextDrawHide(playerid, mkpp_PTD[playerid][i]);
}
stock ShowDialogGhetto(playerid)
{
	stringer[0] = EOS;
	format(stringer, 400, "{FFFFFF}ОПГ Южная\t\t\t| %s\nОПГ Тамбовская\t\t\t| %s\nЮжная братва\t\t\t| %s\nОПГ Солнцевская\t\t| %s\nОПГ Ореховская\t\t| %s",
	(b_Capture[0] ? ("{F04245}Запрет включен{FFFFFF}") : ("{63BD4E}Запрет выключен{FFFFFF}")),
	(b_Capture[1] ? ("{F04245}Запрет включен{FFFFFF}") : ("{63BD4E}Запрет выключен{FFFFFF}")),
	(b_Capture[2] ? ("{F04245}Запрет включен{FFFFFF}") : ("{63BD4E}Запрет выключен{FFFFFF}")),
	(b_Capture[3] ? ("{F04245}Запрет включен{FFFFFF}") : ("{63BD4E}Запрет выключен{FFFFFF}")),
	(b_Capture[4] ? ("{F04245}Запрет включен{FFFFFF}") : ("{63BD4E}Запрет выключен{FFFFFF}")));
	ShowPlayerDialog(playerid, 969, DIALOG_STYLE_LIST, "{FFCC00}Управление каптами", stringer, "Изменить", "Отмена");
	return 1;
}

@OnPlayerChangeName(playerid, nickname[]);
@OnPlayerChangeName(playerid, nickname[])
{
	#if MYSQL_R41_2 == true

	new rows;
	cache_get_row_count(rows);

	#else

	new rows, fields;
	cache_get_data(rows, fields);

	#endif

	if(rows)
	{
		SendClientMessage(playerid, COLOR_GREY, "Этот никнейм уже используется");
		return ShowPlayerDialog(playerid, dJob+4, 1, "{FFCC00}Смена нонРП ника", "{FFFFFF}Введите будущий ник\n\nВозможно сменить только если Ваш ник не соответствует RP правилам.\nВо всех остальных случаях смена осуществляется в /menu > Донат услуги", "Принять", "Назад");
	}
	new full = 0;
	foreach(new i : Player)
	{
		if(!gPlayerLogged[i]) continue;
		if(pInfo[i][pAdmin] > ADM_ADMIN) full++;
	}
	if(full == 0) return SendClientMessage(playerid, COLOR_GREY, "К сожалению, администрация в данный момент не может сменить Ваш ник. Попробуйте позже");
	set_name_ID[playerid] = playerid;
	strmid(player_name[playerid], nickname, 0, strlen(nickname));
	SendClientMessage(playerid, COLOR_YELLOW, "Вы успешно отправили заявку на смену игрового ника");
	new string[128], str[32];
	format(string, sizeof(string), "[Смена ника] %s[%i] желает сменить нонРП имя на %s", GetName(playerid), playerid, nickname);
	foreach(new i : Player)
	{
		if(!gPlayerLogged[i]) continue;
		if(pInfo[i][pAdmin] > ADM_ADMIN)
		{
		    format(str, sizeof(str), " [Потвердить /okay %i]", playerid);
		    strcat(string, str);
  		}
	}
	SendAdminMessage(COLOR_LIME, string);
	return 1;
}

@OnPlayerChangeDonateName(playerid, nickname[]);
@OnPlayerChangeDonateName(playerid, nickname[])
{
	#if MYSQL_R41_2 == true

	new rows;
	cache_get_row_count(rows);

	#else

	new rows, fields;
	cache_get_data(rows, fields);

	#endif

	if(rows)
	{
		SendClientMessage(playerid, COLOR_GREY, "Этот никнейм уже используется");
		return ShowPlayerDialog(playerid, dJob+32, 1, "{FFCC00}Смена ника", "{FFFFFF}Введите будущий ник", "Принять", "Назад");
	}
	new string[252];
	format(string, sizeof(string), "[За донат] %s сменил ник на %s", GetName(playerid), nickname);
	WriteLog("SetName", string);
	format(string, sizeof(string), "%s изменил имя на %s", GetName(playerid), nickname);
	SendClientMessageToAll(COLOR_ORANGE, string);
 	pInfo[playerid][pCredits] -= 20;
 	MysqlUpdatePlayerInt(playerid, "credits", pInfo[playerid][pCredits]);
	SetPlayerNameEx(playerid, nickname);
	SendClientMessage(playerid, COLOR_WHITE, "Вам необходимо указать новое имя в {3399FF}окне клиента SAMP");
	SendClientMessage(playerid, COLOR_WHITE, "Рекомендуем прямо сейчас свернуть игру {63BD4E}(Alt+Tab) {FFFFFF}и сделать это");
	format(string, sizeof(string), "{63BD4E}Заявка на изменение Вашего имени одобрена, новое имя установлено.\n\n{FFFFFF}В следующий раз при входе в игру используйте своё новое имя. Для\nэтого нужно изменить его в окне клиента SAMP. Рекомендуем прямо\nсейчас свернуть игру и сделать это.");
	ShowPlayerDialog(playerid, dNull, DIALOG_STYLE_MSGBOX, "{FFCC00}Имя изменено", string, "Ок", "");
	return 1;
}

@OnPlayerSetName(playerid, nickname[]);
@OnPlayerSetName(playerid, nickname[])
{
	#if MYSQL_R41_2 == true

	new rows;
	cache_get_row_count(rows);

	#else

	new rows, fields;
	cache_get_data(rows, fields);

	#endif

	new string[252];
    if(rows)
    {
        format(string, 65, "{FFFFFF}Введите будущий ник для игрока: %s", GetName(edit_stats_ID[playerid]));
		ShowPlayerDialog(playerid, dUcpAdmin2, DIALOG_STYLE_INPUT, "{FFCC00}Имя игрока", string, "Принять", "Отмена");
		return SendClientMessage(playerid, COLOR_GREY, "Этот никнейм уже используется");
    }
	format(string, sizeof(string), "Вы сменили имя игрока %s на %s", GetName(edit_stats_ID[playerid]), nickname);
	SendClientMessage(playerid, COLOR_LIME, string);
	format(string, sizeof(string), "[Админ] %s сменил ник игрока %s на %s", GetName(playerid), GetName(edit_stats_ID[playerid]), nickname);
	WriteLog("SetName", string);
	SetPlayerNameEx(edit_stats_ID[playerid], nickname);
	SendClientMessage(edit_stats_ID[playerid], COLOR_WHITE, "Вам необходимо указать новое имя в {3399FF}окне клиента SAMP");
	SendClientMessage(edit_stats_ID[playerid], COLOR_WHITE, "Рекомендуем прямо сейчас свернуть игру {63BD4E}(Alt+Tab) {FFFFFF}и сделать это");
	format(string, sizeof(string), "{63BD4E}Заявка на изменение Вашего имени одобрена, новое имя установлено.\n\n{FFFFFF}В следующий раз при входе в игру используйте своё новое имя. Для\nэтого нужно изменить его в окне клиента SAMP. Рекомендуем прямо\nсейчас свернуть игру и сделать это.");
	ShowPlayerDialog(edit_stats_ID[playerid], dNull, DIALOG_STYLE_MSGBOX, "{FFCC00}Имя изменено", string, "Ок", "");
	edit_stats_ID[playerid] = -1;
	return 1;
}

@OnPlayerSetPhoneNumber(playerid);
@OnPlayerSetPhoneNumber(playerid)
{
	#if MYSQL_R41_2 == true

	new rows;
	cache_get_row_count(rows);

	#else

	new rows, fields;
	cache_get_data(rows, fields);

	#endif

    if(rows)
	{
	    SendClientMessage(playerid, COLOR_GREY, "Такой номер уже используется");
		return ShowPlayerDialog(playerid, dBuySim, DIALOG_STYLE_INPUT, "{FFCC00}Покупка SIM-карты", "{FFFFFF}Введите новый шестизначный номер", "Купить", "Закрыть");
	}
	new i = GetPVarInt(playerid, "UseBiz");
    pInfo[playerid][pPhoneNumber] = GetPVarInt(playerid, "CheckNumber");
    TransferMoney(playerid, -1, gShopCosts[1]);
    if(BizInfo[i][bProduct] > 0)
    {
		BizInfo[i][bMoney] += gShopCosts[1];
		BizPay[i] += gShopCosts[1];
		BizInfo[i][bProduct] -= gShopProd[1];
		MysqlUpdateBizInt(i, "money", BizInfo[i][bMoney]);
		MysqlUpdateBizInt(i, "product", BizInfo[i][bProduct]);
	}
	new string[64];
	format(string, sizeof(string), "Вы купили SIM-карту. Ваш номер: {FFFFFF}%i", pInfo[playerid][pPhoneNumber]);
	SendClientMessage(playerid, COLOR_BLUE, string);
	MysqlUpdatePlayerInt(playerid, "phonenumber", pInfo[playerid][pPhoneNumber]);
	DeletePVar(playerid, "CheckNumber");
	MagazineList(playerid);
	return 1;
}

@OnPlayerSetPhoneNumberDonate(playerid);
@OnPlayerSetPhoneNumberDonate(playerid)
{
	#if MYSQL_R41_2 == true

	new rows;
	cache_get_row_count(rows);

	#else

	new rows, fields;
	cache_get_data(rows, fields);

	#endif

    if(rows)
	{
	    SendClientMessage(playerid, COLOR_GREY, "Такой номер уже используется");
		return ShowPlayerDialog(playerid, dBuySimDonate, DIALOG_STYLE_INPUT, "{FFCC00}Покупка SIM-карты", "{FFFFFF}Введите новый пятизначный номер", "Купить", "Назад");
	}
    pInfo[playerid][pPhoneNumber] = GetPVarInt(playerid, "CheckNumberDonate");
    pInfo[playerid][pCredits] -= 600;
    MysqlUpdatePlayerInt(playerid, "credits", pInfo[playerid][pCredits]);
	new string[64];
	format(string, sizeof(string), "Вы купили SIM-карту. Ваш номер: {FFFFFF}%i", pInfo[playerid][pPhoneNumber]);
	SendClientMessage(playerid, COLOR_LIME, string);
	MysqlUpdatePlayerInt(playerid, "phonenumber", pInfo[playerid][pPhoneNumber]);
	DeletePVar(playerid, "CheckNumberDonate");
	return 1;
}

@MysqlCheckPhoneNumber(playerid, telephone);
@MysqlCheckPhoneNumber(playerid, telephone)
{
	#if MYSQL_R41_2 == true

	new rows;
	cache_get_row_count(rows);

	#else

	new rows, fields;
	cache_get_data(rows, fields);

	#endif

	if(rows) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Произошла ошибка при покупке SIM-карты, попробуйте еще раз!");
	new num;
	foreach(new i : Player)
	{
 		if((pInfo[i][pPhoneNumber] == telephone) && (i != playerid))
		{
	 		SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Произошла ошибка при покупке SIM-карты, попробуйте еще раз!");
	 		num++;
	 		break;
		}
	}
	new string[128];
    if(num == 0)
	{
	    pInfo[playerid][pPhoneNumber] = telephone;
	    format(string, sizeof(string), "Вы купили мобильный телефон. Ваш номер: {FFFFFF}%i", telephone);
		SendClientMessage(playerid, COLOR_BLUE, string);
		MysqlUpdatePlayerInt(playerid, "phonenumber", pInfo[playerid][pPhoneNumber]);
		new price = gShopCosts[0];
		new i = GetPVarInt(playerid, "UseBiz");
	    TransferMoney(playerid, -1, price);
	    if(BizInfo[i][bProduct] > 0)
	    {
			BizInfo[i][bMoney] += price;
			BizPay[i] += price;
			BizInfo[i][bProduct] -= gShopProd[0];
		    MysqlUpdateBizInt(i, "money", BizInfo[i][bMoney]);
			MysqlUpdateBizInt(i, "product", BizInfo[i][bProduct]);
		}
	    MagazineList(playerid);
	}
	return 1;
}

@ListAllAdmins(playerid);
@ListAllAdmins(playerid)
{
    #if MYSQL_R41_2 == true

   	new rows;
   	cache_get_row_count(rows);
   	if(!rows) return ShowPlayerDialog(playerid, dAdminPanel+1, DIALOG_STYLE_MSGBOX, "{FFCC00}Список всех администраторов", "{FFFFFF}Ничего не найдено", "Назад", "Закрыть");
	new aname[MAX_PLAYER_NAME], alevel, alastcon[20], adata[20];
	stringer[0] = EOS;
	strcat(stringer, "{EAD86A}Ник\t{EAD86A}Уровень админа\t{EAD86A}Последний вход\t{EAD86A}Поставлен\n");
    for(new i; i < rows; i++)
    {
        cache_get_value_name(i, "name", aname, MAX_PLAYER_NAME);
		cache_get_value_name_int(i, "level", alevel);
		cache_get_value_name(i, "last_connect", alastcon, 20);
		cache_get_value_name(i, "data", adata, 20);
    	format(stringer, sizeof(stringer), "%s{FFFFFF}%s\t%d\t%s\t%s\n", stringer, aname, alevel, alastcon, adata);
	}
	ShowPlayerDialog(playerid, dAdminPanel+1, DIALOG_STYLE_LIST, "{FFCC00}Список всех администраторов", stringer, "Назад", "Закрыть");

	#else

	new rows, fields;
   	cache_get_data(rows, fields);
   	if(!rows) return ShowPlayerDialog(playerid, dAdminPanel+1, DIALOG_STYLE_MSGBOX, "{FFCC00}Список всех администраторов", "{FFFFFF}Ничего не найдено", "Назад", "Закрыть");
	new aname[MAX_PLAYER_NAME], alevel, alastcon[20], adata[20];
	stringer[0] = EOS;
	strcat(stringer, "{EAD86A}Ник\t{EAD86A}Уровень админа\t{EAD86A}Последний вход\t{EAD86A}Поставлен\n");
    for(new i; i < rows; i++)
    {
        cache_get_field_content(i, "name", aname, dbHandle, MAX_PLAYER_NAME);
		alevel = cache_get_field_content_int(i, "level");
		cache_get_field_content(i, "last_connect", alastcon, dbHandle, 20);
		cache_get_field_content(i, "data", adata, dbHandle, 20);
    	format(stringer, sizeof(stringer), "%s{FFFFFF}%s\t%d\t%s\t%s\n", stringer, aname, alevel, alastcon, adata);
	}
	ShowPlayerDialog(playerid, dAdminPanel+1, DIALOG_STYLE_LIST, "{FFCC00}Список всех администраторов", stringer, "Назад", "Закрыть");

    #endif

	return 1;
}

@ListAllLeaders(playerid);
@ListAllLeaders(playerid)
{
    #if MYSQL_R41_2 == true

   	new rows;
   	cache_get_row_count(rows);
	new pname[MAX_PLAYER_NAME], pleader, vhdata[20], padmin, full;
	stringer[0] = EOS;
	strcat(stringer, "{EAD86A}Ник\t\t{EAD86A}Организация\t\t{EAD86A}Последний вход\n");
    for(new i; i < rows; i++)
    {
        cache_get_value_index(i, 0, pname, MAX_PLAYER_NAME);
		cache_get_value_index_int(i, 1, pleader);
		cache_get_value_index(i, 2, vhdata, 20);
		cache_get_value_index(i, 3, padmin);
		if(padmin) continue;
    	format(stringer, sizeof(stringer), "%s{FFFFFF}%s\t\t%s\t\t%s\n", stringer, pname, Fraction_Name[pleader], vhdata);
    	full++;
	}
	if(!full) ShowPlayerDialog(playerid, dAdminPanel+19, DIALOG_STYLE_MSGBOX, "{FFCC00}Список всех лидеров", "{FFFFFF}Ничего не найдено", "Назад", "Закрыть");
	else ShowPlayerDialog(playerid, dAdminPanel+19, DIALOG_STYLE_LIST, "{FFCC00}Список всех лидеров", stringer, "Назад", "Закрыть");

	#else

	new rows, fields;
   	cache_get_data(rows, fields);
    new pname[MAX_PLAYER_NAME], pleader, vhdata[20], padmin, full;
	stringer[0] = EOS;
	strcat(stringer, "{EAD86A}Ник\t\t{EAD86A}Организация\t\t{EAD86A}Последний вход\n");
    for(new i; i < rows; i++)
    {
        cache_get_row(i, 0, pname, dbHandle, MAX_PLAYER_NAME);
		pleader = cache_get_row_int(i, 1);
		cache_get_row(i, 2, vhdata, dbHandle, 20);
		padmin = cache_get_row_int(i, 3);
		if(padmin) continue;
    	format(stringer, sizeof(stringer), "%s{FFFFFF}%s\t\t%s\t\t%s\n", stringer, pname, Fraction_Name[pleader], vhdata);
    	full++;
	}
	if(!full) ShowPlayerDialog(playerid, dAdminPanel+19, DIALOG_STYLE_MSGBOX, "{FFCC00}Список всех лидеров", "{FFFFFF}Ничего не найдено", "Назад", "Закрыть");
	else ShowPlayerDialog(playerid, dAdminPanel+19, DIALOG_STYLE_LIST, "{FFCC00}Список всех лидеров", stringer, "Назад", "Закрыть");

    #endif

	return 1;
}

@ListAllSetMark(playerid);
@ListAllSetMark(playerid)
{
    #if MYSQL_R41_2 == true

   	new rows;
   	cache_get_row_count(rows);
   	if(!rows) return ShowPlayerDialog(playerid, dAdminPanel+22, DIALOG_STYLE_MSGBOX, "{FFCC00}Список ютуберов", "{FFFFFF}Ничего не найдено", "Назад", "Закрыть");
	new pname[MAX_PLAYER_NAME];
	stringer[0] = EOS;
	for(new i; i < rows; i++)
	{
	    cache_get_value_index(i, 0, pname, MAX_PLAYER_NAME);
    	format(stringer, sizeof(stringer), "%s{FFFFFF}%s\n", stringer, pname);
	}
	ShowPlayerDialog(playerid, dAdminPanel+22, DIALOG_STYLE_LIST, "{FFCC00}Список ютуберов", stringer, "Назад", "Закрыть");

	#else

	new rows, fields;
   	cache_get_data(rows, fields);
   	if(!rows) return ShowPlayerDialog(playerid, dAdminPanel+22, DIALOG_STYLE_MSGBOX, "{FFCC00}Список ютуберов", "{FFFFFF}Ничего не найдено", "Назад", "Закрыть");
    new pname[MAX_PLAYER_NAME];
	stringer[0] = EOS;
	for(new i; i < rows; i++)
	{
	    cache_get_row(i, 0, pname, dbHandle, MAX_PLAYER_NAME);
    	format(stringer, sizeof(stringer), "%s{FFFFFF}%s\n", stringer, pname);
	}
	ShowPlayerDialog(playerid, dAdminPanel+22, DIALOG_STYLE_LIST, "{FFCC00}Список ютуберов", stringer, "Назад", "Закрыть");

	#endif

	return 1;
}

@unitpay_callback(playerid, type);
@unitpay_callback(playerid, type)
{
    #if MYSQL_R41_2 == true

	switch(type)
	{
		case 1:
		{
			new rows;
		    cache_get_row_count(rows);
			if(!rows) return SendClientMessage(playerid, COLOR_GREY, "На Ваш счёт не поступало пополнений. {EAD86A}Пополнить счёт можно на {FFFFFF}"PAGE_WEBSITE_DONATE"");
			new sum, status, did;
			cache_get_value_index_int(0, 0, did);
			cache_get_value_index_int(0, 3, sum);
			cache_get_value_index_int(0, 7, status);
		    if(status == 1)
		    {
		        pInfo[playerid][pCredits] += sum;
		        pInfo[playerid][pTotalCredits] += sum;
		        new string[128];
		        format(string, sizeof(string), "На Ваш счёт зачислено %i кредитов. Благодарим Вам за помощь серверу!", sum);
				SendClientMessage(playerid, COLOR_GREEN, string);
				format(string, sizeof(string), "%s /donate to %d", GetName(playerid), sum);
				WriteLog("GiveCredits", string);
				format(string, sizeof(string), "UPDATE "T_ACCOUNTS" SET credits = %d, totalcredits = %d WHERE id = %d", pInfo[playerid][pCredits], pInfo[playerid][pTotalCredits], pInfo[playerid][pID]);
				mysql_tquery(dbHandle, string, "", "");
				format(string, sizeof(string), "UPDATE "T_UNITPAY" SET status = 2 WHERE id = %d", did);
				mysql_tquery(dbHandle, string, "", "");
		    }
		}
		case 2:
		{
		    new rows;
		    cache_get_row_count(rows);
			if(!rows) return DonateShow(playerid);
			new sum, status, did;
			cache_get_value_index_int(0, 0, did);
			cache_get_value_index_int(0, 3, sum);
			cache_get_value_index_int(0, 7, status);
		    if(status == 1)
		    {
		        pInfo[playerid][pCredits] += sum;
		        pInfo[playerid][pTotalCredits] += sum;
		        new string[128];
	         	format(string, sizeof(string), "На Ваш счёт зачислено %i кредитов. Благодарим Вас за помощь серверу!", sum);
				SendClientMessage(playerid, COLOR_GREEN, string);
				format(string, sizeof(string), "%s /donate to %d", GetName(playerid), sum);
				WriteLog("GiveCredits", string);
				format(string, sizeof(string), "UPDATE "T_ACCOUNTS" SET credits = %d, totalcredits = %d WHERE id = %d", pInfo[playerid][pCredits], pInfo[playerid][pTotalCredits], pInfo[playerid][pID]);
				mysql_tquery(dbHandle, string, "", "");
				format(string, sizeof(string), "UPDATE "T_UNITPAY" SET status = 2 WHERE id = %d", did);
				mysql_tquery(dbHandle, string, "", "");
				DonateShow(playerid);
		    }
		}
		case 3:
		{
		    new rows;
		    cache_get_row_count(rows);
			if(!rows) return 1;
			new sum, status, did;
			cache_get_value_index_int(0, 0, did);
			cache_get_value_index_int(0, 3, sum);
			cache_get_value_index_int(0, 7, status);
		    if(status == 1)
		    {
		        pInfo[playerid][pCredits] += sum;
		        pInfo[playerid][pTotalCredits] += sum;
		        new string[128];
		        format(string, sizeof(string), "На Ваш счёт зачислено %i кредитов. Спасибо за помощь серверу!", sum);
				SendClientMessage(playerid, COLOR_GREEN, string);
				format(string, sizeof(string), "%s /donate to %d", GetName(playerid), sum);
				WriteLog("GiveCredits", string);
				format(string, sizeof(string), "UPDATE "T_ACCOUNTS" SET credits = %d, totalcredits = %d WHERE id = %d", pInfo[playerid][pCredits], pInfo[playerid][pTotalCredits], pInfo[playerid][pID]);
				mysql_tquery(dbHandle, string, "", "");
				format(string, sizeof(string), "UPDATE "T_UNITPAY" SET status = 2 WHERE id = %d", did);
				mysql_tquery(dbHandle, string, "", "");
		    }
		}
		case 4:
		{
		    new rows;
		    cache_get_row_count(rows);
		    if(!rows)
			{
			    stringer[0] = EOS;
		        format(stringer, sizeof(stringer), "\
		        	{63BD4E}Основная информация{FFFFFF}\n\n\
					{FFFFFF}Состояние счёта:\t\t%i кредитов\n\
					{FFFFFF}Общее пополнение:\t\t%i кредитов\n\n\
					{AFAFAF}История пополнений отсутствует\n\n\
					{EAD86A}Пополнить счёт можно на {FFFFFF}"PAGE_WEBSITE_DONATE"",
					pInfo[playerid][pCredits], pInfo[playerid][pTotalCredits]);
		        ShowPlayerDialog(playerid, dDonate+1, DIALOG_STYLE_MSGBOX, " ", stringer, "Принять", "Назад");
			    return 1;
			}
		    new sum, datetime[30], str[1000];
		    for(new i; i < rows; i++)
		    {
		    	cache_get_value_index_int(i, 3, sum);
		    	cache_get_value_index(i, 6, datetime, 30);
		    	format(str, sizeof(str), "%s%s - %i %s\n", str, datetime, sum, (sum==1)?("кредит"):(sum<5)?("кредита"):("кредитов"));
	    	}
		    stringer[0] = EOS;
	        format(stringer, sizeof(stringer), "\
	        	{63BD4E}Основная информация{FFFFFF}\n\n\
				{FFFFFF}Состояние счёта:\t\t%i кредитов\n\
				{FFFFFF}Общее пополнение:\t\t%i кредитов\n\n\
				{3399FF}20 последних пополнений{FFFFFF}\n\n\
				%s\n\
				{EAD86A}Пополнить счёт можно на {FFFFFF}"PAGE_WEBSITE_DONATE"",
				pInfo[playerid][pCredits], pInfo[playerid][pTotalCredits], str);
	        ShowPlayerDialog(playerid, dDonate+1, DIALOG_STYLE_MSGBOX, " ", stringer, "Принять", "Назад");
		}
		case 5:
		{
		    new rows;
		    cache_get_row_count(rows);
		    new name[MAX_PLAYER_NAME];
			GetPVarString(playerid,"check_name",name,MAX_PLAYER_NAME);
			DeletePVar(playerid,"check_name");
			if(!rows)
			{
			    stringer[0] = EOS;
		        format(stringer, sizeof(stringer), "\
		        	{63BD4E}Основная информация{FFFFFF}\n\n\
		        	{FFFFFF}Ник:\t\t\t\t%s\n\
					{FFFFFF}Состояние счёта:\t\t%i кредитов\n\
					{FFFFFF}Общее пополнение:\t\t%i кредитов\n\n\
					{AFAFAF}История пополнений отсутствует\n",
					name, GetPVarInt(playerid, "check_credits"), GetPVarInt(playerid, "check_tcredits"));
		        ShowPlayerDialog(playerid, dNull, DIALOG_STYLE_MSGBOX, " ", stringer, "Закрыть", "");
		        DeletePVar(playerid, "check_credits");
		        DeletePVar(playerid, "check_tcredits");
			    return 1;
			}
		    new sum, datetime[30], str[1000];
		    for(new i; i < rows; i++)
		    {
		    	cache_get_value_index_int(i, 3, sum);
		    	cache_get_value_index(i, 6, datetime, 30);
		    	format(str, sizeof(str), "%s%s - %i %s\n", str, datetime, sum, (sum==1)?("кредит"):(sum<5)?("кредита"):("кредитов"));
	    	}
		    stringer[0] = EOS;
	        format(stringer, sizeof(stringer), "\
	        	{63BD4E}Основная информация{FFFFFF}\n\n\
	        	{FFFFFF}Ник:\t\t\t\t%s\n\
				{FFFFFF}Состояние счёта:\t\t%i кредитов\n\
				{FFFFFF}Общее пополнение:\t\t%i кредитов\n\n\
				{3399FF}20 последних пополнений{FFFFFF}\n\n\
				%s",
				name, GetPVarInt(playerid, "check_credits"), GetPVarInt(playerid, "check_tcredits"), str);
	        ShowPlayerDialog(playerid, dNull, DIALOG_STYLE_MSGBOX, " ", stringer, "Закрыть", "");
	        DeletePVar(playerid, "check_credits");
	        DeletePVar(playerid, "check_tcredits");
		}
	}

	#else

	switch(type)
	{
		case 1:
		{
			new rows, fields;
		   	cache_get_data(rows, fields);
			if(!rows) return SendClientMessage(playerid, COLOR_GREY, "На Ваш счёт не поступало пополнений. {EAD86A}Пополнить счёт можно на {FFFFFF}"PAGE_WEBSITE_DONATE"");
			new sum, status, did;
			did = cache_get_row_int(0, 0);
			sum = cache_get_row_int(0, 3);
			status = cache_get_row_int(0, 7);
		    if(status == 1)
		    {
		        pInfo[playerid][pCredits] += sum;
		        pInfo[playerid][pTotalCredits] += sum;
		        new string[128];
		        format(string, sizeof(string), "На Ваш счёт зачислено %i кредитов. Спасибо за помощь серверу!", sum);
				SendClientMessage(playerid, COLOR_GREEN, string);
				format(string, sizeof(string), "%s /donate to %d", GetName(playerid), sum);
				WriteLog("GiveCredits", string);
				format(string, sizeof(string), "UPDATE "T_ACCOUNTS" SET credits = %d, totalcredits = %d WHERE id = %d", pInfo[playerid][pCredits], pInfo[playerid][pTotalCredits], pInfo[playerid][pID]);
				mysql_tquery(dbHandle, string, "", "");
				format(string, sizeof(string), "UPDATE "T_UNITPAY" SET status = 2 WHERE id = %d", did);
				mysql_tquery(dbHandle, string, "", "");
		    }
		}
		case 2:
		{
		    new rows, fields;
		   	cache_get_data(rows, fields);
			if(!rows) return DonateShow(playerid);
			new sum, status, did;
			did = cache_get_row_int(0, 0);
			sum = cache_get_row_int(0, 3);
			status = cache_get_row_int(0, 7);
		    if(status == 1)
		    {
		        pInfo[playerid][pCredits] += sum;
		        pInfo[playerid][pTotalCredits] += sum;
		        new string[128];
		        format(string, sizeof(string), "На Ваш счёт зачислено %i кредитов. Спасибо за помощь серверу!", sum);
				SendClientMessage(playerid, COLOR_GREEN, string);
				format(string, sizeof(string), "%s /donate to %d", GetName(playerid), sum);
				WriteLog("GiveCredits", string);
				format(string, sizeof(string), "UPDATE "T_ACCOUNTS" SET credits = %d, totalcredits = %d WHERE id = %d", pInfo[playerid][pCredits], pInfo[playerid][pTotalCredits], pInfo[playerid][pID]);
				mysql_tquery(dbHandle, string, "", "");
				format(string, sizeof(string), "UPDATE "T_UNITPAY" SET status = 2 WHERE id = %d", did);
				mysql_tquery(dbHandle, string, "", "");
				DonateShow(playerid);
		    }
		}
		case 3:
		{
		    new rows, fields;
		   	cache_get_data(rows, fields);
			if(!rows) return 1;
			new sum, status, did;
			did = cache_get_row_int(0, 0);
			sum = cache_get_row_int(0, 3);
			status = cache_get_row_int(0, 7);
		    if(status == 1)
		    {
		        pInfo[playerid][pCredits] += sum;
		        pInfo[playerid][pTotalCredits] += sum;
		        new string[128];
		        format(string, sizeof(string), "На Ваш счёт зачислено %i кредитов. Спасибо за помощь серверу!", sum);
				SendClientMessage(playerid, COLOR_GREEN, string);
				format(string, sizeof(string), "%s /donate to %d", GetName(playerid), sum);
				WriteLog("GiveCredits", string);
				format(string, sizeof(string), "UPDATE "T_ACCOUNTS" SET credits = %d, totalcredits = %d WHERE id = %d", pInfo[playerid][pCredits], pInfo[playerid][pTotalCredits], pInfo[playerid][pID]);
				mysql_tquery(dbHandle, string, "", "");
				format(string, sizeof(string), "UPDATE "T_UNITPAY" SET status = 2 WHERE id = %d", did);
				mysql_tquery(dbHandle, string, "", "");
		    }
		}
		case 4:
		{
		    new rows, fields;
		    cache_get_data(rows, fields);
		    if(!rows)
			{
			    stringer[0] = EOS;
		        format(stringer, sizeof(stringer), "\
		        	{63BD4E}Основная информация{FFFFFF}\n\n\
					{FFFFFF}Состояние счёта:\t\t%i кредитов\n\
					{FFFFFF}Общее пополнение:\t\t%i кредитов\n\n\
					{AFAFAF}История пополнений отсутствует\n\n\
					{EAD86A}Пополнить счёт можно на {FFFFFF}"PAGE_WEBSITE_DONATE"",
					pInfo[playerid][pCredits], pInfo[playerid][pTotalCredits]);
		        ShowPlayerDialog(playerid, dDonate+1, DIALOG_STYLE_MSGBOX, " ", stringer, "Принять", "Назад");
			    return 1;
			}
		    new sum, datetime[30], str[1000];
		    for(new i; i < rows; i++)
		    {
		    	sum = cache_get_row_int(i, 3);
		    	cache_get_row(i, 6, datetime, dbHandle, 30);
		    	format(str, sizeof(str), "%s%s - %i %s\n", str, datetime, sum, (sum==1)?("кредит"):(sum<5)?("кредита"):("кредитов"));
	    	}
		    stringer[0] = EOS;
	        format(stringer, sizeof(stringer), "\
	        	{63BD4E}Основная информация{FFFFFF}\n\n\
				{FFFFFF}Состояние счёта:\t\t%i кредитов\n\
				{FFFFFF}Общее пополнение:\t\t%i кредитов\n\n\
				{3399FF}20 последних пополнений{FFFFFF}\n\n\
				%s\n\
				{EAD86A}Пополнить счёт можно на {FFFFFF}"PAGE_WEBSITE_DONATE"",
				pInfo[playerid][pCredits], pInfo[playerid][pTotalCredits], str);
	        ShowPlayerDialog(playerid, dDonate+1, DIALOG_STYLE_MSGBOX, " ", stringer, "Принять", "Назад");
		}
		case 5:
		{
		    new rows, fields;
		    cache_get_data(rows, fields);
		    new name[MAX_PLAYER_NAME];
			GetPVarString(playerid,"check_name",name,MAX_PLAYER_NAME);
			DeletePVar(playerid,"check_name");
		    if(!rows)
			{
			    stringer[0] = EOS;
		        format(stringer, sizeof(stringer), "\
		        	{63BD4E}Основная информация{FFFFFF}\n\n\
		        	{FFFFFF}Ник:\t\t\t\t%s\n\
					{FFFFFF}Состояние счёта:\t\t%i кредитов\n\
					{FFFFFF}Общее пополнение:\t\t%i кредитов\n\n\
					{AFAFAF}История пополнений отсутствует\n",
					name, GetPVarInt(playerid, "check_credits"), GetPVarInt(playerid, "check_tcredits"));
		        ShowPlayerDialog(playerid, dNull, DIALOG_STYLE_MSGBOX, " ", stringer, "Закрыть", "");
		        DeletePVar(playerid, "check_credits");
	        	DeletePVar(playerid, "check_tcredits");
			    return 1;
			}
		    new sum, datetime[30], str[1000];
		    for(new i; i < rows; i++)
		    {
		    	sum = cache_get_row_int(i, 3);
		    	cache_get_row(i, 6, datetime, dbHandle, 30);
		    	format(str, sizeof(str), "%s%s - %i %s\n", str, datetime, sum, (sum==1)?("кредит"):(sum<5)?("кредита"):("кредитов"));
	    	}
		    stringer[0] = EOS;
	        format(stringer, sizeof(stringer), "\
	        	{63BD4E}Основная информация{FFFFFF}\n\n\
	        	{FFFFFF}Ник:\t\t\t\t%s\n\
				{FFFFFF}Состояние счёта:\t\t%i кредитов\n\
				{FFFFFF}Общее пополнение:\t\t%i кредитов\n\n\
				{3399FF}20 последних пополнений{FFFFFF}\n\n\
				%s",
				name, GetPVarInt(playerid, "check_credits"), GetPVarInt(playerid, "check_tcredits"), str);
	        ShowPlayerDialog(playerid, dNull, DIALOG_STYLE_MSGBOX, " ", stringer, "Закрыть", "");
	        DeletePVar(playerid, "check_credits");
	        DeletePVar(playerid, "check_tcredits");
		}
	}

	#endif

	return 1;
}

@megakassa_callback(playerid, type);
@megakassa_callback(playerid, type)
{
    #if MYSQL_R41_2 == true

	if(type==1)
	{
		new rows;
	    cache_get_row_count(rows);
		if(!rows) return SendClientMessage(playerid, COLOR_GREY, "На Ваш счёт не поступало пополнений. {EAD86A}Пополнить счёт можно на {FFFFFF}"PAGE_WEBSITE_DONATE"");
		new amount, status[32], name[MAX_PLAYER_NAME];
		cache_get_value_index_int(0, 0, amount);
		cache_get_value_index(0, 1, status, 32);
		cache_get_value_index(0, 2, name, MAX_PLAYER_NAME);
	    if(GetString(status, "pay"))
	    {
	        pInfo[playerid][pCredits] += amount;
	        pInfo[playerid][pTotalCredits] += amount;
	        new string[128];
	        format(string, sizeof(string), "На Ваш счёт зачислено %i кредитов. Спасибо за помощь серверу!", amount);
			SendClientMessage(playerid, COLOR_GREEN, string);
			format(string, sizeof(string), "%s /donate to %d", GetName(playerid), amount);
			WriteLog("GiveCredits", string);
			format(string, sizeof(string), "UPDATE "T_ACCOUNTS" SET credits = %d, totalcredits = %d WHERE id = %d", pInfo[playerid][pCredits], pInfo[playerid][pTotalCredits], pInfo[playerid][pID]);
			mysql_tquery(dbHandle, string, "", "");
			format(string, sizeof(string), "UPDATE "T_MEGAKASSA" SET status = 'credited' WHERE name = '%s'", name);
			mysql_tquery(dbHandle, string, "", "");
	    }
	}
	else if(type==2)
	{
	    new rows;
	    cache_get_row_count(rows);
		if(!rows) return DonateShow(playerid);
		new amount, status[32], name[MAX_PLAYER_NAME];
		cache_get_value_index_int(0, 0, amount);
		cache_get_value_index(0, 1, status, 32);
		cache_get_value_index(0, 2, name, MAX_PLAYER_NAME);
	    if(GetString(status, "pay"))
	    {
	        pInfo[playerid][pCredits] += amount;
	        pInfo[playerid][pTotalCredits] += amount;
	        new string[128];
	        format(string, sizeof(string), "На Ваш счёт зачислено %i кредитов. Спасибо за помощь серверу!", amount);
			SendClientMessage(playerid, COLOR_GREEN, string);
			format(string, sizeof(string), "%s /donate to %d", GetName(playerid), amount);
			WriteLog("GiveCredits", string);
			format(string, sizeof(string), "UPDATE "T_ACCOUNTS" SET credits = %d, totalcredits = %d WHERE id = %d", pInfo[playerid][pCredits], pInfo[playerid][pTotalCredits], pInfo[playerid][pID]);
			mysql_tquery(dbHandle, string, "", "");
			format(string, sizeof(string), "UPDATE "T_MEGAKASSA" SET status = 'credited' WHERE name = '%s'", name);
			mysql_tquery(dbHandle, string, "", "");
			DonateShow(playerid);
	    }
	}
	else
	{
	    new rows;
	    cache_get_row_count(rows);
		if(!rows) return 1;
		new amount, status[32], name[MAX_PLAYER_NAME];
		cache_get_value_index_int(0, 0, amount);
		cache_get_value_index(0, 1, status, 32);
		cache_get_value_index(0, 2, name, MAX_PLAYER_NAME);
	    if(GetString(status, "pay"))
	    {
	        pInfo[playerid][pCredits] += amount;
	        pInfo[playerid][pTotalCredits] += amount;
	        new string[128];
	        format(string, sizeof(string), "На Ваш счёт зачислено %i кредитов. Спасибо за помощь серверу!", amount);
			SendClientMessage(playerid, COLOR_GREEN, string);
			format(string, sizeof(string), "%s /donate to %d", GetName(playerid), amount);
			WriteLog("GiveCredits", string);
			format(string, sizeof(string), "UPDATE "T_ACCOUNTS" SET credits = %d, totalcredits = %d WHERE id = %d", pInfo[playerid][pCredits], pInfo[playerid][pTotalCredits], pInfo[playerid][pID]);
			mysql_tquery(dbHandle, string, "", "");
			format(string, sizeof(string), "UPDATE "T_MEGAKASSA" SET status = 'credited' WHERE name = '%s'", name);
			mysql_tquery(dbHandle, string, "", "");
	    }
	}

	#else

	if(type==1)
	{
		new rows, fields;
	   	cache_get_data(rows, fields);
		if(!rows) return SendClientMessage(playerid, COLOR_GREY, "На Ваш счёт не поступало пополнений. {EAD86A}Пополнить счёт можно на {FFFFFF}"PAGE_WEBSITE_DONATE"");
		new amount, status[32], name[MAX_PLAYER_NAME];
		amount = cache_get_row_int(0, 0);
		cache_get_row(0, 1, status, dbHandle, 32);
		cache_get_row(0, 2, name, dbHandle, MAX_PLAYER_NAME);
	    if(GetString(status, "pay"))
	    {
	        pInfo[playerid][pCredits] += amount;
	        pInfo[playerid][pTotalCredits] += amount;
	        new string[128];
	        format(string, sizeof(string), "На Ваш счёт зачислено %i кредитов. Спасибо за помощь серверу!", amount);
			SendClientMessage(playerid, COLOR_GREEN, string);
			format(string, sizeof(string), "%s /donate to %d", GetName(playerid), amount);
			WriteLog("GiveCredits", string);
			format(string, sizeof(string), "UPDATE "T_ACCOUNTS" SET credits = %d, totalcredits = %d WHERE id = %d", pInfo[playerid][pCredits], pInfo[playerid][pTotalCredits], pInfo[playerid][pID]);
			mysql_tquery(dbHandle, string, "", "");
			format(string, sizeof(string), "UPDATE "T_MEGAKASSA" SET status = 'credited' WHERE name = '%s'", name);
			mysql_tquery(dbHandle, string, "", "");
	    }
	}
	else if(type==2)
	{
	    new rows, fields;
	   	cache_get_data(rows, fields);
		if(!rows) return DonateShow(playerid);
		new amount, status[32], name[MAX_PLAYER_NAME];
		amount = cache_get_row_int(0, 0);
		cache_get_row(0, 1, status, dbHandle, 32);
		cache_get_row(0, 2, name, dbHandle, MAX_PLAYER_NAME);
	    if(GetString(status, "pay"))
	    {
	        pInfo[playerid][pCredits] += amount;
	        pInfo[playerid][pTotalCredits] += amount;
	        new string[128];
	        format(string, sizeof(string), "На Ваш счёт зачислено %i кредитов. Спасибо за помощь серверу!", amount);
			SendClientMessage(playerid, COLOR_GREEN, string);
			format(string, sizeof(string), "%s /donate to %d", GetName(playerid), amount);
			WriteLog("GiveCredits", string);
			format(string, sizeof(string), "UPDATE "T_ACCOUNTS" SET credits = %d, totalcredits = %d WHERE id = %d", pInfo[playerid][pCredits], pInfo[playerid][pTotalCredits], pInfo[playerid][pID]);
			mysql_tquery(dbHandle, string, "", "");
			format(string, sizeof(string), "UPDATE "T_MEGAKASSA" SET status = 'credited' WHERE name = '%s'", name);
			mysql_tquery(dbHandle, string, "", "");
			DonateShow(playerid);
	    }
	}
	else
	{
	    new rows, fields;
	   	cache_get_data(rows, fields);
		if(!rows) return 1;
		new amount, status[32], name[MAX_PLAYER_NAME];
		amount = cache_get_row_int(0, 0);
		cache_get_row(0, 1, status, dbHandle, 32);
		cache_get_row(0, 2, name, dbHandle, MAX_PLAYER_NAME);
	    if(GetString(status, "pay"))
	    {
	        pInfo[playerid][pCredits] += amount;
	        pInfo[playerid][pTotalCredits] += amount;
	        new string[128];
	        format(string, sizeof(string), "На Ваш счёт зачислено %i кредитов. Спасибо за помощь серверу!", amount);
			SendClientMessage(playerid, COLOR_GREEN, string);
			format(string, sizeof(string), "%s /donate to %d", GetName(playerid), amount);
			WriteLog("GiveCredits", string);
			format(string, sizeof(string), "UPDATE "T_ACCOUNTS" SET credits = %d, totalcredits = %d WHERE id = %d", pInfo[playerid][pCredits], pInfo[playerid][pTotalCredits], pInfo[playerid][pID]);
			mysql_tquery(dbHandle, string, "", "");
			format(string, sizeof(string), "UPDATE "T_MEGAKASSA" SET status = 'credited' WHERE name = '%s'", name);
			mysql_tquery(dbHandle, string, "", "");
	    }
	}

	#endif

	return 1;
}

stock DonateShow(playerid)
{
	stringer[0] = EOS;
	format(stringer, 1200, "\
		{3399FF}1. Информация\n\
		{3399FF}2. Проверить зачисления\n\
		3. Получение игровой валюты%s\n\
		4. VIP статус {FFCC00}(500 кредитов)\n\
		5. Снятие предупреждения {FFCC00}(70 кредитов)\n\
		6. Смена ника {FFCC00}(20 кредитов)\n\
		7. Приобрести все навыки владения оружием {FFCC00}(400 кредитов)\n\
		8. Приобрести все лицензии {FFCC00}(350 кредитов)\n\
		9. Приобрести все навыки стиля боя {FFCC00}(250 кредитов)\n\
		10. Анти-радар {FFCC00}(60 кредитов)\n\
		11. Военный билет {FFCC00}(120 кредитов)\n\
		12. 5-ти значный номер телефона {FFCC00}(600 кредитов)\n\
		13. +10 к законопослушности {FFCC00}(10 кредитов)\n\
		14. Смена пола {FFCC00}(100 кредитов)\n\
		15. Номер на автомобиль{FFCC00}(100 кредитов)", (!doubling_donate)?(""):(" {63BD4E}(АКЦИЯ X2)"));
	ShowPlayerDialog(playerid, dDonate, DIALOG_STYLE_LIST, "{FFCC00}Донат услуги", stringer, "Далее", "Назад");
	return 1;
}

@OnPlayerMail(playerid, inputtext[]);
@OnPlayerMail(playerid, inputtext[])
{
    #if MYSQL_R41_2 == true

	new rows;
	cache_get_row_count(rows);

	#else

	new rows, fields;
	cache_get_data(rows, fields);

	#endif

    if(rows)
	{
		SendClientMessage(playerid, COLOR_GREY, "Указанный Вами e-mail уже используется!");
		return ShowPlayerDialog(playerid, dJob+6, 1, "{FFCC00}Электронная почта", "{ffffff}Введите Ваш e-mail адрес, за которым будет закреплён данный аккаунт.\nЕсли вы потеряете доступ к аккаунту, то с помощью e-mail вы сможете восстановить его.", "Далее", "Отмена");
	}
    strmid(pInfo[playerid][pMail], inputtext, 0, strlen(inputtext), 64);
	ShowPlayerDialog(playerid, dReferal, DIALOG_STYLE_LIST, "{FFCC00}Откуда Вы узнали о сервере?", "1. На порталах/форумах\n2. От игрока этого сервера\n3. На мониторинге серверов\n4. Через YouTube\n5. В поисковике\n6. Вкладка hosted\n7. Сообщество ВКонтакте\n8. Другое", "Далее", "Отмена");
	return 1;
}

@OnPlayerConfirmedMail(playerid, inputtext[]);
@OnPlayerConfirmedMail(playerid, inputtext[])
{
    #if MYSQL_R41_2 == true

	new rows;
	cache_get_row_count(rows);

	#else

	new rows, fields;
	cache_get_data(rows, fields);

	#endif

	if(rows && !GetString(pInfo[playerid][pMail], inputtext))
	{
		SendClientMessage(playerid, COLOR_GREY, "Указанный Вами e-mail уже используется!");
		return ShowPlayerDialog(playerid, dMail, DIALOG_STYLE_INPUT, "{FFCC00}Подтверждение почты", "{ffffff}Введите Ваш e-mail адрес, на который Вам будет отправлен код подтверждения.\nЕсли вы потеряете доступ к аккаунту, то с помощью e-mail вы сможете восстановить его.", "Далее", "Закрыть");
	}
    new	code = RandomEx(10000,99999);
	stringer[0] = EOS;
	format(stringer, sizeof(stringer), "\
		Здравствуйте! Для привязки E-Mail к вашему игровому аккаунту, введите код подтверждения в диалоговое окно игры. \
		Код: %d. С уважением, система автоматического обслуживания игроков проекта Flux RolePlay \
	 		Внимание! Если Вы получили это письмо случайно, пожалуйста, удалите его.", code);
	SendMail(inputtext, "no-reply@Flux-rp.ru", "Flux RolePlay", "Flux RolePlay - Подтверждение почты", stringer);
	SetPVarInt(playerid, "authcode", code);
	SetPVarString(playerid, "authmail", inputtext);
	ShowPlayerDialog(playerid, dMail+1, DIALOG_STYLE_INPUT, "{FFCC00}Подтверждение почты", "{FFFFFF}Введите код подтверждения который пришёл Вам на почту:", "Принять", "Закрыть");
	return 1;
}

@OnPlayerReferal(playerid, inputtext[]);
@OnPlayerReferal(playerid, inputtext[])
{
	#if MYSQL_R41_2 == true

	new rows;
	cache_get_row_count(rows);

	#else

	new rows, fields;
	cache_get_data(rows, fields);

	#endif

	if(!rows)
	{
		ShowPlayerDialog(playerid, dReferal+1, 1, "{FFCC00}Реферальная система", "{ffffff}Если Вы пришли на сервер по приглашению игрока, укажите его ник в поле ниже.\nВ качестве вознаграждения он получит {63BD4E}50.000$ {FFFFFF}после того как Вы достигнете {EAD86A}4 уровня.\n\n{FFFFFF}Если Вы узнали о сервере не от игрока, либо нашли сервер сами,\nто вернитесь назад и укажите другой вариант.", "Указать", "Назад");
		return SendClientMessage(playerid, COLOR_GREY, "Игрок с таким ником не играет на этом сервере!");
	}
	strmid(pInfo[playerid][pReferal], inputtext, 0, strlen(inputtext), MAX_PLAYER_NAME);
 	ShowPlayerDialog(playerid, dSex, 0, "{FFCC00}Выбор пола", "{ffffff}Выберите пол Вашего персонажа", "Мужской", "Женский");
	return 1;
}

stock Float:GetAngleToPoint(Float:X, Float:Y, Float:A, Float:x, Float:y)
{
	new Float:angle = 185.0 - atan2(X-x, Y-y);
	A -= (angle - 5.0);
	return A;
}

@GetPlayerAngleToPoint(playerid, Float:x, Float:y);
@GetPlayerAngleToPoint(playerid, Float:x, Float:y)
{
	new Float:ix, Float:iy, Float:iz, Float:a;
	GetPlayerFacingAngle(playerid, a);
	GetPlayerPos(playerid, ix, iy, iz);
	return floatround(GetAngleToPoint(ix, iy, a, x, y));
}

stock Float:GetPlayerAngleToPlayer(playerid, facingtoid)
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(facingtoid, x, y, z);
	return float(@GetPlayerAngleToPoint(playerid, x, y));
}

stock GetPlayerFaceToPlayer(playerid, targetid, Float:facing)
{
	new Float:radius = GetPlayerAngleToPlayer(playerid, targetid);
	return (radius > -facing && radius < facing);
}

stock PlayerSettings(playerid)
{
    stringer[0] = EOS;
	for(new i; i < SETTINGS_COUNT; i++)
	{
		new flag[18] = "{F04245}Выключено";
		if(pInfo[playerid][pSettings] & (1 << i)) flag = "{63BD4E}Включено";
		format(stringer,512,"%s%d.{FFFFFF} %s| %s{FFFFFF}\n",stringer,i+1,SettingName[i],flag);
	}
	ShowPlayerDialog(playerid,dJob+1,2,"{FFCC00}Настройки",stringer,"Изменить","Назад");
	return 1;
}

stock PlayerSecurity(playerid)
{
    new string[350];
	format(string, sizeof(string), "Смена пароля\nПодтверждение почты\nГрафический пароль\t\t| %s\n{EAD86A}Настройки графического пароля", (!pInfo[playerid][pCheckCode]) ? ("{F04245}Отсутствует") : ("{63BD4E}Активирован"));
	ShowPlayerDialog(playerid, dJob+34, 2, "{FFCC00}Безопасность", string, "Выбрать", "Назад");
	return 1;
}

stock SetPlayerGPS(playerid, Float:findx, Float:findy, Float:findz, locname[])
{
	if(findx == 0.0) return SendClientMessage(playerid, COLOR_RED, "[Ошибка #1] Не удалось выполнить действие. Обратитесь к администрации");
 	new Float:posx, Float:posy, Float:posz;
    GetPlayerPos(playerid, posx, posy, posz);
    UseGPS[playerid] = true;
    DisablePlayerRaceCheckpoint(playerid);
	SetPlayerRaceCheckpoint(playerid, 1, findx, findy, findz, 0, 0, 0, 5.0);
	new string[128];
	format(string, sizeof(string), "Вы отметили на карте: {FFCC00}%s {C8C8C8}(расстояние: %.1f м)", locname, GetDistanceBetweenPoints(posx, posy, posz, findx, findy, findz));
	SendClientMessage(playerid, COLOR_WHITE, string);
	for(new i; i < 2; i++) TextDrawShowForPlayer(playerid, enable_gps_TD[i]);
	return 1;
}

stock MeAction(playerid, action[], Float:distance = 13.0)
{
	new string[128], world = GetPlayerVirtualWorld(playerid);
	format(string, sizeof(string), "%s %s", GetName(playerid), action);
	foreach(new i : Player)
	{
		if(!gPlayerLogged[i] || GetPlayerDistanceToPlayer(playerid,i) > distance || world != GetPlayerVirtualWorld(i)) continue;
		SendClientMessage(i, COLOR_PURPLE, string);
	}
	return 1;
}

stock DoAction(playerid, action[], Float:distance = 13.0)
{
	new string[128], world = GetPlayerVirtualWorld(playerid);
	format(string, sizeof(string), "%s | %s", action, GetName(playerid));
	foreach(new i : Player)
	{
		if(!gPlayerLogged[i] ||  GetPlayerDistanceToPlayer(playerid,i) > distance || world != GetPlayerVirtualWorld(i)) continue;
		SendClientMessage(i, COLOR_PURPLE, string);
	}
	return 1;
}

stock TryAction(playerid, action[], Float:distance = 13.0)
{
	new string[128], world = GetPlayerVirtualWorld(playerid);
	if(random(2) == 1) format(string, sizeof(string), "%s %s - {63BD4E}удачно", GetName(playerid), action);
	else format(string, sizeof(string), "%s %s - {FF6347}неудачно", GetName(playerid), action);
	foreach(new i : Player)
	{
		if(!gPlayerLogged[i] || GetPlayerDistanceToPlayer(playerid,i) > distance || world != GetPlayerVirtualWorld(i)) continue;
		SendClientMessage(i, COLOR_PURPLE, string);
	}
	return 1;
}

@OnPlayerOffmute(playerid, name[], time, reason[]);
@OnPlayerOffmute(playerid, name[], time, reason[])
{
    #if MYSQL_R41_2 == true

	new rows;
    cache_get_row_count(rows);
	if(rows)
    {
		new playermute, string[144], strlog[144], texts[25], text[5];

        cache_get_value_index_int(0, 0, playermute);
        if(playermute>0) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже имеет бан чата!");

        if(pInfo[playerid][pAdmin] < ADM_FOUNDER)
 		{
			format(strlog, sizeof(strlog), "[A] %s[%i] в оффлайне выдал бан чата %s на %i минут (%s)", GetName(playerid), playerid, name, time, reason);
			SendAdminMessage(COLOR_GRAD1, strlog);
			WriteLog("OffMute", strlog);
		}
		else
		{
		    format(string, sizeof(string), "Вы в оффлайне выдали бан чата %s на %i минут (%s)", name, time, reason);
	    	SendClientMessage(playerid, COLOR_YELLOW, string);
		    format(strlog, sizeof(strlog), "[A] %s[%i] в оффлайне выдал бан чата %s на %i минут (%s)", GetName(playerid), playerid, name, time, reason);
			WriteLog("OffMute", strlog);
		}

		sscanf(texts, "p<,>a<i>[5]", text);
	   	mysql_query_string[0] = EOS;
		format(mysql_query_string, sizeof(mysql_query_string), "UPDATE "T_ACCOUNTS" SET text = '%i, %i, %i, %i, 1', mute = %d, mutereason = '%s' WHERE name = '%s'", text[0], text[1], text[2], text[3], time*60, reason, name);
		mysql_tquery(dbHandle, mysql_query_string, "", "");
	}
	else SendClientMessage(playerid, COLOR_GREY, "Игрок не найден!");

	#else

	new rows, fields;
    cache_get_data(rows, fields);
	if(rows)
    {
		new playermute, string[144], strlog[144], texts[25], text[5];

        playermute = cache_get_row_int(0, 0);
        if(playermute>0) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже имеет бан чата!");

        if(pInfo[playerid][pAdmin] < ADM_FOUNDER)
 		{
			format(strlog, sizeof(strlog), "[A] %s[%i] в оффлайне выдал бан чата %s на %i минут (%s)", GetName(playerid), playerid, name, time, reason);
			SendAdminMessage(COLOR_GRAD1, strlog);
			WriteLog("OffMute", strlog);
		}
		else
		{
		    format(string, sizeof(string), "Вы в оффлайне выдали бан чата %s на %i минут (%s)", name, time, reason);
	    	SendClientMessage(playerid, COLOR_YELLOW, string);
		    format(strlog, sizeof(strlog), "[A] %s[%i] в оффлайне выдал бан чата %s на %i минут (%s)", GetName(playerid), playerid, name, time, reason);
			WriteLog("OffMute", strlog);
		}

		sscanf(texts, "p<,>a<i>[5]", text);
	   	mysql_query_string[0] = EOS;
		format(mysql_query_string, sizeof(mysql_query_string), "UPDATE "T_ACCOUNTS" SET text = '%i, %i, %i, %i, 1', mute = %d, mutereason = '%s' WHERE name = '%s'", text[0], text[1], text[2], text[3], time*60, reason, name);
		mysql_tquery(dbHandle, mysql_query_string, "", "");
	}
	else SendClientMessage(playerid, COLOR_GREY, "Игрок не найден!");

	#endif

	return 1;
}

@OnPlayerOffprison(playerid, name[], time, reason[]);
@OnPlayerOffprison(playerid, name[], time, reason[])
{
    #if MYSQL_R41_2 == true

	new rows;
    cache_get_row_count(rows);
	if(rows)
    {
        new playerjail, string[144], strlog[144], texts[25], text[5];

		cache_get_value_index_int(0, 0, playerjail);
		if(playerjail==4) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже находиться в деморгане!");

		if(pInfo[playerid][pAdmin] < ADM_FOUNDER)
 		{
			format(strlog, sizeof(strlog), "[A] %s[%i] в оффлайне посадил %s в деморган на %i минут (%s)", GetName(playerid), playerid, name, time, reason);
			SendAdminMessage(COLOR_GRAD1, strlog);
			WriteLog("OffPrison", strlog);
		}
		else
		{
		    format(string, sizeof(string), "Вы в оффлайне посадили %s в деморган на %i минут (%s)", name, time, reason);
	    	SendClientMessage(playerid, COLOR_YELLOW, string);
		    format(strlog, sizeof(strlog), "[A] %s[%i] в оффлайне посадил %s в деморган на %i минут (%s)", GetName(playerid), playerid, name, time, reason);
			WriteLog("OffPrison", strlog);
		}

		sscanf(texts, "p<,>a<i>[5]", text);
	   	mysql_query_string[0] = EOS;
		format(mysql_query_string, sizeof(mysql_query_string), "UPDATE "T_ACCOUNTS" SET text = '%i, %i, %i, 1, %i', jail = 4, jailtime = %d, jailreason = '%s' WHERE name = '%s'", text[0], text[1], text[2], text[4], time*60, reason, name);
		mysql_tquery(dbHandle, mysql_query_string, "", "");
	}
	else SendClientMessage(playerid, COLOR_GREY, "Игрок не найден!");

	#else

	new rows, fields;
    cache_get_data(rows, fields);
	if(rows)
    {
        new playerjail, string[144], strlog[144], texts[25], text[5];

		playerjail = cache_get_row_int(0, 0);
		if(playerjail==4) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже находиться в деморгане!");

		if(pInfo[playerid][pAdmin] < ADM_FOUNDER)
 		{
			format(strlog, sizeof(strlog), "[A] %s[%i] в оффлайне посадил %s в деморган на %i минут (%s)", GetName(playerid), playerid, name, time, reason);
			SendAdminMessage(COLOR_GRAD1, strlog);
			WriteLog("OffPrison", strlog);
		}
		else
		{
		    format(string, sizeof(string), "Вы в оффлайне посадили %s в деморган на %i минут (%s)", name, time, reason);
	    	SendClientMessage(playerid, COLOR_YELLOW, string);
		    format(strlog, sizeof(strlog), "[A] %s[%i] в оффлайне посадил %s в деморган на %i минут (%s)", GetName(playerid), playerid, name, time, reason);
			WriteLog("OffPrison", strlog);
		}

		sscanf(texts, "p<,>a<i>[5]", text);
	   	mysql_query_string[0] = EOS;
		format(mysql_query_string, sizeof(mysql_query_string), "UPDATE "T_ACCOUNTS" SET text = '%i, %i, %i, 1, %i', jail = 4, jailtime = %d, jailreason = '%s' WHERE name = '%s'", text[0], text[1], text[2], text[4], time*60, reason, name);
		mysql_tquery(dbHandle, mysql_query_string, "", "");
	}
	else SendClientMessage(playerid, COLOR_GREY, "Игрок не найден!");

	#endif

	return 1;
}

@OnPlayerOffban(playerid, name[], day, reason[]);
@OnPlayerOffban(playerid, name[], day, reason[])
{
    #if MYSQL_R41_2 == true

	new rows;
    cache_get_row_count(rows);
	if(rows)
    {
		new string[144];
		format(string, sizeof(string), "Администратор %s оффлайн забанил игрока %s на %d дней. Причина: %s", GetName(playerid), name, day, reason);
		SendClientMessageToAll(COLOR_RED, string);
		WriteLog("OffBan", string);
		new playerip[16];
		cache_get_value_index(0, 0, playerip);
		mysql_query_string[0] = EOS;
		format(mysql_query_string, sizeof(mysql_query_string), "INSERT INTO "T_BANS" (name,whobanned,ip,bandate,time,unbandate,reason) VALUES ('%s','%s','%s',CURDATE(),%d,CURDATE() + INTERVAL %i DAY,'%s')", name, GetName(playerid), playerip, day, day, reason);
		mysql_tquery(dbHandle, mysql_query_string, "", "");
		mysql_query_string[0] = EOS;
		format(mysql_query_string, sizeof(mysql_query_string), "UPDATE "T_ACCOUNTS" SET warn=0,member=0,memberskin=0,memberwarn=0,leader=0,templeader=0,rank=0,job=0,spawnchange=0 WHERE name='%s'", name);
		mysql_tquery(dbHandle, mysql_query_string, "", "");
		AdminInfo[playerid][admOffBaned]++;
		strmid(AdminInfo[playerid][admOffBanedReason], reason, 0, strlen(reason), 32);
		mysql_query_string[0] = EOS;
		format(mysql_query_string, 200, "UPDATE "T_ADMIN" SET offbaned=%i,offbaned_reason='%s' WHERE admid=%i LIMIT 1", AdminInfo[playerid][admOffBaned], AdminInfo[playerid][admOffBanedReason], AdminInfo[playerid][admID]);
		mysql_tquery(dbHandle, mysql_query_string, "", "");
	}
	else SendClientMessage(playerid, COLOR_GREY, "Игрок не найден!");

	#else

	new rows, fields;
    cache_get_data(rows, fields);
    if(rows)
    {
		new string[144];
		format(string, sizeof(string), "Администратор %s оффлайн забанил игрока %s на %d дней. Причина: %s", GetName(playerid), name, day, reason);
		SendClientMessageToAll(COLOR_RED, string);
		WriteLog("OffBan", string);
		new playerip[16];
		cache_get_row(0, 0, playerip, dbHandle);
		mysql_query_string[0] = EOS;
		format(mysql_query_string, sizeof(mysql_query_string), "INSERT INTO "T_BANS" (name,whobanned,ip,bandate,time,unbandate,reason) VALUES ('%s','%s','%s',CURDATE(),%d,CURDATE() + INTERVAL %i DAY,'%s')", name, GetName(playerid), playerip, day, day, reason);
		mysql_tquery(dbHandle, mysql_query_string, "", "");
		mysql_query_string[0] = EOS;
		format(mysql_query_string, sizeof(mysql_query_string), "UPDATE "T_ACCOUNTS" SET warn = 0, member = 0, memberskin = 0, memberwarn = 0, leader = 0, templeader = 0, rank = 0, job = 0, spawnchange = 0 WHERE name = '%s'", name);
		mysql_tquery(dbHandle, mysql_query_string, "", "");
		AdminInfo[playerid][admOffBaned]++;
		strmid(AdminInfo[playerid][admOffBanedReason], reason, 0, strlen(reason), 32);
		mysql_query_string[0] = EOS;
		format(mysql_query_string, 200, "UPDATE "T_ADMIN" SET offbaned = %i, offbaned_reason = '%s' WHERE admid = %i LIMIT 1", AdminInfo[playerid][admOffBaned], AdminInfo[playerid][admOffBanedReason], AdminInfo[playerid][admID]);
		mysql_tquery(dbHandle, mysql_query_string, "", "");
	}
	else SendClientMessage(playerid, COLOR_GREY, "Игрок не найден!");

	#endif

	return 1;
}

@OnPlayerOffwarn(playerid, name[], reason[]);
@OnPlayerOffwarn(playerid, name[], reason[])
{
    #if MYSQL_R41_2 == true

	new rows;
	cache_get_row_count(rows);
	if(rows)
	{
	    new string[144], warns;
	    cache_get_value_index_int(0, 0, warns);
		if((warns+1) < 3)
		{
			format(string, sizeof(string), "Администратор %s выдал оффлайн предупреждение игроку %s [%i/3]. Причина: %s", GetName(playerid), name, (warns+1), reason);
			mysql_query_string[0] = EOS;
			format(mysql_query_string, sizeof(mysql_query_string), "UPDATE "T_ACCOUNTS" SET warn = %d, timewarn = %d, member = 0, memberskin = 0, memberwarn = 0, leader = 0, templeader = 0, rank = 0, job = 0, spawnchange = 0 WHERE name = '%s'", (warns+1), gettime(), name);
			mysql_tquery(dbHandle, mysql_query_string, "", "");
		}
		else
		{
		    new playerip[16];
			cache_get_value_index(0, 1, playerip);
			format(string, sizeof(string), "Администратор %s выдал оффлайн предупреждение игроку %s [%i/3]. Причина: %s. Акк заблок. на 10 дней", GetName(playerid), name, (warns+1), reason);
			mysql_query_string[0] = EOS;
			format(mysql_query_string, sizeof(mysql_query_string), "INSERT INTO "T_BANS" (name,whobanned,ip,bandate,time,unbandate,reason) VALUES ('%s','%s','%s',CURDATE(),10,CURDATE() + INTERVAL 10 DAY,'%s')", name, GetName(playerid), playerip, reason);
			mysql_tquery(dbHandle, mysql_query_string, "", "");
			mysql_query_string[0] = EOS;
			format(mysql_query_string, sizeof(mysql_query_string), "UPDATE "T_ACCOUNTS" SET warn = 0, member = 0, memberskin = 0, memberwarn = 0, leader = 0, templeader = 0, rank = 0, job = 0, spawnchange = 0 WHERE name = '%s'", name);
			mysql_tquery(dbHandle, mysql_query_string, "", "");
		}
		SendClientMessageToAll(COLOR_RED, string);
	    WriteLog("WarnLog", string);
	    AdminInfo[playerid][admOffWarned]++;
		strmid(AdminInfo[playerid][admOffWarnedReason], reason, 0, strlen(reason), 32);
		mysql_query_string[0] = EOS;
		format(mysql_query_string, 200, "UPDATE "T_ADMIN" SET offwarned = %i, offwarned_reason = '%s' WHERE admid = %i LIMIT 1", AdminInfo[playerid][admOffWarned], AdminInfo[playerid][admOffWarnedReason], AdminInfo[playerid][admID]);
		mysql_tquery(dbHandle, mysql_query_string, "", "");
	}
	else SendClientMessage(playerid, COLOR_GREY, "Игрок не найден!");

	#else

	new rows, fields;
    cache_get_data(rows, fields);
    if(rows)
	{
	    new string[144], warns;
	    warns = cache_get_row_int(0, 0);
	    if((warns+1) < 3)
		{
			format(string, sizeof(string), "Администратор %s выдал оффлайн предупреждение игроку %s [%i/3]. Причина: %s", GetName(playerid), name, (warns+1), reason);
            mysql_query_string[0] = EOS;
			format(mysql_query_string, sizeof(mysql_query_string), "UPDATE "T_ACCOUNTS" SET warn = %d, timewarn = %d, member = 0, memberskin = 0, memberwarn = 0, leader = 0, templeader = 0, rank = 0, job = 0, spawnchange = 0 WHERE name = '%s'", (warns+1), gettime(), name);
			mysql_tquery(dbHandle, mysql_query_string, "", "");
		}
		else
		{
		    new playerip[16];
			cache_get_row(0, 1, playerip, dbHandle);
			format(string, sizeof(string), "Администратор %s выдал оффлайн предупреждение игроку %s [%i/3]. Причина: %s. Акк заблок. на 10 дней", GetName(playerid), name, (warns+1), reason);
            mysql_query_string[0] = EOS;
			format(mysql_query_string, sizeof(mysql_query_string), "INSERT INTO "T_BANS" (name,whobanned,ip,bandate,time,unbandate,reason) VALUES ('%s','%s','%s',CURDATE(),10,CURDATE() + INTERVAL 10 DAY,'%s')", name, GetName(playerid), playerip, reason);
			mysql_tquery(dbHandle, mysql_query_string, "", "");
			mysql_query_string[0] = EOS;
			format(mysql_query_string, sizeof(mysql_query_string), "UPDATE "T_ACCOUNTS" SET warn = 0, member = 0, memberskin = 0, memberwarn = 0, leader = 0, templeader = 0, rank = 0, job = 0, spawnchange = 0 WHERE name = '%s'", name);
			mysql_tquery(dbHandle, mysql_query_string, "", "");
		}
		SendClientMessageToAll(COLOR_RED, string);
	    WriteLog("WarnLog", string);
	    AdminInfo[playerid][admOffWarned]++;
		strmid(AdminInfo[playerid][admOffWarnedReason], reason, 0, strlen(reason), 32);
		mysql_query_string[0] = EOS;
		format(mysql_query_string, 200, "UPDATE "T_ADMIN" SET offwarned = %i, offwarned_reason = '%s' WHERE admid = %i LIMIT 1", AdminInfo[playerid][admOffWarned], AdminInfo[playerid][admOffWarnedReason], AdminInfo[playerid][admID]);
		mysql_tquery(dbHandle, mysql_query_string, "", "");
	}
	else SendClientMessage(playerid, COLOR_GREY, "Игрок не найден!");

	#endif

	return 1;
}

@OnPlayerOffunwarn(playerid, name[]);
@OnPlayerOffunwarn(playerid, name[])
{
    #if MYSQL_R41_2 == true

	new rows;
	cache_get_row_count(rows);
	if(rows)
	{
	    new string[144], warns;
	    cache_get_value_index_int(0, 0, warns);
		if(warns < 1) return SendClientMessage(playerid, COLOR_GREY, "У данного игрока нету предупреждений!");
        format(string, sizeof(string), "[A] %s[%d] снял 1 предупреждение оффлайн игроку %s", GetName(playerid), playerid, name);
		SendAdminMessage(COLOR_FADE1, string);
		mysql_query_string[0] = EOS;
		format(mysql_query_string, 150, "UPDATE "T_ACCOUNTS" SET warn = %d WHERE name = '%s'", warns-1, name);
		mysql_tquery(dbHandle, mysql_query_string, "", "");
	    WriteLog("WarnLog", string);
	}
	else SendClientMessage(playerid, COLOR_GREY, "Игрок не найден!");

	#else

	new rows, fields;
    cache_get_data(rows, fields);
    if(rows)
	{
	    new string[144], warns;
	    warns = cache_get_row_int(0, 0);
		if(warns < 1) return SendClientMessage(playerid, COLOR_GREY, "У данного игрока нету предупреждений!");
        format(string, sizeof(string), "[A] %s[%d] снял 1 предупреждение оффлайн игроку %s", GetName(playerid), playerid, name);
		SendAdminMessage(COLOR_FADE1, string);
		mysql_query_string[0] = EOS;
		format(mysql_query_string, 150, "UPDATE "T_ACCOUNTS" SET warn = %d WHERE name = '%s'", warns-1, name);
		mysql_tquery(dbHandle, mysql_query_string, "", "");
	    WriteLog("WarnLog", string);
	}
	else SendClientMessage(playerid, COLOR_GREY, "Игрок не найден!");

	#endif

	return 1;
}

@OnPlayerUnban(playerid, name[]);
@OnPlayerUnban(playerid, name[])
{
	#if MYSQL_R41_2 == true

	new rows;
	cache_get_row_count(rows);

	#else

	new rows, fields;
	cache_get_data(rows, fields);

	#endif

    if(!rows) return SendClientMessage(playerid, COLOR_GREY, "Данный игрок не забанен!");
    else
    {
        mysql_query_string[0] = EOS;
		format(mysql_query_string, sizeof(mysql_query_string), "DELETE FROM "T_BANS" WHERE name = '%s'", name);
	    mysql_tquery(dbHandle, mysql_query_string, "", "");
		new string[76];
		format(string, sizeof(string), "[A] %s[%d] разбанил игрока %s", GetName(playerid), playerid, name);
		SendAdminMessage(COLOR_FADE1, string);
	}
	return 1;
}

@OnPlayerDeleteAccount(playerid, name[]);
@OnPlayerDeleteAccount(playerid, name[])
{
    #if MYSQL_R41_2 == true

	new rows;
    cache_get_row_count(rows);
	if(rows)
    {
        new idacca, level;
        cache_get_value_index_int(0, 0, idacca);
        cache_get_value_index_int(0, 1, level);
        if(!GetPVarInt(playerid, "deleting_account"))
        {
            new string[80];
            SetPVarInt(playerid, "deleting_account", 1);
			format(string, sizeof(string), "Ник: %s, аккаунт №%i, уровень: %i. Удалить аккаунт?", name, idacca, level);
			SendClientMessage(playerid, COLOR_DARKORANGE, string);
			SendClientMessage(playerid, COLOR_YELLOW, "Чтобы ОТМЕНИТЬ удаление аккаунта, повторите /delacc без ника");
			SendClientMessage(playerid, COLOR_YELLOW, "Чтобы ПОТВЕРДИТЬ удаление аккаунта, повторите /delacc [ник игрока]");
		}
		else if(GetPVarInt(playerid, "deleting_account"))
		{
			for(new i = 1; i <= TOTALBIZ; i++) if(GetString(HouseInfo[i][hOwner], name)) ClearBiz(i);
			for(new i = 1; i <= TOTALHOUSE; i++) if(GetString(HouseInfo[i][hOwner], name)) ClearHouse(i);
		    new string[87];
	    	format(string, sizeof(string), "Аккаунт №%i удалён", idacca);
	    	SendClientMessage(playerid, COLOR_LIME, string);
	    	format(string, sizeof(string), "[Внимание] %s[%i] удалил аккаунт игрока %s", GetName(playerid), playerid, name);
	    	SendAdminMessageEx(COLOR_RED, string, ADM_CHIEF);
	    	WriteLog("DeleteAccount", string);
	    	if(GetPlayerID(name) != INVALID_PLAYER_ID)
	    	{
	    	    SendClientMessage(GetPlayerID(name), COLOR_RED, "Ваш аккаунт был удалён за нарушение правил сервера");
				Kick(GetPlayerID(name));
	    	}
	    	mysql_query_string[0] = EOS;
			format(mysql_query_string, 150, "DELETE FROM "T_ACCOUNTS" WHERE name = '%s'", name);
			mysql_tquery(dbHandle, mysql_query_string, "", "");
			//
		    mysql_query_string[0] = EOS;
			format(mysql_query_string, 150, "SELECT * FROM "T_BANK" WHERE Owner = '%s'", name);
			new Cache:result = mysql_query(dbHandle, mysql_query_string);
			new rows1 = cache_num_rows();
			if(rows1)
			{
			    mysql_query_string[0] = EOS;
			    format(mysql_query_string, 150, "DELETE FROM "T_BANK" WHERE Owner = '%s'", name);
				mysql_tquery(dbHandle, mysql_query_string, "", "");
			}
			cache_delete(result);
	    	//
			SetPVarInt(playerid, "deleting_account", 0);
		}
    }
    else
    {
        DeletePVar(playerid, "deleting_account");
    	SendClientMessage(playerid, COLOR_GREY, "Игрок не найден!");
    }

    #else

    new rows, fields;
    cache_get_data(rows, fields);
	if(rows)
    {
        new idacca, level;
        idacca = cache_get_row_int(0, 0);
        level = cache_get_row_int(0, 1);
        if(!GetPVarInt(playerid, "deleting_account"))
        {
            new string[80];
            SetPVarInt(playerid, "deleting_account", 1);
			format(string, sizeof(string), "Ник: %s, аккаунт №%i, уровень: %i. Удалить аккаунт?", name, idacca, level);
			SendClientMessage(playerid, COLOR_DARKORANGE, string);
			SendClientMessage(playerid, COLOR_YELLOW, "Чтобы ОТМЕНИТЬ удаление аккаунта, повторите /delacc без ника");
			SendClientMessage(playerid, COLOR_YELLOW, "Чтобы ПОТВЕРДИТЬ удаление аккаунта, повторите /delacc [ник игрока]");
		}
		else if(GetPVarInt(playerid, "deleting_account"))
		{
		    for(new i = 1; i <= TOTALBIZ; i++) if(GetString(HouseInfo[i][hOwner], name)) ClearBiz(i);
			for(new i = 1; i <= TOTALHOUSE; i++) if(GetString(HouseInfo[i][hOwner], name)) ClearHouse(i);
		    new string[87];
	    	format(string, sizeof(string), "Аккаунт №%i удалён", idacca);
	    	SendClientMessage(playerid, COLOR_LIME, string);
	    	format(string, sizeof(string), "[Внимание] %s[%i] удалил аккаунт игрока %s", GetName(playerid), playerid, name);
	    	SendAdminMessage(COLOR_RED, string);
	    	WriteLog("DeleteAccount", string);
	    	if(GetPlayerID(name) != INVALID_PLAYER_ID)
	    	{
	    	    SendClientMessage(GetPlayerID(name), COLOR_RED, "Ваш аккаунт был удалён за нарушение правил сервера");
				Kick(GetPlayerID(name));
	    	}
	        mysql_query_string[0] = EOS;
			format(mysql_query_string, 150, "DELETE FROM "T_ACCOUNTS" WHERE name = '%s'", name);
			mysql_tquery(dbHandle, mysql_query_string, "", "");
			//
	    	mysql_query_string[0] = EOS;
			format(mysql_query_string, 150, "SELECT * FROM "T_BANK" WHERE Owner = '%s'", name);
			new Cache:result = mysql_query(dbHandle, mysql_query_string);
			new rows2 = cache_get_row_count(dbHandle);
			if(rows2)
			{
		  		mysql_query_string[0] = EOS;
			    format(mysql_query_string, 150, "DELETE FROM "T_BANK" WHERE Owner = '%s'", name);
				mysql_tquery(dbHandle, mysql_query_string, "", "");
			}
	        cache_delete(result, dbHandle);
	        //
			SetPVarInt(playerid, "deleting_account", 0);
		}
    }
    else
    {
        DeletePVar(playerid, "deleting_account");
    	SendClientMessage(playerid, COLOR_GREY, "Игрок не найден!");
    }

    #endif

	return 1;
}

@OnPlayerOffget(playerid, name[]);
@OnPlayerOffget(playerid, name[])
{
    #if MYSQL_R41_2 == true

	new rows;
	cache_get_row_count(rows);
	if(!rows) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден!");
    new idacca, cash, bank, level, regip[16], lastip[16], datareg[20], vhdata[20],
	donate, referal[MAX_PLAYER_NAME], searchserv[32], country[64], city[64], country2[64], city2[64];
    cache_get_value_index_int(0, 0, idacca);
    cache_get_value_index_int(0, 1, cash);
    cache_get_value_index_int(0, 2, bank);
    cache_get_value_index_int(0, 3, level);
    cache_get_value_index(0, 4, regip, 16);
    cache_get_value_index(0, 5, lastip, 16);
    cache_get_value_index(0, 6, datareg, 20);
    cache_get_value_index_int(0, 7, donate);
    cache_get_value_index(0, 8, vhdata);
    cache_get_value_index(0, 9, referal);
    cache_get_value_index(0, 10, searchserv);
	stringer[0] = EOS;
	GetIPCountry(regip, country, sizeof(country));
	GetIPCity(regip, city, sizeof(city));
	GetIPCountry(lastip, country2, sizeof(country2));
	GetIPCity(lastip, city2, sizeof(city2));
	format(stringer, sizeof(stringer), "\
		{63BD4E}Основная информация{FFFFFF}\n\n\
		Ник:\t\t\t\t%s\n\
		Номер аккаунта:\t\t%i\n\
		Наличные:\t\t\t%i$\n\
		Банковский счёт:\t\t%i$\n\
		Уровень:\t\t\t%i\n\
		Донат:\t\t\t\t%i\n\
		Реферал:\t\t\t%s\n\
		Узнал о сервере:\t\t%s\n\n\
		IP адрес (регис.):\t\t%s\n\
		{AFAFAF}Страна, город:\t\t%s, %s{FFFFFF}\n\
		IP адрес (последн.):\t\t%s\n\
		{AFAFAF}Страна, город:\t\t%s, %s{FFFFFF}\n\n\
		Дата регистрации:\t\t%s\n\
		Дата последн. входа:\t\t%s",
		name, idacca, cash, bank, level, donate, referal, searchserv,
		regip, country, city, lastip, country2, city2, datareg, vhdata);
	ShowPlayerDialog(playerid, dNull, DIALOG_STYLE_MSGBOX, " ", stringer, "Закрыть", "");

	#else

	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден!");
    new idacca, cash, bank, level, regip[16], lastip[16], datareg[20], vhdata[20],
	donate, referal[MAX_PLAYER_NAME], searchserv[32], country[64], city[64], country2[64], city2[64];
    stringer[0] = EOS;
    idacca = cache_get_row_int(0, 0);
    cash = cache_get_row_int(0, 1);
    bank = cache_get_row_int(0, 2);
    level = cache_get_row_int(0, 3);
    cache_get_row(0, 4, regip, dbHandle, 16);
    cache_get_row(0, 5, lastip, dbHandle, 16);
    cache_get_row(0, 6, datareg, dbHandle, 20);
    donate = cache_get_row_int(0, 7);
    cache_get_row(0, 8, vhdata, dbHandle);
    cache_get_row(0, 9, referal, dbHandle);
    cache_get_row(0, 10, searchserv, dbHandle);
	stringer[0] = EOS;
	GetIPCountry(regip, country, sizeof(country));
	GetIPCity(regip, city, sizeof(city));
	GetIPCountry(lastip, country2, sizeof(country2));
	GetIPCity(lastip, city2, sizeof(city2));
	format(stringer, sizeof(stringer), "\
		{63BD4E}Основная информация{FFFFFF}\n\n\
		Ник:\t\t\t\t%s\n\
		Номер аккаунта:\t\t%i\n\
		Наличные:\t\t\t%i$\n\
		Банковский счёт:\t\t%i$\n\
		Уровень:\t\t\t%i\n\
		Донат:\t\t\t\t%i\n\
		Реферал:\t\t\t%s\n\
		Узнал о сервере:\t\t%s\n\n\
		IP адрес (регис.):\t\t%s\n\
		{AFAFAF}Страна, город:\t\t%s, %s{FFFFFF}\n\
		IP адрес (последн.):\t\t%s\n\
		{AFAFAF}Страна, город:\t\t%s, %s{FFFFFF}\n\n\
		Дата регистрации:\t\t%s\n\
		Дата последн. входа:\t\t%s",
		name, idacca, cash, bank, level, donate, referal, searchserv,
		regip, country, city, lastip, country2, city2, datareg, vhdata);
	ShowPlayerDialog(playerid, dNull, DIALOG_STYLE_MSGBOX, " ", stringer, "Закрыть", "");

	#endif

	return 1;
}

@OnCheckStatsAdmin(playerid, name[]);
@OnCheckStatsAdmin(playerid, name[])
{
    #if MYSQL_R41_2 == true

	new rows;
	cache_get_row_count(rows);
	if(!rows) return SendClientMessage(playerid, COLOR_GREY, "Администратор не найден!");

    new string[150], string2[250];
    stringer[0] = EOS;

    new check_online_monday, check_online_tuesday, check_online_wednesday,
		check_online_thursday, check_online_friday, check_online_saturday,
		check_online_sunday, check_online_allday,
		check_kicked, check_kicked_reason[32], check_skicked,
		check_warned, check_warned_reason[32], check_offwarned, check_offwarned_reason[32],
		check_baned, check_baned_reason[32], check_offbaned, check_offbaned_reason[32],
		check_muted, check_muted_reason[32],
		check_ansed;

	cache_get_value_name_int(0, "online_monday", check_online_monday);
	cache_get_value_name_int(0, "online_tuesday", check_online_tuesday);
	cache_get_value_name_int(0, "online_wednesday", check_online_wednesday);
	cache_get_value_name_int(0, "online_thursday", check_online_thursday);
	cache_get_value_name_int(0, "online_friday", check_online_friday);
	cache_get_value_name_int(0, "online_saturday", check_online_saturday);
	cache_get_value_name_int(0, "online_sunday", check_online_sunday);
	cache_get_value_name_int(0, "kicked", check_kicked);
	cache_get_value_name(0, "kicked_reason", check_kicked_reason, 32);
	cache_get_value_name_int(0, "skicked", check_skicked);
	cache_get_value_name_int(0, "warned", check_warned);
	cache_get_value_name(0, "warned_reason", check_warned_reason, 32);
	cache_get_value_name_int(0, "offwarned", check_offwarned);
	cache_get_value_name(0, "offwarned_reason", check_offwarned_reason, 32);
	cache_get_value_name_int(0, "baned", check_baned);
	cache_get_value_name(0, "baned_reason", check_baned_reason, 32);
	cache_get_value_name_int(0, "offbaned", check_offbaned);
	cache_get_value_name(0, "offbaned_reason", check_offbaned_reason, 32);
	cache_get_value_name_int(0, "muted", check_muted);
	cache_get_value_name(0, "muted_reason", check_muted_reason, 32);
	cache_get_value_name_int(0, "ansed", check_ansed);

    strcat(stringer, "{FF9900}Недельный онлайн\n\n");
    format(string, sizeof(string), "{FFFFFF}Понедельник:\t\t{3399FF}%s {FFFFFF}| Норма онлайна - %s\n", ConvertsCmdTime(check_online_monday), (check_online_monday/3600>=4)?("{63BD4E}Выполнена"):(check_online_monday/3600>=3)?("{FFCC00}Не выполнена"):("{F04245}Не выполнена"));
    strcat(stringer, string);
    format(string, sizeof(string), "{FFFFFF}Вторник\t\t{3399FF}%s {FFFFFF}| Норма онлайна - %s\n", ConvertsCmdTime(check_online_tuesday),  (check_online_tuesday/3600>=4)?("{63BD4E}Выполнена"):(check_online_tuesday/3600>=3)?("{FFCC00}Не выполнена"):("{F04245}Не выполнена"));
    strcat(stringer, string);
    format(string, sizeof(string), "{FFFFFF}Среда\t\t\t{3399FF}%s {FFFFFF}| Норма онлайна - %s\n", ConvertsCmdTime(check_online_wednesday),  (check_online_wednesday/3600>=4)?("{63BD4E}Выполнена"):(check_online_wednesday/3600>=3)?("{FFCC00}Не выполнена"):("{F04245}Не выполнена"));
    strcat(stringer, string);
    format(string, sizeof(string), "{FFFFFF}Четверг\t\t{3399FF}%s {FFFFFF}| Норма онлайна - %s\n", ConvertsCmdTime(check_online_thursday),  (check_online_thursday/3600>=4)?("{63BD4E}Выполнена"):(check_online_thursday/3600>=3)?("{FFCC00}Не выполнена"):("{F04245}Не выполнена"));
    strcat(stringer, string);
    format(string, sizeof(string), "{FFFFFF}Пятница\t\t{3399FF}%s {FFFFFF}| Норма онлайна - %s\n", ConvertsCmdTime(check_online_friday),  (check_online_friday/3600>=4)?("{63BD4E}Выполнена"):(check_online_friday/3600>=3)?("{FFCC00}Не выполнена"):("{F04245}Не выполнена"));
    strcat(stringer, string);
    format(string, sizeof(string), "{FFFFFF}Суббота\t\t{3399FF}%s {FFFFFF}| Норма онлайна - %s\n", ConvertsCmdTime(check_online_saturday),  (check_online_saturday/3600>=4)?("{63BD4E}Выполнена"):(check_online_saturday/3600>=3)?("{FFCC00}Не выполнена"):("{F04245}Не выполнена"));
    strcat(stringer, string);
    format(string, sizeof(string), "{FFFFFF}Воскресенье\t\t{3399FF}%s {FFFFFF}| Норма онлайна - %s\n", ConvertsCmdTime(check_online_sunday),  (check_online_sunday/3600>=4)?("{63BD4E}Выполнена"):(check_online_sunday/3600>=3)?("{FFCC00}Не выполнена"):("{F04245}Не выполнена"));
    strcat(stringer, string);

    check_online_allday = check_online_monday + check_online_tuesday + check_online_wednesday + check_online_thursday + check_online_friday + check_online_saturday + check_online_sunday;

    format(string, sizeof(string), "\n{AFAFAF}Общий онлайн:\t{DD90FF}%s {FFFFFF}| Норма онлайна - %s\n\n", ConvertsCmdTime(check_online_allday), (check_online_sunday/3600>=28)?("{63BD4E}Выполнена"):(check_online_sunday/3600>=21)?("{FFCC00}Не выполнена"):("{F04245}Не выполнена"));
    strcat(stringer, string);

    strcat(stringer, "{FF9900}Выдача наказаний\n\n");
    format(string2, sizeof(string2), "{FFFFFF}/kick\t\t\t{6666FF}%i {FFFFFF}| Последн. причина: {FFCC00}%s\n", check_kicked, check_kicked_reason);
    strcat(stringer, string2);
    format(string2, sizeof(string2), "{FFFFFF}/skick\t\t\t{6666FF}%i\n", check_skicked);
    strcat(stringer, string2);
    format(string2, sizeof(string2), "{FFFFFF}/warn\t\t\t{6666FF}%i {FFFFFF}| Последн. причина: {FFCC00}%s\n", check_warned, check_warned_reason);
    strcat(stringer, string2);
    format(string2, sizeof(string2), "{FFFFFF}/offwarn\t\t{6666FF}%i {FFFFFF}| Последн. причина: {FFCC00}%s\n", check_offwarned, check_offwarned_reason);
    strcat(stringer, string2);
    format(string2, sizeof(string2), "{FFFFFF}/ban\t\t\t{6666FF}%i {FFFFFF}| Последн. причина: {FFCC00}%s\n", check_baned, check_baned_reason);
    strcat(stringer, string2);
    format(string2, sizeof(string2), "{FFFFFF}/offban\t\t\t{6666FF}%i {FFFFFF}| Последн. причина: {FFCC00}%s\n", check_offbaned, check_offbaned_reason);
    strcat(stringer, string2);
    format(string2, sizeof(string2), "{FFFFFF}/mute\t\t\t{6666FF}%i {FFFFFF}| Последн. причина: {FFCC00}%s\n", check_muted, check_muted_reason);
    strcat(stringer, string2);
    format(string2, sizeof(string2), "{FFFFFF}/ans\t\t\t{6666FF}%i", check_ansed);
    strcat(stringer, string2);

    ShowPlayerDialog(playerid, dAdminPanel+5, DIALOG_STYLE_MSGBOX, name, stringer, "Назад", "Закрыть");

	#else

	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows) return SendClientMessage(playerid, COLOR_GREY, "Администратор не найден!");

    new string[150], string2[250];
    stringer[0] = EOS;

    new check_online_monday, check_online_tuesday, check_online_wednesday,
		check_online_thursday, check_online_friday, check_online_saturday,
		check_online_sunday, check_online_allday,
		check_kicked, check_kicked_reason[32], check_skicked,
		check_warned, check_warned_reason[32], check_offwarned, check_offwarned_reason[32],
		check_baned, check_baned_reason[32], check_offbaned, check_offbaned_reason[32],
		check_muted, check_muted_reason[32],
		check_ansed;

	check_online_monday = cache_get_field_content_int(0, "online_monday");
	check_online_tuesday = cache_get_field_content_int(0, "online_tuesday");
	check_online_wednesday = cache_get_field_content_int(0, "online_wednesday");
	check_online_thursday = cache_get_field_content_int(0, "online_thursday");
	check_online_friday = cache_get_field_content_int(0, "online_friday");
	check_online_saturday = cache_get_field_content_int(0, "online_saturday");
	check_online_sunday = cache_get_field_content_int(0, "online_sunday");
	check_kicked = cache_get_field_content_int(0, "kicked");
	cache_get_field_content(0, "kicked_reason", check_kicked_reason, dbHandle, 32);
	check_skicked = cache_get_field_content_int(0, "skicked");
	check_warned = cache_get_field_content_int(0, "warned");
	cache_get_field_content(0, "warned_reason", check_warned_reason, dbHandle, 32);
	check_offwarned = cache_get_field_content_int(0, "offwarned");
	cache_get_field_content(0, "offwarned_reason", check_offwarned_reason, dbHandle, 32);
	check_baned = cache_get_field_content_int(0, "baned");
	cache_get_field_content(0, "baned_reason", check_baned_reason, dbHandle, 32);
	check_offbaned = cache_get_field_content_int(0, "offbaned");
	cache_get_field_content(0, "offbaned_reason", check_offbaned_reason, dbHandle, 32);
	check_muted = cache_get_field_content_int(0, "muted");
	cache_get_field_content(0, "muted_reason", check_muted_reason, dbHandle, 32);
	check_ansed = cache_get_field_content_int(0, "ansed");

    strcat(stringer, "{FF9900}Недельный онлайн\n\n");
    format(string, sizeof(string), "{FFFFFF}Понедельник:\t\t{3399FF}%s {FFFFFF}| Норма онлайна - %s\n", ConvertsCmdTime(check_online_monday), (check_online_monday/3600>=4)?("{63BD4E}Выполнена"):(check_online_monday/3600>=3)?("{FFCC00}Не выполнена"):("{F04245}Не выполнена"));
    strcat(stringer, string);
    format(string, sizeof(string), "{FFFFFF}Вторник\t\t{3399FF}%s {FFFFFF}| Норма онлайна - %s\n", ConvertsCmdTime(check_online_tuesday),  (check_online_tuesday/3600>=4)?("{63BD4E}Выполнена"):(check_online_tuesday/3600>=3)?("{FFCC00}Не выполнена"):("{F04245}Не выполнена"));
    strcat(stringer, string);
    format(string, sizeof(string), "{FFFFFF}Среда\t\t\t{3399FF}%s {FFFFFF}| Норма онлайна - %s\n", ConvertsCmdTime(check_online_wednesday),  (check_online_wednesday/3600>=4)?("{63BD4E}Выполнена"):(check_online_wednesday/3600>=3)?("{FFCC00}Не выполнена"):("{F04245}Не выполнена"));
    strcat(stringer, string);
    format(string, sizeof(string), "{FFFFFF}Четверг\t\t{3399FF}%s {FFFFFF}| Норма онлайна - %s\n", ConvertsCmdTime(check_online_thursday),  (check_online_thursday/3600>=4)?("{63BD4E}Выполнена"):(check_online_thursday/3600>=3)?("{FFCC00}Не выполнена"):("{F04245}Не выполнена"));
    strcat(stringer, string);
    format(string, sizeof(string), "{FFFFFF}Пятница\t\t{3399FF}%s {FFFFFF}| Норма онлайна - %s\n", ConvertsCmdTime(check_online_friday),  (check_online_friday/3600>=4)?("{63BD4E}Выполнена"):(check_online_friday/3600>=3)?("{FFCC00}Не выполнена"):("{F04245}Не выполнена"));
    strcat(stringer, string);
    format(string, sizeof(string), "{FFFFFF}Суббота\t\t{3399FF}%s {FFFFFF}| Норма онлайна - %s\n", ConvertsCmdTime(check_online_saturday),  (check_online_saturday/3600>=4)?("{63BD4E}Выполнена"):(check_online_saturday/3600>=3)?("{FFCC00}Не выполнена"):("{F04245}Не выполнена"));
    strcat(stringer, string);
    format(string, sizeof(string), "{FFFFFF}Воскресенье\t\t{3399FF}%s {FFFFFF}| Норма онлайна - %s\n", ConvertsCmdTime(check_online_sunday),  (check_online_sunday/3600>=4)?("{63BD4E}Выполнена"):(check_online_sunday/3600>=3)?("{FFCC00}Не выполнена"):("{F04245}Не выполнена"));
    strcat(stringer, string);

    check_online_allday = check_online_monday + check_online_tuesday + check_online_wednesday + check_online_thursday + check_online_friday + check_online_saturday + check_online_sunday;

    format(string, sizeof(string), "\n{AFAFAF}Общий онлайн:\t{DD90FF}%s {FFFFFF}| Норма онлайна - %s\n\n", ConvertsCmdTime(check_online_allday), (check_online_sunday/3600>=28)?("{63BD4E}Выполнена"):(check_online_sunday/3600>=21)?("{FFCC00}Не выполнена"):("{F04245}Не выполнена"));
    strcat(stringer, string);

    strcat(stringer, "{FF9900}Выдача наказаний\n\n");
    format(string2, sizeof(string2), "{FFFFFF}/kick\t\t\t{6666FF}%i {FFFFFF}| Последн. причина: {FFCC00}%s\n", check_kicked, check_kicked_reason);
    strcat(stringer, string2);
    format(string2, sizeof(string2), "{FFFFFF}/skick\t\t\t{6666FF}%i\n", check_skicked);
    strcat(stringer, string2);
    format(string2, sizeof(string2), "{FFFFFF}/warn\t\t\t{6666FF}%i {FFFFFF}| Последн. причина: {FFCC00}%s\n", check_warned, check_warned_reason);
    strcat(stringer, string2);
    format(string2, sizeof(string2), "{FFFFFF}/offwarn\t\t{6666FF}%i {FFFFFF}| Последн. причина: {FFCC00}%s\n", check_offwarned, check_offwarned_reason);
    strcat(stringer, string2);
    format(string2, sizeof(string2), "{FFFFFF}/ban\t\t\t{6666FF}%i {FFFFFF}| Последн. причина: {FFCC00}%s\n", check_baned, check_baned_reason);
    strcat(stringer, string2);
    format(string2, sizeof(string2), "{FFFFFF}/offban\t\t\t{6666FF}%i {FFFFFF}| Последн. причина: {FFCC00}%s\n", check_offbaned, check_offbaned_reason);
    strcat(stringer, string2);
    format(string2, sizeof(string2), "{FFFFFF}/mute\t\t\t{6666FF}%i {FFFFFF}| Последн. причина: {FFCC00}%s\n", check_muted, check_muted_reason);
    strcat(stringer, string2);
    format(string2, sizeof(string2), "{FFFFFF}/ans\t\t\t{6666FF}%i", check_ansed);
    strcat(stringer, string2);

    ShowPlayerDialog(playerid, dAdminPanel+5, DIALOG_STYLE_MSGBOX, name, stringer, "Назад", "Закрыть");

	#endif

	return 1;
}

stock SetString(param_1[], param_2[], size = 300)
{
    return strmid(param_1, param_2, 0, strlen(param_2), size);
}

stock GetString(param1[], param2[])
{
	return !strcmp(param1, param2, false);
}

@GmTest(playerid, targetid, Float:oldhealth);
@GmTest(playerid, targetid, Float:oldhealth)
{
    new Float: newhealth;
	GetPlayerHealth(targetid, newhealth);
	new mes[256], string[60];
	if(oldhealth == newhealth) string = "{F04245}Возможно игрок использует God Mode(GM)";
	if(oldhealth != newhealth) string = "{05E900}Вероятно игрок чист, показатель его HP уменьшился";
    format(mes, sizeof(mes), "{FFFFFF}Было: {FF9900}%.0f.0 (HP)\n{FFFFFF}Стало: {FF9900}%.0f.0 (HP)\n{FFFFFF}Уменьшилось на: {FF9900}%.0f.0 (HP)\n\n%s", oldhealth, newhealth, oldhealth-newhealth, string);
    ShowPlayerDialog(playerid, dNull, DIALOG_STYLE_MSGBOX, GetName(targetid), mes, "Закрыть", "");
	SetHealth(targetid, oldhealth);
	gCheckGodMode[playerid] = false;
	return 1;
}

@StealMats(playerid);
@StealMats(playerid)
{
	if(GetPVarInt(playerid, "AFK_Time") > 1) return 0;
	new guns = random(5)+1;
	new ammo = random(5)+1;
	if(!pInfo[playerid][pImprove][2])
	{
	    if(pInfo[playerid][pGunAmount]+guns > 500) guns = 500-pInfo[playerid][pGunAmount];
	    if(pInfo[playerid][pPatron]+ammo > 500) ammo = 500-pInfo[playerid][pPatron];
	    if(500 < ammo+pInfo[playerid][pPatron]) return 0;
	    if(500 < guns+pInfo[playerid][pGunAmount]) return 0;
	}
	else if(pInfo[playerid][pImprove][2])
	{
	    if(pInfo[playerid][pGunAmount]+guns > 1000) guns = 1000-pInfo[playerid][pGunAmount];
		if(pInfo[playerid][pPatron]+ammo > 1000) ammo = 1000-pInfo[playerid][pPatron];
		if(1000 < ammo+pInfo[playerid][pPatron]) return 0;
		if(1000 < guns+pInfo[playerid][pGunAmount]) return 0;
	}
	if(gArmyWarehouse[0] < guns || gArmyWarehouse[1] < ammo) return 0;
	gArmyWarehouse[0] -= guns;
	gArmyWarehouse[1] -= ammo;
	new string[35];
	format(string, sizeof(string), "~y~ED.ORUZH: +%d~n~~b~PATRONS: +%d", guns, ammo);
	GameTextForPlayer(playerid, string, 1500, 6);
	pInfo[playerid][pGunAmount] += guns;
	pInfo[playerid][pPatron] += ammo;
	return 1;
}

stock UpdTerrsBand()
{
    for(new i; i < 5; i++) GangTotalGz[i] = 0;

 	for(new idx = 0; idx < sizeof(GZInfo); idx++)
	{
		switch(GZInfo[idx][gFrak])
		{
			case TEAM_GROVE: GangTotalGz[3]++;
		    case TEAM_BALLAS: GangTotalGz[2]++;
		    case TEAM_RIFA: GangTotalGz[0]++;
		    case TEAM_AZTECAS: GangTotalGz[1]++;
		    case TEAM_VAGOS: GangTotalGz[4]++;
		}
  	}

  	stringer[0] = EOS;

	format(stringer,500,"ОПГ Южная\n\n{FFFFFF}Патроны: {63BD4E}%d\n{FFFFFF}Ед. оружия: {63BD4E}%d\n{FFFFFF}Наркотики: {63BD4E}%d\n{FFFFFF}Деньги: {63BD4E}%d\n{FFFFFF}Кол-во контролируемых территорий: {63BD4E}%i\n\n{FFFFFF}Склад: %s",GangPatr[0],GangEd[0],DrugsBank[TEAM_GROVE],FracBank[0],GangTotalGz[3],b_Sklad[0]?("{F04245}Закрыт"):("{63BD4E}Открыт"));
    UpdateDynamic3DTextLabelText(Gang3d[0],0x009900FF,stringer);

	format(stringer,500,"ОПГ Тамбовская\n\n{FFFFFF}Патроны: {63BD4E}%d\n{FFFFFF}Ед. оружия: {63BD4E}%d\n{FFFFFF}Наркотики: {63BD4E}%d\n{FFFFFF}Деньги: {63BD4E}%d\n{FFFFFF}Кол-во контролируемых территорий: {63BD4E}%i\n\n{FFFFFF}Склад: %s",GangPatr[1],GangEd[1],DrugsBank[TEAM_BALLAS],FracBank[1],GangTotalGz[2],b_Sklad[1]?("{F04245}Закрыт"):("{63BD4E}Открыт"));
	UpdateDynamic3DTextLabelText(Gang3d[1],0xCC00FFFF,stringer);

	format(stringer,500,"Южная братва\n\n{FFFFFF}Патроны: {63BD4E}%d\n{FFFFFF}Ед. оружия: {63BD4E}%d\n{FFFFFF}Наркотики: {63BD4E}%d\n{FFFFFF}Деньги: {63BD4E}%d\n{FFFFFF}Кол-во контролируемых территорий: {63BD4E}%i\n\n{FFFFFF}Склад: %s",GangPatr[2],GangEd[2],DrugsBank[TEAM_RIFA],FracBank[2],GangTotalGz[0],b_Sklad[2]?("{F04245}Закрыт"):("{63BD4E}Открыт"));
	UpdateDynamic3DTextLabelText(Gang3d[2],0x6666FFFF,stringer);

	format(stringer,500,"ОПГ Солнцевская\n\n{FFFFFF}Патроны: {63BD4E}%d\n{FFFFFF}Ед. оружия: {63BD4E}%d\n{FFFFFF}Наркотики: {63BD4E}%d\n{FFFFFF}Деньги: {63BD4E}%d\n{FFFFFF}Кол-во контролируемых территорий: {63BD4E}%i\n\n{FFFFFF}Склад: %s",GangPatr[3],GangEd[3],DrugsBank[TEAM_AZTECAS],FracBank[3],GangTotalGz[1],b_Sklad[3]?("{F04245}Закрыт"):("{63BD4E}Открыт"));
	UpdateDynamic3DTextLabelText(Gang3d[3],0x00B4E1FF,stringer);

	format(stringer,500,"ОПГ Ореховская\n\n{FFFFFF}Патроны: {63BD4E}%d\n{FFFFFF}Ед. оружия: {63BD4E}%d\n{FFFFFF}Наркотики: {63BD4E}%d\n{FFFFFF}Деньги: {63BD4E}%d\n{FFFFFF}Кол-во контролируемых территорий: {63BD4E}%i\n\n{FFFFFF}Склад: %s",GangPatr[4],GangEd[4],DrugsBank[TEAM_VAGOS],FracBank[4],GangTotalGz[4],b_Sklad[4]?("{F04245}Закрыт"):("{63BD4E}Открыт"));
	UpdateDynamic3DTextLabelText(Gang3d[4],0xFFCC00FF,stringer);
}

stock WHDataUpdate()
{
	stringer[0] = EOS;

    format(stringer,500,"Состояние склада: {EAD86A}%d кг",Lessdrov);
    UpdateDynamic3DTextLabelText(less3D[0],0xFFFFFFFF,stringer);
    format(stringer,500,"Состояние склада: {EAD86A}%d кг\n{FFFFFF}Стоимость за 1 кг: {EAD86A}2$\n\nИспользуйте сигнал {AFAFAF}(Caps Lock / H)",Lessdrov);
    UpdateDynamic3DTextLabelText(less3D[1],0xFFFFFFFF,stringer);

    format(stringer,500,"Состояние склада:\n{FFFFFF}Уголь: {EAD86A}%d/1000000 {FFFFFF}кг\nДерево: {EAD86A}%d/1000000 {FFFFFF}кг\nОружие: {63BD4E}%d/500000 {FFFFFF}ед",gGunWorkWH[0],gGunWorkWH[1],gGunWorkWH[2]);
    UpdateDynamic3DTextLabelText(gGunWorkWHText[0],0xFFFFFFFF,stringer);
    format(stringer,500,"Состояние склада:\nОружие: {63BD4E}%d/500000 {FFFFFF}ед",gGunWorkWH[2]);
    UpdateDynamic3DTextLabelText(gGunWorkWHText[1],0xFFFFFFFF,stringer);

    format(stringer,500,"Состояние склада: {EAD86A}%d кг",Mineral);
  	UpdateDynamic3DTextLabelText(tPickup[4],0xFFFFFFFF,stringer);
  	UpdateDynamic3DTextLabelText(tPickup[13],0xFFFFFFFF,stringer);
  	UpdateDynamic3DTextLabelText(tPickup[14],0xFFFFFFFF,stringer);
  	format(stringer,500,"Состояние склада: {EAD86A}%d кг\n{FFFFFF}Стоимость за 1 кг: {EAD86A}2$\n\nИспользуйте сигнал {AFAFAF}(Caps Lock / H)",Mineral);
    UpdateDynamic3DTextLabelText(tPickup[6],0xFFFFFFFF,stringer);

	format(stringer,500,"Ед. оружия: {63BD4E}%d\n{FFFFFF}Патронов: {63BD4E}%d",gArmyWarehouse[0],gArmyWarehouse[1]);
	UpdateDynamic3DTextLabelText(gArmyWarehouseText,0xFFFFFFFF,stringer);

	format(stringer,500,"Склад оружия\n\n{FFFFFF}Состояние склада:\n{EAD86A}%d оружия\n{EAD86A}%d ящиков\n\n{AFAFAF}Используйте клавишу H",gGunWorkWH[3],floatround(gGunWorkWH[3]/300));
	UpdateDynamic3DTextLabelText(gLoadAmmoText,0x996633FF,stringer);

	format(stringer,256,"Склад медикаментов\n\n{FFFFFF}%d шт",MedWH[0]);
	UpdateDynamic3DTextLabelText(MedWHText[0],COLOR_GREEN,stringer);
	format(stringer,256,"Склад медикаментов\n\n{FFFFFF}%d шт",MedWH[1]);
	UpdateDynamic3DTextLabelText(MedWHText[1],COLOR_GREEN,stringer);
	format(stringer,256,"Склад медикаментов\n\n{FFFFFF}%d шт",MedWH[2]);
	UpdateDynamic3DTextLabelText(MedWHText[2],COLOR_GREEN,stringer);

	format(stringer,500,"Итальянская Мафия\n\n{FFFFFF}Патроны: {63BD4E}%d\n{FFFFFF}Ед. оружия: {63BD4E}%d\n{FFFFFF}Наркотики: {63BD4E}%d\n{FFFFFF}Деньги: {63BD4E}%d\n{FFFFFF}Кол-во контролируемых бизнесов: {63BD4E}%i\n\n{FFFFFF}Склад: %s",MafiaPatr[0],MafiaEd[0],DrugsBank[TEAM_LCN],FracBank[6],MafiaTotalBiz[0],b_Sklad[5]?("{F04245}Закрыт"):("{63BD4E}Открыт"));
	UpdateDynamic3DTextLabelText(Mafia3d[0],0x993366FF,stringer);
	format(stringer,500,"Yakuza\n\n{FFFFFF}Патроны: {63BD4E}%d\n{FFFFFF}Ед. оружия: {63BD4E}%d\n{FFFFFF}Наркотики: {63BD4E}%d\n{FFFFFF}Деньги: {63BD4E}%d\n{FFFFFF}Кол-во контролируемых бизнесов: {63BD4E}%i",MafiaPatr[1],MafiaEd[1],DrugsBank[TEAM_YAKUZA],FracBank[5],MafiaTotalBiz[1],b_Sklad[6]?("{F04245}Закрыт"):("{63BD4E}Открыт"));
	UpdateDynamic3DTextLabelText(Mafia3d[1],0xBB0000FF,stringer);
	format(stringer,500,"Русская Мафия\n\n{FFFFFF}Патроны: {63BD4E}%d\n{FFFFFF}Ед. оружия: {63BD4E}%d\n{FFFFFF}Наркотики: {63BD4E}%d\n{FFFFFF}Деньги: {63BD4E}%d\n{FFFFFF}Кол-во контролируемых бизнесов: {63BD4E}%i",MafiaPatr[2],MafiaEd[2],DrugsBank[TEAM_RM],FracBank[7],MafiaTotalBiz[2],b_Sklad[7]?("{F04245}Закрыт"):("{63BD4E}Открыт"));
	UpdateDynamic3DTextLabelText(Mafia3d[2],0x007575FF,stringer);

	UpdTerrsBand();
}

stock ShowMakeGunList(playerid)
{
	new string[350], gunname[24];
	for(new i; i < 9; i++)
	{
		GetWeaponName(gGunID[i], gunname, sizeof(gunname));
		if(!i) format(string, sizeof(string), "%s", gunname);
		else format(string, sizeof(string), "%s\n%s", string, gunname);
	}
	strcat(string, "\n{63BD4E}Информация");
	ShowPlayerDialog(playerid, dMakeGun, DIALOG_STYLE_LIST, "{FFCC00}Сборка оружия", string, "Далее", "Отмена");
}

stock GetPlayerTruckLevel(playerid)
{
	if(pInfo[playerid][pTruckSkill] >= TRUCK_LEVEL_3) return 3;
	else if(pInfo[playerid][pTruckSkill] >= TRUCK_LEVEL_2) return 2;
	else return 1;
}

stock BadFloat(Float:x) return(x >= 10.0 || x <= -10.0) ?true:false;

stock IsAIP(text[])
{
	new numbers;
	for(new i = 0; i < strlen(text); i++) if('0' <= text[i] <= '9') if(!('0' <= text[i+1] <= '9')) numbers ++;
	if(numbers >= 4) return 1;
	return 0;
}

stock ReplaceText(text[])
{
	for(new i; i < strlen(text); i ++)
	{
	    if('0' <= text[i] <= '9') text[i] = '*';
	}
	return 1;
}

stock CheckString(string[], type)
{
	if(type == 1)
	{
	    static const WebSites[][] =
		{
			".ws",".ru",".tk",".com","www.",".org",".net",".cc",".рф",".by",".biz",".su",".info",
			"админки","лидерки","Переезд","Новый сервер","NEW IP","АДМИНКИ","Лидерки","vk . com",
			"Переехали","переезжаем","дам админку","vk .com","cheat-master","переехали","Чит Мастер",
			"Bathory","youtube.com","CM_","CHEAT-MASTER","cheat master","CHEAT MASTER","нубо мод",
			"дно сервер","нубо сервер","нубомод","дносервер","нубосервер","сервер гавно"
		};
		for(new i = 0; i < sizeof(WebSites); i++)
		{
			if(strfind(string, WebSites[i], true) != -1) return 1;
		}
	}
	else
	{
	    static const WebSites[][] =
		{
			".ws",".ru",".tk",".com","www.",".org",".net",".cc",".рф",".by",".biz",".su",".info",
			"Переезд","Новый сервер","NEW IP","vk . com","Переехали","переезжаем","дам админку",
			"vk .com","cheat-master","переехали","Чит Мастер","Bathory","youtube.com","CM_","CHEAT-MASTER",
			"cheat master","CHEAT MASTER","нубо мод","дно сервер","нубо сервер","нубомод","дносервер",
			"нубосервер","сервер гавно"
		};
		for(new i = 0; i < sizeof(WebSites); i++)
		{
			if(strfind(string, WebSites[i], true) != -1) return 1;
		}
	}
	return 0;
}

stock CheckExceptionName(string[])
{
	static const NameList[][] =
	{
		NAME_FULL_ACCESS_1,
		NAME_FULL_ACCESS_2,
		NAME_FULL_ACCESS_3,
	 	NAME_FULL_ACCESS_4
	};
	for(new i = 0; i < sizeof(NameList); i++)
	{
		if(GetString(string, NameList[i])) return 1;
	}
	return 0;
}

stock PlayerGetsChatBan(playerid, text[])
{
	new string[144];
	format(string, sizeof(string), "[СПАМ/РЕКЛ.] %s[%i]: %s", GetName(playerid), playerid, text);
	SendAdminMessage(COLOR_ORANGE, string);
	format(string, sizeof(string), "[СПАМ/РЕКЛ.] %s [%s]: %s", GetName(playerid), pInfo[playerid][pIP], text);
	WriteLog("PlayerAdvertise",string);
	pInfo[playerid][pMuted] = (2*60)*60;
	MysqlUpdatePlayerInt(playerid, "mute", pInfo[playerid][pMuted]);
	SendClientMessage(playerid, COLOR_RED, "Вы получили бан чата по подозрению в отправке рекламного сообщения.");
	SendClientMessage(playerid, COLOR_RED, "Если вы считаете, что получили его ошибочно, свяжитесь с администрацией.");
	return 1;
}

stock AdminAntisliv(playerid, text[])
{
	RemoveAdmin(playerid, GetName(playerid));
	new string[88];
	format(string, sizeof(string), "[Внимание] %s[%i] подозревается во взломе [IP:%s]", GetName(playerid), playerid, pInfo[playerid][pIP]);
	SendAdminMessage(COLOR_RED, string);
	format(string, sizeof(string), "[Внимание] Текст: %s", text);
	SendAdminMessage(COLOR_RED, string);
	format(string, sizeof(string), "Админ %s [%s]: %s", GetName(playerid), pInfo[playerid][pIP], text);
	WriteLog("AdminAntisliv",string);
    mysql_query_string[0] = EOS;
	format(mysql_query_string, sizeof(mysql_query_string), "INSERT INTO "T_BANS" (name,whobanned,ip,bandate,time,unbandate,reason) VALUES ('%s','System','%s',CURDATE(),30,CURDATE() + INTERVAL 30 DAY,'Слив админки')", GetName(playerid), pInfo[playerid][pIP]);
	mysql_tquery(dbHandle, mysql_query_string, "", "");
	Kick(playerid);
	return 1;
}

stock AttemptRemoveChiefAdmin(playerid, reason[], tarGetName[])
{
	RemoveAdmin(playerid, GetName(playerid));
    mysql_query_string[0] = EOS;
	format(mysql_query_string, sizeof(mysql_query_string), "INSERT INTO "T_BANS" (name,whobanned,ip,bandate,time,unbandate,reason) VALUES ('%s','System','%s',CURDATE(),30,CURDATE() + INTERVAL 30 DAY,'Слив админки')", GetName(playerid), pInfo[playerid][pIP]);
	mysql_tquery(dbHandle, mysql_query_string, "", "");
    new string[128];
    format(string, sizeof(string), "Администратор %s был снят за попытку %s %s", GetName(playerid), reason, tarGetName);
    SendAdminMessageEx(COLOR_RED, string, ADM_CHIEF);
    WriteLog("AttemptRemoveChiefAdmin", string);
    Kick(playerid);
	return 1;
}

stock AttemptRemoveAdmin(playerid, reason[], targetid)
{
    SendClientMessage(playerid, COLOR_GREY, "Это действие выполнить невозможно!");
    new string[128];
    format(string, sizeof(string), "Администратор %s попытался %s администратора %s", GetName(playerid), reason, GetName(targetid));
    SendAdminMessageEx(COLOR_GREY, string, ADM_CHIEF);
    WriteLog("AttemptRemoveAdmin", string);
	return 1;
}

stock RemoveAdmin(targetid, name[])
{
	pInfo[targetid][pAdmin] = ADM_NONE;
	new string[128];
	mysql_format(dbHandle, string, sizeof(string), "DELETE FROM "T_ADMIN" WHERE `name`='%s'", name);
	mysql_tquery(dbHandle, string, "", "");
	MysqlUpdatePlayerInt(targetid, "admin", pInfo[targetid][pAdmin]);
	return 1;
}

stock HaveWeapon(playerid, weaponid)
{
	new weapons[13][2];
	for(new i = 0; i < 13; i++)
	{
		GetPlayerWeaponData(playerid, i, weapons[i][0], weapons[i][1]);
		if((weapons[i][0] == weaponid) && weapons[i][1]) return 1;
	}
	return 0;
}

stock split(const strsrc[], strdest[][], delimiter)
{
	new i, li, aNum, len;
	while(i <= strlen(strsrc))
	{
		if(strsrc[i]==delimiter || i==strlen(strsrc))
		{
			len = strmid(strdest[aNum], strsrc, li, i, 128);
			strdest[aNum][len] = 0;
			li = i+1;
			aNum++;
		}
		i++;
	}
	return 1;
}

stock GetNameWithNumber(number)
{
	new str[MAX_PLAYER_NAME] = {"Offline/None"};
	foreach(new i : Player)
	{
		if(!gPlayerLogged[i]) continue;
		if(pInfo[i][pPhoneNumber] == number)
		{
			format(str, sizeof(str), "%s", GetName(i));
			break;
		}
	}
	return str;
}

@SetAdmin(playerid, name[], level);
@SetAdmin(playerid, name[], level)
{
	new string[350];

	#if MYSQL_R41_2 == true

	new rows;
	cache_get_row_count(rows);

	#else

	new rows, fields;
	cache_get_data(rows, fields);

	#endif

	if(rows)
	{
		if(!level)
		{
		    if(GetPlayerID(name) != INVALID_PLAYER_ID) pInfo[GetPlayerID(name)][pAdmin] = 0;
			mysql_format(dbHandle, string, sizeof(string), "DELETE FROM "T_ADMIN" WHERE name = '%s'", name);
			mysql_tquery(dbHandle, string, "", "");
			mysql_format(dbHandle, string, sizeof(string), "UPDATE "T_ACCOUNTS" SET admin = 0 WHERE name = '%s'", name);
			mysql_tquery(dbHandle, string, "", "");
			format(string, sizeof(string), "Вы сняли %s с должности администратора", name);
	    	SendClientMessage(playerid, COLOR_YELLOW, string);
	    	format(string, sizeof(string), "%s снял %s с должности администратора", GetName(playerid), name);
	    	WriteLog("DeleteAdmin", string);
		}
		else
		{
		    if(GetPlayerID(name) != INVALID_PLAYER_ID) pInfo[GetPlayerID(name)][pAdmin] = level;
			mysql_format(dbHandle, string, sizeof(string), "UPDATE "T_ADMIN" SET level = %d WHERE name = '%s' LIMIT 1", level, name);
			mysql_tquery(dbHandle, string, "", "");
			mysql_format(dbHandle, string, sizeof(string), "UPDATE "T_ACCOUNTS" SET admin = %d WHERE name = '%s'", level, name);
			mysql_tquery(dbHandle, string, "", "");
			format(string, sizeof(string), "Вы установили уровень администратора %s на %i", name, level);
	    	SendClientMessage(playerid, COLOR_YELLOW, string);
	    	format(string, sizeof(string), "%s установил уровень администратора %s на %i", GetName(playerid), name, level);
	    	WriteLog("EditAdmin", string);
		}
	}
	else
	{
		if(!level) return SendClientMessage(playerid, COLOR_GREY, "Игрок не администратор");
		mysql_format(dbHandle, string, sizeof(string), "INSERT INTO "T_ADMIN" (name,level,last_connect,put_admin,data,a_infonewpl) VALUES ('%s',%d,CURDATE(),'%s',CURDATE(),1)", name, level, GetName(playerid));
		mysql_tquery(dbHandle, string, "", "");
		mysql_format(dbHandle, string, sizeof(string), "UPDATE "T_ACCOUNTS" SET admin = %d WHERE name = '%s'", level, name);
		mysql_tquery(dbHandle, string, "", "");
		format(string, sizeof(string), "%s добавлен в список администрации. Уровень полномочий %i", name, level);
	    SendClientMessage(playerid, COLOR_GREEN, string);
	    format(string, sizeof(string), "%s добавил в список администрации %s (%i уровень)", GetName(playerid), name, level);
	    WriteLog("SetAdmin", string);
	    if(GetPlayerID(name) != INVALID_PLAYER_ID)
    	{
    	    pInfo[GetPlayerID(name)][pAdmin] = level;
			MysqlUpdatePlayerInt(GetPlayerID(name), "admin", pInfo[playerid][pAdmin]);
    	    format(string, sizeof(string), "%s назначил Вас администратором", GetName(playerid));
	    	SendClientMessage(GetPlayerID(name), COLOR_YELLOW, string);
    	}
	}
	return 1;
}

@Alogin(playerid, name[]);
@Alogin(playerid, name[])
{
    #if MYSQL_R41_2 == true

	new rows;
	cache_get_row_count(rows);
	if(!rows)
	{
		if(pInfo[playerid][pAdmin] > ADM_NONE)
		{
			pInfo[playerid][pAdmin] = ADM_NONE;
			MysqlUpdatePlayerInt(playerid, "admin", pInfo[playerid][pAdmin]);
		}
		return 1;
	}
	new Password[16];
	cache_get_value_name(0, "password", Password);
	if(GetString(Password, "qwerty"))
	{
		SetPVarInt(playerid, "type_alogin", 1);
		ShowPlayerDialog(playerid, dAdminLogin, DIALOG_STYLE_PASSWORD, "{FFCC00}Регистрация администратора", "{FFFFFF}Введите пароль, который будет от панели администратора\n\n{63BD4E}Примечание:\n\t- Пароль должен состоять из латинских букв и цифр\n\t- Размер пароля от 6 до 15 символов", "Принять", "Отмена");
	}
	else
	{
		SetPVarInt(playerid, "type_alogin", 0);
		ShowPlayerDialog(playerid, dAdminLogin, DIALOG_STYLE_PASSWORD, "{FFCC00}Доступ администратора", "{FFFFFF}Введите Ваш пароль от панели администратора", "Принять", "Отмена");
	}

	#else

	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows)
	{
		if(pInfo[playerid][pAdmin] > ADM_NONE)
		{
			pInfo[playerid][pAdmin] = ADM_NONE;
			MysqlUpdatePlayerInt(playerid, "admin", pInfo[playerid][pAdmin]);
		}
		return 1;
	}
	new Password[16];
	cache_get_field_content(0, "password", Password, dbHandle);
	if(GetString(Password, "qwerty"))
	{
		SetPVarInt(playerid, "type_alogin", 1);
		ShowPlayerDialog(playerid, dAdminLogin, DIALOG_STYLE_PASSWORD, "{FFCC00}Регистрация администратора", "{FFFFFF}Введите пароль, который будет от панели администратора\n\n{63BD4E}Примечание:\n\t- Пароль должен состоять из латинских букв и цифр\n\t- Размер пароля от 6 до 15 символов", "Принять", "Отмена");
	}
	else
	{
		SetPVarInt(playerid, "type_alogin", 0);
		ShowPlayerDialog(playerid, dAdminLogin, DIALOG_STYLE_PASSWORD, "{FFCC00}Доступ администратора", "{FFFFFF}Введите Ваш пароль от панели администратора", "Принять", "Отмена");
	}

	#endif

	return 1;
}

@AloginReg(playerid, name[]);
@AloginReg(playerid, name[])
{
    #if MYSQL_R41_2 == true

	new rows;
	cache_get_row_count(rows);
	if(!rows) return 1;
	new inputtext[16];
	GetPVarString(playerid, "inputtext", inputtext, sizeof(inputtext));
	mysql_query_string[0] = EOS;
	mysql_format(dbHandle, mysql_query_string, sizeof(mysql_query_string), "UPDATE "T_ADMIN" SET password = '%s' WHERE name = '%s' LIMIT 1", inputtext, GetName(playerid));
	mysql_tquery(dbHandle, mysql_query_string, "", "");
	gAdminLogged[playerid] = true;
	new string[144];
	format(string, sizeof(string), "Ваш административный пароль: {FFFFFF}%s", inputtext);
	SendClientMessage(playerid, COLOR_GREEN, string);
	SendClientMessage(playerid, COLOR_GREEN, "Рекомендуется сделать скриншот. Клавиша: {ffffff}F8");
	cache_get_value_index_int(0, 2, pInfo[playerid][pAdmin]);
	MysqlUpdatePlayerInt(playerid, "admin", pInfo[playerid][pAdmin]);
	static const Admin_Names[8][24] = {"{00FF33}Хелпер","{FFD700}Модератор","{00FFFF}Ст.Модератор","{228B22}Администратор","{FFF700}Ст.Администратор","{696969}ЗГА","{AA3333}ГА","{FF0000}Руководитель"};
	format(string, sizeof(string), "{FFFFFF}[A] Вы авторизовались как %s", Admin_Names[pInfo[playerid][pAdmin]-1]);
 	SendClientMessage(playerid, COLOR_ORANGE, string);
	if(pInfo[playerid][pAdmin] < ADM_FOUNDER)
 	{
 	    new country[64], city[64];
		GetIPCountry(pInfo[playerid][pLastIP], country, sizeof(country));
		GetIPCity(pInfo[playerid][pLastIP], city, sizeof(city));
 	    if(!pInfo[playerid][pCheckCode]) format(string, sizeof(string), "[A] %s %s[%i] авторизовал%s без граф.ключа [IP:%s (%s %s)]", Admin_Names[pInfo[playerid][pAdmin]-1], GetName(playerid), playerid, (pInfo[playerid][pSex]==1)?("ся"):("ась"), pInfo[playerid][pIP], country, city);
 	    else format(string, sizeof(string), "[A] %s %s[%i] авторизовал%s [IP:%s (%s %s)]", Admin_Names[pInfo[playerid][pAdmin]-1], GetName(playerid), playerid, (pInfo[playerid][pSex]==1)?("ся"):("ась"), pInfo[playerid][pIP], country, city);
	 	SendAdminMessage(0xFFCC00FF, string);
 	}
	mysql_query_string[0] = EOS;
	format(mysql_query_string, 128, "UPDATE "T_ADMIN" SET last_connect = CURDATE() WHERE name = '%s' LIMIT 1", GetName(playerid));
	mysql_tquery(dbHandle, mysql_query_string, "", "");

	#else

	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows) return 1;
	new inputtext[16];
	GetPVarString(playerid, "inputtext", inputtext, sizeof(inputtext));
	mysql_query_string[0] = EOS;
	mysql_format(dbHandle, mysql_query_string, sizeof(mysql_query_string), "UPDATE "T_ADMIN" SET password = '%s' WHERE name = '%s' LIMIT 1", inputtext, GetName(playerid));
	mysql_tquery(dbHandle, mysql_query_string, "", "");
	gAdminLogged[playerid] = true;
	new string[144];
	format(string, sizeof(string), "Ваш пароль администратора: {FFFFFF}%s", inputtext);
	SendClientMessage(playerid, COLOR_GREEN, string);
	SendClientMessage(playerid, COLOR_GREEN, "Рекомендуется сделать скриншот. Клавиша: {ffffff}F8");
	pInfo[playerid][pAdmin] = cache_get_row_int(0, 2);
	MysqlUpdatePlayerInt(playerid, "admin", pInfo[playerid][pAdmin]);
	static const Admin_Names[8][24] = {"Хелпер","Модератор","Ст.Модератор","Администратор","Ст.Администратор","Зам.Гл.Администратора","Гл.Администратор","Руководитель"};
	format(string, sizeof(string), "Вы авторизовались как %s", Admin_Names[pInfo[playerid][pAdmin]-1]);
 	SendClientMessage(playerid, COLOR_ORANGE, string);
	if(pInfo[playerid][pAdmin] < ADM_FOUNDER)
 	{
 	    new country[64], city[64];
		GetIPCountry(pInfo[playerid][pLastIP], country, sizeof(country));
		GetIPCity(pInfo[playerid][pLastIP], city, sizeof(city));
 	    if(!pInfo[playerid][pCheckCode]) format(string, sizeof(string), "[A] %s %s[%i] авторизовал%s без граф.ключа [IP:%s (%s %s)]", Admin_Names[pInfo[playerid][pAdmin]-1], GetName(playerid), playerid, (pInfo[playerid][pSex]==1)?("ся"):("ась"), pInfo[playerid][pIP], country, city);
 	    else format(string, sizeof(string), "[A] %s %s[%i] авторизовал%s [IP:%s (%s %s)]", Admin_Names[pInfo[playerid][pAdmin]-1], GetName(playerid), playerid, (pInfo[playerid][pSex]==1)?("ся"):("ась"), pInfo[playerid][pIP], country, city);
	 	SendAdminMessage(0xFFCC00FF, string);
 	}
	mysql_query_string[0] = EOS;
	format(mysql_query_string, 128, "UPDATE "T_ADMIN" SET last_connect = CURDATE() WHERE name = '%s' LIMIT 1", GetName(playerid));
	mysql_tquery(dbHandle, mysql_query_string, "", "");

	#endif

	return 1;
}

@AloginAuth(playerid);
@AloginAuth(playerid)
{
    #if MYSQL_R41_2 == true

	new rows;
	cache_get_row_count(rows);
	if(!rows)
	{
		SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Неверный пароль!");
		SetPVarInt(playerid, "attempt_password", GetPVarInt(playerid, "attempt_password")+1);
		if(GetPVarInt(playerid, "attempt_password")>3)
		{
			DeletePVar(playerid, "attempt_password");
			return SKick(playerid, 2112);
		}
	}
	else
	{
		gAdminLogged[playerid] = true;
		cache_get_value_index_int(0, 0, AdminInfo[playerid][admID]);
		cache_get_value_index_int(0, 2, pInfo[playerid][pAdmin]);
		cache_get_value_index_int(0, 7, AdminInfo[playerid][admGoto]);
	    cache_get_value_index_int(0, 8, AdminInfo[playerid][admGethere]);
	    cache_get_value_index_int(0, 9, AdminInfo[playerid][admSpectate]);
	    if(AdminInfo[playerid][admPlayTime] == 0)
	    {
	        new who_load[32];
			format(who_load, 32, "online_%s", getDay());
			if(GetString(who_load,"online_monday")) cache_get_value_index_int(0,10,AdminInfo[playerid][admPlayTime]);
			else if(GetString(who_load,"online_tuesday")) cache_get_value_index_int(0,11,AdminInfo[playerid][admPlayTime]);
			else if(GetString(who_load,"online_wednesday")) cache_get_value_index_int(0,12,AdminInfo[playerid][admPlayTime]);
			else if(GetString(who_load,"online_thursday")) cache_get_value_index_int(0,13,AdminInfo[playerid][admPlayTime]);
			else if(GetString(who_load,"online_friday")) cache_get_value_index_int(0,14,AdminInfo[playerid][admPlayTime]);
			else if(GetString(who_load,"online_saturday")) cache_get_value_index_int(0,15,AdminInfo[playerid][admPlayTime]);
			else if(GetString(who_load,"online_sunday")) cache_get_value_index_int(0,16,AdminInfo[playerid][admPlayTime]);
		}
 		cache_get_value_index_int(0, 17, AdminInfo[playerid][admKicked]); // kicked
 		cache_get_value_index(0, 18, AdminInfo[playerid][admKickedReason], 32); // kicked_reason
 		cache_get_value_index_int(0, 19, AdminInfo[playerid][admSKicked]); // skicked
		cache_get_value_index_int(0, 20, AdminInfo[playerid][admWarned]); // warned
 		cache_get_value_index(0, 21, AdminInfo[playerid][admWarnedReason], 32); // warned_reason
 		cache_get_value_index_int(0, 22, AdminInfo[playerid][admOffWarned]); // offwarned
 		cache_get_value_index(0, 23, AdminInfo[playerid][admOffWarnedReason], 32); // offwarned_reason
 		cache_get_value_index_int(0, 24, AdminInfo[playerid][admBaned]); // baned
 		cache_get_value_index(0, 25, AdminInfo[playerid][admBanedReason], 32); // baned_reason
 		cache_get_value_index_int(0, 26, AdminInfo[playerid][admOffBaned]); // offbaned
 		cache_get_value_index(0, 27, AdminInfo[playerid][admOffBanedReason], 32); // offbaned_reason
 		cache_get_value_index_int(0, 28, AdminInfo[playerid][admMuted]); // muted
 		cache_get_value_index(0, 29, AdminInfo[playerid][admMutedReason], 32); // muted_reason
 		cache_get_value_index_int(0, 30, AdminInfo[playerid][admAnsed]); // ansed
 		cache_get_value_index_int(0, 31, AdminInfo[playerid][admInfoNewPlayer]); // a_infonewpl
 		static const Admin_Names[8][24] = {"Хелпер","Модератор","Ст.Модератор","Администратор","Ст.Администратор","Зам.Гл.Администратора","Гл.Администратор","Руководитель"};
        new string[144];
		format(string, sizeof(string), "Вы авторизовались как %s", Admin_Names[pInfo[playerid][pAdmin]-1]);
 		SendClientMessage(playerid, COLOR_ORANGE, string);
 		if(pInfo[playerid][pAdmin] < ADM_FOUNDER)
	 	{
	 	    new country[64], city[64];
			GetIPCountry(pInfo[playerid][pLastIP], country, sizeof(country));
			GetIPCity(pInfo[playerid][pLastIP], city, sizeof(city));
	 	    if(!pInfo[playerid][pCheckCode]) format(string, sizeof(string), "[A] %s %s[%i] авторизовал%s без граф.ключа [IP:%s (%s %s)]", Admin_Names[pInfo[playerid][pAdmin]-1], GetName(playerid), playerid, (pInfo[playerid][pSex]==1)?("ся"):("ась"), pInfo[playerid][pIP], country, city);
	 	    else format(string, sizeof(string), "[A] %s %s[%i] авторизовал%s [IP:%s (%s %s)]", Admin_Names[pInfo[playerid][pAdmin]-1], GetName(playerid), playerid, (pInfo[playerid][pSex]==1)?("ся"):("ась"), pInfo[playerid][pIP], country, city);
		 	SendAdminMessage(0xFFCC00FF, string);
	 	}
  		mysql_query_string[0] = EOS;
		format(mysql_query_string, 128, "UPDATE "T_ADMIN" SET last_connect = CURDATE() WHERE name = '%s' LIMIT 1", GetName(playerid));
		mysql_tquery(dbHandle, mysql_query_string, "", "");
	}

	#else

	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows)
	{
		SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Неверный пароль!");
		SetPVarInt(playerid, "attempt_password", GetPVarInt(playerid, "attempt_password")+1);
		if(GetPVarInt(playerid, "attempt_password")>3)
		{
			DeletePVar(playerid, "attempt_password");
			return SKick(playerid, 2112);
		}
	}
	else
	{
		gAdminLogged[playerid] = true;
		AdminInfo[playerid][admID] = cache_get_row_int(0, 0);
		pInfo[playerid][pAdmin] = cache_get_row_int(0, 2);
		AdminInfo[playerid][admGoto] = cache_get_row_int(0, 7);
	    AdminInfo[playerid][admGethere] = cache_get_row_int(0, 8);
	    AdminInfo[playerid][admSpectate] = cache_get_row_int(0, 9);
	    if(AdminInfo[playerid][admPlayTime] == 0)
	    {
		    new who_load[32];
			format(who_load, 32, "online_%s", getDay());
			if(GetString(who_load,"online_monday")) AdminInfo[playerid][admPlayTime] = cache_get_row_int(0,10);
			else if(GetString(who_load,"online_tuesday")) AdminInfo[playerid][admPlayTime] = cache_get_row_int(0,11);
			else if(GetString(who_load,"online_wednesday")) AdminInfo[playerid][admPlayTime] = cache_get_row_int(0,12);
			else if(GetString(who_load,"online_thursday")) AdminInfo[playerid][admPlayTime] = cache_get_row_int(0,13);
			else if(GetString(who_load,"online_friday")) AdminInfo[playerid][admPlayTime] = cache_get_row_int(0,14);
			else if(GetString(who_load,"online_saturday")) AdminInfo[playerid][admPlayTime] = cache_get_row_int(0,15);
			else if(GetString(who_load,"online_sunday")) AdminInfo[playerid][admPlayTime] = cache_get_row_int(0,16);
		}
	    AdminInfo[playerid][admKicked] = cache_get_row_int(0, 17); // kicked
 		cache_get_row(0, 18, AdminInfo[playerid][admKickedReason], 32); // kicked_reason
 		AdminInfo[playerid][admSKicked] = cache_get_row_int(0, 19); // skicked
		AdminInfo[playerid][admWarned] = cache_get_row_int(0, 20); // warned
 		cache_get_row(0, 21, AdminInfo[playerid][admWarnedReason], 32); // warned_reason
 		AdminInfo[playerid][admOffWarned] = cache_get_row_int(0, 22); // offwarned
 		cache_get_row(0, 23, AdminInfo[playerid][admOffWarnedReason], 32); // offwarned_reason
 		AdminInfo[playerid][admBaned] = cache_get_row_int(0, 24); // baned
 		cache_get_row(0, 25, AdminInfo[playerid][admBanedReason], 32); // baned_reason
 		AdminInfo[playerid][admOffBaned] = cache_get_row_int(0, 26); // offbaned
 		cache_get_row(0, 27, AdminInfo[playerid][admOffBanedReason], 32); // offbaned_reason
 		AdminInfo[playerid][admMuted] = cache_get_row_int(0, 28); // muted
 		cache_get_row(0, 29, AdminInfo[playerid][admMutedReason], 32); // muted_reason
 		AdminInfo[playerid][admAnsed] = cache_get_row_int(0, 30); // ansed
		AdminInfo[playerid][admInfoNewPlayer] = cache_get_row_int(0, 31); // a_infonewpl
 		static const Admin_Names[8][24] = {"Хелпер","Модератор","Ст.Модератор","Администратор","Ст.Администратор","Зам.Гл.Администратора","Гл.Администратор","Руководитель"};
        new string[144];
		format(string, sizeof(string), "Вы авторизовались как %s", Admin_Names[pInfo[playerid][pAdmin]-1]);
 		SendClientMessage(playerid, COLOR_ORANGE, string);
 		if(pInfo[playerid][pAdmin] < ADM_FOUNDER)
	 	{
	 	    new country[64], city[64];
			GetIPCountry(pInfo[playerid][pLastIP], country, sizeof(country));
			GetIPCity(pInfo[playerid][pLastIP], city, sizeof(city));
	 	    if(!pInfo[playerid][pCheckCode]) format(string, sizeof(string), "[A] %s %s[%i] авторизовал%s без граф.ключа [IP:%s (%s %s)]", Admin_Names[pInfo[playerid][pAdmin]-1], GetName(playerid), playerid, (pInfo[playerid][pSex]==1)?("ся"):("ась"), pInfo[playerid][pIP], country, city);
	 	    else format(string, sizeof(string), "[A] %s %s[%i] авторизовал%s [IP:%s (%s %s)]", Admin_Names[pInfo[playerid][pAdmin]-1], GetName(playerid), playerid, (pInfo[playerid][pSex]==1)?("ся"):("ась"), pInfo[playerid][pIP], country, city);
		 	SendAdminMessage(0xFFCC00FF, string);
	 	}
  		mysql_query_string[0] = EOS;
		format(mysql_query_string, 128, "UPDATE "T_ADMIN" SET last_connect = CURDATE() WHERE name = '%s' LIMIT 1", GetName(playerid));
		mysql_tquery(dbHandle, mysql_query_string, "", "");
	}

	#endif

	return 1;
}

@GunReady(playerid);
@GunReady(playerid)
{
	new objectid = GetPVarInt(playerid,"pgunobject");
	DeletePVar(playerid,"pgunobject");
	DestroyDynamicObject(objectid);
	DeletePVar(playerid,"pgunmodel");
	new locatid = GetPVarInt(playerid,"pgunlocat")-1;
	DeletePVar(playerid,"pgunlocat");
	gGunWorkTableStat[locatid] = false;
	RemovePlayerAttachedObject(playerid, 0);
	RemovePlayerAttachedObject(playerid, 1);
	if(!IsPlayerInDynamicArea(playerid,AreaInfo[arGunWorkWork][locatid])) return SendClientMessage(playerid, COLOR_RED, "Вы потеряли все детали по дороге.");
	SetPVarInt(playerid,"workamountgun", 2);
	ClearAnimations(playerid);
	ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,1,1,1,1,1,1);
	SetPlayerAttachedObject(playerid,0,3052,6,0.0,0.10,-0.2,-110.0,0.0,78.0);
	SendClientMessage(playerid, COLOR_GREEN, "Вы собрали оружие. Отнесите его на склад");
	SetPlayerCheckpoint(playerid,2735.5796,-2249.6377,3044.0100,4.0);
	return 1;
}

stock IsValidPassport(playerid)
{
    #if MYSQL_R41_2 == true

    new string[100], accounts[MAX_PLAYER_NAME];
	format(string, sizeof(string), "SELECT Name FROM "T_PASSPORTS" WHERE Name = '%s' LIMIT 1", GetName(playerid));
	new Cache:result = mysql_query(dbHandle, string);
	cache_get_value_name(0, "Name", accounts);
	cache_delete(result);
	return accounts;

	#else

	new string[100];
	format(string, sizeof(string), "SELECT Name FROM "T_PASSPORTS" WHERE Name = '%s' LIMIT 1", GetName(playerid));
	new Cache:result = mysql_query(dbHandle, string);
	new accounts = cache_get_row_count(dbHandle);
	cache_delete(result, dbHandle);
	return accounts;

	#endif
}

stock OnLoadPass(playerid)
{
	new string[100];
	format(string, sizeof(string), "SELECT * FROM "T_PASSPORTS" WHERE Name = '%s' LIMIT 1", GetName(playerid));
	mysql_tquery(dbHandle, string, "@MysqlLoadPassport", "d", playerid);
	return 1;
}

@MysqlLoadPassport(playerid);
@MysqlLoadPassport(playerid)
{
    #if MYSQL_R41_2 == true

	new rows;
	cache_get_row_count(rows);
	if(rows)
	{
		cache_get_value_index_int(0, 1, PassInfo[playerid][psSeria]);
		cache_get_value_index_int(0, 2, PassInfo[playerid][psNumber]);
		cache_get_value_index_int(0, 3, PassInfo[playerid][psSex]);
		cache_get_value_index_int(0, 4, PassInfo[playerid][psDate][0]);
		cache_get_value_index_int(0, 5, PassInfo[playerid][psDate][1]);
		cache_get_value_index_int(0, 6, PassInfo[playerid][psDate][2]);
		cache_get_value_index_int(0, 7, PassInfo[playerid][psDateBirth][0]);
		cache_get_value_index_int(0, 8, PassInfo[playerid][psDateBirth][1]);
		cache_get_value_index_int(0, 9, PassInfo[playerid][psDateBirth][2]);
		cache_get_value_index_int(0, 10, PassInfo[playerid][psCity]);
		cache_get_value_index_int(0, 11, PassInfo[playerid][mcState]);
	}

	#else

	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		PassInfo[playerid][psSeria] = cache_get_row_int(0, 1);
		PassInfo[playerid][psNumber] = cache_get_row_int(0, 2);
		PassInfo[playerid][psSex] = cache_get_row_int(0, 3);
		PassInfo[playerid][psDate][0] = cache_get_row_int(0, 4);
		PassInfo[playerid][psDate][1] = cache_get_row_int(0, 5);
		PassInfo[playerid][psDate][2] = cache_get_row_int(0, 6);
		PassInfo[playerid][psDateBirth][0] = cache_get_row_int(0, 7);
		PassInfo[playerid][psDateBirth][1] = cache_get_row_int(0, 8);
		PassInfo[playerid][psDateBirth][2] = cache_get_row_int(0, 9);
		PassInfo[playerid][psCity] = cache_get_row_int(0, 10);
		PassInfo[playerid][mcState] = cache_get_row_int(0, 11);
	}

	#endif

	return 1;
}

stock GetMonthDays(year, month)
{
	switch(month)
	{
	    case 0:     return 31;
	    case 1: 	return 31;
	    case 2: 	return februarydays(year);
	    case 3: 	return 31;
	    case 4: 	return 30;
	    case 5: 	return 31;
	    case 6: 	return 30;
	    case 7: 	return 31;
	    case 8: 	return 31;
	    case 9: 	return 30;
	    case 10: 	return 31;
	    case 11: 	return 30;
	    case 12: 	return 31;
	    default: 	return -1;
	}
	return -1;
}

stock februarydays(year)
{
	if(!(year % 4)) return 29;
	else return 28;
}

stock CreateGate(id, model, Float:x, Float:y, Float:z, Float:fx, Float:fy, Float:fz)
{
	Gate[id] = CreateDynamicObject(model, x, y, z, fx, fy, fz);
	if(!(id >= 4 && id <= 7)) CreateDynamic3DTextLabel("В транспорте:\n{FFFFFF}Используйте сигнал {AFAFAF}(Caps Lock / H)\n{FFCC00}Пешком:\n{FFFFFF}Используйте команду {AFAFAF}(/open)", 0xFFCC00FF, x, y, z+0.7, 20.0);
	return 1;
}

@OnVehicleArendUpdate();
@OnVehicleArendUpdate()
{
    foreach(new i : Player)
	{
		if(!gPlayerLogged[i]) continue;
		if(GetPVarInt(i, "arendkey") == -1) continue;
		new rc = GetPVarInt(i, "arendkey");
		if(ArendInfo[rc][aPlayerID] != i)
		{
		    SetPVarInt(i, "arendkey", -1);
		    continue;
		}
		if(!IsPlayerInVehicle(i, ArendInfo[rc][aID]))
		{
		    new Float:x, Float:y, Float:z;
		    GetVehiclePos(ArendInfo[rc][aID], x, y, z);
			if(!IsPlayerInRangeOfPoint(i, 2000.0, x, y, z) && GetPlayerVirtualWorld(i) == 0 && GetPlayerInterior(i) == 0)
			{
			    SendClientMessage(i, COLOR_WHITE, "Вы отошли слишком далеко от арендованного вами транспорта");
			    ArendInfo[rc][aPlayerID] = INVALID_PLAYER_ID;
            	SetVehicleToRespawn(ArendInfo[rc][aID]);
				ToggleLock(ArendInfo[rc][aID], 0);
            	SetPVarInt(i, "arendkey", -1);
            	continue;
			}
		}
	}
}

stock GetArendCarID(vehicleid, &arend_id = INVALID_PLAYER_ID)
{
    arend_id = INVALID_PLAYER_ID;
	for(new i = 0; i < sizeof(ArendInfo); i++)
	{
	    if(vehicleid == ArendInfo[i][aID])
		{
      		if(IsPlayerConnected(ArendInfo[i][aPlayerID])) arend_id = ArendInfo[i][aPlayerID];
			return i;
		}
 	}
	return -1;
}

stock GetVehicleArendID(vehicleid)
{
	new playerid = INVALID_PLAYER_ID, get_rent = GetArendCarID(vehicleid, playerid);
    if(get_rent != (-1))
	{
	    if(playerid == INVALID_PLAYER_ID || !IsPlayerConnected(playerid))
	    {
	        ArendInfo[get_rent][aPlayerID] = INVALID_PLAYER_ID;
	        return INVALID_PLAYER_ID;
	    }
	    return ArendInfo[get_rent][aPlayerID];
	}
	return INVALID_PLAYER_ID;
}

@TopCharity(playerid);
@TopCharity(playerid)
{
    #if MYSQL_R41_2 == true

    new rows;
    cache_get_row_count(rows);
    stringer[0] = EOS;
    strcat(stringer, "{EAD86A}Ник игрока\t\t{EAD86A}Пожертвовано\n");
    if(rows < 1) return 1;
    new name[MAX_PLAYER_NAME], charity_count;
    for(new i; i < rows; i++)
    {
		cache_get_value_index_int(i, 49, charity_count);
        cache_get_value_index(i, 1, name, MAX_PLAYER_NAME);
        format(stringer, sizeof(stringer), "%s{FFFFFF}%s\t\t{63BD4E}%d$\n", stringer, name, charity_count);
    }
    ShowPlayerDialog(playerid, dNull, DIALOG_STYLE_LIST, "{FFCC00}Самые щедрые игроки", stringer, "Закрыть", "");

	#else

	new rows, fields;
    cache_get_data(rows, fields);
    stringer[0] = EOS;
    strcat(stringer, "{EAD86A}Ник игрока\t\t{EAD86A}Пожертвовано\n");
    if(rows < 1) return 1;
    new name[MAX_PLAYER_NAME], charity_count;
    for(new i; i < rows; i++)
    {
		charity_count = cache_get_row_int(i, 49);
        cache_get_row(i, 1, name, dbHandle, MAX_PLAYER_NAME);
        format(stringer, sizeof(stringer), "%s{FFFFFF}%s\t\t{63BD4E}%d$\n", stringer, name, charity_count);
    }
    ShowPlayerDialog(playerid, dNull, DIALOG_STYLE_LIST, "{FFCC00}Самые щедрые игроки", stringer, "Закрыть", "");

	#endif

	return 1;
}

stock GetFreeSeat(vehicleid)
{
	if(!vehicleid) return -1;
	new model = GetVehicleModel(vehicleid);
	new maxs = GetMaxSeat(model) - 1;
	new bool:seat[3], cnt;
	foreach(new i : Player)
	{
		if(!IsPlayerConnected(i) || GetPVarInt(i,"VehicleEnters") != vehicleid) continue;
		new pseat = GetPlayerVehicleSeat(i);
		if(pseat < 1 || pseat > 3) continue;
		seat[pseat-1] = true;
		cnt++;
		if(cnt >= maxs) return -1;
	}
	for(new i; i < 3; i++) if(!seat[i]) return i+1;
	return -1;
}

stock GetMaxSeat(modelid)
{
	switch(modelid)
	{
		case 596..598, 427, 490: return 4;
		case 599, 497, 528: return 2;
	}
	return -1;
}

@ClearAnimText(playerid);
@ClearAnimText(playerid) return ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0);

@OnPlayerHistoryName(playerid);
@OnPlayerHistoryName(playerid)
{
    #if MYSQL_R41_2 == true

	new rows;
	cache_get_row_count(rows);
    if(!rows) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Игрок с таким именем не найден");
	new idacca;
	cache_get_value_index_int(0, 0, idacca);
	stringer[0] = EOS;
	format(stringer, 200, "SELECT * FROM "T_HISTORYNAME" WHERE idacca = %d ORDER BY id DESC LIMIT 10", idacca);
	mysql_tquery(dbHandle, stringer, "@OnPlayerHistoryName2", "d", playerid);

    #else

    new rows, fields;
	cache_get_data(rows, fields);
    if(!rows) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Игрок с таким именем не найден");
	new idacca;
	idacca = cache_get_row_int(0, 0);
	stringer[0] = EOS;
	format(stringer, 200, "SELECT * FROM "T_HISTORYNAME" WHERE idacca = %d ORDER BY id DESC LIMIT 10", idacca);
	mysql_tquery(dbHandle, stringer, "@OnPlayerHistoryName2", "d", playerid);

    #endif

	return 1;
}

@OnPlayerHistoryName2(playerid);
@OnPlayerHistoryName2(playerid)
{
    #if MYSQL_R41_2 == true

	new rows;
	cache_get_row_count(rows);
	if(!rows) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Данный игрок ещё не менял имя");
    new nickname[MAX_PLAYER_NAME];
    stringer[0] = EOS;
    for(new i = 0; i < rows; i++)
    {
		cache_get_value_index(i, 2, nickname);
        format(stringer, sizeof(stringer), "%s{FFFFFF}%s\n", stringer, nickname);
    }
    ShowPlayerDialog(playerid, dNull, DIALOG_STYLE_LIST, "{FFCC00}История ников", string, "Закрыть", "");

	#else

	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Данный игрок ещё не менял имя");
    new nickname[MAX_PLAYER_NAME];
    stringer[0] = EOS;
    for(new i = 0; i < rows; i++)
    {
		cache_get_row(i, 2, nickname, dbHandle);
        format(stringer, sizeof(stringer), "%s{FFFFFF}%s\n", stringer, nickname);
    }
    ShowPlayerDialog(playerid, dNull, DIALOG_STYLE_LIST, "{FFCC00}История ников", stringer, "Закрыть", "");

	#endif

	return 1;
}

stock GetWeekName(name[], const size = sizeof(name))
{
    new hour, minuite, second, year, month, day, w = gettime(), saturday = 1310155200, day_week;
    gettime(hour, minuite, second);
	getdate(year, month, day);
	while(w - saturday > 60 * 60 * 24)
    {
        w -= 60 * 60 * 24;
        day_week ++;
    }
    while(day_week >= 7) day_week -= 7;
	return strunpack(name, gDaysOfWeek[day_week], size);
}

stock getDay()
{
	new week_name[10];
	GetWeekName(week_name);
	return week_name;
}

stock getDayEx()
{
    new hour, minuite, second, year, month, day, w = gettime(), saturday = 1310155200, day_week;
    gettime(hour, minuite, second);
	getdate(year, month, day);
	while(w - saturday > 60 * 60 * 24)
    {
        w -= 60 * 60 * 24;
        day_week ++;
    }
    while(day_week >= 7) day_week -= 7;
	return day_week;
}

@CarryDelay(playerid);
@CarryDelay(playerid) ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 1, 1, 1, 1, 1, 1);

stock CreateAccount(playerid) {
    if(!PlayerRegistered[playerid]) return SKick(playerid,4128);
    PlayerRegistered[playerid] = false;
    pInfo[playerid][pLevel] = 1;
	pInfo[playerid][pCash] = 250;
	pInfo[playerid][pBank] = 250;
	pInfo[playerid][pLicenses] = 0;
	mysql_query_string[0] = EOS;
	format(mysql_query_string, 1100, "\
		INSERT INTO "T_ACCOUNTS" (name,password,regip,datareg,sex,age,model,mail,referal,searchserv) \
		VALUES \
		('%s','%s','%s',CURDATE(),%i,%i,%i,'%s','%s','%s')",
		GetName(playerid), pInfo[playerid][pPassword], pInfo[playerid][pIP], pInfo[playerid][pSex], pInfo[playerid][pAge], pInfo[playerid][pModel], pInfo[playerid][pMail], pInfo[playerid][pReferal], pInfo[playerid][pSearchServ]);
	mysql_tquery(dbHandle, mysql_query_string, "@OnPlayerRegisterMysql", "d", playerid);
	gPlayerLogged[playerid] = true;
	SetHunger(playerid, pInfo[playerid][pHunger]);
	Hunger(playerid, 0);

	new string[128];
	SendClientMessage(playerid, COLOR_YELLOW, "[Информация] {FFFFFF}Требуется помощь по серверу? Рядом находится пикап, с полезной для Вас информацией");
	MysqlUpdatePlayerInt(playerid, "cash", pInfo[playerid][pCash]);
	MysqlUpdatePlayerInt(playerid, "bank", pInfo[playerid][pBank]);
	MysqlUpdatePlayerInt(playerid, "licenses", pInfo[playerid][pLicenses]);
    foreach(new i : Player) {
        if(!gAdminLogged[i]) continue;
        if(!AdminInfo[i][admInfoNewPlayer]) continue;
		format(string, sizeof(string), "Приветствуем нового игрока нашего сервера {63BD4E}%s[%i]", GetName(playerid), playerid);
		SendClientMessage(i, COLOR_WHITE, string);
	}
	return 1;
}

@OnPlayerRegisterMysql(playerid);
@OnPlayerRegisterMysql(playerid) {
    pInfo[playerid][pID] = cache_insert_id(dbHandle);
    mysql_query_string[0] = EOS;
	format(mysql_query_string, 150, "SELECT * FROM "T_ACCOUNTS" WHERE id = '%i' LIMIT 1", pInfo[playerid][pID]);
	mysql_tquery(dbHandle, mysql_query_string, "@LoadPlayerData", "d", playerid);
    return 1;
}

stock GetPlayerGangZone(playerid)
{
	for(new i = 0; i < sizeof(GZInfo); i++)
	{
	    if(IsPlayerToSquare(playerid, GZInfo[i][gCoords][0], GZInfo[i][gCoords][1], GZInfo[i][gCoords][2], GZInfo[i][gCoords][3]))
     	{
     	    return i;
     	}
	}
	return -1;
}

stock SendMuteMessage(playerid, ret = 1)
{
	new string[128];
	format(string, sizeof(string), "У Вас бан чата! Время до разблокировки {FFFFFF}%s", Converts(pInfo[playerid][pMuted]));
	SendClientMessage(playerid, COLOR_GREY, string);
	return ret;
}

@ShowAll(playerid);
@ShowAll(playerid) {
    #if MYSQL_R41_2 == true
    new rows, buf[40], string[1880], name[MAX_PLAYER_NAME], rang, level, i;
	cache_get_row_count(rows);
	strcat(string, "{EAD86A}Уровень\t\t{EAD86A}Ранг\t{EAD86A}Имя\n\n{FFFFFF}");
	for(i = 0; i < rows; i++)
	{
	    cache_get_value_name(i, "name", name, MAX_PLAYER_NAME);
	   	cache_get_value_name_int(i, "rank", rang);
	    cache_get_value_name_int(i, "level", level);
	    format(buf, sizeof(buf), "%d\t\t%d\t%s\n", level, rang, name);
	    strcat(string, buf);
	}
 	format(buf, sizeof(buf), "{FFCC00}Показаны %d/45 игроков", i);
 	ShowPlayerDialog(playerid, dShowAll+1, DIALOG_STYLE_LIST, buf, string, "Назад", "Закрыть");

    #else
	new rows, fields, buf[40], string[1880], name[MAX_PLAYER_NAME], rang, level, i;
	cache_get_data(rows, fields);
	strcat(string, "{EAD86A}Уровень\t\t{EAD86A}Ранг\t{EAD86A}Имя\n\n{FFFFFF}");
	for(i = 0; i < rows; i++)
	{
	    cache_get_field_content(i, "name", name, dbHandle, MAX_PLAYER_NAME);
	   	rang = cache_get_field_content_int(i, "rank");
	    level = cache_get_field_content_int(i, "level");
	    format(buf, sizeof(buf), "%d\t\t%d\t%s\n", level, rang, name);
	    strcat(string, buf);
	}
 	format(buf, sizeof(buf), "{FFCC00}Показаны %d/45 игроков", i);
 	ShowPlayerDialog(playerid, dShowAll+1, DIALOG_STYLE_LIST, buf, string, "Назад", "Закрыть");

 	#endif

	return 1;
}

@OfflineUninvite(playerid, playername[]);
@OfflineUninvite(playerid, playername[]) {
    #if MYSQL_R41_2 == true

 	new rows;
	cache_get_row_count(rows);
	if(!rows) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден!");
	new tleader, pmember, pleader;
	cache_get_value_index_int(0, 0, tleader);
	cache_get_value_index_int(0, 1, pmember);
	cache_get_value_index_int(0, 2, pleader);
	if(tleader) return SendClientMessage(playerid, COLOR_GREY, "Игрок не состоит в организации!");
	else if(!pmember) return SendClientMessage(playerid, COLOR_GREY, "Игрок не состоит в организации!");
	else if(pleader) return SendClientMessage(playerid, COLOR_GREY, "Лидера нельзя увольнять из организации!");
	else if(pmember != pInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Игрок не состоит в Вашей организации!");
    mysql_query_string[0] = EOS;
	format(mysql_query_string, 400, "UPDATE "T_ACCOUNTS" SET member = 0, rank = 0, memberskin = 0,memberwarn = 0, spawnchange = 0 WHERE name = '%s' LIMIT 1", playername);
	mysql_tquery(dbHandle, mysql_query_string, "", "");
	new string[128];
	format(string, sizeof(string), "%s %s уволил%s в оффлайне игрока %s", (pInfo[playerid][pLeader]>1)?("Лидер организации"):("Заместитель организации"), GetName(playerid), (pInfo[playerid][pSex]==1)?(""):("а"), playername);
	SendFMes(pInfo[playerid][pMember], COLOR_ORANGE, string);

	#else

	new rows, fields;
    cache_get_data(rows, fields);
    if(!rows) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден!");
    new tleader, pmember, pleader;
    tleader = cache_get_row_int(0, 0);
    pmember = cache_get_row_int(0, 1);
    pleader = cache_get_row_int(0, 2);
    if(tleader) return SendClientMessage(playerid, COLOR_GREY, "Игрок не состоит в организации!");
	else if(!pmember) return SendClientMessage(playerid, COLOR_GREY, "Игрок не состоит в организации!");
	else if(pleader) return SendClientMessage(playerid, COLOR_GREY, "Лидера нельзя увольнять из организации!");
	else if(pmember != pInfo[playerid][pMember]) return SendClientMessage(playerid, COLOR_GREY, "Игрок не состоит в Вашей организации!");
    mysql_query_string[0] = EOS;
	format(mysql_query_string, 400, "UPDATE "T_ACCOUNTS" SET member = 0, rank = 0, memberskin = 0, memberwarn = 0, spawnchange = 0 WHERE name = '%s' LIMIT 1", playername);
	mysql_tquery(dbHandle, mysql_query_string, "", "");
	new string[128];
	format(string, sizeof(string), "%s %s уволил%s в оффлайне игрока %s", (pInfo[playerid][pLeader]>1)?("Лидер организации"):("Заместитель организации"), GetName(playerid), (pInfo[playerid][pSex]==1)?(""):("а"), playername);
	SendFMes(pInfo[playerid][pMember], COLOR_ORANGE, string);

	#endif

	return 1;
}

@OfflineUnleader(playerid, playername[]);
@OfflineUnleader(playerid, playername[])
{
    #if MYSQL_R41_2 == true

 	new rows;
	cache_get_row_count(rows);
	if(!rows) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден!");
	new tleader, pleader;
	cache_get_value_index_int(0, 0, tleader);
	cache_get_value_index_int(0, 1, pleader);
	if(tleader) return SendClientMessage(playerid, COLOR_GREY, "Игрок не лидер организации!");
	if(!pleader) return SendClientMessage(playerid, COLOR_GREY, "Игрок не лидер организации!");
    mysql_query_string[0] = EOS;
	format(mysql_query_string, 400, "UPDATE "T_ACCOUNTS" SET leader = 0, member = 0, rank = 0, memberskin = 0, memberwarn = 0, spawnchange = 0 WHERE name = '%s' LIMIT 1", playername);
	mysql_tquery(dbHandle, mysql_query_string, "", "");
	new string[144];
	format(string, sizeof(string), "Вы оффлайн сняли лидера %s (%s)", playername, Fraction_Name[pleader]);
	SendClientMessage(playerid, COLOR_BLUE, string);

	#else

	new rows, fields;
    cache_get_data(rows, fields);
    if(!rows) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден!");
    new tleader, pleader;
    tleader = cache_get_row_int(0, 0);
    pleader = cache_get_row_int(0, 1);
    if(tleader) return SendClientMessage(playerid, COLOR_GREY, "Игрок не лидер организации!");
    if(!pleader) return SendClientMessage(playerid, COLOR_GREY, "Игрок не лидер организации!");
    mysql_query_string[0] = EOS;
	format(mysql_query_string, 400, "UPDATE "T_ACCOUNTS" SET leader = 0, member = 0, rank = 0, memberskin = 0, memberwarn = 0, spawnchange = 0 WHERE name = '%s' LIMIT 1", playername);
	mysql_tquery(dbHandle, mysql_query_string, "", "");
	new string[144];
	format(string, sizeof(string), "Вы оффлайн сняли лидера %s (%s)", playername, Fraction_Name[pleader]);
	SendClientMessage(playerid, COLOR_BLUE, string);

	#endif

	return 1;
}

@MysqlCheckLeader(playerid, actplayerid, fractionid, skinid);
@MysqlCheckLeader(playerid, actplayerid, fractionid, skinid)
{
	new string[144];

	#if MYSQL_R41_2 == true

 	new rows;
	cache_get_row_count(rows);
	if(rows)
	{
		new leader_acc_id, leader_name[MAX_PLAYER_NAME], leader_online;
		cache_get_value_index_int(0, 0, leader_acc_id);
		cache_get_value_index_int(0, 1, leader_name, MAX_PLAYER_NAME);
		cache_get_value_index_int(0, 2, leader_online);
		new leaderid = GetPlayerID(leader_name);
		if(playerid != leaderid)
		{
			format(string, sizeof(string), "Обнаружена установленная лидерка на аккаунте №%i", leader_acc_id);
			SendClientMessage(playerid, COLOR_LIME, string);
			if(leader_online == 1001)
			{
			    mysql_query_string[0] = EOS;
				format(mysql_query_string, 400, "UPDATE "T_ACCOUNTS" SET leader = 0, member = 0, rank = 0, memberskin = 0, memberwarn = 0, spawnchange = 0 WHERE id = %i", leader_acc_id);
				mysql_tquery(dbHandle, mysql_query_string, "", "");
				SendClientMessage(playerid, COLOR_DARKORANGE, "Игрок оффлайн. Лидерка снята");
			}
			else
			{
			    if(leaderid != INVALID_PLAYER_ID)
			    {
			        SendClientMessage(playerid, COLOR_DARKORANGE, "Игрок онлайн. Лидерка снята");
			        LeaveFractionPlayer(leaderid);
			        format(string, sizeof(string), "Администратор %s снял Вас с должности лидера организации", GetName(playerid));
			        SendClientMessage(leaderid, COLOR_BLUE, string);
					SendClientMessage(leaderid, COLOR_GREEN, "[Подсказка] {FFFFFF}Местом спавна автоматически назначен вокзал. Изменить место спавна {AFAFAF}/setspawn");
				}
			}
		}
	}

	#else

	new rows, fields;
    cache_get_data(rows, fields);
    if(rows)
	{
		new leader_acc_id, leader_name[MAX_PLAYER_NAME], leader_online;
		leader_acc_id = cache_get_row_int(0, 0);
		cache_get_row(0, 1, leader_name, dbHandle, MAX_PLAYER_NAME);
		leader_online = cache_get_row_int(0, 2);
		new leaderid = GetPlayerID(leader_name);
		if(playerid != leaderid)
		{
			format(string, sizeof(string), "Обнаружена установленная лидерка на аккаунте №%i", leader_acc_id);
			SendClientMessage(playerid, COLOR_LIME, string);
			if(leader_online == 1001)
			{
			    mysql_query_string[0] = EOS;
				format(mysql_query_string, 400, "UPDATE "T_ACCOUNTS" SET leader = 0, member = 0, rank = 0, memberskin = 0, memberwarn = 0, spawnchange = 0 WHERE id = %i", leader_acc_id);
				mysql_tquery(dbHandle, mysql_query_string, "", "");
				SendClientMessage(playerid, COLOR_DARKORANGE, "Игрок оффлайн. Лидерка снята");
			}
			else
			{
			    if(leaderid != INVALID_PLAYER_ID)
			    {
			        SendClientMessage(playerid, COLOR_DARKORANGE, "Игрок онлайн. Лидерка снята");
			        LeaveFractionPlayer(leaderid);
			        format(string, sizeof(string), "Администратор %s снял Вас с должности лидера организации", GetName(playerid));
			        SendClientMessage(leaderid, COLOR_BLUE, string);
					SendClientMessage(leaderid, COLOR_GREEN, "[Подсказка] {FFFFFF}Местом спавна автоматически назначен вокзал. Изменить место спавна {AFAFAF}/setspawn");
				}
			}
		}
	}

    #endif

	pInfo[actplayerid][pLeader] = pInfo[actplayerid][pMember] = fractionid;
	pInfo[actplayerid][pRank] = Number_Fraction_Rang[fractionid];
	pInfo[actplayerid][pJob] = JOB_NONE;
	pInfo[actplayerid][pMemberSkin] = skinid;
	SetPlayerSkin(actplayerid, pInfo[actplayerid][pMemberSkin]);
	pInfo[actplayerid][pSpawnChange] = 2;
	mysql_query_string[0] = EOS;
	format(mysql_query_string, 400, "UPDATE "T_ACCOUNTS" SET leader = %i, member = %i, rank = %i, job = 0, memberskin = %i, memberwarn = 0, spawnchange = %i WHERE id = %i", pInfo[actplayerid][pLeader], pInfo[actplayerid][pMember], pInfo[actplayerid][pRank], pInfo[actplayerid][pMemberSkin], pInfo[actplayerid][pSpawnChange], pInfo[actplayerid][pID]);
	mysql_tquery(dbHandle, mysql_query_string, "", "");
	format(string, sizeof(string), "Вы назначили %s[%i] лидером организации \"%s\"", GetName(actplayerid), actplayerid, Fraction_Name[fractionid]);
	SendClientMessage(playerid, COLOR_YELLOW, string);
	format(string, sizeof(string), "Администратор %s[%i] назначил Вас лидером организации \"%s\"", GetName(playerid), playerid, Fraction_Name[fractionid]);
	SendClientMessage(actplayerid, COLOR_YELLOW, string);
	format(string, sizeof(string), "[A] Администратор %s[%i] назначил %s[%i] лидером организации \"%s\"", GetName(playerid), playerid, GetName(actplayerid), actplayerid, Fraction_Name[fractionid]);
	SendAdminMessage(COLOR_GRAD1, string);
	SendClientMessage(actplayerid, COLOR_GREEN, "[Подсказка] {FFFFFF}Местом спавна автоматически назначена база организации. Изменить место спавна {AFAFAF}/setspawn");
	WriteLog("SetLeader", string);
	ResetPlayerWeaponsEx(actplayerid);
	SetPlayerColorEx(actplayerid, TeamColors[GetTeamID(actplayerid)]);
	DeletePVar(playerid, "actplayerid");
	DeletePVar(playerid, "actfraction");
	return 1;
}

@MysqlMonitoring(playerid);
@MysqlMonitoring(playerid)
{
    #if MYSQL_R41_2 == true

    new rows;
	cache_get_row_count(rows);
	new count[7], searchserv[32], string[150];
	stringer[0] = EOS;
	for(new i; i < rows; i++)
	{
	    cache_get_value_index(i, 0, searchserv, 32);
	    if(GetString(searchserv, "На порталах/форумах")) count[0]++;
    	if(GetString(searchserv, "На мониторинге серверов")) count[1]++;
    	if(GetString(searchserv, "Через YouTube")) count[2]++;
    	if(GetString(searchserv, "В поисковике")) count[3]++;
    	if(GetString(searchserv, "Вкладка hosted")) count[4]++;
    	if(GetString(searchserv, "Сообщество ВКонтакте")) count[5]++;
    	if(GetString(searchserv, "Другое")) count[6]++;
	}
 	format(string, sizeof(string), "{FFFFFF}На порталах/форумах:\t\t{63BD4E}%i {FFFFFF}ч.\n", count[0]);
 	strcat(stringer, string);
	format(string, sizeof(string), "{FFFFFF}На мониторинге серверов:\t\t{63BD4E}%i {FFFFFF}ч.\n", count[1]);
	strcat(stringer, string);
	format(string, sizeof(string), "{FFFFFF}Через YouTube:\t\t\t{63BD4E}%i {FFFFFF}ч.\n", count[2]);
	strcat(stringer, string);
	format(string, sizeof(string), "{FFFFFF}В поисковике:\t\t\t{63BD4E}%i {FFFFFF}ч.\n", count[3]);
	strcat(stringer, string);
	format(string, sizeof(string), "{FFFFFF}Вкладка hosted:\t\t\t{63BD4E}%i {FFFFFF}ч.\n", count[4]);
	strcat(stringer, string);
	format(string, sizeof(string), "{FFFFFF}Сообщество ВКонтакте:\t\t{63BD4E}%i {FFFFFF}ч.\n", count[5]);
	strcat(stringer, string);
	format(string, sizeof(string), "{FFFFFF}Другое:\t\t\t\t{63BD4E}%i {FFFFFF}ч.", count[6]);
	strcat(stringer, string);
	ShowPlayerDialog(playerid, dAdminPanel+1, DIALOG_STYLE_MSGBOX, "{FFCC00}Статистика посещаемости", stringer, "Назад", "Закрыть");

    #else

    new rows, fields;
    cache_get_data(rows, fields);
    new count[7], searchserv[32], string[150];
    stringer[0] = EOS;
    for(new i; i < rows; i++)
	{
	    cache_get_row(i, 0, searchserv, dbHandle, 32);
	    if(GetString(searchserv, "На порталах/форумах")) count[0]++;
    	if(GetString(searchserv, "На мониторинге серверов")) count[1]++;
    	if(GetString(searchserv, "Через YouTube")) count[2]++;
    	if(GetString(searchserv, "В поисковике")) count[3]++;
    	if(GetString(searchserv, "Вкладка hosted")) count[4]++;
    	if(GetString(searchserv, "Сообщество ВКонтакте")) count[5]++;
    	if(GetString(searchserv, "Другое")) count[6]++;
	}
	format(string, sizeof(string), "{FFFFFF}На порталах/форумах:\t\t{63BD4E}%i {FFFFFF}ч.\n", count[0]);
 	strcat(stringer, string);
	format(string, sizeof(string), "{FFFFFF}На мониторинге серверов:\t\t{63BD4E}%i {FFFFFF}ч.\n", count[1]);
	strcat(stringer, string);
	format(string, sizeof(string), "{FFFFFF}Через YouTube:\t\t\t{63BD4E}%i {FFFFFF}ч.\n", count[2]);
	strcat(stringer, string);
	format(string, sizeof(string), "{FFFFFF}В поисковике:\t\t\t{63BD4E}%i {FFFFFF}ч.\n", count[3]);
	strcat(stringer, string);
	format(string, sizeof(string), "{FFFFFF}Вкладка hosted:\t\t\t{63BD4E}%i {FFFFFF}ч.\n", count[4]);
	strcat(stringer, string);
	format(string, sizeof(string), "{FFFFFF}Сообщество ВКонтакте:\t\t{63BD4E}%i {FFFFFF}ч.\n", count[5]);
	strcat(stringer, string);
	format(string, sizeof(string), "{FFFFFF}Другое:\t\t\t\t{63BD4E}%i {FFFFFF}ч.", count[6]);
	strcat(stringer, string);
	ShowPlayerDialog(playerid, dAdminPanel+1, DIALOG_STYLE_MSGBOX, "{FFCC00}Статистика посещаемости", stringer, "Назад", "Закрыть");

    #endif

	return 1;
}
/*stock ClearDeathMessage
{
}*/

stock SetNextBusCP(playerid,pos)
{
	new type = 0;
	new route = pTemp[playerid][pBusRoute];
	pTemp[playerid][pWorkSalary] += 25;
	if(gBusCPs[route][pos][0] == gBusCPs[route][pos+1][0] && gBusCPs[route][pos][1] == gBusCPs[route][pos+1][1]) type = 1;
	SetPlayerRaceCheckpoint(playerid,type,gBusCPs[route][pos][0],gBusCPs[route][pos][1],gBusCPs[route][pos][2],gBusCPs[route][pos+1][0],gBusCPs[route][pos+1][1],gBusCPs[route][pos+1][2],4.0);
}

@BusStop(playerid);
@BusStop(playerid)
{
	new pos = pTemp[playerid][pBusPos];
	new route = pTemp[playerid][pBusRoute];
	if(pos == 99 || gBusCPs[route][pos+1][0] == 0.0)
	{
		pTemp[playerid][pBusPos] = 10;
		SendClientMessage(playerid, COLOR_GREEN, "Вы закончили рейс");
	}
	else pTemp[playerid][pBusPos]++;
	SetNextBusCP(playerid, pTemp[playerid][pBusPos]);
	return 1;
}

@BusSpawn(playerid);
@BusSpawn(playerid)
{
    if(GetPVarInt(playerid,"exitedtrans") != 1) return 1;
 	DisablePlayerRaceCheckpoint(playerid);
	if(gBusCount) gBusCount--;
	SetVehicleToRespawn(pTemp[playerid][pBusID]);
	pTemp[playerid][pWorkSalary] -= 25;
	new mes[128];
	format(mes,sizeof(mes),"Вы закончили рабочий день. Всего заработано: {63BD4E}%i$",pTemp[playerid][pWorkSalary]);
	SendClientMessage(playerid,COLOR_BLUE,mes);
	new Float:health = pTemp[playerid][pBusDamage];
	new repairprice = floatround((1000.0-health));
	pTemp[playerid][pWorkSalary] -= repairprice;
	format(mes,sizeof(mes),"За ремонт: {F04245}%d${3399FF}. Итого: {FFCC00}%d$",repairprice,pTemp[playerid][pWorkSalary]);
	SendClientMessage(playerid,COLOR_BLUE,mes);
	if(doubling_salary)
	{
	    new money2 = pTemp[playerid][pWorkSalary]*2;
	    SendMes(playerid, COLOR_YELLOW, "[Информация] {FFFFFF}С учётом акции Вы заработали: {63BD4E}%i$",money2);
	    pTemp[playerid][pWorkSalary] = money2;
	}
	pInfo[playerid][pPayCheck] += pTemp[playerid][pWorkSalary];
	MysqlUpdatePlayerInt(playerid, "paycheck", pInfo[playerid][pPayCheck]);
	SendClientMessage(playerid,COLOR_WHITE,"Деньги будут перечислены на Ваш счет в банке во время зарплаты");
	pTemp[playerid][pWorkSalary] = 0;
	SendClientMessage(playerid,COLOR_GREY,"Рабочее т/с было отбуксировано");
	return 1;
}

stock BusSpawnEx(playerid)
{
	DisablePlayerRaceCheckpoint(playerid);
	if(gBusCount) gBusCount--;
	SetVehicleToRespawn(pTemp[playerid][pBusID]);
	pTemp[playerid][pWorkSalary] -= 25;
	new mes[128];
	format(mes,sizeof(mes),"Вы закончили рабочий день. Всего заработано: {63BD4E}%i$",pTemp[playerid][pWorkSalary]);
	SendClientMessage(playerid,COLOR_BLUE,mes);
	new Float:health = pTemp[playerid][pBusDamage];
	new repairprice = floatround((1000.0-health));
	pTemp[playerid][pWorkSalary] -= repairprice;
	format(mes,sizeof(mes),"За ремонт: {F04245}%d${3399FF}. Итого: {FFCC00}%d$",repairprice,pTemp[playerid][pWorkSalary]);
	SendClientMessage(playerid,COLOR_BLUE,mes);
	if(doubling_salary)
	{
	    new money2 = pTemp[playerid][pWorkSalary]*2;
	    SendMes(playerid, COLOR_YELLOW, "[Информация] {FFFFFF}С учётом акции Вы заработали: {63BD4E}%i$",money2);
	    pTemp[playerid][pWorkSalary] = money2;
	}
	pInfo[playerid][pPayCheck] += pTemp[playerid][pWorkSalary];
	MysqlUpdatePlayerInt(playerid, "paycheck", pInfo[playerid][pPayCheck]);
	SendClientMessage(playerid,COLOR_WHITE,"Деньги будут перечислены на Ваш счет в банке во время зарплаты");
	pTemp[playerid][pWorkSalary] = 0;
	SendClientMessage(playerid,COLOR_GREY,"Рабочее т/с было отбуксировано");
	return 1;
}

@TruckerSpawn(playerid);
@TruckerSpawn(playerid)
{
    if(GetPVarInt(playerid,"exitedtrans") != 1) return 1;
	SetVehicleToRespawn(pTemp[playerid][pTruckID]);
	pTemp[playerid][pTruckID] = INVALID_VEHICLE_ID;
	if(IsValidDynamic3DTextLabel(pTemp[playerid][pTruckWagonText]))
	{
		DestroyDynamic3DTextLabel(pTemp[playerid][pTruckWagonText]);
		pTemp[playerid][pTruckWagonText] = Text3D:INVALID_3DTEXT_ID;
	}
	if(pTemp[playerid][pTruckWagonID] != INVALID_VEHICLE_ID)
	{
		DestroyVehicle(pTemp[playerid][pTruckWagonID]);
		pTemp[playerid][pTruckWagonID] = INVALID_VEHICLE_ID;
	}
	for(new i2;i2<3;i2++)
	{
		for(new i;i<10;i++)
		{
			if(gTruckLoadTurn[i2][i] == playerid || gTruckLoadTurn[i2][i] == playerid) gTruckLoadTurn[i2][i] = INVALID_PLAYER_ID;
		}
	}
	SendClientMessage(playerid,COLOR_GREY,"Рабочее т/с было отбуксировано");
	return 1;
}

stock TruckerSpawnEx(playerid)
{
	SetVehicleToRespawn(pTemp[playerid][pTruckID]);
	pTemp[playerid][pTruckID] = INVALID_VEHICLE_ID;
	if(IsValidDynamic3DTextLabel(pTemp[playerid][pTruckWagonText]))
	{
		DestroyDynamic3DTextLabel(pTemp[playerid][pTruckWagonText]);
		pTemp[playerid][pTruckWagonText] = Text3D:INVALID_3DTEXT_ID;
	}
	if(pTemp[playerid][pTruckWagonID] != INVALID_VEHICLE_ID)
	{
		DestroyVehicle(pTemp[playerid][pTruckWagonID]);
		pTemp[playerid][pTruckWagonID] = INVALID_VEHICLE_ID;
	}
	for(new i2;i2<3;i2++)
	{
		for(new i;i<10;i++)
		{
			if(gTruckLoadTurn[i2][i] == playerid || gTruckLoadTurn[i2][i] == playerid) gTruckLoadTurn[i2][i] = INVALID_PLAYER_ID;
		}
	}
	SendClientMessage(playerid,COLOR_GREY,"Рабочее т/с было отбуксировано");
	return 1;
}

stock TextFind(text[],findtext[]) return strfind(text, findtext) != -1;

stock ValidChar(mailchar)
{
	if((mailchar >= 'A' && mailchar <= 'Z') || (mailchar >= 'a' && mailchar <= 'z')
	|| (mailchar >= '0' && mailchar <= '9') || (mailchar == '-') || (mailchar == '_')
	|| (mailchar == '@') || (mailchar == '.')) return 1;
	return 0;
}

stock IsValidEmail(email[])
{
	new bool:Succes = true;
	new bool:Good;
	for(new i; i < strlen(email); i++)
	{
	    if(email[i] == '@')
		{
		    if(!Good) Good = true;
		    else
			{
				Good = false;
		    	break;
			}
		}
	    if(!ValidChar(email[i])) Succes = false;
	}
	if(!Good) Succes = false;
	if(!TextFind(email,".ru") && !TextFind(email,".com") && !TextFind(email,".ua") && !TextFind(email,".su")) Succes = false;
	if(!TextFind(email,"@")) Succes = false;
  	return Succes;
}

stock ExitCar(playerid)
{
	if(IsPlayerInAnyVehicle(playerid)) RemovePlayerFromVehicle(playerid);
	else ClearAnimations(playerid);
	return 1;
}

@RasformFraction(playerid, fractionid);
@RasformFraction(playerid, fractionid)
{
    foreach(new i : Player)
	{
        if(pInfo[i][pMember] != fractionid) continue;
        SendClientMessage(i, COLOR_YELLOW, "[Информация] {FFFFFF}Ваша организация расформирована администрацией");
        LeaveFractionPlayer(i);
    }
	mysql_query_string[0] = EOS;
    format(mysql_query_string, 400, "UPDATE "T_ACCOUNTS" SET leader = 0, member = 0, rank = 0, memberskin = 0, memberwarn = 0, spawnchange = 0 WHERE member = %i", fractionid);
    mysql_tquery(dbHandle, mysql_query_string, "", "");
	new string[128];
    format(string, sizeof(string), "[A] %s расформировал организацию %s", GetName(playerid), Fraction_Name[fractionid]);
    SendAdminMessage(COLOR_GREY, string);
	return 1;
}

@load_online_today(playerid);
@load_online_today(playerid)
{
    #if MYSQL_R41_2 == true

    new rows;
	cache_get_row_count(rows);
	if(!rows)
	{
		gOnlinePlayer[playerid][0] = 0;
		gOnlinePlayerAFK[playerid][0] = 0;
	}
	else
	{
		cache_get_value_index_int(0,3,gOnlinePlayer[playerid][0]);
		cache_get_value_index_int(0,4,gOnlinePlayerAFK[playerid][0]);
	}

	#else

	new rows, fields;
    cache_get_data(rows, fields);
    if(!rows)
	{
		gOnlinePlayer[playerid][0] = 0;
		gOnlinePlayerAFK[playerid][0] = 0;
	}
	else
	{
		gOnlinePlayer[playerid][0] = cache_get_row_int(0,3);
		gOnlinePlayerAFK[playerid][0] = cache_get_row_int(0,4);
	}

    #endif

    return 1;
}

@load_online_yesterday(playerid);
@load_online_yesterday(playerid)
{
    #if MYSQL_R41_2 == true

    new rows;
	cache_get_row_count(rows);
	if(!rows)
	{
		gOnlinePlayer[playerid][1] = 0;
		gOnlinePlayerAFK[playerid][1] = 0;
	}
	else
	{
  		cache_get_value_index_int(0,3,gOnlinePlayer[playerid][1]);
		cache_get_value_index_int(0,4,gOnlinePlayerAFK[playerid][1]);
	}

	#else

	new rows, fields;
    cache_get_data(rows, fields);
	if(!rows)
	{
		gOnlinePlayer[playerid][1] = 0;
		gOnlinePlayerAFK[playerid][1] = 0;
	}
	else
	{
  		gOnlinePlayer[playerid][1] = cache_get_row_int(0,3);
		gOnlinePlayerAFK[playerid][1] = cache_get_row_int(0,4);
	}

    #endif

    return 1;
}

stock CarryAnim(playerid)
{
    ApplyAnimation(playerid, "CARRY", "CRRY_PRTIAL", 4.1, 0, 1, 1, 1, 1, 1);
    return 1;
}

stock GetVipsOnline()
{
	new Online;
	foreach(new i : Player)
	{
		if(!gPlayerLogged[i]) continue;
		if(pInfo[i][pVip]) Online ++;
	}
	return Online;
}

stock GetAdminsOnline()
{
	new Online;
	foreach(new i : Player)
	{
		if(!gPlayerLogged[i]) continue;
		if(pInfo[i][pAdmin] && pInfo[i][pAdmin] != ADM_FOUNDER) Online ++;
	}
	return Online;
}

@PromoCodeCheck(playerid, code[]);
@PromoCodeCheck(playerid, code[])
{
    #if MYSQL_R41_2 == true

    new rows;
	cache_get_row_count(rows);
	if(!rows) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Указанный промокод не найден");
	new code_money, code_players, code_data, used_count;
    cache_get_value_index_int(0, 1, code_money);
    cache_get_value_index_int(0, 3, code_players);
    cache_get_value_index_int(0, 4, code_data);
    cache_get_value_index_int(0, 5, used_count);
    SetPVarInt(playerid, "code_money_", code_money);
    SetPVarInt(playerid, "code_players_", code_players);
    SetPVarInt(playerid, "code_data_", code_data);
    SetPVarInt(playerid, "used_count_", used_count);

	#else

	new rows, fields;
    cache_get_data(rows, fields);
    if(!rows) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Указанный промокод не найден");
    new code_money, code_players, code_data, used_count;
    code_money = cache_get_row_int(0, 1);
    code_players = cache_get_row_int(0, 3);
    code_data = cache_get_row_int(0, 4);
    used_count = cache_get_row_int(0, 5);
    SetPVarInt(playerid, "code_money_", code_money);
    SetPVarInt(playerid, "code_players_", code_players);
    SetPVarInt(playerid, "code_data_", code_data);
    SetPVarInt(playerid, "used_count_", used_count);

	#endif

	mysql_query_string[0] = EOS;
	format(mysql_query_string, 200, "SELECT * FROM "T_PROMOCODE_USED" WHERE code = '%s' AND idacca = %d", code, pInfo[playerid][pID]);
	mysql_tquery(dbHandle, mysql_query_string, "@PromoCodeCheck2", "ds", playerid, code);
    return 1;
}

@PromoCodeCheck2(playerid, code[]);
@PromoCodeCheck2(playerid, code[])
{
    #if MYSQL_R41_2 == true

    new rows;
	cache_get_row_count(rows);
	if(rows)
    {
        SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы уже указывали данный промокод");
		DeletePVar(playerid, "code_money_");
		DeletePVar(playerid, "code_players_");
		DeletePVar(playerid, "code_data_");
		DeletePVar(playerid, "used_count_");
        return 1;
    }

	#else

    new rows, fields;
    cache_get_data(rows, fields);
    if(rows)
    {
        SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Вы уже указывали данный промокод");
		DeletePVar(playerid, "code_money_");
		DeletePVar(playerid, "code_players_");
		DeletePVar(playerid, "code_data_");
		DeletePVar(playerid, "used_count_");
        return 1;
    }

	#endif

	mysql_query_string[0] = EOS;
	format(mysql_query_string, sizeof(mysql_query_string), "INSERT INTO "T_PROMOCODE_USED" (idacca,code) VALUE (%d,'%s')", pInfo[playerid][pID], code);
	mysql_tquery(dbHandle, mysql_query_string, "", "");
	new code_money, code_players, code_data, used_count;
	code_money = GetPVarInt(playerid, "code_money_");
	code_players = GetPVarInt(playerid, "code_players_");
	code_data = GetPVarInt(playerid, "code_data_");
	used_count = GetPVarInt(playerid, "used_count_");
    new string[128];
	format(string, sizeof(string), "Промокод {EAD86A}%s{FFFFFF} успешно использован. Вам начислено {63BD4E}%i$", code, code_money);
	SendClientMessage(playerid, COLOR_WHITE, string);
	TransferMoney(-1, playerid, code_money, "Использовал промокод", 1);
	code_players --;
	used_count ++;
	mysql_query_string[0] = EOS;
    format(mysql_query_string, 300, "UPDATE "T_PROMOCODE" SET players = %d, used_count = %d WHERE code = '%s'", code_players, used_count, code);
    mysql_tquery(dbHandle, mysql_query_string, "", "");
    if(code_players == 0)
    {
        mysql_query_string[0] = EOS;
        format(mysql_query_string, 128, "DELETE FROM "T_PROMOCODE" WHERE code = '%s'", code);
        mysql_tquery(dbHandle, mysql_query_string, "", "");
    }
    if(gettime() >= code_data && code_players == 0)
    {
        mysql_query_string[0] = EOS;
		format(mysql_query_string, 128, "DELETE FROM "T_PROMOCODE" WHERE code = '%s'", code);
        mysql_tquery(dbHandle, mysql_query_string, "", "");
    }
    DeletePVar(playerid, "code_money_");
	DeletePVar(playerid, "code_players_");
	DeletePVar(playerid, "code_data_");
	DeletePVar(playerid, "used_count_");

    return 1;
}

@PromoCodeCreate(playerid, code[]);
@PromoCodeCreate(playerid, code[])
{
    #if MYSQL_R41_2 == true

    new rows;
	cache_get_row_count(rows);
	if(rows >= 15) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Нельзя создавать более 15 промокодов");
    new load_code[32], free_slot = -1;
    for(new i; i < rows; i++)
    {
        cache_get_value_index(i, 0, load_code, 32);
        if(!strcmp(load_code, code, false))
        {
			free_slot = i;
        	break;
  		}
    }

	#else

	new rows, fields;
    cache_get_data(rows, fields);
    if(rows >= 15) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Нельзя создавать более 15 промокодов");
    new load_code[32], free_slot = -1;
    for(new i; i < rows; i++)
    {
        cache_get_row(i, 0, load_code, dbHandle, 32);
        if(!strcmp(load_code, code, false))
        {
			free_slot = i;
        	break;
  		}
    }

	#endif

    if(free_slot != -1)
	{
		SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Указанный промокод уже есть в списке");
		DeletePVar(playerid, "promoname");
		DeletePVar(playerid, "promodays");
		DeletePVar(playerid, "promoplayers");
		DeletePVar(playerid, "promomoney");
		return 0;
	}
    new promodays = GetPVarInt(playerid, "promodays");
    new promoplayers = GetPVarInt(playerid, "promoplayers");
    new promomoney = GetPVarInt(playerid, "promomoney");
	mysql_query_string[0] = EOS;
    format(mysql_query_string, 300, "INSERT INTO "T_PROMOCODE" (code,money,days,players,data) VALUES ('%s',%d,%d,%d,%d)", code, promomoney, promodays, promoplayers, gettime()+promodays);
    mysql_tquery(dbHandle, mysql_query_string, "", "");
	stringer[0] = EOS;
    format(stringer, 300, "\
		{FFFFFF}Промокод {EAD86A}%s{FFFFFF} успешно создан\n\
		Количество денег {63BD4E}%i${FFFFFF}\n\
		Промокод действует на {3399FF}%d %s",
	code,
	promomoney,
	(promoplayers > 0) ? (promoplayers) : (promodays),
	(promoplayers > 0) ? ("игроков") : ("дней"));
    ShowPlayerDialog(playerid, dNull, DIALOG_STYLE_MSGBOX, " ", stringer, "Ок", "");
    DeletePVar(playerid, "promoname");
	DeletePVar(playerid, "promodays");
	DeletePVar(playerid, "promoplayers");
	DeletePVar(playerid, "promomoney");
	return 1;
}

@PromoCodeShow(playerid);
@PromoCodeShow(playerid)
{
    #if MYSQL_R41_2 == true

    new rows;
	cache_get_row_count(rows);
    if(!rows)
	{
		SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Промокоды не найдены");
		return ShowPlayerDialog(playerid, dAdminPanel+9, DIALOG_STYLE_LIST, "{FFCC00}Промокоды", "1. Список промокодов\n2. Создать промокод\n3. Удалить промокод", "Выбрать", "Назад");
	}
    new code[32], code_money, code_days, code_players, used_count;
    stringer[0] = EOS;
    strcat(stringer, "{EAD86A}Название\t\t{EAD86A}Сумма\t\t{EAD86A}Количество\t\t{EAD86A}Использован\n");
    for(new i; i < rows; i++)
    {
        cache_get_value_index(i, 0, code, 32);
        cache_get_value_index_int(i, 1, code_money);
        cache_get_value_index_int(i, 2, code_days);
        cache_get_value_index_int(i, 3, code_players);
        cache_get_value_index_int(i, 5, used_count);
        if(code_players > 0) format(stringer, sizeof(stringer),"%s%s\t\t%d$\t\t%d игроков\t\t%d раз\n", stringer, i+1, code, code_money, code_players, used_count);
       	else format(stringer, sizeof(stringer),"%s%s\t\t%d$\t\t%d дней\t\t%d раз\n", stringer, i+1, code, code_money, code_days, used_count);
    }
    ShowPlayerDialog(playerid, dAdminPanel+16, DIALOG_STYLE_LIST, "{FFCC00}Список промокодов", stringer, "Назад", "Закрыть");

	#else

	new rows, fields;
    cache_get_data(rows, fields);
    if(!rows)
	{
		SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Промокоды не найдены");
		return ShowPlayerDialog(playerid, dAdminPanel+9, DIALOG_STYLE_LIST, "{FFCC00}Промокоды", "1. Список промокодов\n2. Создать промокод\n3. Удалить промокод", "Выбрать", "Назад");
	}
    new code[32], code_money, code_days, code_players, used_count;
    stringer[0] = EOS;
    strcat(stringer, "{EAD86A}Название\t\t{EAD86A}Сумма\t\t{EAD86A}Количество\t\t{EAD86A}Использован\n");
    for(new i; i < rows; i++)
    {
        cache_get_row(i, 0, code, dbHandle, 32);
        code_money = cache_get_row_int(i, 1);
        code_days = cache_get_row_int(i, 2);
        code_players = cache_get_row_int(i, 3);
        used_count = cache_get_row_int(i, 5);
        if(code_players > 0) format(stringer, sizeof(stringer),"%s%s\t\t%d$\t\t%d игроков\t\t%d раз\n", stringer, code, code_money, code_players, used_count);
       	else format(stringer, sizeof(stringer),"%s%s\t\t%d$\t\t%d дней\t\t%d раз\n", stringer, code, code_money, code_days, used_count);
    }
    ShowPlayerDialog(playerid, dAdminPanel+16, DIALOG_STYLE_LIST, "{FFCC00}Список промокодов", stringer, "Назад", "Закрыть");

	#endif

    return 1;
}

@PromoCodeDelete(playerid, code[]);
@PromoCodeDelete(playerid, code[])
{
    #if MYSQL_R41_2 == true

    new rows;
	cache_get_row_count(rows);

	#else

	new rows, fields;
    cache_get_data(rows, fields);

	#endif

    if(!rows) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Указанный промокод не найден");
	stringer[0] = EOS;
    format(stringer, 128, "{FFFFFF}Промокод {EAD86A}%s{FFFFFF} успешно удалён", code);
    ShowPlayerDialog(playerid, dAdminPanel+16, DIALOG_STYLE_MSGBOX, " ", stringer, "Назад", "Закрыть");
    mysql_query_string[0] = EOS;
    format(mysql_query_string, 128, "DELETE FROM "T_PROMOCODE" WHERE code = '%s'", code);
    mysql_tquery(dbHandle, mysql_query_string, "", "");
	return 1;
}

stock SendMail(const szReceiver[], const szSenderMail[], const szSenderName[], const szSubject[], const szMessage[])
{
	new szBuffer[1024] = "t=", iPos = strlen(szBuffer), iLength = strlen(szReceiver);

	memcpy(szBuffer, szReceiver, iPos * 4, (iLength + 1) * 4);
	StringURLEncode(szBuffer[iPos], 1024 - iPos);
	strcat(szBuffer, "&f=");
	iPos = strlen(szBuffer);
	iLength = strlen(szSenderName);

	memcpy(szBuffer, szSenderName, iPos * 4, (iLength + 1) * 4);
	StringURLEncode(szBuffer[iPos], 1024 - iPos);
	strcat(szBuffer, "&n=");
	iPos = strlen(szBuffer);
	iLength = strlen(szSenderMail);

	memcpy(szBuffer, szSenderMail, iPos * 4, (iLength + 1) * 4);
	StringURLEncode(szBuffer[iPos], 1024 - iPos);
	strcat(szBuffer, "&s=");
	iPos = strlen(szBuffer);
	iLength = strlen(szSubject);

	memcpy(szBuffer, szSubject, iPos * 4, (iLength + 1) * 4);
	StringURLEncode(szBuffer[iPos], 1024 - iPos);
	strcat(szBuffer, "&m=");
	iPos = strlen(szBuffer);
	iLength = strlen(szMessage);

	memcpy(szBuffer, szMessage, iPos * 4, (iLength + 1) * 4);

	StringURLEncode(szBuffer[iPos], 1024 - iPos);

	HTTP(0xD00D, HTTP_POST, "mailproc.Magadam-rp.ru/mailer.php", szBuffer, "@OnMailScriptResponse");
}

@OnMailScriptResponse(iIndex, iResponseCode, const szData[]);
@OnMailScriptResponse(iIndex, iResponseCode, const szData[])
{
	if(szData[0]) printf("Mailer script says: %s", szData);
}

stock StringURLEncode(szString[], iSize = sizeof(szString))
{
	for(new i = 0, l = strlen(szString); i < l; i++)
	{
		switch(szString[i])
		{
			case '!', '(', ')', '\'', '*', '0' .. '9', 'A' .. 'Z', 'a' .. 'z': continue;
			case ' ':
			{
				szString[ i ] = '+';
				continue;
			}
		}
		new s_szHex[8];
		if(i + 3 >= iSize)
		{
			szString[ i ] = EOS;
			break;
		}
		if(l + 3 >= iSize) szString[iSize - 3] = EOS;
		format(s_szHex, sizeof(s_szHex), "%02h", szString[i]);
		szString[i] = '%';
		strins(szString, s_szHex, i + 1, iSize);
		l += 2;
		i += 2;
		if(l > iSize - 1) l = iSize - 1;
	}
}

@OnBankRegisterMysql(playerid, inputtext[]);
@OnBankRegisterMysql(playerid, inputtext[])
{
    BankInfo[playerid][bID] = cache_insert_id(dbHandle);
    SendClientMessage(playerid, COLOR_YELLOW, "[Информация] Вы успешно открыли новый счёт в банке");
	new string[128];
	format(string, sizeof(string), "- Номер вашего счёта: {FFFFFF}%d", BankInfo[playerid][bID]);
	SendClientMessage(playerid, COLOR_GREEN, string);
	format(string, sizeof(string), "- Название счёта: {FFFFFF}%s", inputtext);
	SendClientMessage(playerid, COLOR_GREEN, string);
	SendClientMessage(playerid, COLOR_GREEN, "- Секретный пин-код для доступа: {FFFFFF}9999");
	SendClientMessage(playerid, COLOR_RED, "[Внимание] {FFFFFF}Не забудьте запомнить пин-код. При его утере Вы не сможете получить доступ к счёту");
	new temp[64];
	format(temp, sizeof(temp), "{3399FF}Счёт №%d [%s]", BankInfo[playerid][bID], inputtext);
	ShowPlayerDialog(playerid, dOperBankAccount, 2, temp, "\
        {EAD86A}Доступные средства на счету: {63BD4E}0$\n\
        {FFFFFF}1. Пополнить счёт\n\
        2. Снять со счёта\n\
        3. Перевести на другой счёт\n\
        4. Сменить защитный код\n\
        5. Переименовать счёт", "Далее", "Назад");
    return 1;
}

@ListAllBankAccounts(playerid);
@ListAllBankAccounts(playerid)
{
    #if MYSQL_R41_2 == true

    new rows;
	cache_get_row_count(rows);
	if(!rows) return ShowPlayerDialog(playerid, dHeal+3, DIALOG_STYLE_LIST, "{ffcd00}Банковские счета", "{63BD4E}Основной счёт", "Далее", "Назад");
	stringer[0] = EOS;
	strcat(stringer, "{63BD4E}Основной счёт\n";
	new name[15], id;
    for(new i; i < rows; i++)
	{
	    cache_get_value_index_int(i, 0, id);
	    cache_get_value_index(i, 1, name, 15);
	    format(stringer, sizeof(stringer), "%s{FFFFFF}%d. %s (№%i)\n", stringer, i + 1, name, id);
		gBankAccount[playerid][i] = id;
	}
	ShowPlayerDialog(playerid, dHeal+3, DIALOG_STYLE_LIST, "{ffcd00}Банковские счета", stringer, "Далее", "Назад");

	#else

	new rows, fields;
    cache_get_data(rows, fields);
    if(!rows) return ShowPlayerDialog(playerid, dHeal+3, DIALOG_STYLE_LIST, "{ffcd00}Банковские счета", "{63BD4E}Основной счёт", "Далее", "Назад");
	stringer[0] = EOS;
	strcat(stringer, "{63BD4E}Основной счёт\n");
	new name[15], id;
    for(new i; i < rows; i++)
	{
	    id = cache_get_row_int(i, 0);
	    cache_get_row(i, 1, name, dbHandle, 15);
	    format(stringer, sizeof(stringer), "%s{FFFFFF}%d. %s (№%i)\n", stringer, i + 1, name, id);
		gBankAccount[playerid][i] = id;
	}
	ShowPlayerDialog(playerid, dHeal+3, DIALOG_STYLE_LIST, "{ffcd00}Банковские счета", stringer, "Далее", "Назад");

	#endif

	return 1;
}

@CreateBankAccount(playerid);
@CreateBankAccount(playerid)
{
    #if MYSQL_R41_2 == true

    new rows;
	cache_get_row_count(rows);

	#else

	new rows, fields;
    cache_get_data(rows, fields);

    #endif

    if(rows >= 4) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Нельзя создавать более 4 банковских счетов");
    if(pInfo[playerid][pLevel] < 3) return SendClientMessage(playerid, COLOR_GREY, "Создание доп. банковских счетов доступно только с 3-го уровня");
	ShowPlayerDialog(playerid, dCreateBankAccount, DIALOG_STYLE_INPUT, "{FFCC00}Создание счёта", "{FFFFFF}Введите название счёта\n\n{AFAFAF}Можно использовать только русские и английские буквы, также цифры\nНазвание должно содержать не менее 3 и не более 15 символов", "Принять", "Назад");
	return 1;
}

@CheckCreateBank(playerid, inputtext[]);
@CheckCreateBank(playerid, inputtext[])
{
     #if MYSQL_R41_2 == true

    new rows;
	cache_get_row_count(rows);

	#else

	new rows, fields;
    cache_get_data(rows, fields);

    #endif

    if(rows) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас уже есть банковский счёт с таким названием");
    mysql_query_string[0] = EOS;
	format(mysql_query_string, 200, "INSERT INTO "T_BANK" (Name,Owner,Money,Pin) VALUES ('%s','%s',0,'9999')", inputtext, GetName(playerid));
	mysql_tquery(dbHandle, mysql_query_string, "@OnBankRegisterMysql", "is", playerid, inputtext);
	return 1;
}

@CheckBankAccount(playerid, code[]);
@CheckBankAccount(playerid, code[])
{
    #if MYSQL_R41_2 == true

    new rows;
	cache_get_row_count(rows);
 	if(rows)
	{
	    new pin[9];
	    cache_get_value_index(0, 4, pin, 9);
	    if(!strcmp(pin, code))
	    {
		    cache_get_value_index_int(0, 0, BankInfo[playerid][bID]);
		    cache_get_value_index(0, 1, BankInfo[playerid][bName], 15);
		    cache_get_value_index_int(0, 3, BankInfo[playerid][bMoney]);
		    ShowBankAccount(playerid);
	    }
	    else
	    {
	        SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Защитный код введён неверно");
	    }
	}

	#else

	new rows, fields;
    cache_get_data(rows, fields);
 	if(rows)
	{
	    new pin[9];
	    cache_get_row(0, 4, pin, dbHandle, 9);
	    if(!strcmp(pin, code))
	    {
		    BankInfo[playerid][bID] = cache_get_row_int(0, 0);
		    cache_get_row(0, 1, BankInfo[playerid][bName], dbHandle, 15);
		    BankInfo[playerid][bMoney] = cache_get_row_int(0, 3);
		    ShowBankAccount(playerid);
	    }
	    else
	    {
	        SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Защитный код введён неверно");
	    }
	}

	#endif

	return 1;
}

stock ShowBankAccount(playerid)
{
	new temp[64];
    format(temp, sizeof(temp), "{3399FF}Счёт №%d [%s]", BankInfo[playerid][bID], BankInfo[playerid][bName]);
	stringer[0] = EOS;
	format(stringer, 300, "\
        {EAD86A}Доступные средства на счету: {63BD4E}%d$\n\
        {FFFFFF}1. Пополнить счёт\n\
        2. Снять со счёта\n\
        3. Перевести на другой счёт\n\
        4. Сменить защитный код\n\
        5. Переименовать счёт", BankInfo[playerid][bMoney], BankInfo[playerid][bMoney]);
	ShowPlayerDialog(playerid, dOperBankAccount, 2, temp, stringer, "Далее", "Назад");
	return 1;
}

@CheckModdedTransfer(playerid, transfer);
@CheckModdedTransfer(playerid, transfer)
{
    #if MYSQL_R41_2 == true

    new rows;
	cache_get_row_count(rows);
	if(rows)
	{
	    new name[15];
	    cache_get_value_index(0, 1, name, 15);
		stringer[0] = EOS;
	    format(stringer, 300, "{FFFFFF}Вы выполняете перевод на счёт {80CCFF}%s (№%d)\n\n{EAD86A}Если данные правильные, введите сумму, которую Вы хотите перевести на этот банковский счёт", name, transfer, BankInfo[playerid][bName], BankInfo[playerid][bID]);
	    ShowPlayerDialog(playerid, dOperBankAccount+4, 1, "{FFCC00}Перевод", stringer, "Принять", "Назад");
	    SetPVarString(playerid, "moddedtransfername", name);
		SetPVarInt(playerid, "moddedtransfer", transfer);
	}
	else
	{
	    SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Счёта с таким номером не существует");
	    ShowPlayerDialog(playerid, dOperBankAccount+3, 1, "{FFCC00}Перевод", "{FFFFFF}Введите номер счёта на который хотите совершить перевод", "Принять", "Назад");
	}

	#else

	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
	    new name[15];
	    cache_get_row(0, 1, name, dbHandle, 15);
		stringer[0] = EOS;
	    format(stringer, 300, "{FFFFFF}Вы выполняете перевод на счёт {80CCFF}%s (№%d)\n\n{EAD86A}Если данные правильные, введите сумму, которую Вы хотите перевести на этот банковский счёт", name, transfer, BankInfo[playerid][bName], BankInfo[playerid][bID]);
	    ShowPlayerDialog(playerid, dOperBankAccount+4, 1, "{FFCC00}Перевод", stringer, "Принять", "Назад");
	    SetPVarString(playerid, "moddedtransfername", name);
		SetPVarInt(playerid, "moddedtransfer", transfer);
	}
	else
	{
	    SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Счёта с таким номером не существует");
	    ShowPlayerDialog(playerid, dOperBankAccount+3, 1, "{FFCC00}Перевод", "{FFFFFF}Введите номер счёта на который хотите совершить перевод", "Принять", "Назад");
	}

	#endif

	return 1;
}

stock string_replace(string[], find, replace)
{
	for(new i = 0; string[i]; i++)
	{
		if(string[i] == find) string[i] = replace;
	}
}

@CheckSurfing(playerid, Float:health, vehicle_id);
@CheckSurfing(playerid, Float:health, vehicle_id)
{
    new Float: check_health;
    GetPlayerHealth(playerid, check_health);
    if(check_health >= health && vehicle_id == GetPVarInt(playerid,"VehicleEnters"))
	{
	    if(AntiCheatMessage[playerid] == 0)
		{
			new string[128];
			format(string, sizeof(string), "[A] %s[%d] возможно использует SpeedHack (Onfoot)", GetName(playerid), playerid);
			SendAdminMessage(COLOR_ORANGE, string);
			WriteLog("CheatLog", string);
   		}
   		AntiCheatMessage[playerid] = 10;
		return 1;
	}
    return 1;
}

stock MovePlayerCamera(playerid, Float:CP[3], Float:FV[3])
{
	new Float:NP[3];
	#define OFFSET_X (FV[0]*6000.0)
	#define OFFSET_Y (FV[1]*6000.0)
	#define OFFSET_Z (FV[2]*6000.0)
	switch(FlyInfo[playerid][fDirection])
	{
		case MOVE_FORWARD:
		{
			NP[0] = CP[0]+OFFSET_X;
			NP[1] = CP[1]+OFFSET_Y;
			NP[2] = CP[2]+OFFSET_Z;
		}
		case MOVE_BACK:
		{
			NP[0] = CP[0]-OFFSET_X;
			NP[1] = CP[1]-OFFSET_Y;
			NP[2] = CP[2]-OFFSET_Z;
		}
		case MOVE_LEFT:
		{
			NP[0] = CP[0]-OFFSET_Y;
			NP[1] = CP[1]+OFFSET_X;
			NP[2] = CP[2];
		}
		case MOVE_RIGHT:
		{
			NP[0] = CP[0]+OFFSET_Y;
			NP[1] = CP[1]-OFFSET_X;
			NP[2] = CP[2];
		}
		case MOVE_BACK_LEFT:
		{
			NP[0] = CP[0]+(-OFFSET_X - OFFSET_Y);
 			NP[1] = CP[1]+(-OFFSET_Y + OFFSET_X);
		 	NP[2] = CP[2]-OFFSET_Z;
		}
		case MOVE_BACK_RIGHT:
		{
			NP[0] = CP[0]+(-OFFSET_X + OFFSET_Y);
 			NP[1] = CP[1]+(-OFFSET_Y - OFFSET_X);
		 	NP[2] = CP[2]-OFFSET_Z;
		}
		case MOVE_FORWARD_LEFT:
		{
			NP[0] = CP[0]+(OFFSET_X  - OFFSET_Y);
			NP[1] = CP[1]+(OFFSET_Y  + OFFSET_X);
			NP[2] = CP[2]+OFFSET_Z;
		}
		case MOVE_FORWARD_RIGHT:
		{
			NP[0] = CP[0]+(OFFSET_X  + OFFSET_Y);
			NP[1] = CP[1]+(OFFSET_Y  - OFFSET_X);
			NP[2] = CP[2]+OFFSET_Z;
		}
	}
	MoveDynamicObject(FlyInfo[playerid][fObject], NP[0], NP[1], NP[2], FlyInfo[playerid][fMovementSpeed]);
	FlyInfo[playerid][fTick] = GetTickCount();
}

stock SetPlayerCamera(playerid, type = 1)
{
	switch(type)
	{
		case 1,2:
		{
			new Float:X, Float:Y, Float:Z, Float:A;
			GetPlayerPos(playerid, X, Y, Z);
			GetPlayerFacingAngle(playerid, A);
			SetPVarInt(playerid, "FlyInt", GetPlayerInterior(playerid));
			SetPVarInt(playerid, "FlyVw", GetPlayerVirtualWorld(playerid));
			SetPVarFloat(playerid, "FlyX", X);
			SetPVarFloat(playerid, "FlyY", Y);
			SetPVarFloat(playerid, "FlyZ", Z);
			SetPVarFloat(playerid, "FlyA", A);
			TogglePlayerSpectating(playerid, 1);
			FlyInfo[playerid][fObject] = CreateDynamicObject(19300, X, Y, Z, 0.0, 0.0, 0.0, .playerid = playerid, .streamdistance = 7000.0, .drawdistance = 7000.0);
			AttachCameraToDynamicObject(playerid, FlyInfo[playerid][fObject]);
			AttachCameraToDynamicObject(playerid, FlyInfo[playerid][fObject]);
			FlyInfo[playerid][fType] = type;
		    FlyInfo[playerid][fDirection] = 0;
		    FlyInfo[playerid][fKeys][0] = 0;
		    FlyInfo[playerid][fKeys][1] = 0;
		    FlyInfo[playerid][fTick] = 0;
		}
	    default:
		{
		    if(GetPVarInt(playerid, "Fly_CurrentPlace"))
			{
			    DeletePVar(playerid, "FlyInt");
				DeletePVar(playerid, "FlyVw");
				DeletePVar(playerid, "FlyX");
				DeletePVar(playerid, "FlyY");
				DeletePVar(playerid, "FlyZ");
				DeletePVar(playerid, "FlyA");
			    new Float:X, Float:Y, Float:Z;
				GetPlayerCameraPos(playerid, X, Y, Z);
				SetPVarInt(playerid, "CurrentFlyInt", GetPlayerInterior(playerid));
				SetPVarInt(playerid, "CurrentFlyVw", GetPlayerVirtualWorld(playerid));
				SetPVarFloat(playerid, "CurrentFlyX", X);
				SetPVarFloat(playerid, "CurrentFlyY", Y);
				SetPVarFloat(playerid, "CurrentFlyZ", Z);
			}
			TogglePlayerSpectating(playerid, 0);
			DestroyDynamicObject(FlyInfo[playerid][fObject]);
		    FlyInfo[playerid][fObject] = INVALID_OBJECT_ID;
			FlyInfo[playerid][fType] = 0;
		}
	}
}

stock GetVehicleShiftPos(vehicleid, style, &Float:x, &Float:y, &Float:z, Float:distance)
{
    new Float:a;
	GetVehiclePos(vehicleid, x, y, z);
	GetVehicleZAngle(vehicleid, a);
	switch(style)
	{
	    case 0:
	    {
	        x += (distance * floatsin(-a, degrees));
			y += (distance * floatcos(-a, degrees));
	    }
	    case 1:
		{
		    x -= (distance * floatsin(-a, degrees));
			y -= (distance * floatcos(-a, degrees));
		}
		case 2:
	    {
	        a += 90.0;
	        x -= (distance * floatsin(-a, degrees));
			y -= (distance * floatcos(-a, degrees));
	    }
	    case 3:
		{
		    a -= 90.0;
      		x -= (distance * floatsin(-a, degrees));
			y -= (distance * floatcos(-a, degrees));
		}
		default: return 0;
	}
	return 1;
}

@LoadFamily();
@LoadFamily() {
    new time = GetTickCount();

	#if MYSQL_R41_2 == true
	new rows;
	cache_get_row_count(rows);
	if(rows)
	{
		for(new i = 1; i <= rows; i++)
		{
			cache_get_value_index_int(i-1, 0, FamilyInfo[i][famID]); // id
			cache_get_value_index(i-1, 1, FamilyInfo[i][famName], 20); // name
			cache_get_value_index(i-1, 2, FamilyInfo[i][famLeader], MAX_PLAYER_NAME); // leader

			TOTALFAMILY++;
        }
    }

    #else
    new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
	    for(new i = 1; i <= rows; i++)
		{
			FamilyInfo[i][famID] = cache_get_row_int(i-1, 0); // id
			cache_get_row(i-1, 1, FamilyInfo[i][famName], dbHandle, 20); // name
			cache_get_row(i-1, 2, FamilyInfo[i][famLeader], dbHandle, MAX_PLAYER_NAME); // leader

			TOTALFAMILY++;
        }
    }

    #endif
	printf("[Загружено семей]: <%i>. Потрачено: <%i ms>.", TOTALFAMILY, GetTickCount() - time);
	return 1;
}

@CreateFamily(playerid, inputtext[]);
@CreateFamily(playerid, inputtext[])
{
    #if MYSQL_R41_2 == true

    new rows;
	cache_get_row_count(rows);
	if(rows)
	{
	    SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Указанное название семьи занято");

	    stringer[0] = EOS;
        format(stringer, 300, "\
			{FFFFFF}Всего семей: {FF9900}%d\n\
			{FFFFFF}Создание семьи стоит: {FFCC00}500 кредитов\n\n\
			{FFFFFF}Введите название семьи:\n\n\
			{AFAFAF}Допустимое значение количества символов от 3 до 20", TOTALFAMILY);
		return ShowPlayerDialog(playerid, dCreateFamily, DIALOG_STYLE_INPUT, " ", stringer, "Принять", "Назад");
	}

    #else

    new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
	    SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Указанное название семьи занято");

	    stringer[0] = EOS;
        format(stringer, 300, "\
			{FFFFFF}Всего семей: {FF9900}%d\n\
			{FFFFFF}Создание семьи стоит: {FFCC00}500 кредитов\n\n\
			{FFFFFF}Введите название семьи:\n\n\
			{AFAFAF}Допустимое значение количества символов от 3 до 20", TOTALFAMILY);
		return ShowPlayerDialog(playerid, dCreateFamily, DIALOG_STYLE_INPUT, " ", stringer, "Принять", "Назад");
	}

    #endif

    TOTALFAMILY++;

    pInfo[playerid][pCredits] -= 500;

    pInfo[playerid][pFamilyMember] = TOTALFAMILY;

    mysql_query_string[0] = EOS;
	format(mysql_query_string, 300, "UPDATE "T_ACCOUNTS" SET credits = %d, fam_m = %d WHERE id = %d", pInfo[playerid][pCredits], pInfo[playerid][pFamilyMember], pInfo[playerid][pID]);
	mysql_tquery(dbHandle, mysql_query_string, "", "");

    mysql_query_string[0] = EOS;
    format(mysql_query_string, 300, "INSERT INTO "T_FAMILY" (id,name,leader) VALUES (%d,'%s','%s')", TOTALFAMILY, inputtext, GetName(playerid));
    mysql_tquery(dbHandle, mysql_query_string, "", "");

    FamilyInfo[pInfo[playerid][pFamilyMember]][famID] = TOTALFAMILY;
    format(FamilyInfo[pInfo[playerid][pFamilyMember]][famName], 20, inputtext);
	format(FamilyInfo[pInfo[playerid][pFamilyMember]][famLeader], MAX_PLAYER_NAME, GetName(playerid));

	new string[128];
    format(string, sizeof(string), "[Информация] {FFFFFF}Вы успешно создали семью {63BD4E}%s{FFFFFF}. Используйте {FF9900}/family {FFFFFF}для управления", FamilyInfo[pInfo[playerid][pFamilyMember]][famName]);
    SendClientMessage(playerid, COLOR_YELLOW, string);
	return 1;
}

@ListFamily(playerid);
@ListFamily(playerid)
{
	#if MYSQL_R41_2 == true

	new rows;
	cache_get_row_count(rows);
	if(!rows)
		return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Ни одной семьи не зарегистрировано");

	new rows_page = GetPVarInt(playerid, "family_page") - 1;
	SetPVarInt(playerid, "family_rows", rows);

	new name[20],
		string[128],
		t;

	stringer[0] = EOS;

	for(new i = rows_page * 15; i < rows_page * 15 + 15; i++)
	{
	    if(i >= rows)
	    	break;
	    cache_get_value_index(i, 1, name, 20);
	    format(string, sizeof(string), "%d. %s\n", i + 1, name);
	    strcat(stringer, string);
	    t++;
	}

	SetPVarInt(playerid, "total_rows_one_page", t);

	if(rows_page > 0)
	{
	    SetPVarInt(playerid, "show_back_page", 1);
		strcat(stringer, "\t{F04245}Предыдущая страница\n");
	}
	if(t == 15)
		strcat(stringer, "\t{63BD4E}Следующая страница");

	ShowPlayerDialog(playerid, dListFamily, DIALOG_STYLE_LIST, "{FFCC00}Список семей", stringer, "Выбрать", "Назад");

	#else

    new rows, fields;
	cache_get_data(rows, fields);
	if(!rows)
		return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] Ни одной семьи не зарегистрировано");

	new rows_page = GetPVarInt(playerid, "family_page") - 1;
	SetPVarInt(playerid, "family_rows", rows);

	new name[20], string[128], t;
	stringer[0] = EOS;

	for(new i = rows_page * 15; i < rows_page * 15 + 15; i++)
	{
	    if(i >= rows)
	    	break;
	    cache_get_row(i, 1, name, dbHandle, 20);
	    format(string, sizeof(string), "%d. %s\n", i + 1, name);
	    strcat(stringer, string);
	    t++;
	}

	SetPVarInt(playerid, "total_rows_one_page", t);

	if(rows_page > 0)
	{
	    SetPVarInt(playerid, "show_back_page", 1);
		strcat(stringer, "\t{F04245}Предыдущая страница\n");
	}
	if(t == 15)
		strcat(stringer, "\t{63BD4E}Следующая страница");

	ShowPlayerDialog(playerid, dListFamily, DIALOG_STYLE_LIST, "{FFCC00}Список семей", stringer, "Выбрать", "Назад");

	#endif
	return 1;
}
forward ConvoyTimer(playerid, playerID);
public ConvoyTimer(playerid, playerID)
{
    if(!IsPlayerConnected(playerID))
    {
        SendClientMessage(playerid, -1, "Игрок которого вы конвоировали покинул сервер!");
        ClearValue(playerid);
        return 1;
    }
    if(IsPlayerInAnyVehicle(playerID))
    {
        SendClientMessage(playerid, -1, "Ваш заключенный в машине, конвой остановлен!");
        TogglePlayerControllable(playerID, 1);
        ClearValue(playerid);
        return 1;
    }
    if(GetPlayerVirtualWorld(playerID) != GetPlayerVirtualWorld(playerid) || GetPlayerInterior(playerID) != GetPlayerInterior(playerid))
    {
        new Float:xp, Float:yp, Float:zp, Float:ap;
        GetPlayerPos(playerid, xp,yp,zp);
        GetPlayerFacingAngle(playerid, ap);
        SetPlayerPos(playerID, xp,yp,zp);
        SetPlayerInterior(playerID, GetPlayerInterior(playerid));
        SetPlayerVirtualWorld(playerID, GetPlayerVirtualWorld(playerid));
        TogglePlayerControllable(playerID, 0);
        return 1;
    }
    new Float:dis = GetDistancePlayer(playerID, playerid);
    if(dis < 0.95)
    {
        TogglePlayerControllable(playerID, 0);
        TurnPlayerFaceToPlayer(playerID, playerid);
    }
    else if(dis > 10.0)
    {
        SendClientMessage(playerID, -1, "Ваш конвой ушел слишком далеко, вы свободны!");
        SendClientMessage(playerid, -1, "Вы ушли слишком далеко, конвой отпущен!");
        TogglePlayerControllable(playerID, 1);
        ClearAnimations(playerID);
        ClearValue(playerid);
    }
    else
    {
        TogglePlayerControllable(playerID, 1);
        TurnPlayerFaceToPlayer(playerID, playerid);
        ApplyAnimation(playerID,"ped","WALK_civi",6.0,1,1,1,1,0,1);
    }
    return 1;
}
stock GetPlayerConvoy(playerid) {
    return (convoy[playerid] > -1) ? 1 : 0;
}
stock GetArrestID(playerid) {
    return (convoy[playerid] > -1) ? convoy[playerid] : -1;
}
stock ClearValue(playerid)
{
    KillTimer(convoyTimer[playerid]);
    convoy[playerid] = -1;
}
stock TurnPlayerFaceToPlayer(playerid, facingtoid)
{
	new Float:angle;
	new Float:misc = 5.0;
	new Float:x, Float:y, Float:z;
	new Float:ix, Float:iy, Float:iz;
	GetPlayerPos(facingtoid, x, y, z);
	GetPlayerPos(playerid, ix, iy, iz);
	angle = 180.0-atan2(ix-x,iy-y);
	angle += misc;
	misc *= -1;
	SetPlayerFacingAngle(playerid, angle+misc);
}
stock SlapPlayer(playerid){
	new Float:shealth,Float:slx, Float:sly, Float:slz;
	GetPlayerHealth(playerid, shealth);
	SetHealth(playerid, shealth-5);
	GetPlayerPos(playerid, slx, sly, slz);
	SetPlayerPos(playerid, slx, sly, slz+5);
	PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
}
stock FlipCar(carid) {
        new Float:xyza[4];
        GetVehiclePos(carid, xyza[0],xyza[1],xyza[2]);
        GetVehicleZAngle(carid, xyza[3]);
        SetVehiclePos(carid, xyza[0],xyza[1], (xyza[2]+1.0));
        SetVehicleZAngle(carid, xyza[3]);
}
forward SendRcanalMessage(canal, color, string[]);
public SendRcanalMessage(canal, color, string[])
{
    for(new i = 0; i < MAX_PLAYERS; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(Rcanal[i] == canal)
            {
                SendClientMessage(i, color, string);
            }
        }
    }
}
